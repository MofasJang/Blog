{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/SV2TTS/index.html","path":"SV2TTS/index.html","modified":1,"renderable":0},{"_id":"source/fastspeech2/index.html","path":"fastspeech2/index.html","modified":1,"renderable":0},{"_id":"source/melgan/index.html","path":"melgan/index.html","modified":1,"renderable":0},{"_id":"source/pjt-love-lyt/readme.txt","path":"pjt-love-lyt/readme.txt","modified":1,"renderable":0},{"_id":"source/photos/index.html","path":"photos/index.html","modified":1,"renderable":0},{"_id":"source/vits/index.html","path":"vits/index.html","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/10000.png","path":"SV2TTS/img/10000.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/100000.png","path":"SV2TTS/img/100000.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/160000.png","path":"SV2TTS/img/160000.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/1000.png","path":"SV2TTS/img/1000.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/900000.png","path":"SV2TTS/img/900000.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/50000.png","path":"SV2TTS/img/50000.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/tensorboard_audio.png","path":"SV2TTS/img/tensorboard_audio.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/synthesized_melspectrogram.png","path":"SV2TTS/img/synthesized_melspectrogram.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/model.png","path":"SV2TTS/img/model.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/tensorboard_loss.png","path":"SV2TTS/img/tensorboard_loss.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/img/tensorboard_spec.png","path":"SV2TTS/img/tensorboard_spec.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/1000.png","path":"fastspeech2/img/1000.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/160000.png","path":"fastspeech2/img/160000.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/100000.png","path":"fastspeech2/img/100000.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/900000.png","path":"fastspeech2/img/900000.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/50000.png","path":"fastspeech2/img/50000.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/10000.png","path":"fastspeech2/img/10000.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/synthesized_melspectrogram.png","path":"fastspeech2/img/synthesized_melspectrogram.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/model.png","path":"fastspeech2/img/model.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/tensorboard_loss.png","path":"fastspeech2/img/tensorboard_loss.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/tensorboard_spec.png","path":"fastspeech2/img/tensorboard_spec.png","modified":1,"renderable":0},{"_id":"source/fastspeech2/img/tensorboard_audio.png","path":"fastspeech2/img/tensorboard_audio.png","modified":1,"renderable":0},{"_id":"source/melgan/img/1000.png","path":"melgan/img/1000.png","modified":1,"renderable":0},{"_id":"source/melgan/img/100000.png","path":"melgan/img/100000.png","modified":1,"renderable":0},{"_id":"source/melgan/img/160000.png","path":"melgan/img/160000.png","modified":1,"renderable":0},{"_id":"source/melgan/img/50000.png","path":"melgan/img/50000.png","modified":1,"renderable":0},{"_id":"source/melgan/img/10000.png","path":"melgan/img/10000.png","modified":1,"renderable":0},{"_id":"source/melgan/img/900000.png","path":"melgan/img/900000.png","modified":1,"renderable":0},{"_id":"source/melgan/img/model.png","path":"melgan/img/model.png","modified":1,"renderable":0},{"_id":"source/melgan/img/synthesized_melspectrogram.png","path":"melgan/img/synthesized_melspectrogram.png","modified":1,"renderable":0},{"_id":"source/melgan/img/tensorboard_audio.png","path":"melgan/img/tensorboard_audio.png","modified":1,"renderable":0},{"_id":"source/melgan/img/tensorboard_loss.png","path":"melgan/img/tensorboard_loss.png","modified":1,"renderable":0},{"_id":"source/melgan/img/tensorboard_spec.png","path":"melgan/img/tensorboard_spec.png","modified":1,"renderable":0},{"_id":"source/pjt-love-lyt/images/r.gif","path":"pjt-love-lyt/images/r.gif","modified":1,"renderable":0},{"_id":"source/photos/css/style.css","path":"photos/css/style.css","modified":1,"renderable":0},{"_id":"source/photos/fonts/JTHandwrite.eot","path":"photos/fonts/JTHandwrite.eot","modified":1,"renderable":0},{"_id":"source/photos/fonts/JTHandwrite.svg","path":"photos/fonts/JTHandwrite.svg","modified":1,"renderable":0},{"_id":"source/photos/fonts/JTHandwrite.ttf","path":"photos/fonts/JTHandwrite.ttf","modified":1,"renderable":0},{"_id":"source/vits/img/10000.png","path":"vits/img/10000.png","modified":1,"renderable":0},{"_id":"source/vits/img/100000.png","path":"vits/img/100000.png","modified":1,"renderable":0},{"_id":"source/vits/img/1000.png","path":"vits/img/1000.png","modified":1,"renderable":0},{"_id":"source/vits/img/160000.png","path":"vits/img/160000.png","modified":1,"renderable":0},{"_id":"source/vits/img/50000.png","path":"vits/img/50000.png","modified":1,"renderable":0},{"_id":"source/vits/img/model.png","path":"vits/img/model.png","modified":1,"renderable":0},{"_id":"source/vits/img/900000.png","path":"vits/img/900000.png","modified":1,"renderable":0},{"_id":"source/vits/img/synthesized_melspectrogram.png","path":"vits/img/synthesized_melspectrogram.png","modified":1,"renderable":0},{"_id":"source/vits/img/tensorboard_audio.png","path":"vits/img/tensorboard_audio.png","modified":1,"renderable":0},{"_id":"source/vits/img/tensorboard_loss.png","path":"vits/img/tensorboard_loss.png","modified":1,"renderable":0},{"_id":"source/vits/img/tensorboard_spec.png","path":"vits/img/tensorboard_spec.png","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1085-156170-0001.flac","path":"SV2TTS/demo/LibriTTS/1085-156170-0001.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1353-121397-0001.flac","path":"SV2TTS/demo/LibriTTS/1353-121397-0001.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1085-156170-0001_synthesized.flac","path":"SV2TTS/demo/LibriTTS/1085-156170-0001_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1353-121397-0001_synthesized.flac","path":"SV2TTS/demo/LibriTTS/1353-121397-0001_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1492-55449-0000.flac","path":"SV2TTS/demo/LibriTTS/1492-55449-0000.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1664-137600-0003.flac","path":"SV2TTS/demo/LibriTTS/1664-137600-0003.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1492-55449-0000_synthesized.flac","path":"SV2TTS/demo/LibriTTS/1492-55449-0000_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/1664-137600-0003_synthesized.flac","path":"SV2TTS/demo/LibriTTS/1664-137600-0003_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/218-131206-0003.flac","path":"SV2TTS/demo/LibriTTS/218-131206-0003.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/218-131206-0003_synthesized.flac","path":"SV2TTS/demo/LibriTTS/218-131206-0003_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/29-123032-0005.flac","path":"SV2TTS/demo/LibriTTS/29-123032-0005.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/319-134959-0006.flac","path":"SV2TTS/demo/LibriTTS/319-134959-0006.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/29-123032-0005_synthesized.flac","path":"SV2TTS/demo/LibriTTS/29-123032-0005_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/319-134959-0006_synthesized.flac","path":"SV2TTS/demo/LibriTTS/319-134959-0006_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/36-16603-0002.flac","path":"SV2TTS/demo/LibriTTS/36-16603-0002.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/36-16603-0002_synthesized.flac","path":"SV2TTS/demo/LibriTTS/36-16603-0002_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/428-125879-0003.flac","path":"SV2TTS/demo/LibriTTS/428-125879-0003.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/428-125879-0003_synthesized.flac","path":"SV2TTS/demo/LibriTTS/428-125879-0003_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/713-291178-0007.flac","path":"SV2TTS/demo/LibriTTS/713-291178-0007.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LibriTTS/713-291178-0007_synthesized.flac","path":"SV2TTS/demo/LibriTTS/713-291178-0007_synthesized.flac","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB00800003_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB00800003_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB00800003_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB00800003_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB00800003_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB00800003_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB04700028_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB04700028_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB04700028_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB04700028_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB04700028_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB04700028_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB05900363_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB05900363_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB05900363_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB05900363_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB05900363_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB05900363_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB06290079_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB06290079_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB06290079_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB06290079_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB06290079_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB06290079_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB07940279_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB07940279_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB07940279_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB07940279_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB07940279_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB07940279_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08220199_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB08220199_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08220199_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB08220199_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08220199_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB08220199_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08630110_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB08630110_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08630110_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB08630110_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB10200388_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB10200388_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB10200388_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB10200388_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08630110_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB08630110_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB10200388_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB10200388_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB15930399_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB15930399_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB15930399_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB15930399_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB16070080_ground-truth.wav","path":"SV2TTS/demo/AISHELL3/SSB16070080_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB16070080_ground-ada.wav","path":"SV2TTS/demo/AISHELL3/SSB16070080_ground-ada.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB15930399_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB15930399_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/AISHELL3/SSB16070080_synthesized.wav","path":"SV2TTS/demo/AISHELL3/SSB16070080_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB00800003_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB00800003_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB04700028_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB04700028_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB00800003_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB00800003_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB04700028_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB04700028_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB05900363_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB05900363_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB05900363_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB05900363_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB06290079_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB06290079_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB06290079_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB06290079_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB07940279_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB07940279_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB07940279_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB07940279_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08220199_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB08220199_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08220199_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB08220199_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08630110_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB08630110_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08630110_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB08630110_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB10200388_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB10200388_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB10200388_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB10200388_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB15930399_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB15930399_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB16070080_ground-truth.wav","path":"fastspeech2/demo/AISHELL3/SSB16070080_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB15930399_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB15930399_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/AISHELL3/SSB16070080_synthesized.wav","path":"fastspeech2/demo/AISHELL3/SSB16070080_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ001-0012_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ001-0012_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ001-0012_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ001-0012_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0114_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ006-0114_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0114_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ006-0114_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0161_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ006-0161_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0161_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ006-0161_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ009-0038_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ009-0038_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ011-0202_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ011-0202_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ009-0038_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ009-0038_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ011-0202_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ011-0202_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ021-0108_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ021-0108_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ021-0108_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ021-0108_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ027-0127_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ027-0127_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ027-0127_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ027-0127_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ030-0031_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ030-0031_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ030-0031_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ030-0031_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ042-0094_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ042-0094_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ042-0094_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ042-0094_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ050-0158_synthesized.wav","path":"SV2TTS/demo/LJSpeech/LJ050-0158_synthesized.wav","modified":1,"renderable":0},{"_id":"source/SV2TTS/demo/LJSpeech/LJ050-0158_ground-truth.wav","path":"SV2TTS/demo/LJSpeech/LJ050-0158_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ001-0012_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ001-0012_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ001-0012_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ001-0012_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0114_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ006-0114_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0114_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ006-0114_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0161_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ006-0161_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0161_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ006-0161_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ009-0038_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ009-0038_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ009-0038_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ009-0038_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ011-0202_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ011-0202_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ011-0202_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ011-0202_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ021-0108_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ021-0108_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ021-0108_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ021-0108_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ027-0127_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ027-0127_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ027-0127_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ027-0127_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ030-0031_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ030-0031_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ030-0031_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ030-0031_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ042-0094_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ042-0094_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ042-0094_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ042-0094_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ050-0158_ground-truth.wav","path":"fastspeech2/demo/LJSpeech/LJ050-0158_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LJSpeech/LJ050-0158_synthesized.wav","path":"fastspeech2/demo/LJSpeech/LJ050-0158_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","path":"fastspeech2/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","path":"fastspeech2/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","path":"fastspeech2/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","path":"fastspeech2/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","path":"fastspeech2/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","path":"fastspeech2/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","path":"fastspeech2/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","path":"fastspeech2/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","path":"fastspeech2/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","path":"fastspeech2/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/42_ground-truth.wav","path":"fastspeech2/demo/baker/42_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","path":"fastspeech2/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/43_ground-truth.wav","path":"fastspeech2/demo/baker/43_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/42_synthesized.wav","path":"fastspeech2/demo/baker/42_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/43_synthesized.wav","path":"fastspeech2/demo/baker/43_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/44_ground-truth.wav","path":"fastspeech2/demo/baker/44_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/44_synthesized.wav","path":"fastspeech2/demo/baker/44_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/45_ground-truth.wav","path":"fastspeech2/demo/baker/45_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/45_synthesized.wav","path":"fastspeech2/demo/baker/45_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/46_ground-truth.wav","path":"fastspeech2/demo/baker/46_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/46_synthesized.wav","path":"fastspeech2/demo/baker/46_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/47_ground-truth.wav","path":"fastspeech2/demo/baker/47_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/47_synthesized.wav","path":"fastspeech2/demo/baker/47_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/48_synthesized.wav","path":"fastspeech2/demo/baker/48_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/48_ground-truth.wav","path":"fastspeech2/demo/baker/48_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/49_ground-truth.wav","path":"fastspeech2/demo/baker/49_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/49_synthesized.wav","path":"fastspeech2/demo/baker/49_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/50_ground-truth.wav","path":"fastspeech2/demo/baker/50_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/50_synthesized.wav","path":"fastspeech2/demo/baker/50_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/51_synthesized.wav","path":"fastspeech2/demo/baker/51_synthesized.wav","modified":1,"renderable":0},{"_id":"source/fastspeech2/demo/baker/51_ground-truth.wav","path":"fastspeech2/demo/baker/51_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB00800003_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB00800003_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB04700028_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB04700028_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB04700028_synthesized.wav","path":"melgan/demo/AISHELL3/SSB04700028_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB00800003_synthesized.wav","path":"melgan/demo/AISHELL3/SSB00800003_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB06290079_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB06290079_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB05900363_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB05900363_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB05900363_synthesized.wav","path":"melgan/demo/AISHELL3/SSB05900363_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB06290079_synthesized.wav","path":"melgan/demo/AISHELL3/SSB06290079_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB07940279_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB07940279_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB07940279_synthesized.wav","path":"melgan/demo/AISHELL3/SSB07940279_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB08220199_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB08220199_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB08220199_synthesized.wav","path":"melgan/demo/AISHELL3/SSB08220199_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB08630110_synthesized.wav","path":"melgan/demo/AISHELL3/SSB08630110_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB10200388_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB10200388_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB10200388_synthesized.wav","path":"melgan/demo/AISHELL3/SSB10200388_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB08630110_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB08630110_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB15930399_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB15930399_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB16070080_ground-truth.wav","path":"melgan/demo/AISHELL3/SSB16070080_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB16070080_synthesized.wav","path":"melgan/demo/AISHELL3/SSB16070080_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ001-0012_ground-truth.wav","path":"vits/demo/LJSpeech/LJ001-0012_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/AISHELL3/SSB15930399_synthesized.wav","path":"melgan/demo/AISHELL3/SSB15930399_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ001-0012_synthesized.wav","path":"vits/demo/LJSpeech/LJ001-0012_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ001-0012_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ001-0012_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ006-0114_ground-truth.wav","path":"vits/demo/LJSpeech/LJ006-0114_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ006-0114_synthesized.wav","path":"vits/demo/LJSpeech/LJ006-0114_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ006-0114_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ006-0114_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ006-0161_ground-truth.wav","path":"vits/demo/LJSpeech/LJ006-0161_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ006-0161_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ006-0161_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ006-0161_synthesized.wav","path":"vits/demo/LJSpeech/LJ006-0161_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ009-0038_ground-truth.wav","path":"vits/demo/LJSpeech/LJ009-0038_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ009-0038_synthesized.wav","path":"vits/demo/LJSpeech/LJ009-0038_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ011-0202_synthesized.wav","path":"vits/demo/LJSpeech/LJ011-0202_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ011-0202_ground-truth.wav","path":"vits/demo/LJSpeech/LJ011-0202_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ009-0038_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ009-0038_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ011-0202_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ011-0202_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ021-0108_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ021-0108_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ021-0108_synthesized.wav","path":"vits/demo/LJSpeech/LJ021-0108_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ021-0108_ground-truth.wav","path":"vits/demo/LJSpeech/LJ021-0108_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ027-0127_ground-truth.wav","path":"vits/demo/LJSpeech/LJ027-0127_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ027-0127_synthesized.wav","path":"vits/demo/LJSpeech/LJ027-0127_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ027-0127_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ027-0127_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ030-0031_ground-truth.wav","path":"vits/demo/LJSpeech/LJ030-0031_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ030-0031_synthesized.wav","path":"vits/demo/LJSpeech/LJ030-0031_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ030-0031_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ030-0031_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ042-0094_ground-truth.wav","path":"vits/demo/LJSpeech/LJ042-0094_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ042-0094_synthesized.wav","path":"vits/demo/LJSpeech/LJ042-0094_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ050-0158_ground-truth.wav","path":"vits/demo/LJSpeech/LJ050-0158_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ042-0094_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ042-0094_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ050-0158_synthesized.wav","path":"vits/demo/LJSpeech/LJ050-0158_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LJSpeech/LJ050-0158_synthesized_vits.wav","path":"vits/demo/LJSpeech/LJ050-0158_synthesized_vits.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB00800003_synthesized.wav","path":"vits/demo/AISHELL3/SSB00800003_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB00800003_ground-truth.wav","path":"vits/demo/AISHELL3/SSB00800003_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB04700028_synthesized.wav","path":"vits/demo/AISHELL3/SSB04700028_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB04700028_ground-truth.wav","path":"vits/demo/AISHELL3/SSB04700028_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB05900363_ground-truth.wav","path":"vits/demo/AISHELL3/SSB05900363_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB05900363_synthesized.wav","path":"vits/demo/AISHELL3/SSB05900363_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB06290079_synthesized.wav","path":"vits/demo/AISHELL3/SSB06290079_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB06290079_ground-truth.wav","path":"vits/demo/AISHELL3/SSB06290079_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB07940279_ground-truth.wav","path":"vits/demo/AISHELL3/SSB07940279_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB08220199_ground-truth.wav","path":"vits/demo/AISHELL3/SSB08220199_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB07940279_synthesized.wav","path":"vits/demo/AISHELL3/SSB07940279_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB08220199_synthesized.wav","path":"vits/demo/AISHELL3/SSB08220199_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB08630110_ground-truth.wav","path":"vits/demo/AISHELL3/SSB08630110_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB08630110_synthesized.wav","path":"vits/demo/AISHELL3/SSB08630110_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB10200388_synthesized.wav","path":"vits/demo/AISHELL3/SSB10200388_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB10200388_ground-truth.wav","path":"vits/demo/AISHELL3/SSB10200388_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB15930399_ground-truth.wav","path":"vits/demo/AISHELL3/SSB15930399_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB15930399_synthesized.wav","path":"vits/demo/AISHELL3/SSB15930399_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB16070080_ground-truth.wav","path":"vits/demo/AISHELL3/SSB16070080_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/AISHELL3/SSB16070080_synthesized.wav","path":"vits/demo/AISHELL3/SSB16070080_synthesized.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1085-156170-0001.flac","path":"melgan/demo/LibriTTS/1085-156170-0001.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1085-156170-0001_synthesized.flac","path":"melgan/demo/LibriTTS/1085-156170-0001_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1353-121397-0001.flac","path":"melgan/demo/LibriTTS/1353-121397-0001.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1353-121397-0001_synthesized.flac","path":"melgan/demo/LibriTTS/1353-121397-0001_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1492-55449-0000_synthesized.flac","path":"melgan/demo/LibriTTS/1492-55449-0000_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1492-55449-0000.flac","path":"melgan/demo/LibriTTS/1492-55449-0000.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1664-137600-0003.flac","path":"melgan/demo/LibriTTS/1664-137600-0003.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/1664-137600-0003_synthesized.flac","path":"melgan/demo/LibriTTS/1664-137600-0003_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/218-131206-0003_synthesized.flac","path":"melgan/demo/LibriTTS/218-131206-0003_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/218-131206-0003.flac","path":"melgan/demo/LibriTTS/218-131206-0003.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/29-123032-0005.flac","path":"melgan/demo/LibriTTS/29-123032-0005.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/29-123032-0005_synthesized.flac","path":"melgan/demo/LibriTTS/29-123032-0005_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/319-134959-0006.flac","path":"melgan/demo/LibriTTS/319-134959-0006.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/36-16603-0002.flac","path":"melgan/demo/LibriTTS/36-16603-0002.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/36-16603-0002_synthesized.flac","path":"melgan/demo/LibriTTS/36-16603-0002_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/428-125879-0003.flac","path":"melgan/demo/LibriTTS/428-125879-0003.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/319-134959-0006_synthesized.flac","path":"melgan/demo/LibriTTS/319-134959-0006_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/428-125879-0003_synthesized.flac","path":"melgan/demo/LibriTTS/428-125879-0003_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/713-291178-0007.flac","path":"melgan/demo/LibriTTS/713-291178-0007.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LibriTTS/713-291178-0007_synthesized.flac","path":"melgan/demo/LibriTTS/713-291178-0007_synthesized.flac","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0142.wav","path":"melgan/demo/LJSpeech/LJ013-0142.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0142_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0142_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0143.wav","path":"melgan/demo/LJSpeech/LJ013-0143.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0143_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0143_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0144.wav","path":"melgan/demo/LJSpeech/LJ013-0144.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0144_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0144_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0145_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0145_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0146.wav","path":"melgan/demo/LJSpeech/LJ013-0146.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0146_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0146_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0145.wav","path":"melgan/demo/LJSpeech/LJ013-0145.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0147.wav","path":"melgan/demo/LJSpeech/LJ013-0147.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0147_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0147_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0148_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0148_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0149.wav","path":"melgan/demo/LJSpeech/LJ013-0149.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0148.wav","path":"melgan/demo/LJSpeech/LJ013-0148.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0149_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0149_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0150_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0150_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0151.wav","path":"melgan/demo/LJSpeech/LJ013-0151.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0150.wav","path":"melgan/demo/LJSpeech/LJ013-0150.wav","modified":1,"renderable":0},{"_id":"source/melgan/demo/LJSpeech/LJ013-0151_reconstructed_epoch0610.wav","path":"melgan/demo/LJSpeech/LJ013-0151_reconstructed_epoch0610.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/42_ground-truth.wav","path":"vits/demo/baker/42_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/43_synthesized.wav","path":"vits/demo/baker/43_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/43_ground-truth.wav","path":"vits/demo/baker/43_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/42_synthesized.wav","path":"vits/demo/baker/42_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/44_ground-truth.wav","path":"vits/demo/baker/44_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/45_ground-truth.wav","path":"vits/demo/baker/45_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/44_synthesized.wav","path":"vits/demo/baker/44_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/45_synthesized.wav","path":"vits/demo/baker/45_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/46_ground-truth.wav","path":"vits/demo/baker/46_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/47_synthesized.wav","path":"vits/demo/baker/47_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/47_ground-truth.wav","path":"vits/demo/baker/47_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/46_synthesized.wav","path":"vits/demo/baker/46_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/48_ground-truth.wav","path":"vits/demo/baker/48_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/49_ground-truth.wav","path":"vits/demo/baker/49_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/48_synthesized.wav","path":"vits/demo/baker/48_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/49_synthesized.wav","path":"vits/demo/baker/49_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/51_ground-truth.wav","path":"vits/demo/baker/51_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/50_synthesized.wav","path":"vits/demo/baker/50_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/50_ground-truth.wav","path":"vits/demo/baker/50_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/baker/51_synthesized.wav","path":"vits/demo/baker/51_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","path":"vits/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","path":"vits/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","path":"vits/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","path":"vits/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","path":"vits/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","path":"vits/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","path":"vits/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","path":"vits/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","path":"vits/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","path":"vits/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","path":"vits/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","path":"vits/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","path":"vits/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","path":"vits/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","path":"vits/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","path":"vits/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","path":"vits/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","path":"vits/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","path":"vits/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","modified":1,"renderable":0},{"_id":"source/vits/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","path":"vits/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/resource.json","path":"resource.json","modified":1,"renderable":1},{"_id":"themes/next/source/result.json","path":"result.json","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/fonts/JTHandwrite.eot","path":"fonts/JTHandwrite.eot","modified":1,"renderable":1},{"_id":"themes/next/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/next/source/fonts/JTHandwrite.ttf","path":"fonts/JTHandwrite.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/fonts/JTHandwrite.svg","path":"fonts/JTHandwrite.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.png","path":"images/alipay.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/beian.png","path":"images/beian.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/circle.ico","path":"images/circle.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/circle2.ico","path":"images/circle2.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/dribbble.svg","path":"images/dribbble.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon1.jpg","path":"images/favicon1.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon2.jpg","path":"images/favicon2.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/linkedin.svg","path":"images/linkedin.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo_white.svg","path":"images/logo_white.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/link.svg","path":"images/link.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechat_channel.jpg","path":"images/wechat_channel.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/parallax.min.js","path":"js/parallax.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/media/music.mp3","path":"media/music.mp3","modified":1,"renderable":1},{"_id":"themes/next/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/LICENSE","path":"lib/Han/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/README.md","path":"lib/Han/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/bookmark/LICENSE","path":"lib/bookmark/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/bookmark/README.md","path":"lib/bookmark/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/bookmark/bookmark.min.js","path":"lib/bookmark/bookmark.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/bookmark/index.js","path":"lib/bookmark/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/bookmark/package.json","path":"lib/bookmark/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","path":"lib/canvas-nest/canvas-nest-nomobile.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","path":"lib/canvas-ribbon/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","path":"lib/canvas-ribbon/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/LICENSE","path":"lib/jquery_lazyload/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","path":"lib/needsharebutton/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/README.md","path":"lib/needsharebutton/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pangu/README.md","path":"lib/pangu/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pangu/LICENSE","path":"lib/pangu/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/README.md","path":"lib/pdf/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/LICENSE","path":"lib/pdf/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/quicklink/LICENSE","path":"lib/quicklink/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/quicklink/README.md","path":"lib/quicklink/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/fireworks.js","path":"js/src/fireworks.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pangu/dist/pangu.js","path":"lib/pangu/dist/pangu.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.js","path":"lib/pdf/build/pdf.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pangu/dist/pangu.js.map","path":"lib/pangu/dist/pangu.js.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pangu/dist/pangu.min.js","path":"lib/pangu/dist/pangu.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pangu/dist/pangu.min.js.map","path":"lib/pangu/dist/pangu.min.js.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.js.map","path":"lib/pdf/build/pdf.js.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js","path":"lib/pdf/build/pdf.worker.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js.map","path":"lib/pdf/build/pdf.worker.js.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/compressed.tracemonkey-pldi-09.pdf","path":"lib/pdf/web/compressed.tracemonkey-pldi-09.pdf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/debugger.js","path":"lib/pdf/web/debugger.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.css","path":"lib/pdf/web/viewer.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.html","path":"lib/pdf/web/viewer.html","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.js","path":"lib/pdf/web/viewer.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.js.map","path":"lib/pdf/web/viewer.js.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/quicklink/dist/quicklink.umd.js","path":"lib/quicklink/dist/quicklink.umd.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-H.bcmap","path":"lib/pdf/web/cmaps/78-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-H.bcmap","path":"lib/pdf/web/cmaps/78-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/78-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/78-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-V.bcmap","path":"lib/pdf/web/cmaps/78-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-V.bcmap","path":"lib/pdf/web/cmaps/78-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/78ms-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/78ms-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/83pv-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/83pv-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/90ms-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/90msp-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/90ms-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/90msp-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/90pv-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/90pv-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-H.bcmap","path":"lib/pdf/web/cmaps/Add-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/Add-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/Add-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-V.bcmap","path":"lib/pdf/web/cmaps/Add-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-3.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-5.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-4.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-6.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-6.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-3.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-4.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-5.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-3.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-4.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-5.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-6.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-6.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-H.bcmap","path":"lib/pdf/web/cmaps/B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-V.bcmap","path":"lib/pdf/web/cmaps/B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-H.bcmap","path":"lib/pdf/web/cmaps/B5pc-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-V.bcmap","path":"lib/pdf/web/cmaps/B5pc-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-H.bcmap","path":"lib/pdf/web/cmaps/CNS-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-H.bcmap","path":"lib/pdf/web/cmaps/CNS1-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-V.bcmap","path":"lib/pdf/web/cmaps/CNS1-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-V.bcmap","path":"lib/pdf/web/cmaps/CNS-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-H.bcmap","path":"lib/pdf/web/cmaps/CNS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-V.bcmap","path":"lib/pdf/web/cmaps/CNS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-V.bcmap","path":"lib/pdf/web/cmaps/ETHK-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-H.bcmap","path":"lib/pdf/web/cmaps/ETen-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-H.bcmap","path":"lib/pdf/web/cmaps/ETHK-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-V.bcmap","path":"lib/pdf/web/cmaps/ETen-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-H.bcmap","path":"lib/pdf/web/cmaps/ETenms-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-V.bcmap","path":"lib/pdf/web/cmaps/ETenms-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-V.bcmap","path":"lib/pdf/web/cmaps/EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-H.bcmap","path":"lib/pdf/web/cmaps/EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-H.bcmap","path":"lib/pdf/web/cmaps/Ext-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/Ext-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/Ext-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-V.bcmap","path":"lib/pdf/web/cmaps/Ext-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GB-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GB-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-H.bcmap","path":"lib/pdf/web/cmaps/GB-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-V.bcmap","path":"lib/pdf/web/cmaps/GB-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBK-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBK-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-H.bcmap","path":"lib/pdf/web/cmaps/GBK2K-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-V.bcmap","path":"lib/pdf/web/cmaps/GBK2K-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBKp-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBKp-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBT-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBT-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-V.bcmap","path":"lib/pdf/web/cmaps/GBT-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-H.bcmap","path":"lib/pdf/web/cmaps/GBT-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBTpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBTpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/H.bcmap","path":"lib/pdf/web/cmaps/H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKdla-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKdla-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKdlb-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKgccs-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKdlb-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKm314-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKgccs-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKm314-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKm471-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKm471-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKscs-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKscs-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hankaku.bcmap","path":"lib/pdf/web/cmaps/Hankaku.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hiragana.bcmap","path":"lib/pdf/web/cmaps/Hiragana.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-H.bcmap","path":"lib/pdf/web/cmaps/KSC-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-V.bcmap","path":"lib/pdf/web/cmaps/KSC-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-H.bcmap","path":"lib/pdf/web/cmaps/KSC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-H.bcmap","path":"lib/pdf/web/cmaps/KSC-Johab-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-V.bcmap","path":"lib/pdf/web/cmaps/KSC-Johab-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-V.bcmap","path":"lib/pdf/web/cmaps/KSC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-H.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-H.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-HW-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-V.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-V.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Katakana.bcmap","path":"lib/pdf/web/cmaps/Katakana.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-V.bcmap","path":"lib/pdf/web/cmaps/KSCpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-H.bcmap","path":"lib/pdf/web/cmaps/KSCpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/LICENSE","path":"lib/pdf/web/cmaps/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-H.bcmap","path":"lib/pdf/web/cmaps/NWP-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-V.bcmap","path":"lib/pdf/web/cmaps/NWP-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Roman.bcmap","path":"lib/pdf/web/cmaps/Roman.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-HW-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","path":"lib/pdf/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniJISPro-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniJISPro-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJISX0213-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJISX0213-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJISX02132004-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJISX02132004-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/V.bcmap","path":"lib/pdf/web/cmaps/V.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/WP-Symbol.bcmap","path":"lib/pdf/web/cmaps/WP-Symbol.bcmap","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-comment.svg","path":"lib/pdf/web/images/annotation-comment.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-check.svg","path":"lib/pdf/web/images/annotation-check.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-help.svg","path":"lib/pdf/web/images/annotation-help.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-insert.svg","path":"lib/pdf/web/images/annotation-insert.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-key.svg","path":"lib/pdf/web/images/annotation-key.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-newparagraph.svg","path":"lib/pdf/web/images/annotation-newparagraph.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-noicon.svg","path":"lib/pdf/web/images/annotation-noicon.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-paragraph.svg","path":"lib/pdf/web/images/annotation-paragraph.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl.png","path":"lib/pdf/web/images/findbarButton-next-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl@2x.png","path":"lib/pdf/web/images/findbarButton-next-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-note.svg","path":"lib/pdf/web/images/annotation-note.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next.png","path":"lib/pdf/web/images/findbarButton-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next@2x.png","path":"lib/pdf/web/images/findbarButton-next@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl.png","path":"lib/pdf/web/images/findbarButton-previous-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl@2x.png","path":"lib/pdf/web/images/findbarButton-previous-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous@2x.png","path":"lib/pdf/web/images/findbarButton-previous@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous.png","path":"lib/pdf/web/images/findbarButton-previous.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/grab.cur","path":"lib/pdf/web/images/grab.cur","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/grabbing.cur","path":"lib/pdf/web/images/grabbing.cur","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/loading-small.png","path":"lib/pdf/web/images/loading-small.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/loading-icon.gif","path":"lib/pdf/web/images/loading-icon.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/loading-small@2x.png","path":"lib/pdf/web/images/loading-small@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties.png","path":"lib/pdf/web/images/secondaryToolbarButton-documentProperties.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage.png","path":"lib/pdf/web/images/secondaryToolbarButton-firstPage.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-documentProperties@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-firstPage@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool.png","path":"lib/pdf/web/images/secondaryToolbarButton-handTool.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-handTool@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage.png","path":"lib/pdf/web/images/secondaryToolbarButton-lastPage.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-lastPage@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCcw@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCcw.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCw@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCw.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollVertical.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollVertical@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollWrapped.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollWrapped@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool.png","path":"lib/pdf/web/images/secondaryToolbarButton-selectTool.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-selectTool@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadEven.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadEven@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadNone.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadNone@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadOdd.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadOdd@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/shadow.png","path":"lib/pdf/web/images/shadow.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/texture.png","path":"lib/pdf/web/images/texture.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark.png","path":"lib/pdf/web/images/toolbarButton-bookmark.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark@2x.png","path":"lib/pdf/web/images/toolbarButton-bookmark@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download.png","path":"lib/pdf/web/images/toolbarButton-download.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download@2x.png","path":"lib/pdf/web/images/toolbarButton-download@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows.png","path":"lib/pdf/web/images/toolbarButton-menuArrows.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows@2x.png","path":"lib/pdf/web/images/toolbarButton-menuArrows@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile@2x.png","path":"lib/pdf/web/images/toolbarButton-openFile@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile.png","path":"lib/pdf/web/images/toolbarButton-openFile.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl.png","path":"lib/pdf/web/images/toolbarButton-pageDown-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-pageDown-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown@2x.png","path":"lib/pdf/web/images/toolbarButton-pageDown@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown.png","path":"lib/pdf/web/images/toolbarButton-pageDown.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl.png","path":"lib/pdf/web/images/toolbarButton-pageUp-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-pageUp-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp.png","path":"lib/pdf/web/images/toolbarButton-pageUp.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp@2x.png","path":"lib/pdf/web/images/toolbarButton-pageUp@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode.png","path":"lib/pdf/web/images/toolbarButton-presentationMode.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode@2x.png","path":"lib/pdf/web/images/toolbarButton-presentationMode@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print.png","path":"lib/pdf/web/images/toolbarButton-print.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print@2x.png","path":"lib/pdf/web/images/toolbarButton-print@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search.png","path":"lib/pdf/web/images/toolbarButton-search.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search@2x.png","path":"lib/pdf/web/images/toolbarButton-search@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle@2x.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle@2x.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments@2x.png","path":"lib/pdf/web/images/toolbarButton-viewAttachments@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments.png","path":"lib/pdf/web/images/toolbarButton-viewAttachments.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl.png","path":"lib/pdf/web/images/toolbarButton-viewOutline-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-viewOutline-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline.png","path":"lib/pdf/web/images/toolbarButton-viewOutline.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline@2x.png","path":"lib/pdf/web/images/toolbarButton-viewOutline@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail.png","path":"lib/pdf/web/images/toolbarButton-viewThumbnail.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail@2x.png","path":"lib/pdf/web/images/toolbarButton-viewThumbnail@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn.png","path":"lib/pdf/web/images/toolbarButton-zoomIn.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn@2x.png","path":"lib/pdf/web/images/toolbarButton-zoomIn@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut.png","path":"lib/pdf/web/images/toolbarButton-zoomOut.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut@2x.png","path":"lib/pdf/web/images/toolbarButton-zoomOut@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl.png","path":"lib/pdf/web/images/treeitem-collapsed-rtl.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl@2x.png","path":"lib/pdf/web/images/treeitem-collapsed-rtl@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed.png","path":"lib/pdf/web/images/treeitem-collapsed.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed@2x.png","path":"lib/pdf/web/images/treeitem-collapsed@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded.png","path":"lib/pdf/web/images/treeitem-expanded.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded@2x.png","path":"lib/pdf/web/images/treeitem-expanded@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/locale.properties","path":"lib/pdf/web/locale/locale.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ak/viewer.properties","path":"lib/pdf/web/locale/ak/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/an/viewer.properties","path":"lib/pdf/web/locale/an/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/af/viewer.properties","path":"lib/pdf/web/locale/af/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ach/viewer.properties","path":"lib/pdf/web/locale/ach/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ar/viewer.properties","path":"lib/pdf/web/locale/ar/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/as/viewer.properties","path":"lib/pdf/web/locale/as/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ast/viewer.properties","path":"lib/pdf/web/locale/ast/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/az/viewer.properties","path":"lib/pdf/web/locale/az/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bg/viewer.properties","path":"lib/pdf/web/locale/bg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/be/viewer.properties","path":"lib/pdf/web/locale/be/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/br/viewer.properties","path":"lib/pdf/web/locale/br/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bn-BD/viewer.properties","path":"lib/pdf/web/locale/bn-BD/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bn-IN/viewer.properties","path":"lib/pdf/web/locale/bn-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/cs/viewer.properties","path":"lib/pdf/web/locale/cs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ca/viewer.properties","path":"lib/pdf/web/locale/ca/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bs/viewer.properties","path":"lib/pdf/web/locale/bs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/cak/viewer.properties","path":"lib/pdf/web/locale/cak/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/crh/viewer.properties","path":"lib/pdf/web/locale/crh/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/csb/viewer.properties","path":"lib/pdf/web/locale/csb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/brx/viewer.properties","path":"lib/pdf/web/locale/brx/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/cy/viewer.properties","path":"lib/pdf/web/locale/cy/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/da/viewer.properties","path":"lib/pdf/web/locale/da/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/de/viewer.properties","path":"lib/pdf/web/locale/de/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/el/viewer.properties","path":"lib/pdf/web/locale/el/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-GB/viewer.properties","path":"lib/pdf/web/locale/en-GB/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-CA/viewer.properties","path":"lib/pdf/web/locale/en-CA/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-US/viewer.properties","path":"lib/pdf/web/locale/en-US/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-ZA/viewer.properties","path":"lib/pdf/web/locale/en-ZA/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/eo/viewer.properties","path":"lib/pdf/web/locale/eo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-ES/viewer.properties","path":"lib/pdf/web/locale/es-ES/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-AR/viewer.properties","path":"lib/pdf/web/locale/es-AR/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-CL/viewer.properties","path":"lib/pdf/web/locale/es-CL/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-MX/viewer.properties","path":"lib/pdf/web/locale/es-MX/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/eu/viewer.properties","path":"lib/pdf/web/locale/eu/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ff/viewer.properties","path":"lib/pdf/web/locale/ff/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/et/viewer.properties","path":"lib/pdf/web/locale/et/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fr/viewer.properties","path":"lib/pdf/web/locale/fr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fi/viewer.properties","path":"lib/pdf/web/locale/fi/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fa/viewer.properties","path":"lib/pdf/web/locale/fa/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gl/viewer.properties","path":"lib/pdf/web/locale/gl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fy-NL/viewer.properties","path":"lib/pdf/web/locale/fy-NL/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gd/viewer.properties","path":"lib/pdf/web/locale/gd/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/he/viewer.properties","path":"lib/pdf/web/locale/he/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hr/viewer.properties","path":"lib/pdf/web/locale/hr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gn/viewer.properties","path":"lib/pdf/web/locale/gn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hi-IN/viewer.properties","path":"lib/pdf/web/locale/hi-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gu-IN/viewer.properties","path":"lib/pdf/web/locale/gu-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ga-IE/viewer.properties","path":"lib/pdf/web/locale/ga-IE/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hsb/viewer.properties","path":"lib/pdf/web/locale/hsb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hu/viewer.properties","path":"lib/pdf/web/locale/hu/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hy-AM/viewer.properties","path":"lib/pdf/web/locale/hy-AM/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hto/viewer.properties","path":"lib/pdf/web/locale/hto/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/is/viewer.properties","path":"lib/pdf/web/locale/is/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ka/viewer.properties","path":"lib/pdf/web/locale/ka/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/id/viewer.properties","path":"lib/pdf/web/locale/id/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ia/viewer.properties","path":"lib/pdf/web/locale/ia/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kk/viewer.properties","path":"lib/pdf/web/locale/kk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kab/viewer.properties","path":"lib/pdf/web/locale/kab/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ja/viewer.properties","path":"lib/pdf/web/locale/ja/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/it/viewer.properties","path":"lib/pdf/web/locale/it/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kn/viewer.properties","path":"lib/pdf/web/locale/kn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kok/viewer.properties","path":"lib/pdf/web/locale/kok/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ks/viewer.properties","path":"lib/pdf/web/locale/ks/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ku/viewer.properties","path":"lib/pdf/web/locale/ku/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ko/viewer.properties","path":"lib/pdf/web/locale/ko/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lg/viewer.properties","path":"lib/pdf/web/locale/lg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lij/viewer.properties","path":"lib/pdf/web/locale/lij/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/km/viewer.properties","path":"lib/pdf/web/locale/km/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lt/viewer.properties","path":"lib/pdf/web/locale/lt/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lv/viewer.properties","path":"lib/pdf/web/locale/lv/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mai/viewer.properties","path":"lib/pdf/web/locale/mai/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lo/viewer.properties","path":"lib/pdf/web/locale/lo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ml/viewer.properties","path":"lib/pdf/web/locale/ml/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/meh/viewer.properties","path":"lib/pdf/web/locale/meh/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ltg/viewer.properties","path":"lib/pdf/web/locale/ltg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mn/viewer.properties","path":"lib/pdf/web/locale/mn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mk/viewer.properties","path":"lib/pdf/web/locale/mk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mr/viewer.properties","path":"lib/pdf/web/locale/mr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ms/viewer.properties","path":"lib/pdf/web/locale/ms/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ne-NP/viewer.properties","path":"lib/pdf/web/locale/ne-NP/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/my/viewer.properties","path":"lib/pdf/web/locale/my/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nl/viewer.properties","path":"lib/pdf/web/locale/nl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nb-NO/viewer.properties","path":"lib/pdf/web/locale/nb-NO/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pa-IN/viewer.properties","path":"lib/pdf/web/locale/pa-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nn-NO/viewer.properties","path":"lib/pdf/web/locale/nn-NO/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pl/viewer.properties","path":"lib/pdf/web/locale/pl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nso/viewer.properties","path":"lib/pdf/web/locale/nso/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pt-BR/viewer.properties","path":"lib/pdf/web/locale/pt-BR/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/rm/viewer.properties","path":"lib/pdf/web/locale/rm/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pt-PT/viewer.properties","path":"lib/pdf/web/locale/pt-PT/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ro/viewer.properties","path":"lib/pdf/web/locale/ro/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/rw/viewer.properties","path":"lib/pdf/web/locale/rw/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ru/viewer.properties","path":"lib/pdf/web/locale/ru/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sk/viewer.properties","path":"lib/pdf/web/locale/sk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sl/viewer.properties","path":"lib/pdf/web/locale/sl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sat/viewer.properties","path":"lib/pdf/web/locale/sat/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/si/viewer.properties","path":"lib/pdf/web/locale/si/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sah/viewer.properties","path":"lib/pdf/web/locale/sah/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sq/viewer.properties","path":"lib/pdf/web/locale/sq/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sr/viewer.properties","path":"lib/pdf/web/locale/sr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/oc/viewer.properties","path":"lib/pdf/web/locale/oc/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/or/viewer.properties","path":"lib/pdf/web/locale/or/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sv-SE/viewer.properties","path":"lib/pdf/web/locale/sv-SE/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sw/viewer.properties","path":"lib/pdf/web/locale/sw/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ta-LK/viewer.properties","path":"lib/pdf/web/locale/ta-LK/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ta/viewer.properties","path":"lib/pdf/web/locale/ta/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/te/viewer.properties","path":"lib/pdf/web/locale/te/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tl/viewer.properties","path":"lib/pdf/web/locale/tl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/th/viewer.properties","path":"lib/pdf/web/locale/th/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/son/viewer.properties","path":"lib/pdf/web/locale/son/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tr/viewer.properties","path":"lib/pdf/web/locale/tr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tn/viewer.properties","path":"lib/pdf/web/locale/tn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/uk/viewer.properties","path":"lib/pdf/web/locale/uk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/vi/viewer.properties","path":"lib/pdf/web/locale/vi/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ur/viewer.properties","path":"lib/pdf/web/locale/ur/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/wo/viewer.properties","path":"lib/pdf/web/locale/wo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zh-CN/viewer.properties","path":"lib/pdf/web/locale/zh-CN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zh-TW/viewer.properties","path":"lib/pdf/web/locale/zh-TW/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/uz/viewer.properties","path":"lib/pdf/web/locale/uz/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/xh/viewer.properties","path":"lib/pdf/web/locale/xh/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tsz/viewer.properties","path":"lib/pdf/web/locale/tsz/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zu/viewer.properties","path":"lib/pdf/web/locale/zu/viewer.properties","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zam/viewer.properties","path":"lib/pdf/web/locale/zam/viewer.properties","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"29eadcbe8bf5766a504760667f1dea8608a8436a","modified":1603350877306},{"_id":"source/SV2TTS/index.html","hash":"7862cc01675be126b5fe26fd75fb83afe4e1e352","modified":1650608501453},{"_id":"source/about/index.md","hash":"0b0dafb465de4ce54d6d7b68e6eddc9124ccf4e4","modified":1615187233561},{"_id":"source/_data/styles.styl","hash":"7fa939d151c0a48433043151c27365b69846ef17","modified":1637392791078},{"_id":"source/categories/index.md","hash":"d8687112dbfee4fdba03ab7bc1fb4c1688efe9ca","modified":1600352023926},{"_id":"source/PJT的神奇歌单/index.md","hash":"88ba759d84b499d913783bd987479ebed66abf51","modified":1636103170066},{"_id":"source/fastspeech2/index.html","hash":"db8372baba90ca942ef0c73b41efe827600ec038","modified":1654078462892},{"_id":"source/_posts/51-1.md","hash":"85bfcd913dc0913c3d7bc2a3532427858149cff8","modified":1606896663172},{"_id":"source/melgan/index.html","hash":"a21b7551b382504947018d847976361434670308","modified":1648796452680},{"_id":"source/_posts/51-2.md","hash":"b16063a791711d3b80e275bfc05853c2a87833a4","modified":1606284185696},{"_id":"source/_posts/Federated-Learning3.md","hash":"22394f758a1a27c5efc0dc5bf4cd9bddd41f9ce0","modified":1635561313983},{"_id":"source/_posts/Federated-Learning1.md","hash":"38b3fe6ecbf41c2f5a399289656de1560543ae2a","modified":1635561312587},{"_id":"source/_posts/Vue-1-create.md","hash":"9a1e337a9924aa69499944ed4413415cd0e5386c","modified":1663573260971},{"_id":"source/_posts/Fastspeech2.md","hash":"943fc68483b8135316b88140410f31dbb87be783","modified":1649649201773},{"_id":"source/_posts/Federated-Learning2.md","hash":"e8a5db519a7b6641e68eb6a0a61d9967f9793450","modified":1635562420249},{"_id":"source/_posts/Socket-chatroom.md","hash":"d2057e0c71b9fdee2977a317b677f2e1e7f39227","modified":1635403452566},{"_id":"source/_posts/TTS-adapitve-TTS.md","hash":"1f9a543d3fb6b95fadb55eea86d955b4dbb9bf08","modified":1651752181451},{"_id":"source/_posts/Vue-rest.md","hash":"557d4d8833460757ae31cbe30be3f554749ae2aa","modified":1600505314606},{"_id":"source/_posts/aws-1register.md","hash":"e79dd5821ebbfde78f4c5c244b9d3dd6c4c24b79","modified":1612858887522},{"_id":"source/_posts/aws-2staticweb.md","hash":"30c97f81c5b874222e16e182360a200cdccd7934","modified":1612858904121},{"_id":"source/_posts/baidu-push.md","hash":"922d2b3f7142ba9192fa090d7cd51b9109e89943","modified":1601023112734},{"_id":"source/_posts/aws-3manager.md","hash":"6a6ba6abc74dd68c2d872be1d2c46ded00f9e2a0","modified":1612858985204},{"_id":"source/_posts/aws-4deepl.md","hash":"e19db3b22695f204c8660ac811f2a1d4a45b2602","modified":1612939110469},{"_id":"source/_posts/caozuoxitong.md","hash":"f562dc15fe8c1a3dd9faf5ab0c89aff3034d9674","modified":1603786809872},{"_id":"source/_posts/daily.md","hash":"578791557a4c943c95dbbe43d6914313e7612bc7","modified":1615107419452},{"_id":"source/_posts/chenwujian.md","hash":"aba0b3a90e29dbcf880402ca900510c4e1377ac4","modified":1600505338766},{"_id":"source/_posts/bianyi.md","hash":"12bf1d485e60094b8857b474fa4f5840612763f4","modified":1603786809871},{"_id":"source/_posts/dl-10different-rnn.md","hash":"a05039413e34946c55c4ffef440640e14a926579","modified":1615534461052},{"_id":"source/_posts/dl-13speech-recognition.md","hash":"3d74050f0f1b3b25a88e8e54647fc7c09fafa23e","modified":1615786047326},{"_id":"source/_posts/dl-11Language-model-and-Sample.md","hash":"ba13f52520933d2d590130945aa9480d3287d791","modified":1615539427712},{"_id":"source/_posts/dl-1definition.md","hash":"e54560f430cf9cba0f7822c3925647b0585dd8dd","modified":1613801386444},{"_id":"source/_posts/dl-2Neural-Networks.md","hash":"cc93aa8b241e939e56c3dc69a8b711c20b533b98","modified":1613801381373},{"_id":"source/_posts/dl-12GRU-and-LSTM.md","hash":"0913fd33935f6b7787b8d3198ce909cbb4dd1ed5","modified":1615970034685},{"_id":"source/_posts/dl-4Gradient-Descent.md","hash":"11266efe7ef8b0354c58e4a516610e1dd7f8fcb3","modified":1614057333020},{"_id":"source/_posts/dl-3logistic-regression.md","hash":"e9a9dd3eef507db7d7e57cd01d4247a9ed41038b","modified":1613802410074},{"_id":"source/_posts/dl-6neural-network-representation.md","hash":"4c7a47feae0aa72b533c2a3b22c72bf08ad168c4","modified":1615185144912},{"_id":"source/_posts/dl-5vectorization.md","hash":"0711aa4decd2d6f2455244051f0f4ca17a545828","modified":1614067453891},{"_id":"source/_posts/dl-7activation-functions.md","hash":"9892cca5e1cb6b0179843193820afc24b05834b5","modified":1615092603221},{"_id":"source/_posts/dl-9Sequence-Models-introduce.md","hash":"424598f3b4350abbd682b890e122f72a40656faf","modified":1615534374940},{"_id":"source/_posts/dl-8Gradient-descent-for-neural.md","hash":"4469ad16afb3e2d78e450ca7c37e127fea96b173","modified":1617202781263},{"_id":"source/_posts/go-12slice.md","hash":"b53cce74dfe78888bd40eede949c9ee4c0c74936","modified":1600944874124},{"_id":"source/_posts/go-13range.md","hash":"004ad8bc8e72ee98754e8bb6f6f1fa03ed98358c","modified":1600946903214},{"_id":"source/_posts/go-14map.md","hash":"8d4caf65983487b37b77c16679a8d2f13f8e3c8d","modified":1600951782824},{"_id":"source/_posts/go-10zhizhen.md","hash":"ae33a5475bafdd5824939b307faa7c9e54d5a0a3","modified":1600938665835},{"_id":"source/_posts/go-11struct.md","hash":"2febcf7f847a6e165ea1e4866f9e4807d2d11faf","modified":1600944197996},{"_id":"source/_posts/go-17bingfa.md","hash":"8e26a6317b521981e6e6ba7b23a867e90ebb8ce8","modified":1601034307334},{"_id":"source/_posts/go-15interface.md","hash":"846f38e97f3df949edcacb39fba40d565781e358","modified":1601033090624},{"_id":"source/_posts/go-18defer.md","hash":"8b77b86896bc6e43b2cb6a29c1ce87dc995a5d3b","modified":1602483165502},{"_id":"source/_posts/go-1intruduct.md","hash":"755f87f59462eaea694b52d8f7b17781c2be26e3","modified":1600765275357},{"_id":"source/_posts/go-16error.md","hash":"5f6babbdcca272d7ea69263c2192b713ac0c66be","modified":1601033449597},{"_id":"source/_posts/go-2basic.md","hash":"ba5b3ad088c1297cd9235499a98753101022a705","modified":1600768992289},{"_id":"source/_posts/go-3bianliang.md","hash":"e914474cd69cd07a95f777626f585d609900a65e","modified":1600772120985},{"_id":"source/_posts/go-5yunsuanfu.md","hash":"83e4e2238b8c55b80c634ed1eecacb348e510aeb","modified":1602491679140},{"_id":"source/_posts/go-6tiaojian.md","hash":"cc8c6ed9fd0846a29de58453ee6d8c692c5087f5","modified":1600850513618},{"_id":"source/_posts/go-9array.md","hash":"b2f90dfb9072eec5acb4837eec4fb1463d02654e","modified":1600935041620},{"_id":"source/_posts/go-7xunhuan.md","hash":"6f34dcbb6267a7fbf59728b7e80f40366b46c216","modified":1600851529368},{"_id":"source/_posts/guanko.md","hash":"46a22aa3d67ccc54ae0fe3f99577f692f9b0ed96","modified":1606895630147},{"_id":"source/_posts/go-4changliang.md","hash":"43b27af6b987d2eb6e80c1f4ef789f82b6f1f637","modified":1600768605625},{"_id":"source/_posts/hello-world.md","hash":"b87c64f087c20f1c4d4d75b9ed46780402f5da1d","modified":1600343751993},{"_id":"source/_posts/harmony-start.md","hash":"cfe45876700f52c62d37389f1c11495df73f1777","modified":1600592993826},{"_id":"source/_posts/go-8func.md","hash":"df0f0c7efcccae3f58b475026cfce7a6c5511efe","modified":1600859179746},{"_id":"source/_posts/jiwang.md","hash":"7a61d334d982fd9494be1cbe1f1de0b4656b465a","modified":1603786809872},{"_id":"source/_posts/jizu.md","hash":"138c09e4c951a6984219f962bb0f1f799b384d47","modified":1603786809872},{"_id":"source/_posts/net-freight.md","hash":"d1789fd1952a088966dd047e976dfda7d4ba7f9f","modified":1635429657420},{"_id":"source/_posts/php-3oprator.md","hash":"357d1941dc129c4c7ecad97761500fea96ce50bc","modified":1602837048035},{"_id":"source/_posts/php-2EOF.md","hash":"279c1acb27b3552db22062fac110ebfe438b1f72","modified":1602834656859},{"_id":"source/_posts/php-4array.md","hash":"8e3cc28444617ccfb32ddfc5b4de7fe4ca3c0e14","modified":1603001601588},{"_id":"source/_posts/php-1var.md","hash":"6a17e248bba159f9c7d6a0d373b47b63e833550d","modified":1602837670229},{"_id":"source/_posts/php-7oop.md","hash":"421a90c917b2034538e4f3a99f106766088ab095","modified":1603007738882},{"_id":"source/_posts/spark1-basic.md","hash":"5a430b50623b1e8130a4916a78bed8362721ab0d","modified":1635403446977},{"_id":"source/_posts/php-5superglobal.md","hash":"114ccac204c6bdf7db4df223a1b64e649cf04599","modified":1602840338152},{"_id":"source/_posts/speech-synthesis1.md","hash":"d547bd1919a1362a07278a451bb216b6425e78c2","modified":1636030634133},{"_id":"source/_posts/suibi1.md","hash":"645fa323c83854102141cf81eeb9084da418d5c9","modified":1614926483062},{"_id":"source/_posts/spring3-1-pet-user.md","hash":"10ac7528578d9d4a1a63e8e047b1d98aa8fce5eb","modified":1625650204201},{"_id":"source/_posts/spring1.md","hash":"80e32eee51281e3c306d68923ddd5c97a94dc71f","modified":1635240982224},{"_id":"source/_posts/spring3-autoConfiguration-and-Bean.md","hash":"fcda385547c6cbaa847c9bdf280977ede69f55b1","modified":1625821167188},{"_id":"source/_posts/spring2-helloworld.md","hash":"3f8c8e8d17c42f6c5e97b3e5b0fec920f540aeea","modified":1625296983055},{"_id":"source/_posts/php-6magic.md","hash":"210afb6f6d695ef8f7ce6a1d4b25509be46be75f","modified":1603001517580},{"_id":"source/_posts/test.md","hash":"46f7187ef189d35e4b91ad064878d3dca88776df","modified":1606919427246},{"_id":"source/pjt-love-lyt/readme.txt","hash":"e43d3e06be1446d6cc0c0a04bc36f8667f4e6fe2","modified":1625269380000},{"_id":"source/_posts/ziti.md","hash":"34f9d87ad4ad53998f39c630c2e550f641c53bc9","modified":1605410973774},{"_id":"source/_posts/ruanti.md","hash":"33440ad347b8aa7ccd68c0142f7cc5e307378934","modified":1603786809872},{"_id":"source/tags/index.md","hash":"11349b74a5eded13ab7172b7a7b2db7b862051c9","modified":1600352030014},{"_id":"source/pjt-love-lyt/result.json","hash":"07c197e7410dc474424164de214cd82c330b6be4","modified":1625269380000},{"_id":"source/pjt-love-lyt/resource.json","hash":"b1323c1b33e0ece6ea10bcd449355d7e573168dd","modified":1625269380000},{"_id":"source/pjt-love-lyt/index.html","hash":"160b3da343805f7024a176ed0ae4f3c5aeb0ed66","modified":1631093627059},{"_id":"source/vits/index.html","hash":"0b94645b66c6779bf9f77f023802edfd6c0be277","modified":1660276586639},{"_id":"source/photos/index.html","hash":"16eda1afd6f1079ace92988ec039f7c9bd83ba67","modified":1653720154210},{"_id":"source/_posts/51-1/效果.jpg","hash":"8f1466a1c9f36d8c5f3c6e251b4bf23a88931c59","modified":1606025210759},{"_id":"source/_posts/51-1/电路图.jpg","hash":"7e40e304a8ff3b184b73fd82209feeae35ed293a","modified":1606025186152},{"_id":"source/_posts/Socket-chatroom/客户端初始.jpg","hash":"7d41e70d5f71b288922080c817ae6bab58ab62da","modified":1600147431660},{"_id":"source/_posts/aws-2staticweb/git库.png","hash":"00346ba956342a17bf7bd75ba1012c1354976147","modified":1612850952849},{"_id":"source/_posts/Socket-chatroom/服务端初始.jpg","hash":"de2b2b39b3eca723b10e58d74d5fadd9843fe2eb","modified":1600147417605},{"_id":"source/_posts/Socket-chatroom/客户端下线.jpg","hash":"c62edcaaac060adbe2fbe4d18bac86db51add268","modified":1600147605257},{"_id":"source/_posts/aws-2staticweb/分支.png","hash":"a9eb887533bdc2dab6d8f8f736c705d958a7cd72","modified":1612851189721},{"_id":"source/_posts/aws-2staticweb/入门.png","hash":"15d2088fc07351372dbf0d2e7060d32f5079ad67","modified":1612851079085},{"_id":"source/_posts/aws-1register/30g.png","hash":"92dd5247e477feb14a1e08872290aa1bfc0b673d","modified":1612848380712},{"_id":"source/_posts/aws-2staticweb/选择.png","hash":"3f9f9fa292f081f5df23bc1cfac8062ccc3c90a5","modified":1612851182517},{"_id":"source/_posts/aws-2staticweb/部署.png","hash":"729891c6e7448336de283dceb8bbf7c9b52be539","modified":1612851405656},{"_id":"source/_posts/aws-1register/查看.png","hash":"8d3db2216d924d4a75d1775cd23010e6c86f3323","modified":1612848549996},{"_id":"source/_posts/aws-1register/密钥.png","hash":"4b2bde77123b9cb05168aafd9bed576ee748eea7","modified":1612848461130},{"_id":"source/_posts/aws-3manager/1a.png","hash":"4f46c2e21ed6bccbd3175ded8e1e80817395e9dc","modified":1612853039110},{"_id":"source/_posts/aws-1register/标签.png","hash":"43be1e45188ceb7fc3a12d9228fd09a2d0928279","modified":1612848396101},{"_id":"source/_posts/aws-3manager/1d.png","hash":"fc64c36ffa3e036f527faae5cc38c52a4714d7db","modified":1612853061422},{"_id":"source/_posts/aws-3manager/1e.png","hash":"d67cb3be763573c6b8158e0bc5eb32d418060da2","modified":1612853065879},{"_id":"source/_posts/chenwujian/gaoji.jpg","hash":"94c9d40a8caf18f41b42ee1cfea01b14f29f7791","modified":1600430255838},{"_id":"source/_posts/chenwujian/ceng.jpg","hash":"59fa98bd63b34dc789f1c03cc7c23c1e5e0a48ad","modified":1600430110807},{"_id":"source/_posts/chenwujian/hanshu.jpg","hash":"ce59d0e6103e36193ae8a5dadcfc9ad8bc46cfa2","modified":1600430275317},{"_id":"source/_posts/aws-4deepl/4a.png","hash":"3b63e7fd110d89308d9dddf42718257319cf2b01","modified":1612860099552},{"_id":"source/_posts/aws-4deepl/4b.png","hash":"7a9aef7402eb7106875c01bca1d72b2b456e2070","modified":1612860103157},{"_id":"source/_posts/dl-12GRU-and-LSTM/523650730db3f0d5c05a7192da02f878.png","hash":"1d8e6e516a4a679600ee6165b2790fad1ade850a","modified":1606527256000},{"_id":"source/_posts/dl-3logistic-regression/4c9a27b071ce9162dbbcdad3393061d2.png","hash":"21338fe2140dd5374056841eaf5fed1fdf9a95b4","modified":1606527256000},{"_id":"source/_posts/dl-2Neural-Networks/1a3d288dc243ca9c5a70a69799180c4a.png","hash":"701289648f8dc3020a381acccb9b655fcf104618","modified":1606527256000},{"_id":"source/_posts/dl-2Neural-Networks/1bebe0ac41715ef8132f2d802968495c.png","hash":"5ae85f1eb5c72048c786b20949bcfd10d01b92af","modified":1606527256000},{"_id":"source/_posts/dl-3logistic-regression/7e304debcca5945a3443d56bcbdd2964.png","hash":"39171bb35391da14a588dfa28ceba6089f543054","modified":1606527256000},{"_id":"source/_posts/dl-2Neural-Networks/4656617e30e7ad44490fe605b2e49e56.png","hash":"dff6174cd7738deafe19754ddbd51fe1ec6e892e","modified":1606527256000},{"_id":"source/_posts/dl-4Gradient-Descent/6403f00e5844c3100f4aa9ff043e2319.jpg","hash":"974fc505b3d832420f19eed60136ec0db508749e","modified":1606527256000},{"_id":"source/_posts/dl-4Gradient-Descent/4fb3b91114ecb2cd81ec9f3662434d81.jpg","hash":"5bb86fee67fb1173bcefc3c8c6abb8b973288afd","modified":1606527256000},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_3.png","hash":"a315ca6265625c464c436f5e260b73803e1f6d57","modified":1606527256000},{"_id":"source/_posts/dl-4Gradient-Descent/c5eda5608fd2f4d846559ed8e89ed33c.jpg","hash":"3589a916959db6600dfad6956a8b0fd90b500513","modified":1606527256000},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_7.png","hash":"9ef45e2ee89d3aaf242585b070a8388ebb9462cd","modified":1606527256000},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_5.png","hash":"fa48155cd61b566bbeee8dc8ea03880c157cb995","modified":1606527256000},{"_id":"source/_posts/dl-4Gradient-Descent/cbd5ff8c461fcb5a699c4ec4789687b3.jpg","hash":"88f05e0eabd7ca376768a94fb4198887466334fd","modified":1606527256000},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305135246.jpg","hash":"6e711b745416b3c53fc3e2dbd484086f914bf233","modified":1614923572269},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305135223.jpg","hash":"2982f371e302a24f9ab93273075dc1707f021998","modified":1614923559036},{"_id":"source/_posts/dl-7activation-functions/L1_week3_9.jpg","hash":"7128a43c35553a5d97621976727a5b4331fd244a","modified":1606527256000},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_6.png","hash":"9792f6425f09a1243dba6fcd170238569b36cdef","modified":1606527256000},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305142218.jpg","hash":"d8d078a0da9b7151d494c7e0738d506e817ad081","modified":1614925339940},{"_id":"source/_posts/harmony-start/create2.jpg","hash":"d5bb823248d879976b99877e093670e37158eb45","modified":1600589230488},{"_id":"source/_posts/harmony-start/create.jpg","hash":"3c535c6357fbb0ee4a48875ea094ef78a2cf5d51","modified":1600589147384},{"_id":"source/_posts/dl-4Gradient-Descent/03f5f96177ab15d5ead8298ba50300ac.jpg","hash":"b976618a517f56363e12d963805d7244b34e9df1","modified":1606527256000},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305142539.jpg","hash":"6393dfb49ae1df8d051951abbf8c141b4be92432","modified":1614925540826},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305142550.jpg","hash":"88568d4004f700dce5d950c8b423560ecb332990","modified":1614925552219},{"_id":"source/_posts/spring1/2.png","hash":"5736e072ef906c3072df92c4ee7260ac8a5cefdf","modified":1625206156102},{"_id":"source/_posts/spring1/3.jpg","hash":"20eed7aec59ed7732853409aa403ce14cffc03ca","modified":1625208481976},{"_id":"source/_posts/spring1/1.png","hash":"57f4545ec24f8497f79d52c8e5a868af5ed89c72","modified":1625205753432},{"_id":"source/_posts/dl-8Gradient-descent-for-neural/QQ截图20210307171037.jpg","hash":"36b306deb4d07682148e9fb8cd2b6ae35836c980","modified":1615108244520},{"_id":"source/_posts/spring2-helloworld/3.jpg","hash":"ce52c734540989b945095060ce542c6a7b8a8af7","modified":1625293605906},{"_id":"source/_posts/spring2-helloworld/4.jpg","hash":"abb2779d7d22de9ea75aa2b8d92d1d8a43a83926","modified":1625295255008},{"_id":"source/_posts/test/SomethingJustLikeThis.txt","hash":"8275376ecd8e55ba15baedd2e068e0315694cfaf","modified":1581416769000},{"_id":"source/_posts/test/SomethingJustLikeThis.jpg","hash":"6c73446b699807ee49fd449adb75411882c68917","modified":1581416769000},{"_id":"source/_posts/ziti/moban.jpg","hash":"e88e4a2ccc3163636f13d37c2d8c33e0fe8f34fe","modified":1605409339944},{"_id":"source/_posts/ziti/shengcheng.jpg","hash":"a90bc1c987a11e266f5798a3410442febd261ae3","modified":1605410074532},{"_id":"source/pjt-love-lyt/images/r.gif","hash":"b655697e6d787e1150f77db893754cf844588c71","modified":1625269380000},{"_id":"source/pjt-love-lyt/css/index.css","hash":"76d3f9c25d7a15149171f01b6c045e8316cea342","modified":1609595804492},{"_id":"source/pjt-love-lyt/js/sliderClock.js","hash":"04e5babf47482ce8f520519c6c5ef3dab0f9670c","modified":1609595804601},{"_id":"source/photos/css/style.css","hash":"3f57df7851b71cdf623f8fc69c9ad8fd7f0ca7b5","modified":1653721371656},{"_id":"source/_posts/spring2-helloworld/2.jpg","hash":"edafdb463ef40804d9fa6765c5ba25da0e927784","modified":1625292476721},{"_id":"source/_posts/spring2-helloworld/5.jpg","hash":"2021303b199f7a6c9441fa281c33ba6de244343a","modified":1625295898010},{"_id":"source/_posts/spring2-helloworld/6.jpg","hash":"7f58991db66244613c5f238a5d6cd3d045f80361","modified":1625296428512},{"_id":"source/_posts/spring2-helloworld/7.jpg","hash":"c0c5ec10326a6047b06b9f2e52c5b09c9d437065","modified":1625296713838},{"_id":"source/SV2TTS/demo/LibriTTS/1664-137600-0003.flac","hash":"0131ad0f731b7d5dd578c34abbe240a8c71d11d4","modified":1404816997000},{"_id":"source/SV2TTS/demo/LibriTTS/29-123032-0005.flac","hash":"6f726252dd50e25a82a7445e8f6110e24ee4b173","modified":1404807877000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1647668310849},{"_id":"source/fastspeech2/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1647668310849},{"_id":"source/melgan/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1647668310849},{"_id":"source/vits/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1647668310849},{"_id":"source/melgan/demo/LibriTTS/1664-137600-0003.flac","hash":"0131ad0f731b7d5dd578c34abbe240a8c71d11d4","modified":1404816997000},{"_id":"source/melgan/demo/LibriTTS/29-123032-0005.flac","hash":"6f726252dd50e25a82a7445e8f6110e24ee4b173","modified":1404807877000},{"_id":"source/SV2TTS/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1625715651000},{"_id":"source/fastspeech2/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1625715651000},{"_id":"source/melgan/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1625715651000},{"_id":"source/_posts/Socket-chatroom/发送消息.jpg","hash":"a0fdfb30d82a91a4168a891164d0a4680832f858","modified":1600147584002},{"_id":"source/_posts/Socket-chatroom/客户上线.jpg","hash":"6e65c10b5671f3b282a8281e71029912a4f26023","modified":1600147539208},{"_id":"source/_posts/aws-1register/ami.png","hash":"8c43f0bff4fe74cb38e0733167bc1b2f6c9d49f1","modified":1612848343364},{"_id":"source/_posts/aws-1register/安全组.png","hash":"bbf8f55dd11e2b98436fb918f7dd01451ac3318b","modified":1612848403898},{"_id":"source/_posts/aws-1register/审核.png","hash":"dc0b2a6f63b82eac3536264a0cade0fc8e36f2d7","modified":1612848425213},{"_id":"source/_posts/aws-1register/启动.png","hash":"97522578e57e377ab9105ff5a96c01898f920b01","modified":1612848299084},{"_id":"source/_posts/aws-1register/服务.png","hash":"34b0c25e7bd46c0b32daef30778a73c62a927a20","modified":1612848290698},{"_id":"source/_posts/aws-1register/状态.png","hash":"3262e0f76e3c6098d2c99cc74e5c2219466fed28","modified":1612848491169},{"_id":"source/_posts/aws-1register/详细.png","hash":"450467dfcfb7b86ac0453f3f342f4c879d5e7eb2","modified":1612848369144},{"_id":"source/_posts/aws-3manager/1c.png","hash":"3935c8d03afd8d1b291597ef9d1283981440dd4a","modified":1612853028740},{"_id":"source/_posts/aws-1register/实例.png","hash":"5feee1b63fda3ebbde1537f47f5b48692a8569ef","modified":1612848358597},{"_id":"source/_posts/aws-3manager/1b.png","hash":"4f3e416a4d45850fffe24810ae673067703f14a7","modified":1612853024531},{"_id":"source/_posts/aws-3manager/3c.png","hash":"de43213d69ac3864e2b1dae8668c4337a763d6d5","modified":1612853498445},{"_id":"source/_posts/aws-3manager/3a.png","hash":"e8a1f626e4e2c46b7badad9545237844bca9ca77","modified":1612853481533},{"_id":"source/_posts/aws-3manager/4a.png","hash":"b756925f12b7f55b5dff124efac3c88aded6e104","modified":1612853517643},{"_id":"source/_posts/aws-3manager/3b.png","hash":"f6f95f416e2106b47e35a897800ab35d7dd691cb","modified":1612853492225},{"_id":"source/_posts/aws-3manager/3d.png","hash":"8e1aa219b45b129ea6aef876636f92ac5f1114d5","modified":1612853503969},{"_id":"source/_posts/aws-3manager/4c.png","hash":"86bf3010552c7389782ac585ddec5c73e03be67a","modified":1612853529181},{"_id":"source/_posts/aws-3manager/4b.png","hash":"46a0d011fcd4f8dbeb2eab3333c7aef70b4a9807","modified":1612853523005},{"_id":"source/_posts/aws-3manager/4d.png","hash":"03675a01ee99b02f83cec013cfb515b2c5721f7c","modified":1612853533340},{"_id":"source/_posts/aws-3manager/3e.png","hash":"4b3dba20d4f5e8a23de11f2c39df9b1d52e14617","modified":1612853511434},{"_id":"source/_posts/dl-11Language-model-and-Sample/8b901fc8fcab9e16b1fe26b92f4ec546.png","hash":"7416d6d6a4f5305d2b9b8ed04dfbe8cc5655251c","modified":1606527256000},{"_id":"source/_posts/dl-11Language-model-and-Sample/986226c39270a1e14643e8658fe6c374.png","hash":"86921bf6e45834beec1235f0f619f240d0b50e83","modified":1606527256000},{"_id":"source/_posts/aws-4deepl/5b.png","hash":"744f6e9d0129c23cffcb2db2f86dd6d06fde79a6","modified":1612860117277},{"_id":"source/_posts/aws-4deepl/5a.png","hash":"f09e8d4698fab06e085c92a60806f1d14edaaeba","modified":1612860107770},{"_id":"source/_posts/dl-13speech-recognition/8da3e9cf049139a8e4a78503bd72e7fd.png","hash":"a54a580e5cb9c8c5e0ac802d773f2d085dcf72f6","modified":1606527256000},{"_id":"source/_posts/dl-13speech-recognition/8f409fc3980b0be00dca49bf4fac2659.png","hash":"529ece2177127130768ac8af1ba804be4f4b2d9a","modified":1606527256000},{"_id":"source/_posts/dl-10different-rnn/db580f1dfd6095d672fc62cce74ce5e2.png","hash":"4a5b2b09121b971ec4e71884f3425c075acc4d04","modified":1606527256000},{"_id":"source/_posts/dl-3logistic-regression/1e664a86fa2014d5212bcb88f1c419cf.png","hash":"2e2eebcde2788ecf67e87648db6c5b6a64d8be4f","modified":1606527256000},{"_id":"source/_posts/dl-3logistic-regression/55345ba411053da11ff843bbb3406369.png","hash":"82b094923e1566eb59176685cbfbc250cd642bb2","modified":1606527256000},{"_id":"source/_posts/dl-10different-rnn/14e1df0a7a8cdd1584b2e92e87e23aa7.png","hash":"2c0261d41f4f12778751d5eff1890f66ef582bdc","modified":1606527256000},{"_id":"source/_posts/dl-2Neural-Networks/2b14edfcb21235115fca05879f8d9de2.png","hash":"9aa06bb3a97838131b92b3d954d1ff209e9422aa","modified":1606527256000},{"_id":"source/_posts/dl-3logistic-regression/dfb5731c30b81eced917450d31e860a3.png","hash":"057d298974e49b07a5f568c4bdc148c7e002c6a8","modified":1606527256000},{"_id":"source/_posts/dl-2Neural-Networks/3fe6da26014467243e3d499569be3675.png","hash":"73dcaf37a389637ea182b6073f315afad7961037","modified":1606527256000},{"_id":"source/_posts/dl-2Neural-Networks/7a0e0d40f4ba80a0466f0bd7aa9f8537.png","hash":"b24211746007e02b7cdafe959501144e942c2f8b","modified":1606527256000},{"_id":"source/_posts/dl-2Neural-Networks/QQ截图20210219142516.jpg","hash":"4bd0dc1567965175c44f61bd22d12eb022665ab2","modified":1613715930762},{"_id":"source/_posts/dl-9Sequence-Models-introduce/cb041c33b65e17600842ebf87174c4f2.png","hash":"138a57055c043c828c5336e5755e16a46b3f0e34","modified":1606527256000},{"_id":"source/_posts/dl-9Sequence-Models-introduce/8deca8a84f06466155d2d8d53d26e05d.png","hash":"0a66fcafbebe961ee6f3f1be096952eafa375c6d","modified":1606527256000},{"_id":"source/_posts/harmony-start/hello.jpg","hash":"e37cf0e37467c3e366b92c7bc531874328bd9035","modified":1600592963791},{"_id":"source/_posts/go-1intruduct/go插件.jpg","hash":"ca70d69a35a4ade222b5cc9530212963a50b155a","modified":1600760735884},{"_id":"source/_posts/harmony-start/hvd.jpg","hash":"e7fe5d66a18469f62b18d6b1e5f58d5e562e6524","modified":1600592535644},{"_id":"source/_posts/go-1intruduct/coderunner.jpg","hash":"db34a75995f64ba6ea6ce5c11c6c8980e56301e9","modified":1600760790560},{"_id":"source/_posts/ziti/paizhao.jpg","hash":"1e8fae0afbf886dec783e20a3d800941ff40f206","modified":1605409977531},{"_id":"source/_posts/spring2-helloworld/1.jpg","hash":"17c4fde45929d6c29d0f15feec445faa68a9a57a","modified":1625292342592},{"_id":"source/vits/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1625715651000},{"_id":"source/SV2TTS/demo/LibriTTS/1353-121397-0001.flac","hash":"6d5c83b0652d16d5284ff0e324c43ae912b0623c","modified":1404815776000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1647668307758},{"_id":"source/SV2TTS/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1647668309923},{"_id":"source/SV2TTS/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1647668310460},{"_id":"source/SV2TTS/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1647668309327},{"_id":"source/SV2TTS/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1647668306521},{"_id":"source/SV2TTS/demo/LibriTTS/428-125879-0003.flac","hash":"7c0a682f487ca1fd10cf7cf96f8a1d69fb76794a","modified":1404811131000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1647668308293},{"_id":"source/fastspeech2/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1647668308810},{"_id":"source/fastspeech2/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1647668307758},{"_id":"source/fastspeech2/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1647668309923},{"_id":"source/fastspeech2/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1647668310460},{"_id":"source/fastspeech2/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1647668306521},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1647668309327},{"_id":"source/fastspeech2/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1647668308293},{"_id":"source/fastspeech2/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1647668308810},{"_id":"source/SV2TTS/demo/LJSpeech/LJ011-0202_synthesized.wav","hash":"5a24cd77296624c044d5dccd468d7bb6f3f0c65e","modified":1647669307360},{"_id":"source/SV2TTS/demo/LJSpeech/LJ042-0094_synthesized.wav","hash":"4b294318384352109a261bb8300f437a451040bc","modified":1647669304943},{"_id":"source/fastspeech2/demo/LJSpeech/LJ011-0202_synthesized.wav","hash":"5a24cd77296624c044d5dccd468d7bb6f3f0c65e","modified":1647669307360},{"_id":"source/fastspeech2/demo/LJSpeech/LJ042-0094_synthesized.wav","hash":"4b294318384352109a261bb8300f437a451040bc","modified":1647669304943},{"_id":"source/fastspeech2/demo/baker/43_synthesized.wav","hash":"d4bef5a65697d930b1eeb430ee7cd83531109356","modified":1654518048023},{"_id":"source/fastspeech2/demo/baker/44_synthesized.wav","hash":"d495e562d338e82801076d7e008962cee4d184b5","modified":1654518048490},{"_id":"source/fastspeech2/demo/baker/48_synthesized.wav","hash":"9d3ac0fb0a659efbebeceeb2aabdcfb29d6d0945","modified":1654518050457},{"_id":"source/fastspeech2/demo/baker/45_synthesized.wav","hash":"29520b79ea962832b03caac99683bb1a686792c3","modified":1654518048995},{"_id":"source/fastspeech2/demo/baker/47_synthesized.wav","hash":"bf1c660be0c0842999cee3357a0379f6d829c2fb","modified":1654518050099},{"_id":"source/fastspeech2/demo/baker/49_synthesized.wav","hash":"e56739deaa3e70bca687926006d97da41ce46200","modified":1654518050854},{"_id":"source/fastspeech2/demo/baker/51_synthesized.wav","hash":"2301734fc090ac28e1a49b7cf9bcd9a641d5aa4a","modified":1654518051844},{"_id":"source/melgan/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1647668307758},{"_id":"source/melgan/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1625715651000},{"_id":"source/melgan/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1625715651000},{"_id":"source/melgan/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1647668310460},{"_id":"source/melgan/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1625715651000},{"_id":"source/melgan/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1647668309923},{"_id":"source/melgan/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1647668306521},{"_id":"source/melgan/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1625715651000},{"_id":"source/melgan/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1647668309327},{"_id":"source/melgan/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1625715651000},{"_id":"source/melgan/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1625715651000},{"_id":"source/melgan/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1647668308293},{"_id":"source/melgan/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1647668308810},{"_id":"source/vits/demo/LJSpeech/LJ011-0202_synthesized.wav","hash":"5a24cd77296624c044d5dccd468d7bb6f3f0c65e","modified":1647669307360},{"_id":"source/vits/demo/LJSpeech/LJ042-0094_synthesized.wav","hash":"4b294318384352109a261bb8300f437a451040bc","modified":1647669304943},{"_id":"source/vits/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1647668307758},{"_id":"source/vits/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1647668310460},{"_id":"source/vits/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1625715651000},{"_id":"source/vits/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1625715651000},{"_id":"source/vits/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1647668309923},{"_id":"source/vits/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1625715651000},{"_id":"source/vits/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1647668306521},{"_id":"source/vits/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1647668309327},{"_id":"source/vits/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1625715651000},{"_id":"source/vits/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1625715651000},{"_id":"source/vits/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1647668308293},{"_id":"source/vits/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1647668308810},{"_id":"source/melgan/demo/LibriTTS/1353-121397-0001.flac","hash":"6d5c83b0652d16d5284ff0e324c43ae912b0623c","modified":1404815776000},{"_id":"source/vits/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1625715651000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0148_reconstructed_epoch0610.wav","hash":"487e527b962464ee8de8819be6078094b84fa76b","modified":1648791314345},{"_id":"source/melgan/demo/LJSpeech/LJ013-0148.wav","hash":"0d3998effeb771f2293dd1a8836f5bd6b9316042","modified":1499188104000},{"_id":"source/vits/demo/baker/43_synthesized.wav","hash":"d4bef5a65697d930b1eeb430ee7cd83531109356","modified":1654518048023},{"_id":"source/vits/demo/baker/45_synthesized.wav","hash":"29520b79ea962832b03caac99683bb1a686792c3","modified":1654518048995},{"_id":"source/melgan/demo/LibriTTS/428-125879-0003.flac","hash":"7c0a682f487ca1fd10cf7cf96f8a1d69fb76794a","modified":1404811131000},{"_id":"source/vits/demo/baker/44_synthesized.wav","hash":"d495e562d338e82801076d7e008962cee4d184b5","modified":1654518048490},{"_id":"source/vits/demo/baker/47_synthesized.wav","hash":"bf1c660be0c0842999cee3357a0379f6d829c2fb","modified":1654518050099},{"_id":"source/vits/demo/baker/48_synthesized.wav","hash":"9d3ac0fb0a659efbebeceeb2aabdcfb29d6d0945","modified":1654518050457},{"_id":"source/vits/demo/baker/49_synthesized.wav","hash":"e56739deaa3e70bca687926006d97da41ce46200","modified":1654518050854},{"_id":"source/vits/demo/baker/51_synthesized.wav","hash":"2301734fc090ac28e1a49b7cf9bcd9a641d5aa4a","modified":1654518051844},{"_id":"source/SV2TTS/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1625715651000},{"_id":"source/SV2TTS/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1625715651000},{"_id":"source/fastspeech2/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1625715651000},{"_id":"source/fastspeech2/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1625715651000},{"_id":"source/melgan/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1625715651000},{"_id":"source/melgan/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1625715651000},{"_id":"source/_posts/aws-1register/主页.png","hash":"7660534a31c9d299700cf406f02533decfa7c5b0","modified":1612848281320},{"_id":"source/_posts/aws-2staticweb/确认.png","hash":"435bd9686a095bd30cf29344aeccd9f6f4718eb3","modified":1612851258002},{"_id":"source/_posts/aws-3manager/4e.png","hash":"32aa4eb66a6077ba0a4616cc0fb19328c25cd4c3","modified":1612853539517},{"_id":"source/_posts/aws-4deepl/1f.png","hash":"d5299d2bf370d0b95edd645f16612a03415cac53","modified":1612860055576},{"_id":"source/_posts/aws-4deepl/1d.png","hash":"7a58f382da8fa936538024ac84419908cd8831ea","modified":1612860040215},{"_id":"source/_posts/aws-4deepl/3b.png","hash":"e66e8b9ad56218be671e563ee4ade46bd982b05f","modified":1612860092830},{"_id":"source/_posts/dl-4Gradient-Descent/8b725e51dcffc53a5def49438b70d925.png","hash":"9a0a0371a7b630ed7b0aeffd1751d0ff6deadd46","modified":1606527256000},{"_id":"source/_posts/dl-9Sequence-Models-introduce/71a0ed918704f6d35091d8b6d60793e4.png","hash":"449f48e12e45b7d69d2171cdbc540a7fefd336d2","modified":1606527256000},{"_id":"source/vits/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1625715651000},{"_id":"source/vits/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1625715651000},{"_id":"source/SV2TTS/demo/LibriTTS/1085-156170-0001.flac","hash":"61228b245e69165d2c4817ae71a2db0359b473ac","modified":1404814485000},{"_id":"source/SV2TTS/demo/LibriTTS/218-131206-0003.flac","hash":"5a23113befa93e363c9f9fe9a97fdc3ae4667a72","modified":1404809416000},{"_id":"source/SV2TTS/demo/LibriTTS/1085-156170-0001_synthesized.flac","hash":"c94470aef3b4bd6f12143e74226bcdba713dd1d7","modified":1648457251112},{"_id":"source/SV2TTS/demo/LibriTTS/1664-137600-0003_synthesized.flac","hash":"d7eade7e4c9dd64aab720e3f973ba29e43f24bda","modified":1648457344692},{"_id":"source/SV2TTS/demo/LibriTTS/218-131206-0003_synthesized.flac","hash":"0d0b70387e123f5dcbdd1dddc2cf7e47e11f2b90","modified":1648457101332},{"_id":"source/SV2TTS/demo/LibriTTS/29-123032-0005_synthesized.flac","hash":"2d319cba29eaa1a714998ba8c05f3a84da2fbf59","modified":1648456986454},{"_id":"source/SV2TTS/demo/LibriTTS/319-134959-0006_synthesized.flac","hash":"e74b49a4b535e4003d62ab09e83f830a0c5b03a5","modified":1648457137228},{"_id":"source/SV2TTS/demo/LibriTTS/36-16603-0002.flac","hash":"2fa3157fb7dd97d1ae93f8a36d667f81523068d8","modified":1404807941000},{"_id":"source/SV2TTS/demo/LibriTTS/1492-55449-0000_synthesized.flac","hash":"e47371b86c111c269c342bae1fbd0dbe419ce91c","modified":1648457317719},{"_id":"source/SV2TTS/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB00800003_ground-ada.wav","hash":"85b9bc15ae801e9703e525ba3edf6a516971ff65","modified":1650608686740},{"_id":"source/SV2TTS/demo/AISHELL3/SSB04700028_ground-ada.wav","hash":"63a31ee8691ae5d07cdb1746c4fedcf4ee78ed56","modified":1650607840641},{"_id":"source/SV2TTS/demo/AISHELL3/SSB05900363_ground-ada.wav","hash":"a767569b1019960f4c9ab4f6528b699e1b546cc7","modified":1650607874952},{"_id":"source/SV2TTS/demo/AISHELL3/SSB06290079_ground-ada.wav","hash":"2c80f3724bff770fd7ac46ad05ae45e4a0e94ea8","modified":1650607888349},{"_id":"source/SV2TTS/demo/AISHELL3/SSB07940279_ground-ada.wav","hash":"fcdd83fb7071b32e20a7bad1fd76a2554897e719","modified":1650607904997},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08220199_ground-ada.wav","hash":"be82074f4efb5d9c24d9503c1242618f89e2c4d1","modified":1650607928245},{"_id":"source/SV2TTS/demo/AISHELL3/SSB10200388_ground-ada.wav","hash":"ef1e9ee80f1bfbdc70f024db9307039f14907fa5","modified":1650607961307},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08630110_ground-ada.wav","hash":"8a7fc2e966db01ea645103ccac45e6b2a1a26e5e","modified":1650607943068},{"_id":"source/SV2TTS/demo/AISHELL3/SSB15930399_ground-ada.wav","hash":"422e429920a374ba0968a1d30d2946423ed3fd4f","modified":1650607973563},{"_id":"source/SV2TTS/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1625715651000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB16070080_ground-ada.wav","hash":"9c8fb8d26dda7a06a9c7139fbfee94faeb481e6f","modified":1650607984930},{"_id":"source/fastspeech2/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ011-0202_ground-truth.wav","hash":"525a494707f6e59045081b0cc06631ebd8ec6fc2","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ042-0094_ground-truth.wav","hash":"17a7a79e47373ae8233699dd21f9d3a3e087ba5a","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ011-0202_ground-truth.wav","hash":"525a494707f6e59045081b0cc06631ebd8ec6fc2","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ042-0094_ground-truth.wav","hash":"17a7a79e47373ae8233699dd21f9d3a3e087ba5a","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","hash":"3c79e2361bd887c282abc9759ad08d5ccdca9c74","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","hash":"6c9f4025499aaa023e9aad6d94dcfdcd00b86ac1","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","hash":"39482e1e7957b6a18fae74bc3e07521f59cba545","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","hash":"d5bc9d9b6a321843a3ad67b02ecacb487f92df77","modified":1625715651000},{"_id":"source/fastspeech2/demo/baker/50_synthesized.wav","hash":"34b14b683e97f48537b05424c62ce7f8ba980c63","modified":1654518051393},{"_id":"source/melgan/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1625715651000},{"_id":"source/melgan/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ011-0202_ground-truth.wav","hash":"525a494707f6e59045081b0cc06631ebd8ec6fc2","modified":1625715651000},{"_id":"source/vits/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ042-0094_ground-truth.wav","hash":"17a7a79e47373ae8233699dd21f9d3a3e087ba5a","modified":1625715651000},{"_id":"source/melgan/demo/LibriTTS/1085-156170-0001_synthesized.flac","hash":"c94470aef3b4bd6f12143e74226bcdba713dd1d7","modified":1648457251112},{"_id":"source/vits/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1625715651000},{"_id":"source/melgan/demo/LibriTTS/1085-156170-0001.flac","hash":"61228b245e69165d2c4817ae71a2db0359b473ac","modified":1404814485000},{"_id":"source/melgan/demo/LibriTTS/1492-55449-0000_synthesized.flac","hash":"e47371b86c111c269c342bae1fbd0dbe419ce91c","modified":1648457317719},{"_id":"source/melgan/demo/LibriTTS/218-131206-0003.flac","hash":"5a23113befa93e363c9f9fe9a97fdc3ae4667a72","modified":1404809416000},{"_id":"source/melgan/demo/LibriTTS/218-131206-0003_synthesized.flac","hash":"0d0b70387e123f5dcbdd1dddc2cf7e47e11f2b90","modified":1648457101332},{"_id":"source/melgan/demo/LibriTTS/36-16603-0002.flac","hash":"2fa3157fb7dd97d1ae93f8a36d667f81523068d8","modified":1404807941000},{"_id":"source/melgan/demo/LibriTTS/1664-137600-0003_synthesized.flac","hash":"d7eade7e4c9dd64aab720e3f973ba29e43f24bda","modified":1648457344692},{"_id":"source/melgan/demo/LibriTTS/29-123032-0005_synthesized.flac","hash":"2d319cba29eaa1a714998ba8c05f3a84da2fbf59","modified":1648456986454},{"_id":"source/melgan/demo/LibriTTS/319-134959-0006_synthesized.flac","hash":"e74b49a4b535e4003d62ab09e83f830a0c5b03a5","modified":1648457137228},{"_id":"source/vits/demo/baker/50_synthesized.wav","hash":"34b14b683e97f48537b05424c62ce7f8ba980c63","modified":1654518051393},{"_id":"source/vits/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","hash":"3c79e2361bd887c282abc9759ad08d5ccdca9c74","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","hash":"6c9f4025499aaa023e9aad6d94dcfdcd00b86ac1","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","hash":"d5bc9d9b6a321843a3ad67b02ecacb487f92df77","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","hash":"39482e1e7957b6a18fae74bc3e07521f59cba545","modified":1625715651000},{"_id":"source/SV2TTS/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1647672097476},{"_id":"source/SV2TTS/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1647672021914},{"_id":"source/SV2TTS/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1647672050709},{"_id":"source/SV2TTS/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1647672134404},{"_id":"source/SV2TTS/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1647672125045},{"_id":"source/SV2TTS/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1647672110407},{"_id":"source/fastspeech2/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1647672050709},{"_id":"source/fastspeech2/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1647672134404},{"_id":"source/fastspeech2/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1647672097476},{"_id":"source/fastspeech2/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1647672110407},{"_id":"source/fastspeech2/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1647672021914},{"_id":"source/fastspeech2/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1647672125045},{"_id":"source/melgan/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1647672134404},{"_id":"source/melgan/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1647672110407},{"_id":"source/melgan/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1647672125045},{"_id":"source/melgan/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1647672050709},{"_id":"source/melgan/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1647672021914},{"_id":"source/melgan/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1647672097476},{"_id":"source/_posts/aws-4deepl/1a.png","hash":"423fcf3a2ba6071c11f15760ad491175e4dd8c04","modified":1612860022957},{"_id":"source/_posts/aws-4deepl/1c.png","hash":"e78cfc97b2433ffdefdb26dcd736ff02cb747aca","modified":1612860036447},{"_id":"source/_posts/aws-4deepl/1e.png","hash":"b47a3bffa133b51dde16be8316497c71ce37506d","modified":1612860045646},{"_id":"source/_posts/aws-4deepl/2a.png","hash":"af1f4e172e7717549359e7a9498752cb2d354734","modified":1612860061365},{"_id":"source/_posts/aws-4deepl/3a.png","hash":"f854f0e660f43a069e5dc0308d7d65f7ca631a63","modified":1612860089034},{"_id":"source/_posts/aws-4deepl/2d.png","hash":"15bcaf8c268833fcda409b81e73244f8f4bf43ca","modified":1612860072998},{"_id":"source/_posts/aws-4deepl/2e.png","hash":"29c870c6eb14df21501ed4c2a66b08a741cc2b00","modified":1612860077107},{"_id":"source/_posts/aws-4deepl/2g.png","hash":"a0b760813c7b39feb3b1b2a139b66ef0b84c20ae","modified":1612860085009},{"_id":"source/_posts/aws-4deepl/5c.png","hash":"6828067d3da7ebcfca5914b6d42a80ba8aabdb05","modified":1612860121374},{"_id":"source/vits/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1647672097476},{"_id":"source/vits/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1647672125045},{"_id":"source/vits/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1647672050709},{"_id":"source/vits/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1647672134404},{"_id":"source/vits/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1647672110407},{"_id":"source/vits/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1647672021914},{"_id":"source/SV2TTS/demo/LibriTTS/1353-121397-0001_synthesized.flac","hash":"86ca3ecab88f5813c9df84e8fce706fef3c9f51f","modified":1648457285914},{"_id":"source/SV2TTS/demo/LibriTTS/36-16603-0002_synthesized.flac","hash":"876dc9d401fb1a4bbafe1658cac3b28ac3d4b88b","modified":1648457034314},{"_id":"source/SV2TTS/demo/LibriTTS/428-125879-0003_synthesized.flac","hash":"59ade3702d21e0a9ec810a5be7466eeefe09a0be","modified":1648457178517},{"_id":"source/SV2TTS/demo/LibriTTS/713-291178-0007.flac","hash":"0db34425e53f924cb5277910d338730e94f919c9","modified":1404812753000},{"_id":"source/SV2TTS/demo/LibriTTS/319-134959-0006.flac","hash":"1b13499d1a275e91a16ef7322a8e5cfd274211de","modified":1404810459000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1647668311535},{"_id":"source/SV2TTS/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1625715651000},{"_id":"source/SV2TTS/demo/LibriTTS/713-291178-0007_synthesized.flac","hash":"7d6f86d23f7c9036edca54c8d78c904a890fd163","modified":1648457223795},{"_id":"source/SV2TTS/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1647668307207},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1647668311535},{"_id":"source/fastspeech2/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1647668307207},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0114_synthesized.wav","hash":"8f148ac82bd7f4b46db53433f64612d40f4859a9","modified":1647669307930},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0114_ground-truth.wav","hash":"8150140bb922785713c57aaf3fdc5908eb1d716e","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0161_synthesized.wav","hash":"5e2ac23cd44b0ca5a25d634e240b4e3ea89e7f03","modified":1647669309086},{"_id":"source/SV2TTS/demo/LJSpeech/LJ021-0108_synthesized.wav","hash":"87bf133faf45a887ba51f0c9bbcdf24293f6063d","modified":1647669305522},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0114_ground-truth.wav","hash":"8150140bb922785713c57aaf3fdc5908eb1d716e","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0114_synthesized.wav","hash":"8f148ac82bd7f4b46db53433f64612d40f4859a9","modified":1647669307930},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0161_synthesized.wav","hash":"5e2ac23cd44b0ca5a25d634e240b4e3ea89e7f03","modified":1647669309086},{"_id":"source/fastspeech2/demo/LJSpeech/LJ021-0108_synthesized.wav","hash":"87bf133faf45a887ba51f0c9bbcdf24293f6063d","modified":1647669305522},{"_id":"source/fastspeech2/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","hash":"1e06f1a9c09bc0d1f76e1f181f41b9219d6e7425","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","hash":"86fe0096964b9be5c11f952671fdc8201a9cddd1","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","hash":"978079c8a39d9c52f7e5080cb7327c723365721f","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","hash":"b3295b056d183f877c284e0bc393677107749104","modified":1625715651000},{"_id":"source/fastspeech2/demo/baker/44_ground-truth.wav","hash":"b33b0597dd87373af885accb8c41de17a79842c0","modified":1499395537000},{"_id":"source/fastspeech2/demo/baker/43_ground-truth.wav","hash":"4d91e8d9ddbf3614c461ae8ab4147e9e755950a4","modified":1499395537000},{"_id":"source/fastspeech2/demo/baker/47_ground-truth.wav","hash":"08d2d2967aaa6d59317a48152c7c5e46faeb5ea7","modified":1499395537000},{"_id":"source/fastspeech2/demo/baker/48_ground-truth.wav","hash":"e38e5181f012b0b329c66e52efc39cb6bf09b4b5","modified":1499395536000},{"_id":"source/fastspeech2/demo/baker/49_ground-truth.wav","hash":"81481a488e3666d0b7f7d380805d49bcd374f4c5","modified":1499395535000},{"_id":"source/fastspeech2/demo/baker/46_synthesized.wav","hash":"20e3c633eeea734ec490e16679dff1524e820a18","modified":1654518049632},{"_id":"source/melgan/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1647668311535},{"_id":"source/melgan/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1647668307207},{"_id":"source/melgan/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ006-0114_ground-truth.wav","hash":"8150140bb922785713c57aaf3fdc5908eb1d716e","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ006-0114_synthesized.wav","hash":"8f148ac82bd7f4b46db53433f64612d40f4859a9","modified":1647669307930},{"_id":"source/vits/demo/LJSpeech/LJ006-0161_synthesized.wav","hash":"5e2ac23cd44b0ca5a25d634e240b4e3ea89e7f03","modified":1647669309086},{"_id":"source/vits/demo/LJSpeech/LJ021-0108_synthesized.wav","hash":"87bf133faf45a887ba51f0c9bbcdf24293f6063d","modified":1647669305522},{"_id":"source/vits/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1625715651000},{"_id":"source/vits/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1647668307207},{"_id":"source/vits/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1647668311535},{"_id":"source/melgan/demo/LibriTTS/1353-121397-0001_synthesized.flac","hash":"86ca3ecab88f5813c9df84e8fce706fef3c9f51f","modified":1648457285914},{"_id":"source/melgan/demo/LibriTTS/36-16603-0002_synthesized.flac","hash":"876dc9d401fb1a4bbafe1658cac3b28ac3d4b88b","modified":1648457034314},{"_id":"source/melgan/demo/LibriTTS/713-291178-0007.flac","hash":"0db34425e53f924cb5277910d338730e94f919c9","modified":1404812753000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0142_reconstructed_epoch0610.wav","hash":"3bf779251e88605efb187b66cdfccb5a6081ea4d","modified":1648791313967},{"_id":"source/melgan/demo/LibriTTS/319-134959-0006.flac","hash":"1b13499d1a275e91a16ef7322a8e5cfd274211de","modified":1404810459000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0142.wav","hash":"7ca784102171b54cfdcc82e6243eedba51ea2a94","modified":1499188104000},{"_id":"source/melgan/demo/LibriTTS/428-125879-0003_synthesized.flac","hash":"59ade3702d21e0a9ec810a5be7466eeefe09a0be","modified":1648457178517},{"_id":"source/melgan/demo/LibriTTS/713-291178-0007_synthesized.flac","hash":"7d6f86d23f7c9036edca54c8d78c904a890fd163","modified":1648457223795},{"_id":"source/melgan/demo/LJSpeech/LJ013-0146.wav","hash":"43528535701f88291461e45ca938e0274ac78918","modified":1499188104000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0146_reconstructed_epoch0610.wav","hash":"80dbfa272375a21a25129203f45ef3e2ea8f4eab","modified":1648791314248},{"_id":"source/vits/demo/baker/43_ground-truth.wav","hash":"4d91e8d9ddbf3614c461ae8ab4147e9e755950a4","modified":1499395537000},{"_id":"source/vits/demo/baker/44_ground-truth.wav","hash":"b33b0597dd87373af885accb8c41de17a79842c0","modified":1499395537000},{"_id":"source/vits/demo/baker/48_ground-truth.wav","hash":"e38e5181f012b0b329c66e52efc39cb6bf09b4b5","modified":1499395536000},{"_id":"source/vits/demo/baker/46_synthesized.wav","hash":"20e3c633eeea734ec490e16679dff1524e820a18","modified":1654518049632},{"_id":"source/vits/demo/baker/49_ground-truth.wav","hash":"81481a488e3666d0b7f7d380805d49bcd374f4c5","modified":1499395535000},{"_id":"source/vits/demo/baker/47_ground-truth.wav","hash":"08d2d2967aaa6d59317a48152c7c5e46faeb5ea7","modified":1499395537000},{"_id":"source/vits/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","hash":"86fe0096964b9be5c11f952671fdc8201a9cddd1","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","hash":"1e06f1a9c09bc0d1f76e1f181f41b9219d6e7425","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","hash":"b3295b056d183f877c284e0bc393677107749104","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","hash":"978079c8a39d9c52f7e5080cb7327c723365721f","modified":1625715651000},{"_id":"source/_posts/aws-4deepl/2b.png","hash":"b63800ea521f66ba972e40a001e2baac3335c9d1","modified":1612860065605},{"_id":"source/_posts/aws-4deepl/2c.png","hash":"151b4190babe9437684e32ba069f0a8a52eedd36","modified":1612860068623},{"_id":"source/_posts/aws-4deepl/6a.png","hash":"b0dd29d4bced57b43358cce3ec2355883b420aa7","modified":1612860126700},{"_id":"source/_posts/aws-4deepl/2f.png","hash":"42cfef47ca55b3054b6adce5dd4911e64da38804","modified":1612860081027},{"_id":"source/_posts/aws-4deepl/6c.png","hash":"f4da49596bca99d4d70ab285a4fd88ff3a3c7614","modified":1612860137603},{"_id":"source/SV2TTS/demo/LibriTTS/1492-55449-0000.flac","hash":"bf45f6c134b75b89662ba72f14d12b9105bc550b","modified":1404816333000},{"_id":"source/SV2TTS/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ009-0038_ground-truth.wav","hash":"0ba8d0c181a5db0fd5b1915286d5d2460f030ef1","modified":1625715651000},{"_id":"source/fastspeech2/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ009-0038_synthesized.wav","hash":"6a47a5c560cf6be80f2f9fe5acd442296453286a","modified":1647669308530},{"_id":"source/SV2TTS/demo/LJSpeech/LJ021-0108_ground-truth.wav","hash":"af6aba97363ce5d2984f5df6e2abc672948c82ac","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ006-0161_ground-truth.wav","hash":"127ef88ee9a18f1ed07d917a893e5ffa5e3bf2cb","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ050-0158_synthesized.wav","hash":"0913201c39fc7fffa96a46da2246d102431edce6","modified":1647669310719},{"_id":"source/fastspeech2/demo/LJSpeech/LJ009-0038_ground-truth.wav","hash":"0ba8d0c181a5db0fd5b1915286d5d2460f030ef1","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ009-0038_synthesized.wav","hash":"6a47a5c560cf6be80f2f9fe5acd442296453286a","modified":1647669308530},{"_id":"source/fastspeech2/demo/LJSpeech/LJ006-0161_ground-truth.wav","hash":"127ef88ee9a18f1ed07d917a893e5ffa5e3bf2cb","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ021-0108_ground-truth.wav","hash":"af6aba97363ce5d2984f5df6e2abc672948c82ac","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ050-0158_synthesized.wav","hash":"0913201c39fc7fffa96a46da2246d102431edce6","modified":1647669310719},{"_id":"source/fastspeech2/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","hash":"4891fce32d998ab480a0deb1adf36202fa4d05f8","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","hash":"191a0abe653e998df5d1f5c40f49777e1acc965a","modified":1625715651000},{"_id":"source/fastspeech2/demo/baker/42_synthesized.wav","hash":"5229eeb9593c56835229428a0fff90d4aeecc6ce","modified":1654507441786},{"_id":"source/fastspeech2/demo/baker/51_ground-truth.wav","hash":"b56582827e1a98430a104d2c4328f8a26ecb469a","modified":1499395537000},{"_id":"source/melgan/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ009-0038_ground-truth.wav","hash":"0ba8d0c181a5db0fd5b1915286d5d2460f030ef1","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ006-0161_ground-truth.wav","hash":"127ef88ee9a18f1ed07d917a893e5ffa5e3bf2cb","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ021-0108_ground-truth.wav","hash":"af6aba97363ce5d2984f5df6e2abc672948c82ac","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ009-0038_synthesized.wav","hash":"6a47a5c560cf6be80f2f9fe5acd442296453286a","modified":1647669308530},{"_id":"source/vits/demo/LJSpeech/LJ011-0202_synthesized_vits.wav","hash":"5e58e8804089d97bc77418ddc01dd549575ad47b","modified":1660206173185},{"_id":"source/vits/demo/LJSpeech/LJ042-0094_synthesized_vits.wav","hash":"21be127ad7a3f391ce00ead839fb874be4201d6a","modified":1660206168020},{"_id":"source/vits/demo/LJSpeech/LJ050-0158_synthesized.wav","hash":"0913201c39fc7fffa96a46da2246d102431edce6","modified":1647669310719},{"_id":"source/vits/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1625715651000},{"_id":"source/melgan/demo/LibriTTS/1492-55449-0000.flac","hash":"bf45f6c134b75b89662ba72f14d12b9105bc550b","modified":1404816333000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0150_reconstructed_epoch0610.wav","hash":"ed6694e2e4fad8c42a2f8959a41cd5f4f5be5850","modified":1648791314479},{"_id":"source/melgan/demo/LJSpeech/LJ013-0150.wav","hash":"3f8eb72d6e7517db75c32cb3c78193ec2ab40269","modified":1499188104000},{"_id":"source/vits/demo/baker/42_synthesized.wav","hash":"5229eeb9593c56835229428a0fff90d4aeecc6ce","modified":1654507441786},{"_id":"source/vits/demo/baker/51_ground-truth.wav","hash":"b56582827e1a98430a104d2c4328f8a26ecb469a","modified":1499395537000},{"_id":"source/vits/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","hash":"191a0abe653e998df5d1f5c40f49777e1acc965a","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","hash":"4891fce32d998ab480a0deb1adf36202fa4d05f8","modified":1625715651000},{"_id":"source/SV2TTS/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1625715651000},{"_id":"source/fastspeech2/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1625715651000},{"_id":"source/melgan/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1625715651000},{"_id":"source/_posts/aws-4deepl/1b.png","hash":"02a7694c5b27d10f03845c62349647fc7a3412a7","modified":1612860028994},{"_id":"source/_posts/aws-4deepl/6b.png","hash":"0a9769010d19684cabfed03b611aefe0bdf1b0d4","modified":1612860132496},{"_id":"source/vits/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ001-0012_ground-truth.wav","hash":"8dae7b8b97519dbaebf2ae690b08333dba90fe11","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ001-0012_synthesized.wav","hash":"b53b2193f1d06e24fa8ae05d3b08d6d14a3ac484","modified":1647669306927},{"_id":"source/SV2TTS/demo/LJSpeech/LJ030-0031_synthesized.wav","hash":"1dc09c81da54376b2c10ed234a2e800da1f2e799","modified":1647669306226},{"_id":"source/SV2TTS/demo/LJSpeech/LJ050-0158_ground-truth.wav","hash":"4a30663dc767584a93debf9267ab73d1e92e9f33","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ001-0012_ground-truth.wav","hash":"8dae7b8b97519dbaebf2ae690b08333dba90fe11","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ001-0012_synthesized.wav","hash":"b53b2193f1d06e24fa8ae05d3b08d6d14a3ac484","modified":1647669306927},{"_id":"source/fastspeech2/demo/LJSpeech/LJ030-0031_synthesized.wav","hash":"1dc09c81da54376b2c10ed234a2e800da1f2e799","modified":1647669306226},{"_id":"source/fastspeech2/demo/LJSpeech/LJ050-0158_ground-truth.wav","hash":"4a30663dc767584a93debf9267ab73d1e92e9f33","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","hash":"4e02805cbe81f5c98922bbd1636ecebfef7c5cd8","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","hash":"e0126f1c0b368acc1e9f42047176b3ab1eeea98a","modified":1625715651000},{"_id":"source/fastspeech2/demo/baker/45_ground-truth.wav","hash":"a50433804ef063eb102b09a8f76b59743fea4b00","modified":1499395537000},{"_id":"source/vits/demo/LJSpeech/LJ001-0012_ground-truth.wav","hash":"8dae7b8b97519dbaebf2ae690b08333dba90fe11","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ001-0012_synthesized.wav","hash":"b53b2193f1d06e24fa8ae05d3b08d6d14a3ac484","modified":1647669306927},{"_id":"source/fastspeech2/demo/baker/50_ground-truth.wav","hash":"b1ed0a9252c6724c6b48f62454363d12213d01bf","modified":1499395536000},{"_id":"source/vits/demo/LJSpeech/LJ030-0031_synthesized.wav","hash":"1dc09c81da54376b2c10ed234a2e800da1f2e799","modified":1647669306226},{"_id":"source/vits/demo/LJSpeech/LJ050-0158_ground-truth.wav","hash":"4a30663dc767584a93debf9267ab73d1e92e9f33","modified":1625715651000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0143_reconstructed_epoch0610.wav","hash":"3d39cf510b9a15010a09d1527d3a17cdead2596b","modified":1648791314051},{"_id":"source/melgan/demo/LJSpeech/LJ013-0144.wav","hash":"6e698235f39cf80b1ca9fb33a1c61e85e5ea759b","modified":1499188104000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0144_reconstructed_epoch0610.wav","hash":"2d3485fa03eae688c63ddc46d5374f5717d44bb3","modified":1648791314122},{"_id":"source/melgan/demo/LJSpeech/LJ013-0143.wav","hash":"5fe2bd1da2f804e16df0a3d451b0d06fad230aee","modified":1499188104000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0145_reconstructed_epoch0610.wav","hash":"5e68b20214aa9dedf8802e8a7fd71a05ee7fc836","modified":1648791314204},{"_id":"source/melgan/demo/LJSpeech/LJ013-0145.wav","hash":"3f9a10d6e776898997b2b4a56c15fcf21d1e59b5","modified":1499188104000},{"_id":"source/vits/demo/baker/45_ground-truth.wav","hash":"a50433804ef063eb102b09a8f76b59743fea4b00","modified":1499395537000},{"_id":"source/vits/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","hash":"e0126f1c0b368acc1e9f42047176b3ab1eeea98a","modified":1625715651000},{"_id":"source/vits/demo/baker/50_ground-truth.wav","hash":"b1ed0a9252c6724c6b48f62454363d12213d01bf","modified":1499395536000},{"_id":"source/vits/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","hash":"4e02805cbe81f5c98922bbd1636ecebfef7c5cd8","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ027-0127_ground-truth.wav","hash":"8a15b2662ffef9d8af016c0d0a656a94aa7f09aa","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ030-0031_ground-truth.wav","hash":"07ae81660692ac9bab3ea653ed5971e07bfe8205","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ027-0127_ground-truth.wav","hash":"8a15b2662ffef9d8af016c0d0a656a94aa7f09aa","modified":1625715651000},{"_id":"source/fastspeech2/demo/LJSpeech/LJ030-0031_ground-truth.wav","hash":"07ae81660692ac9bab3ea653ed5971e07bfe8205","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","hash":"432763a08da7c8d9bc14e02be16e89cd1e50985a","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","hash":"d9f9dcac203eaa49e827a36dd221e32c2f18fc49","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","hash":"dbab9c5583bddcdf808f5a5048b19ecb428b70e7","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","hash":"38881c01b31cebd24a1baa6ef7c4703e5bed1ea7","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","hash":"daa91b1a7705b6b8994b3e342d7efff37bae5326","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ027-0127_ground-truth.wav","hash":"8a15b2662ffef9d8af016c0d0a656a94aa7f09aa","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ030-0031_ground-truth.wav","hash":"07ae81660692ac9bab3ea653ed5971e07bfe8205","modified":1625715651000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0147.wav","hash":"a3f3aa228a9fdf7ef6d7f5c0d853688e35f64595","modified":1499188104000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0147_reconstructed_epoch0610.wav","hash":"4a162a5b8ae8d6ed507c2cca1d4ed8a10eefe598","modified":1648791314321},{"_id":"source/melgan/demo/LJSpeech/LJ013-0149_reconstructed_epoch0610.wav","hash":"4481b90441bf0b3adec75ec56d0628d769e4df67","modified":1648791314423},{"_id":"source/melgan/demo/LJSpeech/LJ013-0149.wav","hash":"1060625a926b19b8e0b2b9eb3ef8f8cbb97df440","modified":1499188104000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0151.wav","hash":"9f04a1fbc0579e4ae1b6ad8c26bd9b75081112e0","modified":1499188104000},{"_id":"source/melgan/demo/LJSpeech/LJ013-0151_reconstructed_epoch0610.wav","hash":"31de1f27a46ae85abb17a969e0aac31daf39a57a","modified":1648791314562},{"_id":"source/vits/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","hash":"432763a08da7c8d9bc14e02be16e89cd1e50985a","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","hash":"d9f9dcac203eaa49e827a36dd221e32c2f18fc49","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","hash":"38881c01b31cebd24a1baa6ef7c4703e5bed1ea7","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","hash":"dbab9c5583bddcdf808f5a5048b19ecb428b70e7","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","hash":"daa91b1a7705b6b8994b3e342d7efff37bae5326","modified":1625715651000},{"_id":"source/SV2TTS/demo/LJSpeech/LJ027-0127_synthesized.wav","hash":"35bac3ba1d99b296f7b45b7d6ca9634b68f72103","modified":1647669309950},{"_id":"source/fastspeech2/demo/LJSpeech/LJ027-0127_synthesized.wav","hash":"35bac3ba1d99b296f7b45b7d6ca9634b68f72103","modified":1647669309950},{"_id":"source/fastspeech2/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","hash":"7f3b6513c938c4a68412367a174f6fd2b46fa443","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","hash":"dc7fb6fa0725d578d4ff9d1bc6d75544c4585b0c","modified":1625715651000},{"_id":"source/vits/demo/LJSpeech/LJ006-0114_synthesized_vits.wav","hash":"2ff62231900a8c6caa431f55b1a0a94d4440cd9c","modified":1660206174329},{"_id":"source/vits/demo/LJSpeech/LJ006-0161_synthesized_vits.wav","hash":"b2a1f2bad6f378e2a5906b79f844890f5d334bdf","modified":1660206176601},{"_id":"source/vits/demo/LJSpeech/LJ027-0127_synthesized.wav","hash":"35bac3ba1d99b296f7b45b7d6ca9634b68f72103","modified":1647669309950},{"_id":"source/vits/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","hash":"7f3b6513c938c4a68412367a174f6fd2b46fa443","modified":1625715651000},{"_id":"source/vits/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","hash":"dc7fb6fa0725d578d4ff9d1bc6d75544c4585b0c","modified":1625715651000},{"_id":"source/fastspeech2/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","hash":"af49cb2a67bc5ff3116dc958a60d5e274837c5b6","modified":1625715651000},{"_id":"source/fastspeech2/demo/baker/46_ground-truth.wav","hash":"dae42c50d02770dde3e37e78736b7a344ec9620c","modified":1495002811000},{"_id":"source/vits/demo/LJSpeech/LJ009-0038_synthesized_vits.wav","hash":"95207c023aed7d108dc09569f19b4ce34db98c4f","modified":1660206175473},{"_id":"source/vits/demo/LJSpeech/LJ021-0108_synthesized_vits.wav","hash":"fcec47f4517d423d3d41c77a0a268307ed7aa517","modified":1660206169334},{"_id":"source/vits/demo/baker/46_ground-truth.wav","hash":"dae42c50d02770dde3e37e78736b7a344ec9620c","modified":1495002811000},{"_id":"source/vits/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","hash":"af49cb2a67bc5ff3116dc958a60d5e274837c5b6","modified":1625715651000},{"_id":"source/SV2TTS/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1625715651000},{"_id":"source/fastspeech2/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1625715651000},{"_id":"source/melgan/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1625715651000},{"_id":"source/vits/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1625715651000},{"_id":"source/fastspeech2/demo/baker/42_ground-truth.wav","hash":"7d423126bdea65cdedc3b0a40ba3d66d74e03026","modified":1499395538000},{"_id":"source/vits/demo/baker/42_ground-truth.wav","hash":"7d423126bdea65cdedc3b0a40ba3d66d74e03026","modified":1499395538000},{"_id":"source/vits/demo/LJSpeech/LJ050-0158_synthesized_vits.wav","hash":"f381cf2073c3d68c5877ce10ad8ea6970b918d02","modified":1660206179150},{"_id":"source/vits/demo/LJSpeech/LJ001-0012_synthesized_vits.wav","hash":"28ac4c1f24f9a4e23a9db8bd0008c04bd2dd76b0","modified":1660206172229},{"_id":"source/vits/demo/LJSpeech/LJ030-0031_synthesized_vits.wav","hash":"c95b24ee2a293c6cd2a2485e5edd4a1386115e9b","modified":1660206170530},{"_id":"source/vits/demo/LJSpeech/LJ027-0127_synthesized_vits.wav","hash":"3cb8a89c46969358a37cd7a64f46dc5ff3c614ab","modified":1660206177957},{"_id":"themes/next/languages/default.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1602073849905},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1600322443278},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1600322443287},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1600322443287},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1600322443277},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1600322443277},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1600322443351},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1600322443287},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1600322443288},{"_id":"themes/next/_config.yml","hash":"34f16e83792af7919a79794b0670bda82c7e42c8","modified":1653716643619},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1600322443290},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1600322443303},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1600322443288},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1600322443279},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1600322443284},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1600322443283},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1600322443284},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1600322443279},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1600322443283},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1600322443284},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1600322443282},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1600322443285},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1600322443286},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1600322443291},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1600322443293},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1600322443291},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1600322443286},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1600322443294},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1600322443293},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1600322443291},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1600322443295},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1600322443303},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1600322443305},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1600322443304},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1600322443305},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1600322443306},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1600322443294},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1600322443295},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1600322443307},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1600322443308},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1600322443309},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1600322443310},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1600322443309},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1600322443311},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1600322443310},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1600322443311},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1600322443308},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1600322443307},{"_id":"themes/next/languages/tr.yml","hash":"46e09f2119cbfbcf93fb8dbd267dccabeb8b0cda","modified":1600322443311},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1600322443313},{"_id":"themes/next/layout/_layout.swig","hash":"2fcfdb8851f225b8b600375e76a19e277bc309ef","modified":1604562598154},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1600322443312},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1600322443313},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1600322443314},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1600322443312},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1600322443362},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1600322443350},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1600322443351},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1600322443350},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1600322443349},{"_id":"themes/next/scripts/related_post.js","hash":"d02ef02d3e73c6472cf9b05837c85e9d989265be","modified":1601031487491},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1600322443351},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1600322443349},{"_id":"themes/next/source/result.json","hash":"340a4c5b9f4bacf00f0f69cb673e1f928f018991","modified":1615674054000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1600322443280},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1600322443281},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1600322443281},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1600322443282},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1600322443296},{"_id":"themes/next/source/resource.json","hash":"e79af6ead1b1e07ff8c46d589450e871c9e5b920","modified":1615674054000},{"_id":"themes/next/source/404.html","hash":"6075cf3942c02aa84e4ffcbf3845e1b8175e76f9","modified":1615703628179},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1600322443296},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1600322443298},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1600322443299},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1600322443297},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1600322443300},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1600322443298},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1600322443300},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1600322443323},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1600322443299},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1600322443322},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1600322443302},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1600322443329},{"_id":"themes/next/layout/_partials/footer.swig","hash":"f36dbf7753922467ce8027e1076f174aa2722bcd","modified":1604114910726},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1600322443328},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1600322443302},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1600322443329},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1600322443301},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1600322443317},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1600322443332},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1600322443330},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1600322443341},{"_id":"themes/next/layout/_macro/post.swig","hash":"285b11b93644333a2137936d02c8c4eb4ace26fd","modified":1612857134552},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1600322443333},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1612856571445},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1600322443358},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1600322443358},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1600322443301},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1600322443359},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"401b980d4558abd3d295c39a7dd0e3d2b80cecb8","modified":1600418265478},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1600322443352},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1600322443363},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1600322443359},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1600322443361},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1600322443360},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1600322443364},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1600322443364},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1600322443362},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1600322443361},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1600322443361},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1600322443364},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1600322443366},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1600322443365},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1600322443366},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1600322443365},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1600322443365},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1600322443343},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"d261de11c8011d531095dd2447a0d91b5ddc6f2c","modified":1600932868938},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1600322443365},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1600322443343},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1600322443402},{"_id":"themes/next/source/css/style.css","hash":"779b74199e8e0a47dcf2d4784f4bb42312d7e0b6","modified":1615674054000},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1600322443367},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1600322443417},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1600322443418},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1600322443419},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1600322443418},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1600322443420},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1600322443419},{"_id":"themes/next/source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1604114991427},{"_id":"themes/next/source/images/circle.ico","hash":"e58f4dc0976d518283142ab338da87f9261c5aa9","modified":1600352860918},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1600322443421},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1600322443422},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1600322443423},{"_id":"themes/next/source/images/circle2.ico","hash":"b7fb9744773cf42f8051bee7db972f28e49355d6","modified":1600433297498},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1600322443421},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1600322443424},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1600322443424},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1600322443422},{"_id":"themes/next/source/images/dribbble.svg","hash":"509d75732c3b33736816814e79e09390ca55a315","modified":1615674054000},{"_id":"themes/next/source/images/linkedin.svg","hash":"24069fcb31a97944bc0b276b99a897bc9628aab3","modified":1615674054000},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1600322443425},{"_id":"themes/next/source/images/logo_white.svg","hash":"e8cbecc3bc7a398ebb7f3abad65cab131a4b6749","modified":1615674054000},{"_id":"themes/next/source/images/link.svg","hash":"86d76a342f0334ffa6fec20a9009ffb3f66152b8","modified":1615674054000},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1600322443426},{"_id":"themes/next/source/images/favicon1.jpg","hash":"b089393bfdcf779762a8778fdec3c6c0910f32aa","modified":1600350883816},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1600322443427},{"_id":"themes/next/source/js/motion.js","hash":"cd4a79d34e7e1866bee9d0483012bf7551e2e379","modified":1604559527831},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1600322443432},{"_id":"themes/next/source/images/favicon2.jpg","hash":"26b2a9554374ccb5b22089a22c883889b8a69f30","modified":1600350898298},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1600322443427},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1600322443429},{"_id":"themes/next/source/images/wechat_channel.jpg","hash":"9682630470ad20ef61bde5dc0ba197dbf71eb838","modified":1600349541068},{"_id":"themes/next/source/js/script.js","hash":"60ec181c616ace4511bd60ff3df4cb8e66a3ec00","modified":1615674054000},{"_id":"themes/next/source/js/parallax.min.js","hash":"0a7ac970f67b7fa08738a5be55233e9e741ad267","modified":1615674054000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1600322443318},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1600322443319},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1600322443318},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1600322443320},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1600322443431},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"a7b44385e16834088e735e0f00b3de1c7d01d9c6","modified":1600692013972},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1600322443321},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1600322443324},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1600322443324},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1600322443326},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1600322443325},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1600322443326},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1600694004839},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1600322443321},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1600322443327},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1600322443323},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1600322443322},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1600322443331},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1600322443325},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1600322443330},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1600322443331},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1600322443328},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1600322443332},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1600322443335},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1600322443334},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1600322443336},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1600322443329},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1600322443335},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1600322443340},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1600322443338},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1600322443341},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1600322443339},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1600322443342},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1600322443339},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1600322443337},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1600322443346},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1600322443353},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1600322443340},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1600322443345},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1600322443337},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1600322443353},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1600322443347},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1600322443355},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1600322443344},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1600322443354},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1600322443355},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1600322443340},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1600322443346},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1600322443347},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1600322443357},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1600322443356},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1600322443355},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1600322443344},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1600322443358},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1600322443345},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1600322443356},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1600322443357},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1600322443342},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1600322443415},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1600322443415},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1600322443348},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1600322443348},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1600322443414},{"_id":"themes/next/source/lib/bookmark/.eslintignore","hash":"bbd18f176a313f38aafbce58b55ad002563a689b","modified":1533362235951},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1600322443416},{"_id":"themes/next/source/lib/Han/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1532526868000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ff772d0570f97696c3b4e15f18e15b3633688733","modified":1625644046899},{"_id":"themes/next/source/lib/bookmark/.gitignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1533362235958},{"_id":"themes/next/source/lib/bookmark/.eslintrc.js","hash":"21e561d7708a2c4884ba0d03f148ce46253b08ad","modified":1533362235955},{"_id":"themes/next/source/lib/Han/README.md","hash":"990d5f1127a0c147902f5f5dfe7b9b60f5a10470","modified":1532526868000},{"_id":"themes/next/source/lib/bookmark/README.md","hash":"aef0ed533378c45cadb548e4b26b375e2501fe07","modified":1533362235966},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1600333270813},{"_id":"themes/next/source/lib/bookmark/package.json","hash":"e3eedf4ba6fa086743553176f9526e1bf0b44439","modified":1533362235982},{"_id":"themes/next/source/lib/canvas-nest/README.md","hash":"6964aecdc62466e6b529f6887558669925a36bc6","modified":1600333270815},{"_id":"themes/next/source/lib/bookmark/bookmark.min.js","hash":"9e525329553335c2484f6faf9e933a6bbee9ab6d","modified":1533362235974},{"_id":"themes/next/source/lib/bookmark/LICENSE","hash":"c3036598ab8f45797460e48880c9e859268d574a","modified":1533362235962},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1600335100716},{"_id":"themes/next/source/lib/bookmark/index.js","hash":"1364ef511550daf991177d151a5fabc6539fced4","modified":1533362235978},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"185146380afac348efae42b5017e149bbe6c2236","modified":1604559846142},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"2e7c767dcbac5f2370c4c4fea6ed2b005d55daa8","modified":1604559846144},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"62ff1ba692f3153d0288c514c42c6c92cc17e9b6","modified":1600335100717},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1562899403800},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","hash":"da243fc43315d5953438dab71eb59dc3961c33e3","modified":1600335100717},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1531386931794},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1562899403800},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1527640136000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1531386931800},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1531386931811},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"9f18b8b9a35b301805387f18cafd982404a3c1f9","modified":1531386931805},{"_id":"themes/next/source/lib/fancybox/LICENSE","hash":"7713a1753ce88f2c7e6b054ecc8e4c786df76300","modified":1562899403808},{"_id":"themes/next/source/lib/fancybox/README.md","hash":"c2f6c17aa80484af0481857aa7de0490238b15bc","modified":1562899403812},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1527640136000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1527640136000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1527640136000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1531386990647},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1527640136000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1531386990637},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1531386990657},{"_id":"themes/next/source/lib/jquery_lazyload/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1531386990638},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"4d80ae239b597668665451a9515fba20543ac673","modified":1531386990643},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1528350982000},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1532434490917},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1531386990652},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1532434490925},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"6be9f79e831f7b145424cc65f6b61128ac990af4","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/README.md","hash":"b9c3545046609fc6310458cf6c5d004ee2c69c4e","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"052408d21d5b29401bd2d7883d5ec4b2e6dd1b23","modified":1528350982000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1532434490929},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1532434490938},{"_id":"themes/next/source/lib/pace/README.md","hash":"ddcd2834d847f37b8ee77858bd03d31f70f55fb7","modified":1532434490920},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1532434490934},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1532434490942},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1532434490924},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1532434490977},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1532434490946},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1532434490978},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1532434490969},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1532434490982},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1532434490978},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1532434490973},{"_id":"themes/next/source/lib/pangu/LICENSE","hash":"0b609305c50cdc3f1ef5ec9e7d2e174f7f99a183","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/README.md","hash":"727e7a3d9467a2738aa1428668b1fe68bc45a6a2","modified":1532526842000},{"_id":"themes/next/source/lib/pdf/LICENSE","hash":"78d636bebe5b99f30e0e0676ef71805ebf00c9b9","modified":1554266992114},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1532434490986},{"_id":"themes/next/source/lib/quicklink/LICENSE","hash":"78d636bebe5b99f30e0e0676ef71805ebf00c9b9","modified":1553167434316},{"_id":"themes/next/source/lib/pdf/README.md","hash":"aa5cfb155242db63ac6931f9ff2061847f9f5a7b","modified":1554266992114},{"_id":"themes/next/source/lib/reading_progress/.gitignore","hash":"09cde1060b4213a7eee528b54560777d2d3756e8","modified":1547875481982},{"_id":"themes/next/source/lib/quicklink/README.md","hash":"350a184f2d44ef0dd7e4dcece0b7cb1d16e15187","modified":1553167434321},{"_id":"themes/next/source/lib/reading_progress/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1547875481983},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","hash":"98af8d99819882904f9b1a9254bebf40602e1843","modified":1547875481989},{"_id":"themes/next/source/lib/reading_progress/package.json","hash":"193693c3d0de991041175777543650def85be391","modified":1547875481986},{"_id":"themes/next/source/lib/reading_progress/.editorconfig","hash":"b1fd3a1cdad8120ed818833be00ea9b9cab2845a","modified":1547875481979},{"_id":"themes/next/source/lib/reading_progress/README.md","hash":"892aa722541608d334f009f8236babde866c2a9d","modified":1547875481985},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","hash":"afe7024841712455762d9993f92c63582dd44969","modified":1547875481987},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1600322443438},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1600322443430},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1600322443438},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1600322443368},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1600322443369},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1600322443430},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1600322443378},{"_id":"themes/next/source/js/src/fireworks.js","hash":"dca51d22fd74f11503169d6f90796fadcceca22e","modified":1600351010530},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1527640136000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1600322443368},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1600322443393},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1600322443385},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1600322443386},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"51a27ddf9fb1553901e5fd5eefd7554be796c4f8","modified":1637392770603},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1600322443392},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1600322443396},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1600322443397},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1600322443398},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1600322443402},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1600322443407},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"9cf65498db7abeae0999df36c16a55b918ae7e96","modified":1604568571265},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1600322443407},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1600322443408},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1600322443410},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1600322443409},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1600322443404},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1600322443407},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1600322443405},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1600322443406},{"_id":"themes/next/source/lib/Han/.git/FETCH_HEAD","hash":"1c1ed6647cb77a9b5f67428ae3b24d170a79da88","modified":1532526924000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1600322443405},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1600322443406},{"_id":"themes/next/source/lib/Han/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1532526862000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1600322443404},{"_id":"themes/next/source/lib/Han/.git/ORIG_HEAD","hash":"ee343043f53b3ea48b689ba9c558932a01928d24","modified":1532526924000},{"_id":"themes/next/source/lib/Han/.git/index","hash":"b24178f9fdf3c8e5db5f1bd901a5658111de95d4","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/config","hash":"bdc479aba5357f8dfc01db46cea9abcf2743fdd7","modified":1532526868000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1600322443411},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"d7ab15f2d3bfb8daa85b09b6846ab09b748fa919","modified":1604552832669},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1600322443413},{"_id":"themes/next/source/lib/Han/.git/packed-refs","hash":"6e2c4e71af7f142cc38f974c70328b7b85a30e91","modified":1532526868000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"1ad241b738d03b7208ae68aa2195c6c44e470ac0","modified":1600407811205},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1600322443413},{"_id":"themes/next/source/lib/bookmark/.git/FETCH_HEAD","hash":"72513bca92a1dbfdc186a8a2c5715dab8f02538a","modified":1541741631053},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1600322443411},{"_id":"themes/next/source/lib/bookmark/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1533362235920},{"_id":"themes/next/source/lib/bookmark/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1533362225955},{"_id":"themes/next/source/lib/bookmark/.git/config","hash":"372e915f4fb40d0662b65f33af12eb031385d511","modified":1533362235929},{"_id":"themes/next/source/lib/canvas-nest/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1600333270786},{"_id":"themes/next/source/lib/bookmark/.git/index","hash":"408d5f08be4c4c322200a04ddbb265d13067ff9d","modified":1533362235983},{"_id":"themes/next/source/lib/bookmark/.git/ORIG_HEAD","hash":"0d74c802af2ae1718308cb07fda4520f5dc7f8d0","modified":1541741631101},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1532526868000},{"_id":"themes/next/source/lib/canvas-nest/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1600333266125},{"_id":"themes/next/source/lib/canvas-nest/.git/ORIG_HEAD","hash":"5442226ab36d787824e89f50241336839b376133","modified":1528101838000},{"_id":"themes/next/source/lib/bookmark/.git/packed-refs","hash":"887c94abd6c6687c55ee33a37d1463c5604c109f","modified":1533362235908},{"_id":"themes/next/source/lib/canvas-nest/.git/config","hash":"38a5217786c605dd5378be8b7ac62fd93a7c8404","modified":1600333270796},{"_id":"themes/next/source/lib/canvas-ribbon/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1600335100689},{"_id":"themes/next/source/lib/canvas-nest/.git/index","hash":"aa6ac82669ce511c5164ad1a1c8f83a7af7a79ca","modified":1600333270817},{"_id":"themes/next/source/lib/canvas-ribbon/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1600335096772},{"_id":"themes/next/source/lib/canvas-nest/.git/FETCH_HEAD","hash":"a46b350c3f3b2123e3f31e6a8e75a42407ac47ac","modified":1600439964998},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1532526868000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1532526868000},{"_id":"themes/next/source/lib/canvas-ribbon/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1600335100715},{"_id":"themes/next/source/lib/canvas-nest/.git/packed-refs","hash":"80eecf0c5c7f21b2678dc1c329f74de19b6a3a67","modified":1600333270778},{"_id":"themes/next/source/lib/canvas-ribbon/.git/config","hash":"76d8a191a49998a609a323fca8a2ea792b7089a6","modified":1600335100698},{"_id":"themes/next/source/lib/canvas-nest/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1600333270812},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1562899403820},{"_id":"themes/next/source/lib/canvas-ribbon/.git/packed-refs","hash":"1a669ea6243f62a7f4c02d82225d6a49fdadb567","modified":1600335100677},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1562899403824},{"_id":"themes/next/source/lib/fancybox/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1562899403804},{"_id":"themes/next/source/lib/canvas-ribbon/.git/index","hash":"3319170ca360f6d492caf03a5e4eb03d487b5fbd","modified":1600335100718},{"_id":"themes/next/source/lib/fancybox/.git/ORIG_HEAD","hash":"f63734176317eb550193d45487674b538b52c681","modified":1562899468045},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1562899403816},{"_id":"themes/next/source/lib/fancybox/.git/FETCH_HEAD","hash":"d0ae3519903d717fac37b3ed33f661f60ac9c384","modified":1562899467937},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1562899403836},{"_id":"themes/next/source/lib/fancybox/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1562899403763},{"_id":"themes/next/source/lib/fancybox/.git/config","hash":"4fc79da46367ae41549841689ce379dd86237762","modified":1562899403772},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1562899403831},{"_id":"themes/next/source/lib/fancybox/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1562899399824},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1562899403864},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1562899403827},{"_id":"themes/next/source/lib/fancybox/.git/packed-refs","hash":"6471fa7ece0ac08f41871ca0b9a16d6083fe3b2e","modified":1562899403756},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1562899403868},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1600322443434},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1531386931817},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1531386931824},{"_id":"themes/next/source/lib/fancybox/.git/index","hash":"04e5be6ae93bf483ef74e64f6bfab0b30a16d004","modified":1562899403873},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1527640136000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1527640136000},{"_id":"themes/next/source/lib/fastclick/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1531386931741},{"_id":"themes/next/source/lib/fastclick/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1531386920721},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1562899403872},{"_id":"themes/next/source/lib/fastclick/.git/FETCH_HEAD","hash":"2db22334db4e13962246ddbedb0faf86323e4beb","modified":1533031382351},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1527640136000},{"_id":"themes/next/source/lib/fastclick/.git/ORIG_HEAD","hash":"f3112ca048dc1b13166ee07ff877ef05c4d65c81","modified":1533031382419},{"_id":"themes/next/source/lib/fastclick/.git/packed-refs","hash":"3fc39e985e9f6593f545758c828d9e0c2f1e4f02","modified":1531386931727},{"_id":"themes/next/source/lib/fastclick/.git/config","hash":"64d5e323b8ede11d4006f3c28fadf9d0a2987c1c","modified":1531386931761},{"_id":"themes/next/source/lib/jquery_lazyload/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1550414222271},{"_id":"themes/next/source/lib/fastclick/.git/index","hash":"6c983231af1e4eb748b1d8e8b6f38857a78b80b9","modified":1531386931825},{"_id":"themes/next/source/lib/jquery_lazyload/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1531386990608},{"_id":"themes/next/source/lib/jquery_lazyload/.git/FETCH_HEAD","hash":"1eadcccf1fe2cd478e64be453a3aeb2db0cf54e2","modified":1553432795682},{"_id":"themes/next/source/lib/jquery_lazyload/.git/config","hash":"bb73009838c528b7e04764bc8db9d37aed4c7ec4","modified":1531386990617},{"_id":"themes/next/source/lib/jquery_lazyload/.git/ORIG_HEAD","hash":"ffca309262e3481ddc8a642c00d96ba47da8dca4","modified":1553432795736},{"_id":"themes/next/source/lib/jquery_lazyload/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1531386982394},{"_id":"themes/next/source/lib/needsharebutton/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1528350982000},{"_id":"themes/next/source/lib/jquery_lazyload/.git/index","hash":"cea413cb017dc82d07b811edac7f177671068cfd","modified":1550414222272},{"_id":"themes/next/source/lib/needsharebutton/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1528350976000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1600322443436},{"_id":"themes/next/source/lib/needsharebutton/.git/FETCH_HEAD","hash":"82f98dd9dc137954797dcf2b99f872504114888b","modified":1528351800000},{"_id":"themes/next/source/lib/jquery_lazyload/.git/packed-refs","hash":"8969ad5f03b6da5b2cdc8b3e8be0deddf92ee1fd","modified":1531386990601},{"_id":"themes/next/source/lib/needsharebutton/.git/ORIG_HEAD","hash":"2ee6de806b25b0f8bdc70c5c5051a3bc6d243f30","modified":1528351800000},{"_id":"themes/next/source/lib/needsharebutton/.git/config","hash":"c7e2f14ced37eecc754f659676d4e821c67cdc27","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/index","hash":"e26b10c0e54d3ca1355049fa74e30a5715844d7b","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/packed-refs","hash":"2c1e04e9b87cfe38fe96fec625e86d0f207c6ee0","modified":1528350982000},{"_id":"themes/next/source/lib/pace/.git/FETCH_HEAD","hash":"d350dc1cca4f078d2a254e8cdf38d432150ed01c","modified":1532434570245},{"_id":"themes/next/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1532434490881},{"_id":"themes/next/source/lib/pace/.git/ORIG_HEAD","hash":"3190f62cf3c4f9eccb1e54c8f7289ed7e6955767","modified":1532434570281},{"_id":"themes/next/source/lib/pangu/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1532526842000},{"_id":"themes/next/source/lib/pace/.git/packed-refs","hash":"2423e57d7b82d584aa814481ceeff0055b991cda","modified":1532434490868},{"_id":"themes/next/source/lib/pangu/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/FETCH_HEAD","hash":"3eed5db65b03d2eb8763c5ea546a1092d875e7ac","modified":1532526934000},{"_id":"themes/next/source/lib/pangu/.git/ORIG_HEAD","hash":"20ecc53983248064b3342e28a181958762f8306b","modified":1532526936000},{"_id":"themes/next/source/lib/pace/.git/config","hash":"fadcc75e42b86ee74d05ce56b08984ec6b034e5e","modified":1532434490894},{"_id":"themes/next/source/lib/pangu/.git/config","hash":"6ce775e9ebccd0c197cbd9ca5c1d584b0c477ae0","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/.git/index","hash":"680a81f27bfeaef6dbd4697084b026bf73bd8bf4","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/.git/packed-refs","hash":"53b18dbcc9940bac320a19779536f55b17810585","modified":1532526842000},{"_id":"themes/next/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1532434470418},{"_id":"themes/next/source/lib/pdf/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1554266992114},{"_id":"themes/next/source/lib/pace/.git/index","hash":"4eb031ae264d5be31dba6e72abe743f6b2d88804","modified":1532434490987},{"_id":"themes/next/source/lib/pangu/dist/pangu.js.map","hash":"6a7c5927e3410ed4dfe14caa9fb2eb115d85e5e7","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/dist/pangu.js","hash":"0804dc1b42abd7d405bd8f80af69a1a142a3e99a","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/dist/pangu.min.js.map","hash":"1aa0d935665a2f075bbc4b5f0a53bbfaece12c5b","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/dist/pangu.min.js","hash":"da7cf96f57cee01041851ff273bda880d06ad061","modified":1532526842000},{"_id":"themes/next/source/lib/pdf/web/debugger.js","hash":"5d177e1496aa6779aafe2283eb639afe5064258a","modified":1554266992317},{"_id":"themes/next/source/lib/pdf/web/viewer.css","hash":"ccb0f557bd071c7e46c7cf62f2ed4ab3155de8aa","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/viewer.html","hash":"c3ed2b3e5779e8cb6e2afb8afcf0d9a5d2187000","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1554266992052},{"_id":"themes/next/source/lib/quicklink/dist/quicklink.umd.js","hash":"ddf1d9ed678876d9930501c43156ce0af5625d90","modified":1553167434325},{"_id":"themes/next/source/lib/quicklink/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1553167434261},{"_id":"themes/next/source/lib/pdf/.git/FETCH_HEAD","hash":"fd5d94aa12bebe1f9ae065ee980b148fcbf2e560","modified":1566394855000},{"_id":"themes/next/source/lib/pdf/.git/ORIG_HEAD","hash":"c8bc5ea367768dda94fb652b220688067f600e8a","modified":1566394855031},{"_id":"themes/next/source/lib/pdf/.git/config","hash":"759947dbd775db61b81fcb29da63f86b3f31d953","modified":1554266992083},{"_id":"themes/next/source/lib/pdf/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1554266976712},{"_id":"themes/next/source/lib/pdf/.git/packed-refs","hash":"b16a8376fe3d3beec028ba9b7e6b8737c04e9b12","modified":1554266992037},{"_id":"themes/next/source/lib/reading_progress/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1547875481981},{"_id":"themes/next/source/lib/pdf/.git/index","hash":"f3378253997882a4fa824879d7f2b1581590a01d","modified":1554266992739},{"_id":"themes/next/source/lib/reading_progress/.git/FETCH_HEAD","hash":"32c2d2969e95f3452e4cf358271d2b5dc9359e47","modified":1547875531207},{"_id":"themes/next/source/lib/reading_progress/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1547875481955},{"_id":"themes/next/source/lib/reading_progress/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1547875476895},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1527640136000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1527640136000},{"_id":"themes/next/source/lib/quicklink/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553167434211},{"_id":"themes/next/source/lib/reading_progress/.git/ORIG_HEAD","hash":"103d4086937309c9b59bdfec926a6aaaa0212d73","modified":1547875531320},{"_id":"themes/next/source/lib/quicklink/.git/FETCH_HEAD","hash":"47d484d32fb73b972a8f5f4251c31dab8421851b","modified":1553179579863},{"_id":"themes/next/source/lib/reading_progress/.git/config","hash":"dafc19913534d0710c8219015fe8fcf6f54966f7","modified":1547875481966},{"_id":"themes/next/source/lib/reading_progress/.git/packed-refs","hash":"10212df729c9d59f85bb38085f29650865007800","modified":1547875481949},{"_id":"themes/next/source/lib/quicklink/.git/ORIG_HEAD","hash":"abf63b88cb301601e13373372744778305d27a0b","modified":1553179579921},{"_id":"themes/next/source/lib/quicklink/.git/index","hash":"b788494386f767ba2f51e914e7bf0b48dee7c0fd","modified":1553167434326},{"_id":"themes/next/source/lib/quicklink/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553167430534},{"_id":"themes/next/source/lib/quicklink/.git/config","hash":"95b51ac27e15180065250aea6d804e85f8a110a4","modified":1553167434230},{"_id":"themes/next/source/lib/quicklink/.git/packed-refs","hash":"647213edad9693b7d85f507eebcd5ec13459c9dc","modified":1553167434199},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4ea2fb1ad4b75a8f8b62ab291d992d67a142bb57","modified":1600506329076},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"c2c584a4447deea8cda04841713ae608675209c1","modified":1600410598116},{"_id":"themes/next/source/lib/reading_progress/.git/index","hash":"848c7b3d0dbac023f1080ea3d0c82fe87eb2b96e","modified":1547875481989},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1600322443370},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1600322443378},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1600322443371},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1600322443379},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1600322443369},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1600322443379},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1600322443380},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"548e5d676c2aeda323094d2c889853ba2e55bca8","modified":1604564761980},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"a64ed854dd63626cf5f0cfd2becb9f6f941c161c","modified":1600420274707},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1600322443373},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1600322443373},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1600322443375},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1600322443375},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1600322443376},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1600322443374},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"0e561a8cf633b62225a9fb8c2c270311bd68921b","modified":1600416804131},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"d0f8021f628b6be355964a8fe55ea68868643674","modified":1606045183193},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1600322443376},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1600322443377},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0e829c1fc3f99dcbd608e68684fbe7f5664967eb","modified":1612856248410},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1600322443374},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1600322443382},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1600322443383},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1600322443385},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1600322443387},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1600322443382},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1600322443388},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1600322443383},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"e1996489e9e87ffcd9d11cd438d3b61fa7f9b1e3","modified":1613711834692},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1600322443388},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1600322443385},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1600322443387},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1600322443389},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1600322443391},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1600322443391},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1600322443390},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1600322443390},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1600322443389},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1600322443384},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1600322443394},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"5fdc355c3e540d7d296cb5541d292ed2722e7ac8","modified":1613810859020},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1600322443394},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"fb4ade7869d0ba16f70b097b97c7faab1735d378","modified":1600951280362},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1600322443398},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1600322443399},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1600322443401},{"_id":"themes/next/source/lib/Han/.git/logs/HEAD","hash":"af19fcc78f3fc430fae442933080a73b07a2e2e0","modified":1532526868000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1600322443400},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1600322443399},{"_id":"themes/next/source/lib/Han/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1532526862000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1600322443401},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1532526862000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1532526868000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1532526862000},{"_id":"themes/next/source/lib/Han/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1532526862000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1600322443400},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1532526862000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1532526862000},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1532526862000},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1532526862000},{"_id":"themes/next/source/lib/bookmark/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1533362226009},{"_id":"themes/next/source/lib/bookmark/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1533362225965},{"_id":"themes/next/source/lib/Han/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1532526862000},{"_id":"themes/next/source/lib/Han/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1532526862000},{"_id":"themes/next/source/lib/Han/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1532526862000},{"_id":"themes/next/source/lib/bookmark/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1533362225972},{"_id":"themes/next/source/lib/bookmark/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1533362225974},{"_id":"themes/next/source/lib/bookmark/.git/logs/HEAD","hash":"b5a93581ce9da4e8ad73cd606b9742a6e578f50f","modified":1533362235923},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1533362225984},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1533362225987},{"_id":"themes/next/source/lib/bookmark/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1533362226000},{"_id":"themes/next/source/lib/canvas-nest/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1600333266134},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1533362225982},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1533362225988},{"_id":"themes/next/source/lib/Han/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1532526862000},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1533362225995},{"_id":"themes/next/source/lib/bookmark/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1533362225980},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1600333266128},{"_id":"themes/next/source/lib/bookmark/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1533362226003},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1600333266126},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/HEAD","hash":"315e230ba992a1e136c414d8b49ba514659d2faf","modified":1600333270791},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1600333266125},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1600333266132},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1600333266128},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1600333266130},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1600333266128},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1600335096773},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1600333266131},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1600333266131},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1600335096776},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1600335096776},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1600335096774},{"_id":"themes/next/source/lib/canvas-ribbon/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1600335096782},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1600333266127},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1600335096775},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1600335096778},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/update.sample","hash":"92e81cca38312414b140f52b9de0655ee232f65f","modified":1600333266133},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1600335096780},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1600335096777},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/update.sample","hash":"92e81cca38312414b140f52b9de0655ee232f65f","modified":1600335096781},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1600335096779},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/HEAD","hash":"a3022b14cbf112b95b079bb862f5b5a358144b7a","modified":1600335100694},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1600333266132},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1600335096780},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1562899403839},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1600335096779},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1562899403844},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1562899403848},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1562899403856},{"_id":"themes/next/source/lib/fancybox/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1562899399832},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1562899399840},{"_id":"themes/next/source/lib/fancybox/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1562899399866},{"_id":"themes/next/source/lib/fancybox/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1562899399836},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1562899399844},{"_id":"themes/next/source/lib/fancybox/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1562899399828},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1562899403853},{"_id":"themes/next/source/lib/fancybox/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1562899399837},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1562899399846},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1562899399851},{"_id":"themes/next/source/lib/fastclick/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1531386920740},{"_id":"themes/next/source/lib/fancybox/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1562899399863},{"_id":"themes/next/source/lib/fastclick/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1531386920724},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1562899399854},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1531386920729},{"_id":"themes/next/source/lib/fastclick/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1531386920728},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1562899403860},{"_id":"themes/next/source/lib/fastclick/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1531386920725},{"_id":"themes/next/source/lib/fastclick/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1531386920727},{"_id":"themes/next/source/lib/fancybox/.git/logs/HEAD","hash":"6b8bcef44226e7456dc11d8a4158707171b79eb0","modified":1562899403766},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1531386920733},{"_id":"themes/next/source/lib/fancybox/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1562899399858},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1531386920735},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1531386982395},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1531386920731},{"_id":"themes/next/source/lib/fastclick/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1531386920738},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1531386982396},{"_id":"themes/next/source/lib/fastclick/.git/logs/HEAD","hash":"cc27c5e33c35393e2eb924c46542dc1db0458a1f","modified":1531386931747},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1531386982400},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1531386982396},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1531386982399},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1531386920732},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1531386982401},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1531386982402},{"_id":"themes/next/source/lib/fastclick/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1531386920739},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1531386982402},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1531386982401},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1528350976000},{"_id":"themes/next/source/lib/jquery_lazyload/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1531386982403},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1531386982397},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1528350976000},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1528350976000},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1531386982397},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1528350976000},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/HEAD","hash":"c2d3ba85b25b7ec2b80dac9a388b5d17ef918e8f","modified":1550414222275},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1528350976000},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1528350976000},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1528350976000},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1528350976000},{"_id":"themes/next/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1532434470458},{"_id":"themes/next/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1532434470431},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1528350976000},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/HEAD","hash":"639b2edf30e677eb02991934ddd596ca0a192cb3","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1528350976000},{"_id":"themes/next/source/lib/pace/.git/logs/HEAD","hash":"d8af30ffeaf7f8527bb5d12e73e77be167957a74","modified":1532434490886},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1528350976000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1532434470438},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1528350976000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1532434470453},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1532434470441},{"_id":"themes/next/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1532434470434},{"_id":"themes/next/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1532434470455},{"_id":"themes/next/source/lib/pace/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1532434470436},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1532434470442},{"_id":"themes/next/source/lib/pangu/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1532526826000},{"_id":"themes/next/source/lib/pace/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1532434470456},{"_id":"themes/next/source/lib/pangu/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1532526826000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1532434470444},{"_id":"themes/next/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1532434470437},{"_id":"themes/next/source/lib/pangu/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/logs/HEAD","hash":"462a1cbcfed32927c79dae8926cbbe53bf513579","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1532526826000},{"_id":"themes/next/source/lib/pangu/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1532526826000},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1554266992161},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1554266992177},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1554266992192},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1554266992208},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1554266992224},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/LICENSE","hash":"2d059656eb6c8025b5bf5b7857d8524828756e28","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1554266992239},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1554266992255},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1554266992271},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1554266992286},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1554266992317},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1554266992317},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/images/annotation-check.svg","hash":"a1b31f660c5c5026f509e5e694e8bef764eccc0d","modified":1554266992317},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/images/annotation-insert.svg","hash":"7e4af0d1c5f8800b1fc4c3aa22c5c1b99e6a6fe5","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/annotation-comment.svg","hash":"253477ce1054bd8dc5219509247126dc89420bf0","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1554266992302},{"_id":"themes/next/source/lib/pdf/web/images/annotation-newparagraph.svg","hash":"00eb381b8814d901b6b0af059a76425f27bae19e","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/annotation-noicon.svg","hash":"ef01850e55a94ae6a199a4ec00fef988a0944f24","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/annotation-help.svg","hash":"bef79ecf26f70bf1ee3ba78a5ff6e84159cd98d1","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/annotation-key.svg","hash":"4a9f396ca0d5efb81e30117148358ff0d042c8a2","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1554266992349},{"_id":"themes/next/source/lib/pdf/web/images/annotation-paragraph.svg","hash":"1fb9a62c3eb3d329e7c50075655d7f97bf4047ff","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1554266992364},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1554266992349},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1554266992349},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1554266992349},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1554266992349},{"_id":"themes/next/source/lib/pdf/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1554266992364},{"_id":"themes/next/source/lib/pdf/web/images/annotation-note.svg","hash":"04b41bd486cc1bd5f636526dbcc58301ebdcbb5b","modified":1554266992333},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage.png","hash":"453a575f2676ba39eacc71c074420d6c97c87a42","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties.png","hash":"6f1e0ce52dae6af31bb3c5b09bbb33a33849fd08","modified":1554266992364},{"_id":"themes/next/source/lib/pdf/web/images/loading-small.png","hash":"c1abf9b89af7392824f2228312785a899df224a0","modified":1554266992364},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage.png","hash":"6819bdd3000af84c50df1b10b55b3af33944a261","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool@2x.png","hash":"eb8a16519da1e074f9ed07e8a350a6b0d52e5339","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1554266992364},{"_id":"themes/next/source/lib/pdf/web/images/loading-small@2x.png","hash":"171aeb1a90c2836c639438fa85c64cd9d94b3516","modified":1554266992364},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool.png","hash":"8db06773a09e2f407bdf7ce448777398b40fd313","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1554266992364},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage@2x.png","hash":"fd24d7a57e2a1205a67a11a760eb6dd50748da26","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw.png","hash":"548451d8a12570d66bce4c8922d8ccffb63ca61a","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal.png","hash":"67ec12c5bfe0d933f62e1bdfb2154db263e24712","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw@2x.png","hash":"84f034b57d24f7371d1a605bd12afa1f71b50f1b","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw.png","hash":"252e8a4adaf406c4e9c78033d8d8163333ce4c1c","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage@2x.png","hash":"2fb45311e8ee9658cc4276f1202ada9a55df774d","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties@2x.png","hash":"bd55401797e24ae5066afb9677dca1463e74c839","modified":1554266992380},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical.png","hash":"3509cb4c7f355106103aa663fdcfbba6143f1d96","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal@2x.png","hash":"0f23b007fe6be937bc1072737e60cf10e4b8c7e1","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical@2x.png","hash":"a80753f432677766ba1cfbf3677bb9498998efd7","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool.png","hash":"f62d271d5403f35e372b2cdf4c892aac7d364665","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped@2x.png","hash":"8b0ebf82e3f20a7e6cd93ef80b4ac932a02512c5","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw@2x.png","hash":"f37e80bc600112fa88251e53e953f14946967e19","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped.png","hash":"4409af25572feb6ac02d9f0ddcbd5ea689b3dd05","modified":1554266992396},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone.png","hash":"a6648371ee01d687db409f5198f30dafaba76b6b","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven.png","hash":"d27a628de5e1a4ce508c39fcb496b50f3d2d0fa0","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/shadow.png","hash":"02b6adc1ca6ad8f57605ee92943b65c6250d73ba","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd.png","hash":"ff70929f97f54c2722e890a38070f749cefd12ee","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven@2x.png","hash":"616b232b0f166467d0c37315709508953fb79358","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone@2x.png","hash":"5833ee8fa2394db83739ddbb5f9f0f3f0d39709d","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download.png","hash":"b25abd4a3c95097a338b8b138476e22189cb235e","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd@2x.png","hash":"07f1a8754f63dbb8d480e0923328c9fc0336fd2c","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark@2x.png","hash":"f822c6228ea6f9ad2ee5465ace31c725cf3289c3","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark.png","hash":"0193cebc494facb8ba8733a1a8f50457e7189f56","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool@2x.png","hash":"9a10930334b9a42429c967b77f8c7e705e31cdaa","modified":1554266992411},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows.png","hash":"acbbc7071a0641a10e1d50991d1abbfa26b5dce9","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/texture.png","hash":"230a3d5e2dfacfa7228f58a559de5df3734118f5","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl@2x.png","hash":"445833e5eebdcc99270b879d0079bb54310f1615","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download@2x.png","hash":"6c2ddead63c9a9ac3371bd7b8b8b914e2f81d605","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile.png","hash":"6b17acd1c4ea6a9d9859819456952eff133f3cc1","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl.png","hash":"641a0e2d711ec06176c046d8efcdff670da876ef","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows@2x.png","hash":"fdb29640d1f7ee31b09550163f85e01a70cebd13","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl.png","hash":"0529bff456111ea1a264771afdcb2daebe68f79a","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown@2x.png","hash":"2b817130c3724f8a864845b03a142bd7e1cb61e9","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown.png","hash":"6e10286da3a52e0bba782d0fc4a7c33d10c8f4b9","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl@2x.png","hash":"1507890ff466f28f78ab7bd9f6eebfe2e4eeee8a","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp.png","hash":"b1eae4614fb964b6d0483f114f3dd2b49ec1b64a","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode@2x.png","hash":"c2d54d6f77f831963132555599e7314d4f07b49a","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp@2x.png","hash":"9960af5e2ff7dfe8aba862d77305f409f5f1405c","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile@2x.png","hash":"ae13be299d7c18dde70d975d0e229d3e20137afd","modified":1554266992427},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode.png","hash":"3d206e303f9663dca95482df9abe55a08851c574","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","hash":"990118984a946a8c63d95fd1a8d8af848383118b","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print.png","hash":"77463c425966b8a298a2d87863533e68092676bc","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search.png","hash":"14c3ef60d3979df9e8d13cf39cad10ed043f5578","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print@2x.png","hash":"7577a46df5fcc89846737010a14878bffa85098e","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search@2x.png","hash":"25c50114436d8d598416a5c3eed9e1db282c43b3","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","hash":"51055db76ce1e9935fa3d91aaece874c6da14147","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle.png","hash":"6cedbeddac0d6191afe09cabed7b6d517f7c7b21","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl.png","hash":"422b5ed725be51f60e6339da94e0c959ad67990b","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle@2x.png","hash":"6f1dca07696408ce28da5621ebcac57d0b2031a5","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle.png","hash":"ff7ef30371233abe8c548c2f3d5cbb335183ca92","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle@2x.png","hash":"04c42cddc1e2bdd5130c6fa477ff3fa594edda56","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments.png","hash":"53c5a0c4c40f5f47fb6d2f57a82a4a6d0a83feb0","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl@2x.png","hash":"29eade71266a6c4b1048eeacb1c29411435bdb41","modified":1554266992442},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline.png","hash":"ec7aa605c063faf6a951c2d64a8d98933b60f6a4","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail@2x.png","hash":"ececa7ff064700efde72fa1e3889c8a1a3073dbc","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl@2x.png","hash":"6684f9d7964446ec66a8f3865445892187d16d21","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl.png","hash":"e6214527b9354eb920cbec85e6fe4e1296b7ae15","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline@2x.png","hash":"76be930d871fbd1ebd6c4d76c4fa325f32efc624","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn.png","hash":"838adbe15d84daceec25cfd4d8d6ac1580b4f693","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail.png","hash":"f62aad7c7719300f1d8e922155f451661d41d42d","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn@2x.png","hash":"5403ddbeed138cc733020c352ae3bcd8cac03bf7","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments@2x.png","hash":"eb96df312c7ff6fc0451795bc0de8ebadb72cf86","modified":1554266992458},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl.png","hash":"7c2ff883f666ac379b04d0d41e3e6ddb14ddf220","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded.png","hash":"b0b4bca3d9bd0949da19a56214143db18f2a4f69","modified":1554266992489},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed.png","hash":"4588ca9c86db15c10de4de3f340111d4ce211ebd","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut.png","hash":"63a719d5e6a708a22014f20abc0722cd54ffb0f6","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl@2x.png","hash":"0465b8f9e77135e2bddd5708d425d5e1fc4ab63c","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed@2x.png","hash":"3229d96b4fa4d7e5c26fc135264d134e1024baab","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1554266976728},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut@2x.png","hash":"4006d4387f2b0a0f0856d691a8874f74f61d0f51","modified":1554266992474},{"_id":"themes/next/source/lib/pdf/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1554266976728},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded@2x.png","hash":"bf924ff993236e563dab83b41193bcb43120c0b6","modified":1554266992489},{"_id":"themes/next/source/lib/pdf/web/locale/locale.properties","hash":"60394d8e9645d7509526d69c26a77bc4e09e4a3e","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1554266976743},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1554266976743},{"_id":"themes/next/source/lib/pdf/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1554266976728},{"_id":"themes/next/source/lib/pdf/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1554266976728},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1554266976758},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1554266976743},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1547875476896},{"_id":"themes/next/source/lib/pdf/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1554266976758},{"_id":"themes/next/source/lib/pdf/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1554266976758},{"_id":"themes/next/source/lib/pdf/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1554266976758},{"_id":"themes/next/source/lib/pdf/.git/logs/HEAD","hash":"16ff4ba1bb67559767440d9ad85003324851d20a","modified":1554266992068},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1554266976758},{"_id":"themes/next/source/lib/reading_progress/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1547875476905},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1547875476898},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1547875476897},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1547875476897},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1547875476898},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1547875476901},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1547875476903},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1547875476902},{"_id":"themes/next/source/lib/quicklink/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553167430558},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1547875476903},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1547875476902},{"_id":"themes/next/source/lib/quicklink/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553167430569},{"_id":"themes/next/source/lib/quicklink/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553167430562},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1547875476904},{"_id":"themes/next/source/lib/quicklink/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1553167430564},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553167430575},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553167430583},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553167430594},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1553167430590},{"_id":"themes/next/source/lib/quicklink/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553167430604},{"_id":"themes/next/source/lib/reading_progress/.git/logs/HEAD","hash":"20e68acf1aa8af0ecbb9e43025cd789025305f30","modified":1547875481962},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1553167430577},{"_id":"themes/next/source/lib/Han/.git/refs/heads/master","hash":"ee343043f53b3ea48b689ba9c558932a01928d24","modified":1532526868000},{"_id":"themes/next/source/lib/quicklink/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553167430602},{"_id":"themes/next/source/lib/quicklink/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1553167430596},{"_id":"themes/next/source/lib/quicklink/.git/logs/HEAD","hash":"aaacbd213e9711afcf2308446410de7e29143744","modified":1553167434219},{"_id":"themes/next/source/lib/Han/.git/objects/14/222c5cf0874b3d006fcab6244c9e34c13cae11","hash":"32841604a28018f255ed74be25a3fed374729561","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/1b/2d9ec86c12358ba35f7db597cccb93c4977154","hash":"7e90faafec65ae60455922b819ad373460c708c4","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/01/1e06c7aa90464f2b1d40aae05cf9d69e7667f1","hash":"e9888d4243b096c91da6cd30a348734b88c652e4","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/1b/d905fca417b7dc6e1091fbf5dcb99a8e3f44a3","hash":"f904eb01291a0c87f34747183435918e4696a960","modified":1532526864000},{"_id":"themes/next/source/lib/Han/.git/objects/47/b5af07d4d3fd429c6f4b405ff9acd5f4ee7975","hash":"0e69266d563abb092c5b40035331345f771021c2","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/1a/dff38de35c5dcd90b1c9abb363d60cedc677c3","hash":"e3bb99642f5f820b6e41c5a2dbeaa5a5e7629cf9","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/5f/7d3c8d8a6340f1efccc4b3eac842788c1628ec","hash":"af2accb69f344e9cfc870ca7dbe8d25c9e103318","modified":1532526864000},{"_id":"themes/next/source/lib/Han/.git/objects/02/c49afbd642c373142ce96b321820b2e31136dc","hash":"1e84c7eb747dd99355ec99a190aca59f10f38a61","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/4b/5f7d0162b051571cc9d87ba674ef913a7c5a29","hash":"8738e2f3453a3192d07fb0267d9f9194b910bee7","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/2c/e2f46ca183a46f1b06517b1a2a8f96bcaab1b8","hash":"e9a8ddf8b0af2f52063c05075df107b7aacc0d91","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/57/3ad3f32f0689138c4d6f7007621e0cf2bf23ea","hash":"fdb2d9e977cbbd0b44059cf61d5baad92f9df016","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/6c/cc84f8ea3543926a1a1e78b5c50a56c0dc8025","hash":"8b4b97a1e3e0089940bc797e8ee3d6eca9d09d28","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/29/c753eafb74ec88615f947d25acb4659340747d","hash":"5d0cc15f306cc2c34a9107c6aeb3576b90343956","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/7d/713d14ed6c435cc41223736376f9e41f8001ed","hash":"fe9cd361e4ab229e32f8a0303b108a5386d09429","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/8a/7ee041ca7a999ccd5f35177f9f806232b93738","hash":"627b29c5fa02783ab8130433036db571143e564f","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/72/c270d58afaf026bd65fea390e277b6d63aa22f","hash":"2ebc915da4f2146762025c321bbd54fca1e7b9eb","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/77/8fba47fc8f68467fb45002edcd717a71a4ea18","hash":"896ae007894c3f537f1723674f06740489bbf73c","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/aa/9916f898bfa69c88a84d6f0e99a549c8831d07","hash":"74c546dc2710eba88138d6a12df1d3e05e03ae35","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/75/976c6dc20178b5d24b07ba76700a73205a9b52","hash":"532198fa938fafd2b53dd45193e65a7c8c0f8c84","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/ad/cf15c7f3d6cb69da502326740997e4a0e3bae3","hash":"0d53088c3633db9d45f69b6c12fd3f2cd4d53062","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/9b/afab6ef59ce585cbc456d03770e167d2a3c9e2","hash":"32c4243f56b9334f340559d9e7bb7140aadb5959","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/af/46be34010c865593eec22d79552334f3fac3f1","hash":"5d8888376467232bd9a13f99c8c76a386a5505e5","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/84/5b1bc2898c9924eff3e1b0bd92b6178b4908db","hash":"7c8453a9632d2e4b2720c4a7d50b289936699d1c","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/b3/7c278058df61bbd959c9f775f80f3a24b49a16","hash":"3429c10084546b79746b6b0e9f3e4b29fa6443e4","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/cb/cf355438829a21ee86cb3f116a68daab599b5d","hash":"163216cd6c2b363b3bbdf32da39142dbd4ca690b","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/a3/8e5bd4193fa1f52aa27eb2a7f32cf103d20a57","hash":"d8897f2030f55a50c5dcea877dd5b0f9a3a977d5","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/d3/6ccff12388f072c23857d33c6abd1f57b3dc86","hash":"a8d4bddb3c913051763dc7d2d3cfc243ef181701","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/c3/a4e2326f7650fde4756dadf7c67484cf14aa4b","hash":"4b0e77607c87ea06fe9b612b8ee7cd99f87be559","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/e1/f0b9c30d5426977a4685d63a0cef6fd6abdd89","hash":"103eeacd4a6750c0e7313b84a571373fa8369579","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/a5/57ad3eeef222d2387e98f4418b0438655a2765","hash":"cdaa150ec84c29d84750ef44aa586a600f901d63","modified":1532526866000},{"_id":"themes/next/source/lib/Han/.git/objects/e7/237bfe33deeeec901fb5f0a60bac33cbb446d7","hash":"6589766fc012cfd184f634e3747d944efe405797","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/e6/02654d32318f5c7135c521ee586f93235452a7","hash":"c6dc38516b0cefe68f0d466f43afffc9d31c2428","modified":1532526868000},{"_id":"themes/next/source/lib/Han/.git/objects/e2/d2e185fbd7d888a3658fe97dde4ba595290caf","hash":"4edae1bf781e76b61bdc43395a76574c0d20107b","modified":1532526868000},{"_id":"themes/next/source/lib/bookmark/.git/refs/heads/master","hash":"0d74c802af2ae1718308cb07fda4520f5dc7f8d0","modified":1533362235922},{"_id":"themes/next/source/lib/Han/.git/objects/f0/a838932f748272263bc294b178b9a3297a1295","hash":"77694c0d730fa2582dc473d3d3ee782156f4cf74","modified":1532526868000},{"_id":"themes/next/source/lib/bookmark/.git/objects/07/4d4d38a37d506f5db482b5c27ad1143bba5aab","hash":"ee76158694b6490056328594b5d15a54faba253e","modified":1533362234791},{"_id":"themes/next/source/lib/bookmark/.git/objects/0a/9e6b66e9d710a68e08fcc295fca440eabcb4bc","hash":"aa0b269640b41735ba54a9279f10ddd19ecd5887","modified":1533362233962},{"_id":"themes/next/source/lib/bookmark/.git/objects/0d/61683ea74054da2645effdd51d0a3282d6a9ff","hash":"879563c866dbe7efa0074a1ebcd206723e552f27","modified":1533362233746},{"_id":"themes/next/source/lib/bookmark/.git/objects/17/ad1e81c2805cc9c5c00846c8bf9bf16524b55a","hash":"8f779f28267873af1e5c71386603042dbaff6211","modified":1533362234676},{"_id":"themes/next/source/lib/bookmark/.git/objects/11/8348fe672067e7d9c32c73d586023804eeb565","hash":"2b73c34eb535ff7e7d91cefb5215feddd9f2c36f","modified":1533362234069},{"_id":"themes/next/source/lib/bookmark/.git/objects/02/b27223487ca819cf7167dc23626af595112e25","hash":"e5bbb1906aa9a8e2696817d19d85aeedf82539ed","modified":1533362235384},{"_id":"themes/next/source/lib/bookmark/.git/objects/2f/425e03cfa918b2d638bbd37279a8b1e7757508","hash":"283713eda90efb64849519db267b652facfdbd63","modified":1533362234518},{"_id":"themes/next/source/lib/bookmark/.git/objects/2b/d59834388b6377fd14413f2614f550e35e35f1","hash":"654763c707c65aa3f353f8a9edb0cc0ae4bcccfa","modified":1533362234113},{"_id":"themes/next/source/lib/bookmark/.git/objects/16/75d42fcbd2aded2e9b42efe38c347ced893495","hash":"979ec745cfdc8dd979785b78c9be7645bb73d922","modified":1533362234424},{"_id":"themes/next/source/lib/bookmark/.git/objects/18/77388dd9427b36d7c8703038a215b79f1218c2","hash":"8d48c7c0d7427116dbeb32552c576cc4edbe2d38","modified":1533362235504},{"_id":"themes/next/source/lib/bookmark/.git/objects/25/42ea91169dbe9da086918ad02160e42310e185","hash":"3c942c82f3ef7fcd9a15276c82fcf59fa141521c","modified":1533362235615},{"_id":"themes/next/source/lib/bookmark/.git/objects/2b/358da01f778126b38fc4ddf5ecafa625cad38b","hash":"d4613d86e15d9679b8f1f18950b71a182af4b5c8","modified":1533362233713},{"_id":"themes/next/source/lib/bookmark/.git/objects/3f/30e2e442e4fdc1e91d5d1b642662e3900e5d6f","hash":"358397c32831b80fa4828334de7080bdaafe1c52","modified":1533362235439},{"_id":"themes/next/source/lib/bookmark/.git/objects/42/c32aba927940c9e92b9928dceee88eacbf4874","hash":"2c7b6bb078f2eb52eead906df3ed4fa136a1e651","modified":1533362233569},{"_id":"themes/next/source/lib/bookmark/.git/objects/25/b729e9ad0151b51f50297ea35280111b953236","hash":"af4bf7f3feb175c6980ee81a84f679149f713987","modified":1533362234603},{"_id":"themes/next/source/lib/bookmark/.git/objects/40/b878db5b1c97fc77049537a71bb2e249abe5dc","hash":"929471c4b27858bbdae034381982f996144f6b3d","modified":1533362234181},{"_id":"themes/next/source/lib/bookmark/.git/objects/36/6ee3e25fa36be8ea88ed1c7913a8de8fd3b820","hash":"81c45f061381dd947da576758992b64b6101fbc8","modified":1533362234372},{"_id":"themes/next/source/lib/bookmark/.git/objects/29/de98ce86c01618ebbe3352e213db74feda0dc0","hash":"046bf7ab442c095f0150c96fe06d83855c92092f","modified":1533362234476},{"_id":"themes/next/source/lib/bookmark/.git/objects/47/1dd1f3ddf970ee3418f801ae787bf98191d47e","hash":"8634518aeeffc4b8b0dbe6ca6159480264cf1916","modified":1533362233235},{"_id":"themes/next/source/lib/bookmark/.git/objects/55/31419f7d03a523182be5373e246e43acdf60d7","hash":"274085edc584079218a79c199bd0c7360a700290","modified":1533362233635},{"_id":"themes/next/source/lib/bookmark/.git/objects/4e/7ec652ef197de221d6576a717edf0b583a688a","hash":"e45f3b02a04d04eb3bcd6373ae79d86cbbd62798","modified":1533362235018},{"_id":"themes/next/source/lib/bookmark/.git/objects/48/7e5a296eebd45809199d2f557e340603931bad","hash":"6cf9f9b5ae990bbb0083b37b0c29b269cd8cc735","modified":1533362235081},{"_id":"themes/next/source/lib/bookmark/.git/objects/41/bde8ccd130442ef0b3f8b24764a6d72635a485","hash":"4a833bb669ac126a00dec7153f8c263eab47b024","modified":1533362235703},{"_id":"themes/next/source/lib/bookmark/.git/objects/58/b257bc636adc71871da51e615e6734c9479f3a","hash":"4e63de59c359c9bf480b47aa5e342ed78663fb58","modified":1533362235591},{"_id":"themes/next/source/lib/bookmark/.git/objects/5c/02525c8b55f89f0ec0304cd0d266453bdf0541","hash":"51cab03e6cbebdb421eea45818b1ff7d9ec7783f","modified":1533362234757},{"_id":"themes/next/source/lib/bookmark/.git/objects/4a/16717bb5a449fab2291e6397c30c6cb34814f1","hash":"5e244da7b9b6dfc9ad924ee5259805d4ae272c2e","modified":1533362234098},{"_id":"themes/next/source/lib/bookmark/.git/objects/4a/7e8d64b8956ffd9339000e62d490f18dcd3ecd","hash":"3cc8fd65b3663a750887093f67bb28696492d5e5","modified":1533362235646},{"_id":"themes/next/source/lib/bookmark/.git/objects/4a/6e0d94cae4e01312054983b4e2e4007e3fd3b8","hash":"9eff6f1c82336ebdab0503e0ab0f753cd18f01ff","modified":1533362234047},{"_id":"themes/next/source/lib/bookmark/.git/objects/5f/1541db4b58002e45b9b5fe19426551a8239a49","hash":"9a50dcb663e39892adbfccab943fb8dc37add2d0","modified":1533362235262},{"_id":"themes/next/source/lib/bookmark/.git/objects/62/150c9d8f54ca62e1af3c9d666bb5e35eb3bdbd","hash":"2998eaea45a0135e879da15851a535ae2940d85e","modified":1533362233680},{"_id":"themes/next/source/lib/bookmark/.git/objects/1b/db4ff581f77318e6c4783d8e1ce811c37f13bf","hash":"06b3da6e152ffd68ed4617db1c4e3912f41d8bec","modified":1533362233779},{"_id":"themes/next/source/lib/bookmark/.git/objects/61/4795cc61f429929887fde3962027254db90a62","hash":"c4e415dda2e421df728dda51f953cc2f01296378","modified":1533362235549},{"_id":"themes/next/source/lib/bookmark/.git/objects/5c/ffa97fb277e628a550bc1d8f7fa7c5c776129f","hash":"8c4e4a79d14522f34280ef85c794df6f4886e040","modified":1533362234451},{"_id":"themes/next/source/lib/bookmark/.git/objects/60/438c0c99eece781f9c7b2779ab7673ab34ba62","hash":"76032e20bf2916b03d9f795982831868f42a03af","modified":1533362234395},{"_id":"themes/next/source/lib/bookmark/.git/objects/69/d5670af93cd1d3f0acc082583b1d150c5d61b5","hash":"e6c6fdb25f5fc4949594e217ae14d309b2fba4a1","modified":1533362233268},{"_id":"themes/next/source/lib/bookmark/.git/objects/84/08abfa6c03a2809cb160da5badc6d1050bfbb3","hash":"9d3f29a89223403d1a0292681a330cbf7616c190","modified":1533362233193},{"_id":"themes/next/source/lib/bookmark/.git/objects/8a/7f4f27cc671188881ca5cd80d941720a78be04","hash":"de24124a9660dad2ee4e1d25a3580ac87d42b3e0","modified":1533362234558},{"_id":"themes/next/source/lib/bookmark/.git/objects/5e/038b5098480c14a29cefd944e3eb23109473b2","hash":"9c3aba7ff1afc70708a90e2f4f610499ee268d4a","modified":1533362235671},{"_id":"themes/next/source/lib/bookmark/.git/objects/8d/ae3702857a081653c16320999ed63f3c6fb719","hash":"cc5ed8d3d17451c722a3ebfa3251fff27d348218","modified":1533362235302},{"_id":"themes/next/source/lib/bookmark/.git/objects/7e/58471cd13382a6bafd05015cd0a5b5a8e899eb","hash":"21ae04d7ac48092d7b07b7278bf099cfc2691e57","modified":1533362234491},{"_id":"themes/next/source/lib/bookmark/.git/objects/75/4a45e75b8a6dc256755287312c729adc2fc6c9","hash":"e700708d93a902401e54d96d4d632ae4225cdf2c","modified":1533362234858},{"_id":"themes/next/source/lib/bookmark/.git/objects/79/c8a354ccacb4edc27acbcc503f26acf6119624","hash":"7a44189d1189ad7aedea595fc8a4ef387de7041d","modified":1533362234351},{"_id":"themes/next/source/lib/bookmark/.git/objects/6d/1188177a8798893f9efe275d4d75d0f9301be9","hash":"b8652b3249ef6662a8dee7c01e5667f7e4f33cc4","modified":1533362233825},{"_id":"themes/next/source/lib/bookmark/.git/objects/9d/a80d05852c1c5aec3e8d31b63d429bcfecc0c5","hash":"392385eddea633b0bea1194c2c66db593c6a9c0a","modified":1533362234147},{"_id":"themes/next/source/lib/bookmark/.git/objects/92/f5900e81d1cf9e90787b7138f4285434e45c10","hash":"05c5b8557d69133fd01ebd1b85a5e009a822ca20","modified":1533362234705},{"_id":"themes/next/source/lib/bookmark/.git/objects/77/d7bbc93f0a411d2e50b7c67a2827dece42727f","hash":"6865e0eb54a9882e55e70669a44cdddb2da1665e","modified":1533362233894},{"_id":"themes/next/source/lib/bookmark/.git/objects/96/353334c808a19403f7d2f0e880668bf8f0e320","hash":"dbcb9efdc52a50d5f0431394c24b35ff47f1833d","modified":1533362233424},{"_id":"themes/next/source/lib/bookmark/.git/objects/ad/b3297e18bb4d11be9f7305db144e5015f40738","hash":"b44f4417307f3dbb33d30c22700dbfb61c87f198","modified":1533362234994},{"_id":"themes/next/source/lib/bookmark/.git/objects/97/b44840ca6d92e3e650428f433b75a501b1427c","hash":"a899d561a89c4ab798063c1df81d78015992ad15","modified":1533362233503},{"_id":"themes/next/source/lib/bookmark/.git/objects/a9/21fc59cd52b57fc3093fbdc04b446bae0a2f8a","hash":"a2e879b7fdb0cf153f8526064a6b8810b2cd8988","modified":1533362234827},{"_id":"themes/next/source/lib/bookmark/.git/objects/c3/75bd4420a3baa49b9a5d52f8040400491ac933","hash":"beb87437d1591c6bec51a6e85176f576092a83f2","modified":1533362235415},{"_id":"themes/next/source/lib/bookmark/.git/objects/aa/d78f9de11c827340e4695cbc1f5a73f53ee577","hash":"0f5086a5818caf093dcf60126a7d0f72bc73928b","modified":1533362234915},{"_id":"themes/next/source/lib/bookmark/.git/objects/b5/c8b8aa1a6dba7c8152b49ef103a0952f1bb9ca","hash":"d070cad9094ddcf44be0e16b3872f1fb4f05ae0d","modified":1533362233536},{"_id":"themes/next/source/lib/bookmark/.git/objects/c1/7940ffb480f454472c9083efabce723ff53cd4","hash":"29bbded01d4399f509abd809c00957f182226432","modified":1533362234541},{"_id":"themes/next/source/lib/bookmark/.git/objects/bf/c91bf59adb7231937b98d35cb952b4bab01fff","hash":"016dc36835bb17ba3f54eebaef4d57f5498015da","modified":1533362233602},{"_id":"themes/next/source/lib/bookmark/.git/objects/bf/05dfc0c17af4b48e94676e1e2feaba911d8c71","hash":"4d8adbebcb8ffb4bc3c61b9c97bd225f128b8e74","modified":1533362233862},{"_id":"themes/next/source/lib/bookmark/.git/objects/c7/631242bf4ea5781b2d173d999b41c69fdd8ace","hash":"f2d3b9fb648bed7f61dc917d9ad45550c4c70e77","modified":1533362235737},{"_id":"themes/next/source/lib/bookmark/.git/objects/c6/26688a33395276a262158e171027a61c56150c","hash":"3727c122ab41e9dd1abc6490a40eb28f212c5c8e","modified":1533362233302},{"_id":"themes/next/source/lib/bookmark/.git/objects/8e/b07c89ff54bda39a40d6448a6a8ef4df57c8f2","hash":"fadb84b2a2c5dee0b8f67dd53b4e2b8a5b270e92","modified":1533362234285},{"_id":"themes/next/source/lib/bookmark/.git/objects/bc/0570da6c07cf361d794008e58455455a2580be","hash":"822af280dbbe78499a932faf9229f4c467d48cbe","modified":1533362234880},{"_id":"themes/next/source/lib/bookmark/.git/objects/d3/a06b992cfe7d26e022b14abf5ba563e6e63c4a","hash":"6820962ea4a4da9e9de834c97c1630477c30ef20","modified":1533362234214},{"_id":"themes/next/source/lib/bookmark/.git/objects/ca/799c34c37f63bd64ed9b49413e7fc6db8ab2ef","hash":"4e6ee2dffc199b5954fb34b129fe2f012099463d","modified":1533362234015},{"_id":"themes/next/source/lib/bookmark/.git/objects/ce/70a57b7d6bcddae01e3434d416c27c84b24727","hash":"d8ccbf99469b51ae629347665f96354c264457b4","modified":1533362234584},{"_id":"themes/next/source/lib/bookmark/.git/objects/d6/31561b3edf93b81d38f81278d6574c77006e39","hash":"afaad8a2c6944b11695122cf45cedadbc3bd7605","modified":1533362234968},{"_id":"themes/next/source/lib/bookmark/.git/objects/de/52a356f671fa73a9d9910c26968d47100c655f","hash":"5bd5f521df149c8e24640151b6d83b3c6be1fd30","modified":1533362233336},{"_id":"themes/next/source/lib/bookmark/.git/objects/df/af7173f5d152681fb2bc7adfdebb54ad195281","hash":"7fc27717b2f7da8f6a6e40ac8d88c75485a505fa","modified":1533362234247},{"_id":"themes/next/source/lib/bookmark/.git/objects/d2/45f9acfffc2e168c17bcc4e115527f21a77521","hash":"76d31ac0c9ca563b5854fe5b6c5ab46ebb202680","modified":1533362235159},{"_id":"themes/next/source/lib/bookmark/.git/objects/d4/d4c40411de7936e90c6ebbc19e182ad225cb4c","hash":"f8d44f87905d5dfbeb1fdf5519a5256d27d00120","modified":1533362235528},{"_id":"themes/next/source/lib/bookmark/.git/objects/db/3b3566df6e7d89575c4150067f61087be1bedb","hash":"118afda770f93908ad97d6ad0bb6a42b21aab9cf","modified":1533362233379},{"_id":"themes/next/source/lib/bookmark/.git/objects/fb/0a1d42d6507805651dec61ecc4df11f37dc1a6","hash":"fcef8ee1a40833b2cf5ecae90bfa22002f46b29a","modified":1533362235360},{"_id":"themes/next/source/lib/bookmark/.git/objects/f6/c892849ea799eb017a3d5bf05edb602780cd38","hash":"3b568af69c7a3dc7439155fe36b64a65e8b0bb79","modified":1533362233469},{"_id":"themes/next/source/lib/bookmark/.git/objects/ef/090e162cd7cc22d2da95d77acac1d7a1eb9c43","hash":"a6997644fb850bedaeeb01adfc90fc404cf80074","modified":1533362234325},{"_id":"themes/next/source/lib/bookmark/.git/objects/e7/aba3f8ec35017b4dd2bc8f5ca94253a8674ce7","hash":"8fe85003f71bf38e6ae367366ae6e95a819d046d","modified":1533362233148},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/heads/master","hash":"473e30291eac5f6d120dfe823b29ad4b2218f05a","modified":1600333270790},{"_id":"themes/next/source/lib/bookmark/.git/objects/f7/bc8429b09417e69629d9fa0c2874dd5adc30d2","hash":"d8b3844ae942e165b59b6a57c5decdeb35582539","modified":1533362235056},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1600333269498},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1600333269464},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/17/9eb5d6cd5f44ba3dd9e08b4ffcd83bb26db80a","hash":"03d593c92c9fad045d298f58afdbbcfbde923999","modified":1600333269398},{"_id":"themes/next/source/lib/bookmark/.git/objects/fc/63af0044284a5b08f20cf1444a062176d835fe","hash":"9994dd502452c757856b88aa0d1be86540dd7a82","modified":1533362235330},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/22/504fa21ce1b75e3f898ffafc8d2a8bed8d00c9","hash":"7c6ee7a38812c72e52ecb5c2ad725a9f103923a6","modified":1600333270308},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/45/9262fe92f0115707bf8d8764f1886bc5e7c9e0","hash":"36040483f8af76775b7e4b6d87cec53729625399","modified":1600333270209},{"_id":"themes/next/source/lib/bookmark/.git/objects/cd/ea049768c3f2d2b89792c19a523584590292c5","hash":"5e69fbae98becc6ed3be947a2450511294252891","modified":1533362234938},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/46/cad4f872aa93e813aed99547c4705322ca483f","hash":"b0465d3186e2d58a8a99c56c6e68aa2965a396d4","modified":1600333269087},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/50/306daa49b7b24c4759a4e832bfba3531c53f49","hash":"32aa9d96315007f8d79cd162bc77398addfa6ddf","modified":1600333270397},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/4b/2975337cf280e5555ca7a82dc7c2d4b437c5b0","hash":"d36f2c2b52c48d7f7cd0d0beb42be2ecd7534287","modified":1600333270254},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/50/dd2a6539498a70226c81a587db486b47e839ff","hash":"3844b0c815d0b4b32c6312c751a826bf9dc2c945","modified":1600333269119},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/5e/8ae972c99b04af7dd56dabfc485e8fdae5094d","hash":"791b3349c5696ccacae00bffbdbb8d88a03e61a9","modified":1600333269152},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/51/7c5eb7dcc2cb9769efea2e7375ff6e04123150","hash":"ec53157077d47430f4729bf164999d18d370aeab","modified":1600333269887},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/5a/69ce9c2e4a1a34f6063ae9a121af1555669c69","hash":"dad25cc0f450e2827b5676975f4a70636e3fd2c8","modified":1600333269582},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/2a/f622a4d7df40a2708946e91d6d7a0df1dc468c","hash":"3da7207fb18d361b83c56f4e35f67e9e945abd82","modified":1600333270120},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/44/6ddf9b6c0e5ade17ca5cb99f9b3a5300919c57","hash":"fb72799ff98445f72fda041337da4cf105d9dcba","modified":1600333269700},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1600333269541},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/7b/c7e3186212b6f2e06d3370502565e2c6326890","hash":"379f3c6486f589fc9c1ab07d0382adacf4f655a2","modified":1600333269187},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/39233ece53c9bdb9a1faf3271ed5768b034aad","hash":"5a770d418c1bb7b0f031f4d5416530002032fcf3","modified":1600333269665},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/8b/66994be5014f18d17347ff32232c91d51ad08c","hash":"a22da1680018e1ab95118216eb88115d2947930a","modified":1600333270542},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/86/1c9f4241fe0eb6af02ad770d5ce04c1f68972b","hash":"7005c3e36015a4af30d4b91bd5a849a7861a073e","modified":1600333270070},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/98/67d1132e0e50bbb7df754a63358d70741df6d5","hash":"3cb710a1faee73c08036f5e2df7df3a7ce29e9dd","modified":1600333269232},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/aa/da83ad9aa55faa2b34ede31b1d41e16966f80b","hash":"b304541ab95b7969a63ba2ec4f60f5391bd8bb44","modified":1600333269305},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/99/be66a33ab4ebc34f62f2880a0e0cc6d334d0f2","hash":"f2346fe8ddd7d7abf38f2946f3083d8150f502d2","modified":1600333269841},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/90/f6477118d05f5f96ce0a63c6f18b7b2baea200","hash":"385f58e92981f27fa54eb52bf60424e87c70a9d8","modified":1600333269354},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/8c/150fefb741be4edee07810003c8a845113e209","hash":"067de29d5efa0a46cdc8f9f113820e5e09bfa50a","modified":1600333270652},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/ab/45cbef9bc70ceff60f1ed52f2a5c34f6ad5725","hash":"ee2fa8f3df0de9092a4fce015cefd76ea18f4cfd","modified":1600333270579},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/91/f99a0c53b26dd54f56b9e452c68f56b06f8f7e","hash":"3dca8a5629e66599b6e0f146aa32f1b7ce023d89","modified":1600333270032},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/b1/bb278ca2e50dff1b343f9d5ca025272859432f","hash":"74f0afa72a30268d84613fb0d1d893bba866f01d","modified":1600333269975},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/ca/3466a8cbf05c2982c58199d6ee71ec6d0271ca","hash":"a9b80b5d827b5e84229b1afd7920d9218dce610f","modified":1600333269791},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/d1/b8c85241243a80f16d56e7a50244d3695f6e6e","hash":"baf56a83286c72af11667786dc59e7c58d30e427","modified":1600333270354},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/b3/5fc481f71dd08037f6b9febb5ec02c790f843b","hash":"ed5aa3a748675544aaa141c182a317453dd1e774","modified":1600333270453},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/75/de2b8fa62d52690de32c351c63ab6446104ed5","hash":"52d10122d633ce4895a0690c5955e1b356f5a391","modified":1600333270164},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1600335099896},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/d4/95d28a8fab74d23908f6ccef9e4db2625fbacb","hash":"59e6067b0a806deee7bda6460b36c0f63e2e1db5","modified":1600333269935},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/bb/5755c22b6c1b7461319624f0f000bc947882ee","hash":"2b87a2a354a0fa77cbddf461b03b0b8e43c16a4f","modified":1600333269745},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/e1/5c0793114874195462829db04d021face6640e","hash":"ff6c6d9f05b171ba67b44564ae3574d16eae6222","modified":1600333269035},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/02/5cf882fc75a324b1d71b0921eb52ea427387fd","hash":"4a0f15d00f50c629f01c2274e26ef05b3779b6c6","modified":1600335099729},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/20/47d8728f7950fcc2276c339ee199302805838d","hash":"813e7f6c3b8954c40b250e6ba592d6bac7874397","modified":1600335100274},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/15/9cfb8a3050111dfb3e6635e3f37fe68de2ab30","hash":"f4e1752896135edd6c9a36164b45893a59839548","modified":1600335100208},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/fd/3e2cc9301ef9c1978ace2bd0aee99f47176661","hash":"09b27ad6cf69d4dcb926389e16913daccb5d2972","modified":1600333270487},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/25/3acc9a19f8a5047f053ea8b4a62684a4204939","hash":"d2210d7c39aa3801a198b38651a3f013d27bdd46","modified":1600335100419},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/2b/41ae14433eb4a13cd99ac9736635723e813c32","hash":"0e30e5106b7021432c917699f60684276e727eb9","modified":1600335099644},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/39/ea36a17ae4ce235f97d0cc1993cc51f932aa16","hash":"d3b328e06996ff12a2cf1f546bb78ab37a0b3b50","modified":1600335100385},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/25/3593d429ba9f66eb536d2577e4aa8b74ed7dfa","hash":"b68bb1519d36e82753367a811009e5850db4ddce","modified":1600335099696},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/d6/5de52977302632417c21e015956fb3dab8cabd","hash":"e0c8f0483b20434e63748a649ca4afbb417997f4","modified":1600333269631},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1600335099962},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1600335099929},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/58/76c74f8c24cb9306189bf49fdf937b955c065c","hash":"283c92c40dc84fa11eba7c8b2ee8c5234dbf7ee6","modified":1600335100451},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/56/4913335d11e112ac80e8d550c8347016007f6d","hash":"50e9db730ceac6b2d0c8e8d5a3fec450290fdd8e","modified":1600335100000},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/58/b315e0ea2584550eebcda4f1c17a9a7f2bea16","hash":"c7dc07b78ad53f0f515b3243a0ff09fb8ddb8235","modified":1600335100484},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/5d/93512df328612ac84d124d0a64f78ddcd7ec28","hash":"94dc5692c542e87ed40ce00ab5e5d72d4ae78f23","modified":1600335099841},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/7e/871dba93cad35ffcec76a936259ae9a3641bc7","hash":"957e9e7db09ee72fc49ca852d3cc67242567fa45","modified":1600335100352},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/a5/b8ea74a3afbc760b01b6d4bd432f4f1ace013e","hash":"afdcce658085edbf16ce7f4719bec0cb5536e77f","modified":1600335100574},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/6c/34e310dd41c6bfa8db842190388ab83e6d4fa2","hash":"b327c0ce763240a6a8bd2f3fb55ace6b9e3df671","modified":1600335099796},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/a4/14bc6b6b6deb276c361d14724cdc6aa9b65b84","hash":"5252d85b51d1de339004b7f6b2cd9efce16730c8","modified":1600335100519},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/ab/2197a6f5baffdd1d2895c169f4777921cc4027","hash":"81a75ca40bcfd278d6a9d67dedc8d61d959e2baa","modified":1600335100308},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/bc/43844047aa08d2b58a40fe3915a8382214a588","hash":"34086f267f92f39ea9819a5eafc04921661467d7","modified":1600335100040},{"_id":"themes/next/source/lib/canvas-ribbon/.git/refs/heads/master","hash":"16bd947558482613ed699f6cd50bfef39a7837da","modified":1600335100693},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/c5/8416b72bd371aaf3bc8952f819c1afd3e4c0b4","hash":"aa8e6e340697fc6d9697c1ab8213ee40aca4ea82","modified":1600335100118},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/c6/d0381e6cd08086561110f76b5f921bf81a6f87","hash":"be98eb9329c91132e90d942a44d05a41c78b4470","modified":1600335099763},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/57/6d268825c6e7b3892828b61b9b408600faa1f2","hash":"2ca9617d2459b9e010e71b3b221fec42d76cae32","modified":1600335100240},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/a2/822bd3b1fad40e718ded64ddfac693c4ac24c4","hash":"14b60f650711229ee8301f49e8403bb4bb991e09","modified":1600335100074},{"_id":"themes/next/source/lib/fancybox/.git/objects/03/212ebc9d60c75daf0a3e1151809b2eb6b3932e","hash":"fd9b9ae200d7466a7ed14c1ae1a219b8a64f4a3b","modified":1562899402868},{"_id":"themes/next/source/lib/fancybox/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1562899402767},{"_id":"themes/next/source/lib/fancybox/.git/objects/07/872072704114b91681e2e6f9697ce1521b64d2","hash":"e1e853424fa012a1c0eb1cba9da3f0916b80538a","modified":1562899403245},{"_id":"themes/next/source/lib/fancybox/.git/objects/0c/f71a412edc19f5126ed30cd2e3995124452d9c","hash":"0112c358a98fa224a6a1097e3bc36ab9b4732c30","modified":1562899402489},{"_id":"themes/next/source/lib/fancybox/.git/objects/35/d42e808f0a8017b8d52a06be2f8fec0b466a66","hash":"78537d1ed6c5d74a9db86a7c127b3d0fccb15b2f","modified":1562899402968},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/b9/07949515b208cc605b513ff9d5b8153cbe2fe1","hash":"8fb6e8f2e6b4df8787239335ef9777a6c888d3c0","modified":1600335100151},{"_id":"themes/next/source/lib/fancybox/.git/objects/35/84c8a781abd6116ed585d50a4586e485491860","hash":"31d5a4a413f1a67480ea02878389be367a2e2e68","modified":1562899403312},{"_id":"themes/next/source/lib/fancybox/.git/objects/3a/b153ec31c8932fc34a18c51618fc2d3f79bdfe","hash":"bb672d81781af3924b0b798db314e858298d72a5","modified":1562899402670},{"_id":"themes/next/source/lib/fancybox/.git/objects/43/9b878fcc130303c16f8debdaf37035a60b6668","hash":"b756528410464852169103436d5735404e8030b5","modified":1562899403224},{"_id":"themes/next/source/lib/fancybox/.git/objects/46/e1eb55f66a85e835793c7b3dfdc57dd06f20ac","hash":"168d0705f18d9902a6748e8abc5682f59e881e17","modified":1562899402556},{"_id":"themes/next/source/lib/fancybox/.git/objects/36/7890a4af658d073d2b79c06829337d45434b84","hash":"6668ecb7c9d769947940486cfa3fa79b548cf2db","modified":1562899403379},{"_id":"themes/next/source/lib/fancybox/.git/objects/63/d294368d9e280e976902648209486ffd056a1a","hash":"0dca77e6355e04537383b9362d4f239168d16f39","modified":1562899403335},{"_id":"themes/next/source/lib/fancybox/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1562899402800},{"_id":"themes/next/source/lib/fancybox/.git/objects/5d/b3d4ac2e42459be7f72b6ce88f697d42b931b4","hash":"13c3052cf9b64c5e6f396eb23556931f5fed2bbc","modified":1562899403357},{"_id":"themes/next/source/lib/fancybox/.git/objects/5b/20887d579a6d1a6aba4f77f59c14e4aaa0df49","hash":"4a6be5d7a913691c129bb4cb64eefa3dfcf9f62f","modified":1562899402934},{"_id":"themes/next/source/lib/fancybox/.git/objects/78/756afde9fe79a12b08fc5a7b12695448bcf9ba","hash":"fe9ccfe0ce40528a4f87aa22e849d9f98bdc810b","modified":1562899403580},{"_id":"themes/next/source/lib/fancybox/.git/objects/73/f757843855f1eb0b23d8c81a8fb7f001989b66","hash":"84152c7efd120a5c51a8a60cea9cc39616f6ad1a","modified":1562899403556},{"_id":"themes/next/source/lib/fancybox/.git/objects/95/f9086c6635b9e32b583d4649feeb13fe44281e","hash":"d606fb2c8004327ed4c2a16d1809769385d5330d","modified":1562899403657},{"_id":"themes/next/source/lib/fancybox/.git/objects/92/05aeb09fffa6b571b4c6beee30b18400829c03","hash":"7108489bba664f36612804a465c2910a6efe85a8","modified":1562899403020},{"_id":"themes/next/source/lib/fancybox/.git/objects/a0/3a40c097ee728709f65d4ea7397903a389d484","hash":"260ab091942f1d6279b3933b22db30b5efcc9d50","modified":1562899402991},{"_id":"themes/next/source/lib/fancybox/.git/objects/a4/391396a9d6b6d7ff3b781f16904732fea40bdd","hash":"20fc3d5b4c6f0f72a178e61d15a8589bf475678d","modified":1562899403080},{"_id":"themes/next/source/lib/fancybox/.git/objects/a6/683963a784aafeb3bf2a487c33950b32707826","hash":"478487f14feda93e52923fce5ae92fe82ce7d0bc","modified":1562899402523},{"_id":"themes/next/source/lib/fancybox/.git/objects/d8/a8c05db4a9426a4f56c7543da5c6efb43843de","hash":"7ad48f13a3267c1c30207fdf5609e973ca32a3ec","modified":1562899402438},{"_id":"themes/next/source/lib/fancybox/.git/objects/94/a9ed024d3859793618152ea559a168bbcbb5e2","hash":"1c2d080a86f03eb960e112a94910a5115addf57a","modified":1562899402837},{"_id":"themes/next/source/lib/fancybox/.git/objects/dc/845cf4113504e8737a1d784bd093c89f509bfd","hash":"425e89b5ade9446f516723b8e10cb68f72515583","modified":1562899403634},{"_id":"themes/next/source/lib/fancybox/.git/objects/a2/6273af232562db60229e75809403a784e36d28","hash":"57f280327903563e205ed329a365ee91b44dc17c","modified":1562899403267},{"_id":"themes/next/source/lib/fancybox/.git/objects/d6/19a807458f9037320f1bf786e26786f16319cf","hash":"65b1c4853344964144ee7281f0b94bb5d305408e","modified":1562899402589},{"_id":"themes/next/source/lib/fancybox/.git/refs/heads/master","hash":"f63734176317eb550193d45487674b538b52c681","modified":1562899403765},{"_id":"themes/next/source/lib/fancybox/.git/objects/e9/7d00dfa1dd21d1129a921517e5318979410c8b","hash":"dc39fdf7749fb74e36156bc92cdb892ec4fee59e","modified":1562899402623},{"_id":"themes/next/source/lib/fancybox/.git/objects/fe/9e08652d9aba310f292865f050f4fca58dc11c","hash":"9d9e76a5ec7d62502a6f701b0dda109ac37e8bb7","modified":1562899402701},{"_id":"themes/next/source/lib/fancybox/.git/objects/f6/bb280a0b2c68256a8e906b35c6976c80c1b3be","hash":"5daaee11fc384fbe0f02c7123036c954ee9a73fd","modified":1562899402735},{"_id":"themes/next/source/lib/fancybox/.git/objects/fd/8b95566800f8d70399b94728d6e4ba476641f9","hash":"5794953cab53637cdd39ddd6b4f732a98cf92c57","modified":1562899403290},{"_id":"themes/next/source/lib/fancybox/.git/objects/d0/e4779f4bed43fe339f0cf1eb045d8cb9430c87","hash":"89fdecf64fedf2cca040f73464d56ef834945733","modified":1562899403171},{"_id":"themes/next/source/lib/fancybox/.git/objects/fe/834f7ca5a81b4035ac7ceabd7087e9f5e706b9","hash":"976bfa40e3f29e3173998d03750734f3ebac72b6","modified":1562899402904},{"_id":"themes/next/source/lib/fancybox/.git/objects/fd/8d5ca566d47a77d9562168617bb2f6482bf9be","hash":"93d5b016ddd99f514ae6e718357d83f14e22077a","modified":1562899403101},{"_id":"themes/next/source/lib/fancybox/.git/objects/74/6e2b94283144e8f5209f51b53071784d34f8f7","hash":"3e6d4da2ae3861796b23f76208d99a53c459763d","modified":1562899403612},{"_id":"themes/next/source/lib/fastclick/.git/refs/heads/master","hash":"f3112ca048dc1b13166ee07ff877ef05c4d65c81","modified":1531386931746},{"_id":"themes/next/source/lib/fastclick/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1531386931374},{"_id":"themes/next/source/lib/fastclick/.git/objects/0d/dbe7d4eb11134cfb5fa14b3e190bd9fb3ed82b","hash":"95af863cce08aad6f65d6932af9ef732712740f7","modified":1531386931408},{"_id":"themes/next/source/lib/fastclick/.git/objects/18/e1abd47f6274ffd7ed82dc00decd1c00c6e323","hash":"5a569722fa4f206672376b71c3e1c16f643e64f7","modified":1531386931461},{"_id":"themes/next/source/lib/fancybox/.git/objects/e8/e1987c6cbd752cf39f724e084865a85b56ac9f","hash":"3516f2621bf9d94d803163a2aeb6f3c4efc36d81","modified":1562899403472},{"_id":"themes/next/source/lib/fastclick/.git/objects/9f/d0fb1402a4c303aebe2f19463f7e6a1e220cd5","hash":"b830d61384e84ba93984d0db1609bd2d4ad81300","modified":1531386931266},{"_id":"themes/next/source/lib/fastclick/.git/objects/86/c3d4aeba88b97f37cd9f6b70bf2d57a7a21826","hash":"fff2a0379207fb85c1508fc1c63bed957c294202","modified":1531386931497},{"_id":"themes/next/source/lib/fastclick/.git/objects/b1/be81d4f11e36095d68afc4502fdb16aaf944be","hash":"3a5ba6f240fb736ae697059d327f635fbf1bec20","modified":1531386931619},{"_id":"themes/next/source/lib/fastclick/.git/objects/cf/abed7d73eee3176b90b91f3dd656666d8c639d","hash":"bda6cd7c2f9d7b568498f96a3d4248563034eabe","modified":1531386931341},{"_id":"themes/next/source/lib/jquery_lazyload/.git/refs/heads/master","hash":"ffca309262e3481ddc8a642c00d96ba47da8dca4","modified":1550414222274},{"_id":"themes/next/source/lib/fastclick/.git/objects/61/c39a632ceeb8d42b91481c0b54970cf035267a","hash":"dfb032f767e71a01cf332cfec0eca764ae7073d6","modified":1531386931210},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1550414221964},{"_id":"themes/next/source/lib/fastclick/.git/objects/b2/5dad1c30c8b4830293330b60d39c75f7e3886e","hash":"8206eb6b273e8e6ac85535f0f7a645d3c3394885","modified":1531386931307},{"_id":"themes/next/source/lib/fastclick/.git/objects/ef/3f987c6490745eedd60367aa3c25413f69879d","hash":"b9bdc7896f4e609871226f46720d5e425e0f65b5","modified":1531386931587},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1531386990336},{"_id":"themes/next/source/lib/fastclick/.git/objects/3a/f4f9d6f14e39b48e9c449de1c660e245a2bc27","hash":"bf9503b3af60d018a7b9ad9e177b424b14a970e5","modified":1531386931532},{"_id":"themes/next/source/lib/fastclick/.git/objects/cf/0642795f0b53282dac0e2978ae6d1b03b365b5","hash":"7c8b1e12e4d34a5e3295e98f25a3529a7f33479e","modified":1531386931567},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/0d/fe01dbfc3817db9740f7d9593e6c0d0ce4bcfe","hash":"40d7c408638a545f5d206dacc7a666562ae863b6","modified":1531386990266},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1550414222009},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/3a/9ca03dafb2e0a3ee0132e998e1f95146a1187b","hash":"b2a3ed46595b48486b9ba48cc3718cb981f62533","modified":1531386990500},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/49/94fde5a528c6dcf575d1300c9feb7a790580dd","hash":"849400735df951aba8ed44ba0a66b4d7c13c09a8","modified":1531386990533},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/a0/bb6371002f36c275d90ef0a78f4e951c1b36a4","hash":"e73b2d57d9528243fa4163d4078ff74f274aa159","modified":1531386990466},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/99/99f3981a0f624ec98a63f2bef6b59ab5a4a130","hash":"e3318de2933bd40a6b707e06d63d97a72d2a41b6","modified":1531386990302},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/b8/7cfcee7b6c989840000d9f5e3bfe75287e7450","hash":"51ead0dc580f672ab9fab6ae4b4b49918b813574","modified":1531386990234},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/7e/6c9d90608b7b346b87da90c2aa3389822a5872","hash":"5a939a822a36748559b6b67651f48b82d6d9a209","modified":1550414221930},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/fe/a9333a5d0d257dd748e4348bd97a5b71075026","hash":"a093eb542e88824fac9dda1103bb8def2c565ec6","modified":1550414221891},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/1e/6843316b3b3be83c6296e38edbcf7a1a389eaa","hash":"b85a7e69e5655a3e37e9fc6d0f7e2bacdbff58fc","modified":1531386990444},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/92/9d3c446aba8ac3a7854bca3fa99071ec0f1b0a","hash":"324298d9a7b50c2a0640053f01aeaa53e8d1a7ca","modified":1531386990414},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/cb/5cc9434249607fc442175e3e6c31f3a8cb7a04","hash":"ee1bd67de46a7e6c3a47a1abe0487a2b741d6be4","modified":1531386990367},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/heads/master","hash":"2ee6de806b25b0f8bdc70c5c5051a3bc6d243f30","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/34/73a532c76c2ec7eaafc9bba9bc37851cb5a349","hash":"991d675a7982030fef4e8103ecdf717e2e153143","modified":1528350982000},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/08/d4d5ef639d45881e2c31089252871109b3cb0e","hash":"e1d5e486a1d20a1cb219a6998fcb9549f84ca0a7","modified":1531386990189},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/0c/97d452adf1f9aa29468c10dc5aca581c40d35d","hash":"8247b73544627904f1c49b2d48e8a5ca24c49d94","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/35/b5765a89abcc57439ad0e7b60dc67225e76570","hash":"b020fa3885506f64651a4a63d42b32c7874a072a","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/10/7997cd9f09e787407d6a579bb0ead61ba0c44e","hash":"a7bb772e0f541b9f0c5e4682f88881faef7d2b87","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/51/e4a626dc726971ce48b9d29531ec4fa11ab93c","hash":"8bc98d2bd4f224fbba56e0339ba9e1abfbd0e676","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/63/ce5669cda10d9c600a65df1c509155a9dce354","hash":"e7eefb05c18a77c99c1044dc53cc0b33bc4bc723","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/80/8d63b637e30043e74f5150047c232028ffa3bf","hash":"c7cd9201316a2cf66b63cd0f520dc827912d8be8","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/1f/9bfac8ac3b22f100c85bb82877c7af973f011a","hash":"74f0088767a48b5b8874bb5e8953604058233105","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/72/38adfc9f0b65e7dd8e7eb39b53fd8dbd05728d","hash":"67f5fb35cbbb4625e049368c8ef7fef03e21315d","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/b1d62571d3374de0902fdf14c3fd925263c295","hash":"f0d087a62296e14072d250d0db5bfeb01e3e0f4c","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/46/66508d485306f48ac866f4a0eded896b01adb0","hash":"a37ee79e50b83b3a5a7f736cfc6b8eafc210ebca","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/96/b1227c70e63f95b099993321043a2e05abdbea","hash":"d1f0885e3a68fdfc87e68e5ba6b60de116c3c7a5","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/49/c5d2b0c8ded3a5465f659504d5654759b45ce9","hash":"133f2916c8dd706d9ea44203f671d42abed6d183","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/ad104add4d67baba615eccfcc7876bdf60256f","hash":"787497f0b2a074be846ae940ba58475a830690d4","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9f/e80d3fee719ad9953c0e8e8dec472bb727d17d","hash":"09516f8a3f62a9e286f3ac1985969d0913d53271","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/a1/5c0ab3f7ca37d06a7a3dc28f6375ac8fcaffe1","hash":"3aa24fa2254a71f9b408a01ad7154cc1cbf7cde6","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9a/563a770314159840897f1852b05f183911ae71","hash":"0949c3c36849e955c84cc66f544fbeeca266ae19","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/99/ac01b3cae78a765c45566d5540596f71f0f9ed","hash":"394e54788569a0aef47f5c1867b7a617d314b677","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/bf/839b1a2dfd79af314506907196f817d1d540b0","hash":"196a52782c02c03b787cca10ca172a6be6ddb8e0","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/eb/83c3470835cc056d65fbaec5ba59fc01a341c6","hash":"a48447a56db4dce3b2ce99fcfd4cbb5d5902877f","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/da/3a5548a43813122821bf626fdd51a15f89afe3","hash":"1d8c39585806e5c7b051eb58d566a399b0e77006","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/b4/8a9ad41dbacf220607a3854e23f2136ced96fb","hash":"81ee83b48edb7df4f08573cdd14200be5f62128a","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/aa/f4e31e1d4ea073ad9f6926e146fea3c6d8b423","hash":"7c412d2a2243907dff0a1940f13a539675d76428","modified":1528350982000},{"_id":"themes/next/source/lib/pace/.git/objects/1c/159365320ef5dde63906912f3df067376b40d0","hash":"1dd6b7373c3f9c67e34aa319c9c08fd0f667156a","modified":1532434490753},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/f5/a400ecc881307dc0faa24170ae0a9bcbba861c","hash":"4b82935622bd12041cf7665503ae8e060705e7fd","modified":1528350982000},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/ec/fd49187c43c81ad64c250eac1d63893c073e38","hash":"0e6f432ab1ec9a413655267ad3f62205e2e71f99","modified":1528350982000},{"_id":"themes/next/source/lib/pace/.git/objects/35/a749d823ad0aae6111a76dc501a1170478f376","hash":"e757129fb6bca3170b62b05f3e850e4b55f3ae88","modified":1532434490725},{"_id":"themes/next/source/lib/pace/.git/objects/00/13175fe71888324d9142744034e8296501174a","hash":"0ad0e50f7fe91fe14491924aa4b1e2e8f060a5cd","modified":1532434490309},{"_id":"themes/next/source/lib/pace/.git/objects/53/3d55db0342c2b011ac05703c3b42e88a25c1ed","hash":"c48454760d2e04602a5499188b33d38839c58aee","modified":1532434490709},{"_id":"themes/next/source/lib/pace/.git/objects/41/28e69301ad36a283c0fc523f3aef89644d2467","hash":"d8b985cf431fbdc5b4fa3be89e27db7a3437c920","modified":1532434490792},{"_id":"themes/next/source/lib/pace/.git/objects/4d/fbb499a4f7b2f26a535c335cd66c966ff8b261","hash":"14e4cdcc137045c7efed32f796273d40c9fcef87","modified":1532434490680},{"_id":"themes/next/source/lib/pace/.git/objects/3e/dcd352d2a1a60dbb6a43e7e9f00bab8b55791a","hash":"725bf5094855cd943dd1cd351906fb1ebec1d861","modified":1532434490470},{"_id":"themes/next/source/lib/pace/.git/objects/82/8dcba3c8a21de08d1eb38f2eee453b51543188","hash":"629aad2ee2e564790e78cd46e99ad396544960ab","modified":1532434490504},{"_id":"themes/next/source/lib/pace/.git/objects/60/0378418401f2b0e7c58407a7bbc5a5196cfa51","hash":"20489d796247dda758599f40cbfcf14d194ef64a","modified":1532434490260},{"_id":"themes/next/source/lib/pace/.git/objects/23/4f9b3e93f06a85cb2ec01acc872ccdc2bec7cb","hash":"63f8640eceff35a80175a102fcbd8789e690cfaa","modified":1532434490337},{"_id":"themes/next/source/lib/pace/.git/objects/49/0db22b657dd64430d003fe2831905a54858b22","hash":"43694656c4c331cfa3667afca630bd486ac0d0fe","modified":1532434490658},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/f5/fc2c417f7156d25437bbe069fa10645b4c3a63","hash":"377e0fce80cab14d6966371260926ee78da12b09","modified":1528350982000},{"_id":"themes/next/source/lib/pace/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1532434490282},{"_id":"themes/next/source/lib/pace/.git/objects/8b/b4535a79cc15127f8906b24c4e0bb4a38a5947","hash":"9c2d65a63f18929b09f3592dda064f24309ff98b","modified":1532434490580},{"_id":"themes/next/source/lib/pace/.git/objects/97/1e8a1f2ad6d45f693980c106af0aead9d1c215","hash":"e45f0963920a53a57f6b53d178e5b05a8e315189","modified":1532434490404},{"_id":"themes/next/source/lib/pace/.git/objects/84/a17ac7b4fe9cea559de91f00af88f810bff7f1","hash":"b41b6d3cbccd75b711f0523bba1c26bf19b0a862","modified":1532434490213},{"_id":"themes/next/source/lib/pace/.git/objects/c0/05c71f1a000d8187df58083d215c962d7f5505","hash":"dffd212ca2ec705233fabe82a6f483d6be4b151d","modified":1532434490547},{"_id":"themes/next/source/lib/pace/.git/refs/heads/master","hash":"3190f62cf3c4f9eccb1e54c8f7289ed7e6955767","modified":1532434490885},{"_id":"themes/next/source/lib/pace/.git/objects/aa/813c5a6398600e01b740696cd889eb3becad84","hash":"c62a1513ca820dc59fe1cd6d9ec16c92e0e2fbf0","modified":1532434490358},{"_id":"themes/next/source/lib/pace/.git/objects/de/79ab6539ac3702aaac64b879d95e6575f4eefa","hash":"0046fefd52ed4679e0fee757cc91ced94e3ddc12","modified":1532434490770},{"_id":"themes/next/source/lib/pace/.git/objects/f3/0e0a99bb016267bde55537dd47b3657ae59544","hash":"8bf0bc17a6111b6a82981073133f33cc8e815c41","modified":1532434490436},{"_id":"themes/next/source/lib/pace/.git/objects/a6/dbd9c99e726f621e2bdcd3c6fe2795a5d4272d","hash":"25350dd31f504af7206610ced355d162aabda8dd","modified":1532434490636},{"_id":"themes/next/source/lib/pangu/.git/objects/37/180cbe56dc95fe1a9e0b3de00b61b11aff3e7f","hash":"193cabbb4af1308bec54a5b99b35385ca13ea5ac","modified":1532526840000},{"_id":"themes/next/source/lib/pace/.git/objects/9b/3058068409f2282607ebb91717d7a6a1406230","hash":"651c5857021e11dc397df86dbe0f01e6c7dc7f16","modified":1532434490603},{"_id":"themes/next/source/lib/pangu/.git/objects/08/52519b95abd33154998c5680271aaf67f8e106","hash":"f8c789e5cf42a5dba5ad7fa380bc45ce80df80d7","modified":1532526840000},{"_id":"themes/next/source/lib/pangu/.git/objects/f4/f5a021a51f1d1793884318fd2f5a5498169a6b","hash":"c93b4a05458b1d11e943e9eb88a894a37a3b2dfe","modified":1532526840000},{"_id":"themes/next/source/lib/pangu/.git/refs/heads/master","hash":"20ecc53983248064b3342e28a181958762f8306b","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/.git/objects/e8/f4305b379951c7f220930e72e9c621fb3469ef","hash":"6989cfa9149252690b2897e5f8a28675e257e822","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/.git/objects/ee/34b05fd5e668a48ec9108c61a9cb7fbfba3462","hash":"07e1e94f3ffcbca994bc631830665fc56517899d","modified":1532526840000},{"_id":"themes/next/source/lib/pangu/.git/objects/f7/bd3c723d5b2947d4d0b7c0e5ce118054f22c2b","hash":"b26d8ef5455e3b929a64166af6bb4f89fa4d351e","modified":1532526840000},{"_id":"themes/next/source/lib/pangu/.git/objects/7f/afb14e3df3d5494e74aa96d5b25fe0dee7c787","hash":"d9a7aa765fcef890d16c2d65f853a01ab9ced476","modified":1532526842000},{"_id":"themes/next/source/lib/pangu/.git/objects/6d/0d46c3fbd28f9537143108712f9941ab8363f8","hash":"07befbdc872ee282846ca782852ef7163ad7f385","modified":1532526840000},{"_id":"themes/next/source/lib/pdf/web/locale/ak/viewer.properties","hash":"393740e133a14174dc401207b08db038e42de63c","modified":1554266992489},{"_id":"themes/next/source/lib/pdf/web/locale/an/viewer.properties","hash":"092559e9d02bed540d3d211482963112c2397942","modified":1554266992489},{"_id":"themes/next/source/lib/pdf/web/locale/ach/viewer.properties","hash":"3a662c44188940c4dd4ec9c6dcc43f69a70ecdca","modified":1554266992489},{"_id":"themes/next/source/lib/pangu/.git/objects/fa/62fee9eeddb232bd001f58f0ebd30e947db226","hash":"2e20bce6f6a81710e6e067681944a9ca13a13c35","modified":1532526840000},{"_id":"themes/next/source/lib/pdf/web/locale/ar/viewer.properties","hash":"43b49f044616874ad774fa9ec0bf320a6c811309","modified":1554266992489},{"_id":"themes/next/source/lib/pdf/web/locale/as/viewer.properties","hash":"4c4c2ece223f35d1f09eb294025e986570ccff9c","modified":1554266992505},{"_id":"themes/next/source/lib/pdf/web/locale/az/viewer.properties","hash":"0631e227d08a5fa163a22d05a507300d44bcbe0c","modified":1554266992505},{"_id":"themes/next/source/lib/pdf/web/locale/be/viewer.properties","hash":"2ac4e95e3338c69cb569f3a0ac4cecb3ae5672c0","modified":1554266992505},{"_id":"themes/next/source/lib/pdf/web/locale/br/viewer.properties","hash":"9926124bd10e9d1e40c60b50f1515018ca68870d","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/bg/viewer.properties","hash":"97833a1bbb1e067b5989c509385009928a81f82f","modified":1554266992505},{"_id":"themes/next/source/lib/pdf/web/locale/bn-BD/viewer.properties","hash":"3e4969e9fa4efb18ea15becb00b5f0c0ab493c73","modified":1554266992505},{"_id":"themes/next/source/lib/pdf/web/locale/cs/viewer.properties","hash":"509f13fdbc1f33edda81bbff3824a79337d0c041","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/bn-IN/viewer.properties","hash":"d60c98500b03645a19c0f85e56d86de1b1460ede","modified":1554266992505},{"_id":"themes/next/source/lib/pdf/web/locale/ast/viewer.properties","hash":"17736dd4da6b8e294dec4635298740576752b9f5","modified":1554266992505},{"_id":"themes/next/source/lib/pdf/web/locale/ca/viewer.properties","hash":"8b37cd2791908e8c1386b679fbaa818c3075f8c7","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/bs/viewer.properties","hash":"caadd07af8be19f326d8db35776b2522873c1707","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/cak/viewer.properties","hash":"d7bedacf415c04365fcd8433ea43e79e09434a43","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/csb/viewer.properties","hash":"ac3068416ec117b66a923258f1ca791e6696c5f1","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/crh/viewer.properties","hash":"c240dcddeb46b8e9284013f31892dd918c3c0e10","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/brx/viewer.properties","hash":"b2d684221408c68205917dc188b2c9ccd3e68536","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/da/viewer.properties","hash":"38249acdefa0c8e7fd14f69934002d812fbf47ef","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/de/viewer.properties","hash":"d898cdd983f51bf5a165944df986f0f69f29c5f2","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/el/viewer.properties","hash":"3a667280b9bd7af1e30e3a73eac821b0357698af","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/en-CA/viewer.properties","hash":"10f1e27c6f8de390db643be9a7a28ad3aad8741e","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/en-US/viewer.properties","hash":"3be99e3a2e34cdc0308d5acf9b1f34c38a65b382","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/en-GB/viewer.properties","hash":"c16a0be94120a2477d8af8286e53e75502e849ec","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/en-ZA/viewer.properties","hash":"b009b190d99fcaa116becc99ee8d7b5442a6509d","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/es-ES/viewer.properties","hash":"18c4a0c4c25a801b9b88cc5e476f3833dcd645f3","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/cy/viewer.properties","hash":"39ed35e773bc41599da20810ba183a5f5e6b0514","modified":1554266992521},{"_id":"themes/next/source/lib/pdf/web/locale/eo/viewer.properties","hash":"020c1c322dafb2693c150358f61acb185aa6618c","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/es-AR/viewer.properties","hash":"4ebe62b3c0938e8ff52d9842cabeecc4920534aa","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/es-MX/viewer.properties","hash":"efd4d7c86d9367fd6b956cd27b5bebfb2bbee703","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/ff/viewer.properties","hash":"fc88c0cc728eec1bb6c634171c2bd982ed6df172","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/eu/viewer.properties","hash":"626afc5c3c2d25c1526ac1a4fb0fc11093e6364d","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/et/viewer.properties","hash":"7d39a6e781248c51067203cc51c285fdf600ddbc","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/fa/viewer.properties","hash":"9f46862dff18bb1fb4d46741e1a1df119daff8cb","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/fi/viewer.properties","hash":"e20fdcf3c92363913d83558a2c7af75d5a7b157b","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/gl/viewer.properties","hash":"76d235d529a6ca27020508921bc30347967e3983","modified":1554266992567},{"_id":"themes/next/source/lib/pdf/web/locale/es-CL/viewer.properties","hash":"21670d928d8070a3b64640ef5b1f7b42eb5f123c","modified":1554266992536},{"_id":"themes/next/source/lib/pdf/web/locale/fr/viewer.properties","hash":"36f631e44dbc8235097c80e9189f16a0cb53fa9a","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/gd/viewer.properties","hash":"96c7439fe7c71fb3485421baab84a93f46572345","modified":1554266992567},{"_id":"themes/next/source/lib/pdf/web/locale/af/viewer.properties","hash":"c945a9847e7da924b32f1a713fefc9c81fd2b4e7","modified":1554266992489},{"_id":"themes/next/source/lib/pdf/web/locale/fy-NL/viewer.properties","hash":"b4759b9968cab45a83c2b79d11612f012621e9a0","modified":1554266992552},{"_id":"themes/next/source/lib/pdf/web/locale/hr/viewer.properties","hash":"bfceb0e249f9221dae03e5707b7cda9a11d5e773","modified":1554266992599},{"_id":"themes/next/source/lib/pdf/web/locale/gu-IN/viewer.properties","hash":"a89948f3e158c612f79d6434d4d754542a0084a1","modified":1554266992583},{"_id":"themes/next/source/lib/pdf/web/locale/hi-IN/viewer.properties","hash":"03f12e6e9efde305eea7097accd016fefa9b579f","modified":1554266992599},{"_id":"themes/next/source/lib/pdf/web/locale/gn/viewer.properties","hash":"47772f8726c58d5bffc0533ed42b65f7c4643420","modified":1554266992583},{"_id":"themes/next/source/lib/pdf/web/locale/he/viewer.properties","hash":"9207d4ed5d570efcf435c2913a37c5a0771b5529","modified":1554266992599},{"_id":"themes/next/source/lib/pdf/web/locale/hu/viewer.properties","hash":"fbb3ceee5b178867c13aa39204d2303ca40bf104","modified":1554266992599},{"_id":"themes/next/source/lib/pdf/web/locale/ga-IE/viewer.properties","hash":"6dd3628c1b52c95f65d09cda96fd191e348262d6","modified":1554266992567},{"_id":"themes/next/source/lib/pdf/web/locale/hy-AM/viewer.properties","hash":"0275c5d6365b82fad279d7247f37c4bda8d889c4","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/hto/viewer.properties","hash":"119e206f8fd29b00c302e0f7c54af5f65cb328fa","modified":1554266992599},{"_id":"themes/next/source/lib/pdf/web/locale/ka/viewer.properties","hash":"9ac45acb763ad19399cd40b9850bf3b4cf8dc17b","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/is/viewer.properties","hash":"a6a348f3f2ee08a6153ff775ab98cbba69ab683d","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/ia/viewer.properties","hash":"998abe05165139707f0c50eec508a2f4e3f54ad5","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/id/viewer.properties","hash":"3ff8de58f1adec7f681c0d3e50a816edd86391e5","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/ja/viewer.properties","hash":"03e9682dc1116d0670c66f366eb2c33e7c7cb281","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/kk/viewer.properties","hash":"ad47c566983ba98ed6213376483251915206722a","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/kab/viewer.properties","hash":"ef2a2f36b7690b0f5216d4d53c12194c6130a63b","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/it/viewer.properties","hash":"b8771ca6f2c190f2082fcc3b59d824d146230f8a","modified":1554266992614},{"_id":"themes/next/source/lib/pdf/web/locale/kn/viewer.properties","hash":"28e09ea4f3cde7e470e74d0a8557e1b3e934850b","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/ku/viewer.properties","hash":"073c3cdbf0e3c78c481783c7c157748479fd79c4","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/ks/viewer.properties","hash":"00666727634c0e5d15c91e05c7363346f01ba263","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/kok/viewer.properties","hash":"a9d38f6cde30ffb8faa2903a047db57d2cc8f23e","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/lg/viewer.properties","hash":"4b8df077503c36aab12013cc2f26d9eae50d7317","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/km/viewer.properties","hash":"4373bd9fe1ef8180be9b8e2ebd2c30094e21e966","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/ko/viewer.properties","hash":"c3ad3340ffda6b1f890a224b1385920b538a0077","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/lv/viewer.properties","hash":"1640bdf95c269a97298cc578e052047fbfca8ecd","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/lt/viewer.properties","hash":"747085a9cb36738a6f8647b1bae5b9529c93a5db","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/lij/viewer.properties","hash":"cf4b9b1a8a2f537f183219d015c0040f4041c0ef","modified":1554266992630},{"_id":"themes/next/source/lib/pdf/web/locale/lo/viewer.properties","hash":"811f3a8a85a1ae3faec1bf5da5aebf929a153592","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/meh/viewer.properties","hash":"5c7d7aea361158dabb3381043f1294d942463035","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/mai/viewer.properties","hash":"32bee1a3a904c99d59b3d90c005bb0c7977ecb17","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/ml/viewer.properties","hash":"aed97e4ecfc595fdbdc8a13eac66f69a0b4bb6f0","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/ltg/viewer.properties","hash":"af0c068b833dfe1b8e8ca0ac17a582a280c75c84","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/mn/viewer.properties","hash":"1d06c67375bc61303b86c6236f3a8127ce4a20ba","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/hsb/viewer.properties","hash":"bd9a840b3428c582be5ffeb090949e06781270d1","modified":1554266992599},{"_id":"themes/next/source/lib/pdf/web/locale/mk/viewer.properties","hash":"7f29395c7586dd2071204fdf938b6eebd6333063","modified":1554266992645},{"_id":"themes/next/source/lib/pdf/web/locale/mr/viewer.properties","hash":"67b8ad87988055b845f96f1e3e9933dbb47989b5","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/ms/viewer.properties","hash":"832b07fa0e2b4a7f7efaeaa746c13f35a675cdca","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/nb-NO/viewer.properties","hash":"db499cd32e8f4e30119d2002722015a000c8fb77","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/nl/viewer.properties","hash":"8b2a65c2ac49c79030e16674eb03511881abd170","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/my/viewer.properties","hash":"e11c729b33fbf2e3a7a698d005d7d1e9e6916466","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/nso/viewer.properties","hash":"d8fa7daa40bd6a2cadbdc136da72a92b0b863d3d","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/pt-BR/viewer.properties","hash":"584f6d66a630eddaf01b91320bfc0d675c0f9fc8","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/pa-IN/viewer.properties","hash":"0deb1cf6b305a2cedfd4c481f812b90cabe9e867","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/nn-NO/viewer.properties","hash":"5ab9b6dd1e1e6fbf118f63841f4a68497595a5d6","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/rm/viewer.properties","hash":"92afbd1da165e141b9b700a83e6bf4e5ce25c055","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/pl/viewer.properties","hash":"727c63597fa71afc174c9e59eb32359b590f7f8b","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/rw/viewer.properties","hash":"196bae3faba1aa0e3a63f97daa3da2f3d6433863","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/sl/viewer.properties","hash":"d72c2f848acfdc627bddf1d7457094d52007b816","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/ro/viewer.properties","hash":"2201a014977cfeae4e4c331b1ff0786d961348b7","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/pt-PT/viewer.properties","hash":"ed04835017a33d05ec37e744113c93e6aa925aa9","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/sk/viewer.properties","hash":"beabb2a210ed599b7cc8d9f5d00c3138747e93c7","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/ru/viewer.properties","hash":"54afa4bfebdd9d2e446025c77a0541de68ff14e7","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/si/viewer.properties","hash":"5239cd798f7e0e9d163ed99fd77bca446104768f","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/sat/viewer.properties","hash":"e98f10bbe8d2312af977dacfea0d4eb91607b350","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/sah/viewer.properties","hash":"6289005724a86c7f13b53cdfdf514d89ba549ffa","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/sq/viewer.properties","hash":"333d4acecc5ca77439bc6f2a182ea25d6fdd637f","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/sr/viewer.properties","hash":"a7d6c27fc8b6c3ad52110c451b685624a1e5ac45","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/oc/viewer.properties","hash":"2abe0eca7286b8e9521497e5c173025f8b95e643","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/or/viewer.properties","hash":"d07d18e60dbb54b30d11b1956eb31edab072160a","modified":1554266992677},{"_id":"themes/next/source/lib/pdf/web/locale/sv-SE/viewer.properties","hash":"076703f13aacad061c0cc5afd5f06ccc71241eaf","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/sw/viewer.properties","hash":"1c7a1fafc02ae5e4c95fdc6f82e801b67b8256a2","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/ta/viewer.properties","hash":"bb655a70c1a825af3bf45ea6f879e47f8d244c3f","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/ta-LK/viewer.properties","hash":"ab5a977852adbe26ed91035befe1c06f46bf00f7","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/te/viewer.properties","hash":"456e430710ea7f27ad109c9b917a5bb74b6d2b05","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/tl/viewer.properties","hash":"15b7c1f2416c1c4913056d4235881cfbfed5a3cf","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/tr/viewer.properties","hash":"1cd918ec0a2034e56c67f3820f85285d8e64248a","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/ne-NP/viewer.properties","hash":"5bed5986d1ab82d465f23da50043826a62b369a0","modified":1554266992661},{"_id":"themes/next/source/lib/pdf/web/locale/th/viewer.properties","hash":"a2f51c60a11189b5202f8a1b61c610c2a77de95c","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/son/viewer.properties","hash":"ea92cd2fc9d75e6473b1eae2ee596073419eba14","modified":1554266992692},{"_id":"themes/next/source/lib/pdf/web/locale/tn/viewer.properties","hash":"4cf92ca2a24aa58346eb72933728633fcc504029","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/web/locale/ur/viewer.properties","hash":"bb0db266837c9b439b917fdd062b9426dd4a11c9","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/locale/wo/viewer.properties","hash":"3ac1807225501636c4ec9288d40960308ae0bc31","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/locale/uk/viewer.properties","hash":"b6336586b5390b24d5b5a7a2a7347117077b3d57","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/locale/zh-CN/viewer.properties","hash":"7246df669a1d289be4be0462ca0b9183f7d0d030","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/locale/uz/viewer.properties","hash":"287071ce4b050c63a01e6d4be4adf01abc9951fc","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/locale/zh-TW/viewer.properties","hash":"91b00b49bf61411ba5825930208755d00d63d05e","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/locale/zam/viewer.properties","hash":"80f3313d41662607168500a7839c1a6b3101916b","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/web/locale/xh/viewer.properties","hash":"cd0179cae55e708304cc15a30711bccf0b182cb2","modified":1554266992724},{"_id":"themes/next/source/lib/pdf/.git/objects/pack/pack-c5c83c7062ee61fcc4f772393d054e2cd82a5b64.idx","hash":"f6cd887fa62b3098d3e851d9fd129c82cdc9d892","modified":1554266991896},{"_id":"themes/next/source/lib/pdf/web/locale/tsz/viewer.properties","hash":"548b6fc7e5c308664c7ef7720ccf7ed29c87a948","modified":1554266992708},{"_id":"themes/next/source/lib/pdf/.git/refs/heads/master","hash":"c8bc5ea367768dda94fb652b220688067f600e8a","modified":1554266992068},{"_id":"themes/next/source/lib/reading_progress/.git/refs/heads/master","hash":"103d4086937309c9b59bdfec926a6aaaa0212d73","modified":1547875481961},{"_id":"themes/next/source/lib/reading_progress/.git/objects/00/4fa4280892c7d18f6151fac22daf51344c02ea","hash":"7a81ed1087c3792f37bd83137d4034179c911627","modified":1547875481263},{"_id":"themes/next/source/lib/pdf/web/locale/zu/viewer.properties","hash":"4d85e88a91f1e459026e7c589fec193a74972c6d","modified":1554266992724},{"_id":"themes/next/source/lib/reading_progress/.git/objects/01/9a385ce3e8b0232ee5edfa6b4e1dcd44cf142e","hash":"6894d6df0722077c5d21d116f33046625cd57ab8","modified":1547875481662},{"_id":"themes/next/source/lib/reading_progress/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1547875481484},{"_id":"themes/next/source/lib/reading_progress/.git/objects/08/4d73e711ab990007314dab66ac8da236a98212","hash":"aca52af21085b7a579b275a1e7bb5f1a8818e3d4","modified":1547875481529},{"_id":"themes/next/source/lib/pdf/web/locale/vi/viewer.properties","hash":"d0a86916739c71f9ff9383b70c1d7af3a70000f8","modified":1554266992724},{"_id":"themes/next/source/lib/reading_progress/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1547875481507},{"_id":"themes/next/source/lib/reading_progress/.git/objects/01/36e1990fcbef0586e0bd4b9d90b96900dcd575","hash":"37ac2f94a41384f4cb66cd74c8313099367a5603","modified":1547875481129},{"_id":"themes/next/source/lib/reading_progress/.git/objects/2b/c9c88e86c252b037a36df9a3d3df519b254bfc","hash":"e647f9721e4f2e1cd52bfff3c80683b787f76a11","modified":1547875481163},{"_id":"themes/next/source/lib/reading_progress/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1547875481552},{"_id":"themes/next/source/lib/reading_progress/.git/objects/2d/488e7ac12f9be4cba8a7a383e972449b4ecef7","hash":"e477cea6ada0896804b0e8dab23c9d56825a0ece","modified":1547875481340},{"_id":"themes/next/source/lib/reading_progress/.git/objects/48/1ebe947f06e440e41c1a971be0844e852c1d37","hash":"61fea90ca1824db58df6cfc662bc5b371db02224","modified":1547875481598},{"_id":"themes/next/source/lib/reading_progress/.git/objects/36/58085a9181df88f19f04603b28f6ea21d199cc","hash":"6a467dd51d39b28c1af9c25869e25c6821f6602a","modified":1547875481830},{"_id":"themes/next/source/lib/reading_progress/.git/objects/71/4aebae4e17e00cdb0e82893d9fa39d35b20b59","hash":"d09daa7d244ee40035e6eb67f13867182fb8af86","modified":1547875481619},{"_id":"themes/next/source/lib/reading_progress/.git/objects/8f/ca1e70cfeea939105e31d7d17f7c3516120b30","hash":"312d55b1a7fbdcc14c54b3805f0827fc42ad94ed","modified":1547875481230},{"_id":"themes/next/source/lib/reading_progress/.git/objects/8e/0a48f30df2d542c8e86197067f80ce5f794583","hash":"02367707e47c2549ef585f3b2da72c864d6a8307","modified":1547875481374},{"_id":"themes/next/source/lib/reading_progress/.git/objects/83/d5a97b3daaa59cccb44af55f6723f431f2e94a","hash":"448c16fa4f53e5123838d4c3593dcfb15f309905","modified":1547875481753},{"_id":"themes/next/source/lib/reading_progress/.git/objects/98/a2041bc808f55bbcb9d8b53560e22558338bda","hash":"ebb53379aa2d77ea0832973fa3e44846df0f170f","modified":1547875481807},{"_id":"themes/next/source/lib/reading_progress/.git/objects/b1/97881becc7883ad3d3e37cbc6b33f29ef89512","hash":"c044f51aeff15821889c1a2b036ee99b742a35db","modified":1547875481075},{"_id":"themes/next/source/lib/reading_progress/.git/objects/ae/aa7a68a7131bd03e0bce06f45bfdfa1cd93587","hash":"d7d37380ba502a4050834df40227d612cf911595","modified":1547875481774},{"_id":"themes/next/source/lib/reading_progress/.git/objects/a8/63332915ebfd107ca4418c25c80674875c422b","hash":"f12e708237bcf98c072e73e45f1542cfb5646839","modified":1547875481685},{"_id":"themes/next/source/lib/reading_progress/.git/objects/b2/6b015c6a0aacd5fcbd3fd3a09b0b216855f35c","hash":"6924e4c4558366a76578a2497d2fca15ef39a9f8","modified":1547875481640},{"_id":"themes/next/source/lib/reading_progress/.git/objects/a2/7bba2bf42630fc03150b64fc74f2a29c151a27","hash":"b1afe600ba94298a2905a2cf64c900f5954cc146","modified":1547875481574},{"_id":"themes/next/source/lib/reading_progress/.git/objects/b6/eda56cb9647d239b26d86f579204cbccf745fe","hash":"12e479d3dfe08df6f9d4d56be2f0a17d9720d846","modified":1547875481729},{"_id":"themes/next/source/lib/reading_progress/.git/objects/e5/dc795cdf7d9163cc736be938a9707f73869c9f","hash":"57163dfa4eebe09d57ede37ee259b7cbb2b1e643","modified":1547875481197},{"_id":"themes/next/source/lib/reading_progress/.git/objects/c0/018cb7262951a7eea4001bea16bf6c1db1de0e","hash":"b54299894dbbf00b3187ae3e16a480a91ca75e73","modified":1547875481463},{"_id":"themes/next/source/lib/reading_progress/.git/objects/c7/8ceb135b768a369ded42f77d4db3f6363bde20","hash":"aa90e157f2a043dad6017bab2e4aa699f6236a63","modified":1547875481708},{"_id":"themes/next/source/lib/reading_progress/.git/objects/d1/94060fce08431ebef4cb5f4c02739b913373cb","hash":"b9022b117b03703b5fa8af85fc076b692bde33cf","modified":1547875481851},{"_id":"themes/next/source/lib/quicklink/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1553167433868},{"_id":"themes/next/source/lib/quicklink/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1553167433834},{"_id":"themes/next/source/lib/reading_progress/.git/objects/f6/8184f97255dfd504e22775df6450edb9b51d70","hash":"b0a36dcf81780a9f82db6318daa065200e16efee","modified":1547875481874},{"_id":"themes/next/source/lib/reading_progress/.git/objects/f0/acd06a59665dabfb6eb0608f0a797fdcd44158","hash":"f85f3dbe326b8752f6e32c7169ed3b409f4167b7","modified":1547875481307},{"_id":"themes/next/source/lib/quicklink/.git/objects/99/113457b4bc6c60dc08411fc5d217f2805dfaea","hash":"b29dc34f9f9330e2457f1188bc8ba8559a63c981","modified":1553167434068},{"_id":"themes/next/source/lib/quicklink/.git/objects/52/042037798bcdd9a5726448028efaa17f772dca","hash":"95dd799d8f7c87b6a21c2e3a71b7b20eaf1e1ce3","modified":1553167433610},{"_id":"themes/next/source/lib/quicklink/.git/objects/5b/fb1bff7b70e4efdd92493fc9c425448dbf67d2","hash":"31166d650cf0e8e585745153fedc6c90affd2164","modified":1553167433787},{"_id":"themes/next/source/lib/quicklink/.git/objects/82/237e12a9bc524318fd82791f3423a850ba4497","hash":"f59dd24cdc59455ef40a2d3574f46e35957fde8a","modified":1553167434100},{"_id":"themes/next/source/lib/quicklink/.git/refs/heads/master","hash":"abf63b88cb301601e13373372744778305d27a0b","modified":1553167434219},{"_id":"themes/next/source/lib/quicklink/.git/objects/f7/ee626c66d1cead9b19287aa61064219dee34cb","hash":"4541aceb19efe3a1a57f6d82d12ac219fcae2b61","modified":1553167433558},{"_id":"themes/next/source/lib/Han/.git/logs/refs/heads/master","hash":"af19fcc78f3fc430fae442933080a73b07a2e2e0","modified":1532526868000},{"_id":"themes/next/source/lib/quicklink/.git/objects/8f/acf79585e851e57f649f22f6975886e0ff8f9f","hash":"03e4deb2399a210e871c5b0b8a633d4bf1e34580","modified":1553167433960},{"_id":"themes/next/source/lib/quicklink/.git/objects/e8/a7b4ea5b53ee629d6133d59c80baf82e9f7fc1","hash":"8e7ea1bb1e6dabeac62afa7f90c0e12505a1818e","modified":1553167434034},{"_id":"themes/next/source/lib/quicklink/.git/objects/f1/85d082f90ee52bb436706f1fe28d9f2c67885b","hash":"9a713944eb485f928bda96af5ce74220f10cc5cc","modified":1553167433989},{"_id":"themes/next/source/lib/quicklink/.git/objects/ea/c7a903f1e20021b4a2e4ccb1c1ea3c10cdc37b","hash":"4d5363eb11fa64c9ca3f06d2ddae3a30d3f5ef05","modified":1553167433935},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/heads/master","hash":"315e230ba992a1e136c414d8b49ba514659d2faf","modified":1600333270793},{"_id":"themes/next/source/lib/quicklink/.git/objects/c2/54409c5a9195082e66cb0de96dd75dc32eee71","hash":"a8d5ec055ba13e049e47f4e3f6a675043ac42572","modified":1553167433689},{"_id":"themes/next/source/lib/bookmark/.git/logs/refs/heads/master","hash":"b5a93581ce9da4e8ad73cd606b9742a6e578f50f","modified":1533362235924},{"_id":"themes/next/source/lib/Han/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1532526868000},{"_id":"themes/next/source/lib/canvas-ribbon/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1600335100687},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1600333270784},{"_id":"themes/next/source/lib/bookmark/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1533362235919},{"_id":"themes/next/source/lib/fastclick/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1531386931739},{"_id":"themes/next/source/lib/fancybox/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1562899403762},{"_id":"themes/next/source/lib/jquery_lazyload/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1531386990607},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/heads/master","hash":"6b8bcef44226e7456dc11d8a4158707171b79eb0","modified":1562899403767},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/refs/heads/master","hash":"a3022b14cbf112b95b079bb862f5b5a358144b7a","modified":1600335100695},{"_id":"themes/next/source/lib/jquery_lazyload/.git/refs/remotes/origin/master","hash":"ffca309262e3481ddc8a642c00d96ba47da8dca4","modified":1550414222082},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/refs/heads/master","hash":"c2d3ba85b25b7ec2b80dac9a388b5d17ef918e8f","modified":1550414222275},{"_id":"themes/next/source/lib/fastclick/.git/logs/refs/heads/master","hash":"cc27c5e33c35393e2eb924c46542dc1db0458a1f","modified":1531386931749},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/heads/master","hash":"639b2edf30e677eb02991934ddd596ca0a192cb3","modified":1528350982000},{"_id":"themes/next/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1532434490879},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1528350982000},{"_id":"themes/next/source/lib/pangu/.git/logs/refs/heads/master","hash":"462a1cbcfed32927c79dae8926cbbe53bf513579","modified":1532526842000},{"_id":"themes/next/source/lib/pace/.git/logs/refs/heads/master","hash":"d8af30ffeaf7f8527bb5d12e73e77be167957a74","modified":1532434490888},{"_id":"themes/next/source/lib/pangu/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1532526842000},{"_id":"themes/next/source/lib/pdf/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1554266992052},{"_id":"themes/next/source/lib/pdf/.git/logs/refs/heads/master","hash":"16ff4ba1bb67559767440d9ad85003324851d20a","modified":1554266992068},{"_id":"themes/next/source/lib/quicklink/.git/logs/refs/heads/master","hash":"aaacbd213e9711afcf2308446410de7e29143744","modified":1553167434221},{"_id":"themes/next/source/lib/bookmark/.git/logs/refs/remotes/origin/HEAD","hash":"b5a93581ce9da4e8ad73cd606b9742a6e578f50f","modified":1533362235918},{"_id":"themes/next/source/lib/reading_progress/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1547875481954},{"_id":"themes/next/source/lib/quicklink/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553167434209},{"_id":"themes/next/source/lib/Han/.git/logs/refs/remotes/origin/HEAD","hash":"af19fcc78f3fc430fae442933080a73b07a2e2e0","modified":1532526868000},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/remotes/origin/HEAD","hash":"315e230ba992a1e136c414d8b49ba514659d2faf","modified":1600333270784},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/remotes/origin/HEAD","hash":"6b8bcef44226e7456dc11d8a4158707171b79eb0","modified":1562899403761},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/refs/remotes/origin/HEAD","hash":"a3022b14cbf112b95b079bb862f5b5a358144b7a","modified":1600335100687},{"_id":"themes/next/source/lib/fastclick/.git/logs/refs/remotes/origin/HEAD","hash":"cc27c5e33c35393e2eb924c46542dc1db0458a1f","modified":1531386931738},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/remotes/origin/HEAD","hash":"639b2edf30e677eb02991934ddd596ca0a192cb3","modified":1528350982000},{"_id":"themes/next/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"d8af30ffeaf7f8527bb5d12e73e77be167957a74","modified":1532434490878},{"_id":"themes/next/source/lib/reading_progress/.git/logs/refs/heads/master","hash":"20e68acf1aa8af0ecbb9e43025cd789025305f30","modified":1547875481963},{"_id":"themes/next/source/lib/reading_progress/.git/logs/refs/remotes/origin/HEAD","hash":"20e68acf1aa8af0ecbb9e43025cd789025305f30","modified":1547875481953},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/refs/remotes/origin/master","hash":"08b15ad9227104d278525943409fa635a4637880","modified":1550414222084},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/refs/remotes/origin/HEAD","hash":"17fe9b70c977e83b3698441e7992f8104617806b","modified":1531386990606},{"_id":"themes/next/source/lib/pangu/.git/logs/refs/remotes/origin/HEAD","hash":"462a1cbcfed32927c79dae8926cbbe53bf513579","modified":1532526842000},{"_id":"themes/next/source/lib/quicklink/.git/logs/refs/remotes/origin/HEAD","hash":"aaacbd213e9711afcf2308446410de7e29143744","modified":1553167434209},{"_id":"themes/next/source/lib/pdf/.git/logs/refs/remotes/origin/HEAD","hash":"16ff4ba1bb67559767440d9ad85003324851d20a","modified":1554266992052},{"_id":"themes/next/source/lib/quicklink/.git/objects/11/e8067e6c0cdae639117aecc2ca3ad6d888ca87","hash":"72dfc49c3c5a406882d490b97d76b66589382082","modified":1553167433913},{"_id":"themes/next/source/images/alipay.png","hash":"de347d4dbc3f2be544b5e2b06733a0862a5b222d","modified":1600768548575},{"_id":"themes/next/source/images/avatar.jpg","hash":"affe18597d98da53222ea6482034ed77b5991d01","modified":1573919674380},{"_id":"themes/next/source/images/wechatpay.png","hash":"acb49c99f6b50cb8ab9143af18fefb1b3be39a39","modified":1600768563241},{"_id":"themes/next/source/js/jquery.min.js","hash":"62c4042e9ebc691a5372d653b424512a561d1670","modified":1615674054000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1527640136000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1532526868000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1527640136000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1527640136000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1600322443435},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1600322443437},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1527640136000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1527640136000},{"_id":"themes/next/source/lib/pdf/web/viewer.js","hash":"0095be1df14cda75ec26935e3724740e5c71d499","modified":1554266992739},{"_id":"themes/next/source/lib/pdf/build/pdf.js","hash":"eaac663404f1a68c661a6a0c910dd6f3ec301184","modified":1554266992130},{"_id":"themes/next/source/lib/pdf/web/viewer.js.map","hash":"a7ae584397f178eaf0c124e16794979550f15084","modified":1554266992739},{"_id":"themes/next/source/lib/pdf/web/compressed.tracemonkey-pldi-09.pdf","hash":"0d281938d3ff2377541704cab6ba1c4408420733","modified":1554266992317},{"_id":"themes/next/source/lib/pdf/build/pdf.js.map","hash":"698ac4d064bc39f6206b210110b91904323e8118","modified":1554266992130},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js","hash":"ced44c17f40062bf1afc3fcf51dbf458afd8729b","modified":1554266992146},{"_id":"source/photos/fonts/JTHandwrite.ttf","hash":"b6e354da5b485e9ff85f206539113dbaca87cb9f","modified":1605364589430},{"_id":"source/photos/fonts/JTHandwrite.eot","hash":"13e5c8511ae67915760cbb81c8113c50332e9df0","modified":1605365433000},{"_id":"themes/next/source/fonts/JTHandwrite.ttf","hash":"b6e354da5b485e9ff85f206539113dbaca87cb9f","modified":1605364589430},{"_id":"themes/next/source/fonts/JTHandwrite.eot","hash":"13e5c8511ae67915760cbb81c8113c50332e9df0","modified":1605365433000},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js.map","hash":"5e62344fe4f32dbc2c8dfcf5e4fb028fa8799be0","modified":1554266992161},{"_id":"themes/next/source/media/music.mp3","hash":"1dd678a6bd1777010dfdcf7131cdb6da0dd6c7e3","modified":1615674054000},{"_id":"themes/next/source/lib/pdf/.git/objects/pack/pack-c5c83c7062ee61fcc4f772393d054e2cd82a5b64.pack","hash":"506fe78eb0d41015f2b949f12adff9624795818a","modified":1554266991943},{"_id":"source/photos/fonts/JTHandwrite.svg","hash":"4327f3a29570e0c71986061e5df4e5b9f3640966","modified":1605364983000},{"_id":"themes/next/source/fonts/JTHandwrite.svg","hash":"4327f3a29570e0c71986061e5df4e5b9f3640966","modified":1605364983000},{"_id":"public/pjt-love-lyt/resource.json","hash":"797db672476cf09bc06e43b52e0679bfc7d107d7","modified":1664095172061},{"_id":"public/pjt-love-lyt/result.json","hash":"81d92b34ad332ca640721695a2f75a9d4b554241","modified":1664095172061},{"_id":"public/pjt-love-lyt/css/index.css","hash":"091283c7df6fa44706be8741cf85829d3ec76e56","modified":1664095172061},{"_id":"public/pjt-love-lyt/js/sliderClock.js","hash":"038f30c9404963e04f272eee1b3ec30797350b36","modified":1664095172061},{"_id":"public/baidu_urls.txt","hash":"7c3a4ee1b864a427dd872012eb0ae09ae0bfd607","modified":1664095172061},{"_id":"public/baidusitemap.xml","hash":"1b4281f77cdf6a850c8ae2560af71b79c1f0a68e","modified":1664095172061},{"_id":"public/rss2.xml","hash":"0299c258f71a370a0a06cbd4d80fda119ff07f10","modified":1664095172061},{"_id":"public/search.xml","hash":"d1e6a041e91cb062c4d85e0ee6734f3634cace6f","modified":1664095172061},{"_id":"public/PJT的神奇歌单/index.html","hash":"df9ee55fce074d8ebbfb6e8cf93ad94695f25df1","modified":1664095172061},{"_id":"public/about/index.html","hash":"dbe565de17801b1439128a7142d984df21ace2fe","modified":1664095172061},{"_id":"public/categories/index.html","hash":"7a00945047e3ec8f8b7b704e11a2bc7226bf83d8","modified":1664095172061},{"_id":"public/pjt-love-lyt/index.html","hash":"ecda91ff37abbf89cd64f662224ce1c26ac7fc1f","modified":1664095172061},{"_id":"public/tags/index.html","hash":"12a7b08a00086573edb6845580cab0cb80bce10a","modified":1664095172061},{"_id":"public/posts/Vue-1-create/index.html","hash":"29329c0bb5a624845221a690f999453f3201a295","modified":1664095172061},{"_id":"public/posts/TTS-adapitve-TTS/index.html","hash":"2a4de065041bf9bd5f75cdff0c1e054c6b812368","modified":1664095172061},{"_id":"public/posts/Fastspeech2/index.html","hash":"6a6a9cf03dff6e8cc7d2ebb519c0e9326ed8aec1","modified":1664095172061},{"_id":"public/posts/speech-synthesis1/index.html","hash":"3a7fe89a707e97e5e124d7924dd5b2e0f130e801","modified":1664095172061},{"_id":"public/posts/Federated-Learning2/index.html","hash":"369f7bf0fcf2db4e24bceee1f3095076153b2723","modified":1664095172061},{"_id":"public/posts/Federated-Learning3/index.html","hash":"840a2d3140a0558318f82dab77f681a40ef2b7b4","modified":1664095172061},{"_id":"public/posts/Federated-Learning1/index.html","hash":"34009378a5cc3233d0a13360c88899d09d7c76d9","modified":1664095172061},{"_id":"public/posts/net-freight/index.html","hash":"094c2c8bec6c7ccad1d34ec76a94924a00c74ce1","modified":1664095172061},{"_id":"public/posts/spark1-basic/index.html","hash":"312fbc8956d258e9176ec158fbad7e4260fd91b0","modified":1664095172061},{"_id":"public/posts/spring3-1-pet-user/index.html","hash":"2fe77b169af5478e9e3c403d3bcdf8cde785e326","modified":1664095172061},{"_id":"public/posts/spring3-autoConfiguration-and-Bean/index.html","hash":"eb567717858694442565e2e793da5995cfb8e868","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/index.html","hash":"c6c7446f30df7c1c4972758f8294fe90bb1ecf2d","modified":1664095172061},{"_id":"public/posts/spring1/index.html","hash":"43e15461c930328fb05b676724154a2b333bf5d1","modified":1664095172061},{"_id":"public/posts/dl-13speech-recognition/index.html","hash":"c08c3d15a6de87813775941d1bcd44f93a4ada9b","modified":1664095172061},{"_id":"public/posts/dl-12GRU-and-LSTM/index.html","hash":"57004589fc95857fc9fa8e889e8793118a412b55","modified":1664095172061},{"_id":"public/posts/dl-11Language-model-and-Sample/index.html","hash":"26f32c9ec4a402459ddf86741db7b21ab918beae","modified":1664095172061},{"_id":"public/posts/dl-10different-rnn/index.html","hash":"a39d409e6df46c1812616c71ad12f03c8c70d545","modified":1664095172061},{"_id":"public/posts/dl-9Sequence-Models-introduce/index.html","hash":"c924c8a5e6df19bf00f5a83ad434d313132e65a6","modified":1664095172061},{"_id":"public/posts/dl-8Gradient-descent-for-neural/index.html","hash":"b67902a9e4ddd096e0bbe347b41e2a6d9ec045d3","modified":1664095172061},{"_id":"public/posts/dl-7activation-functions/index.html","hash":"72e51abf382cae2e5931bd5efd9ca866b61ffb66","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/index.html","hash":"1bf97de72f765f89553f45076ca4662be9b7cb27","modified":1664095172061},{"_id":"public/posts/dl-5vectorization/index.html","hash":"5ec5b45428eca087bd0a5db0d04f27cc62191c54","modified":1664095172061},{"_id":"public/posts/dl-4Gradient-Descent/index.html","hash":"beb4468dc0cdb1a0478b80187d28915291019823","modified":1664095172061},{"_id":"public/posts/dl-3logistic-regression/index.html","hash":"f4f8bd3d4ae410f6f404a6fb033ac3590be82484","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/index.html","hash":"027c660019927f4fbd62cd0644a00de630b0c949","modified":1664095172061},{"_id":"public/posts/dl-1definition/index.html","hash":"78fd213e7dbeec8e881cda245a8facb351e0ba74","modified":1664095172061},{"_id":"public/posts/aws-4deepl/index.html","hash":"a5970b182c939bba086c53bc6c7a5620c912feea","modified":1664095172061},{"_id":"public/posts/aws-3manager/index.html","hash":"6d03492310c3373677c3575b0581021bea339203","modified":1664095172061},{"_id":"public/posts/aws-2staticweb/index.html","hash":"ba4c25be20adc6d4a2b698fc6af975c9c144e9b3","modified":1664095172061},{"_id":"public/posts/aws-1register/index.html","hash":"7fa4daddce81ee9b1104ddc7c57b06d7ad126461","modified":1664095172061},{"_id":"public/posts/51-2/index.html","hash":"fdf589b4c0798ad38b5fafaec4bf34eca2178c4f","modified":1664095172061},{"_id":"public/posts/51-1/index.html","hash":"9d76efc4051de2b34b314bc9d588622c12f18951","modified":1664095172061},{"_id":"public/posts/ziti/index.html","hash":"222c20ec1f41442a13387c53b959552aba970925","modified":1664095172061},{"_id":"public/posts/php-7oop/index.html","hash":"cc5a114f8c1db53212d2f76f708015d20ed12ba0","modified":1664095172061},{"_id":"public/posts/php-6magic/index.html","hash":"3dce79fc8ca7c04b1b22ce6fc203b9d4f74e283e","modified":1664095172061},{"_id":"public/posts/php-5superglobal/index.html","hash":"97abc7dd96f4b4fdf274f616715f236aa88b208a","modified":1664095172061},{"_id":"public/posts/php-4array/index.html","hash":"b968823b56f437ba57f7c9d898fe2339b9dcd04b","modified":1664095172061},{"_id":"public/posts/php-3oprator/index.html","hash":"782477970a71ff824bb4a78a6a08bb9707b228bc","modified":1664095172061},{"_id":"public/posts/php-2EOF/index.html","hash":"d2eac19eaac28326d267ab1a7833277d767b88b3","modified":1664095172061},{"_id":"public/posts/php-1var/index.html","hash":"d8b67bcb6b27559da24ac31cb38f1cfd38ca93de","modified":1664095172061},{"_id":"public/posts/suibi1/index.html","hash":"6b2b1c19de7e051f2c8b7be5be2b62cc5c6c6946","modified":1664095172061},{"_id":"public/posts/go-18defer/index.html","hash":"b360ab8f146a7f5864ea23c48971952107b0247c","modified":1664095172061},{"_id":"public/posts/go-17bingfa/index.html","hash":"b1f6271ea51f29d424e8d33431a9bcaea26d7926","modified":1664095172061},{"_id":"public/posts/go-16error/index.html","hash":"d1a6b1ca86c766447ff22562349cbe36c51db0ca","modified":1664095172061},{"_id":"public/posts/go-15interface/index.html","hash":"3f252017bd82604ff42e2f9fe314b5bd7b7e31bc","modified":1664095172061},{"_id":"public/posts/baidu-push/index.html","hash":"f0340f979213c43e772999ca521e9ea3058526bd","modified":1664095172061},{"_id":"public/posts/go-14map/index.html","hash":"87221c2b52f2a15af47c4d60382376640b80ca2e","modified":1664095172061},{"_id":"public/posts/go-13range/index.html","hash":"915faf44c850775c16cc0b3d375e164fcdc42e29","modified":1664095172061},{"_id":"public/posts/go-12slice/index.html","hash":"082d1ba3629071a65bfa0c4a672433ffb79aff4a","modified":1664095172061},{"_id":"public/posts/go-11struct/index.html","hash":"6bb072a1835d5876ffa25c3bf56c5924b7a79d4d","modified":1664095172061},{"_id":"public/posts/go-10zhizhen/index.html","hash":"34e0400ed8283b4211e6ff979666a4cf6225f02d","modified":1664095172061},{"_id":"public/posts/go-9array/index.html","hash":"c6251fe4f5ab2259117d65a101dcfd3832c06e92","modified":1664095172061},{"_id":"public/posts/go-8func/index.html","hash":"5ba0ac42a544922f60c68b71abd2472316b169f7","modified":1664095172061},{"_id":"public/posts/go-7xunhuan/index.html","hash":"14c56b66bae7a8d1f1fed52c50fddf226c7e1d16","modified":1664095172061},{"_id":"public/posts/guanko/index.html","hash":"1b8b8477ca51e656a1a73949e2014ab5a3536264","modified":1664095172061},{"_id":"public/posts/go-6tiaojian/index.html","hash":"34db143a1ae2694a9c60a01c721476303fa93044","modified":1664095172061},{"_id":"public/posts/go-5yunsuanfu/index.html","hash":"03ec4f156cad01063200322fa1919c21c9b59373","modified":1664095172061},{"_id":"public/posts/go-4changliang/index.html","hash":"40e5f15fd4a0e6dbd5c143c153ed2bb85d158cfc","modified":1664095172061},{"_id":"public/posts/go-3bianliang/index.html","hash":"361e044ad175d2bf4f7a4fc335e5d26d4ef5dd49","modified":1664095172061},{"_id":"public/posts/go-2basic/index.html","hash":"be4a970f3fd144fa2628b3e04595fa203bed4651","modified":1664095172061},{"_id":"public/posts/go-1intruduct/index.html","hash":"8a2fd21fa5f7b8abdc44073b1669b942bcdf1cd1","modified":1664095172061},{"_id":"public/posts/jiwang/index.html","hash":"e4404e3b83d3dc1fb23539ed99d476bbd39cf593","modified":1664095172061},{"_id":"public/posts/jizu/index.html","hash":"c91f6bdb8a1205f61b45c9dc9bde62bf5d262ad2","modified":1664095172061},{"_id":"public/posts/bianyi/index.html","hash":"8fba7da884a5de8af3af01f45f8f16e0085faefd","modified":1664095172061},{"_id":"public/posts/caozuoxitong/index.html","hash":"97d0f57619b918fc06a21330bf1dcb64cacacc62","modified":1664095172061},{"_id":"public/posts/ruanti/index.html","hash":"bf0af30052c8b842498a208c7a5d5b02ce5f0290","modified":1664095172061},{"_id":"public/posts/harmony-start/index.html","hash":"46e874205e9f67020a02a89d19c6ec1a2a1320a6","modified":1664095172061},{"_id":"public/posts/daily/index.html","hash":"237b3db2b9cd42a085c2fb1e78abf0f9be346e62","modified":1664095172061},{"_id":"public/posts/Vue-rest/index.html","hash":"c3e7bdd85d39b679526d9e6c1ee3672b5ae9fe85","modified":1664095172061},{"_id":"public/posts/chenwujian/index.html","hash":"4405b7fa3387ad90c4598b4167360986c7ec287f","modified":1664095172061},{"_id":"public/posts/test/index.html","hash":"33ddb67b590589fc46d5a1182e8eafb2b540609b","modified":1664095172061},{"_id":"public/posts/Socket-chatroom/index.html","hash":"2a9d0b4475c4cdfe6cd5ea85d9a49e7b0056556c","modified":1664095172061},{"_id":"public/posts/hello-world/index.html","hash":"321811e4dd72761fe2c469f90fec8825ba68c42e","modified":1664095172061},{"_id":"public/archives/index.html","hash":"60d978ca669905f8088a4e7b82c0a550b41930de","modified":1664095172061},{"_id":"public/archives/page/2/index.html","hash":"83bde67eb9f11de029d0f5b0f9fdd51439c3839f","modified":1664095172061},{"_id":"public/archives/page/3/index.html","hash":"13379253ce54f3a75e0c1b23385131ad967ea432","modified":1664095172061},{"_id":"public/archives/page/4/index.html","hash":"7c5ed97fe8e6718b17cc0743aec4d266ca939f4a","modified":1664095172061},{"_id":"public/archives/page/5/index.html","hash":"9b5b2b01c280639415251df87f4d8fc524776400","modified":1664095172061},{"_id":"public/archives/page/6/index.html","hash":"cdc6c6c7eeaebaca8b50c5d580c58fc657681e3e","modified":1664095172061},{"_id":"public/archives/page/7/index.html","hash":"de1c02de70460d2baf576aaece43724b513cff22","modified":1664095172061},{"_id":"public/archives/page/8/index.html","hash":"efbeee0e5009616028430bc015b71b50fb9676b3","modified":1664095172061},{"_id":"public/archives/2020/index.html","hash":"05bb81385ff0451fe4c6a2984e07b9dff5c6f294","modified":1664095172061},{"_id":"public/archives/2020/page/2/index.html","hash":"a53d28414f30dfeab53d073d28bd3f2bdd2677a3","modified":1664095172061},{"_id":"public/archives/2020/page/3/index.html","hash":"e9099af1b791f21cafc4300aa87628b0d8a78af6","modified":1664095172061},{"_id":"public/archives/2020/page/4/index.html","hash":"4e1dc14b28513205bb26e06c7df999f313173c05","modified":1664095172061},{"_id":"public/archives/2020/page/5/index.html","hash":"c254a92c25892c2cd7022a05d9a9c961e9861dee","modified":1664095172061},{"_id":"public/archives/2020/09/index.html","hash":"9357b82e2a2a4a6ee5a2de621b389db77c69370a","modified":1664095172061},{"_id":"public/archives/2020/09/page/2/index.html","hash":"bbba754bb55d437258e1a21566a51835b19accc7","modified":1664095172061},{"_id":"public/archives/2020/09/page/3/index.html","hash":"bd9015b2307d25bab37d6f2ed550a4ba74b355e0","modified":1664095172061},{"_id":"public/archives/2020/09/page/4/index.html","hash":"ef2694e1610e2e6fa6382ee6c82f7bba20470496","modified":1664095172061},{"_id":"public/archives/2020/10/index.html","hash":"df1cbc6e57e2fb481753ef5ed402c9cd51df01e2","modified":1664095172061},{"_id":"public/archives/2020/11/index.html","hash":"9c648f6754492b2e58f7f5396a4bbd674b4141c9","modified":1664095172061},{"_id":"public/archives/2021/index.html","hash":"b35723b1c02bb4d2dccbfc9bc2e9a92d807fc1be","modified":1664095172061},{"_id":"public/archives/2021/page/3/index.html","hash":"844f28cea491f21a26fe277b7787686302b7bb9f","modified":1664095172061},{"_id":"public/archives/2021/page/2/index.html","hash":"3683ee4a554b29a0f622193d9eed3eff2d18367b","modified":1664095172061},{"_id":"public/archives/2021/02/index.html","hash":"fe7d9cfca3f4bf5c799684b9a6cafeab51a1b008","modified":1664095172061},{"_id":"public/archives/2021/03/index.html","hash":"66b0a2b51d242a9f4739ed2f353d0f0b024eb3cf","modified":1664095172061},{"_id":"public/archives/2021/07/index.html","hash":"5ad0426f0c4e30a0120b8e521c2dd900c429dbd0","modified":1664095172061},{"_id":"public/archives/2022/index.html","hash":"22f9061c626e442aec3e65f61595ae4bcce7b494","modified":1664095172061},{"_id":"public/archives/2021/10/index.html","hash":"285d8d16f4f163e82bd9b3d4f0ba6c113393ddc4","modified":1664095172061},{"_id":"public/archives/2022/04/index.html","hash":"bd792f2a049685bce3e6682aaad9f629bc1296e7","modified":1664095172061},{"_id":"public/archives/2022/09/index.html","hash":"5e10c7228162e3a4bfcd466be52ddc3f72b082c7","modified":1664095172061},{"_id":"public/archives/2022/05/index.html","hash":"362ad3a13bd2e79aa5013509c96dd59451eefdbf","modified":1664095172061},{"_id":"public/categories/硬件/index.html","hash":"28f9a5723a91d437b1736c28d04c774de69233db","modified":1664095172061},{"_id":"public/categories/TTS/index.html","hash":"e2e1a038e9bc7cce0025ee523d232e1531e4c965","modified":1664095172061},{"_id":"public/categories/深度学习/index.html","hash":"cf4e8c1453e2d5b34a1b2ac66de46976fbb7fd73","modified":1664095172061},{"_id":"public/categories/硬件/51单片机/index.html","hash":"c0fc61f81d24961356d7a2d4cde63b51d2bb4b9c","modified":1664095172061},{"_id":"public/categories/TTS/Fastspeech2/index.html","hash":"a295d6b8ded2b3e95ee812663159151033af4129","modified":1664095172061},{"_id":"public/categories/backend/index.html","hash":"306eb96c3618b5373fa386ead18681faf802c5cd","modified":1664095172061},{"_id":"public/categories/backend/page/2/index.html","hash":"137439b77caff5e77d542feae69ff065ad3b238d","modified":1664095172061},{"_id":"public/categories/frontend/index.html","hash":"2725b7b3d772cd53de7ccfcf0a51678860c8929c","modified":1664095172061},{"_id":"public/categories/深度学习/联邦学习/index.html","hash":"370872e40115f87e619862decdd17b9279d9c7de","modified":1664095172061},{"_id":"public/categories/云服务/index.html","hash":"d6a5f06102d7045d1577e6eb1854ddd1ef051a98","modified":1664095172061},{"_id":"public/categories/笔记/index.html","hash":"d2683caf5d819f5b7cb4a7c8494fff02a869c976","modified":1664095172061},{"_id":"public/categories/TTS/Adaptive-TTS/index.html","hash":"1942376d01e12080390da7e5a0fcc13be62a5f64","modified":1664095172061},{"_id":"public/categories/Hexo/index.html","hash":"ec14498d961d36670f3eb64a2ace78f7cdd59b22","modified":1664095172061},{"_id":"public/categories/毕设准备/page/2/index.html","hash":"e389eb29fccb8d85dcc622d1de5f2f4b4e772456","modified":1664095172061},{"_id":"public/categories/毕设准备/index.html","hash":"b132b0e6a1f1f7821a23c869edaf71cca41e168b","modified":1664095172061},{"_id":"public/categories/生活/index.html","hash":"c608142eff319ff588f9bb433b2223b0b2b19ccb","modified":1664095172061},{"_id":"public/categories/frontend/Vue/index.html","hash":"b17d9c19d79b5a444fc01ceb51a95efa07fe4af2","modified":1664095172061},{"_id":"public/categories/backend/java/index.html","hash":"064ac3cf7f5fe78f6db658da1ffd551a77b82f2d","modified":1664095172061},{"_id":"public/categories/云服务/AWS/index.html","hash":"fb5a1c650a302709b09022864beb71b0c10bad19","modified":1664095172061},{"_id":"public/categories/backend/go语言/index.html","hash":"79f0d4d40153f5d00ef7fe7ab4c5140787083ba6","modified":1664095172061},{"_id":"public/categories/笔记/编译原理/index.html","hash":"6bf5f9809ea208fe2756b3eebed69867c8b7123f","modified":1664095172061},{"_id":"public/categories/笔记/操作系统/index.html","hash":"e525ef46dd27ad991b31c39d71ef24571ce35aba","modified":1664095172061},{"_id":"public/categories/backend/go语言/page/2/index.html","hash":"39e810de30de8383c0510fd1a22fdf81653150de","modified":1664095172061},{"_id":"public/categories/相声/index.html","hash":"3b0e11c94bdc47e37d2526aa8b2e7eba02f170d1","modified":1664095172061},{"_id":"public/categories/生活/搬运/index.html","hash":"424456813b44ee7cfddd8fd8eadf3d9069f04939","modified":1664095172061},{"_id":"public/categories/frontend/harmony/index.html","hash":"9983b7f37a71cc0c973461958c16bab45ce8be1a","modified":1664095172061},{"_id":"public/categories/毕设准备/深度学习/index.html","hash":"4c88a756d787ed71dbf93df667b99672e43b9cf3","modified":1664095172061},{"_id":"public/categories/毕设准备/深度学习/page/2/index.html","hash":"546bd779be1a44efac955bcbc3949a3e59689559","modified":1664095172061},{"_id":"public/categories/笔记/计算机组成/index.html","hash":"b11e4d0bd1fd86e1ee38a3f7eb60a2a9691e57df","modified":1664095172061},{"_id":"public/categories/笔记/数据通信与网络/index.html","hash":"b2219c8b6dd28e4dc35245981494d5fe353923e6","modified":1664095172061},{"_id":"public/categories/物流管理/index.html","hash":"9dd1982283cd19aff5dd86ee260171ef79193a4f","modified":1664095172061},{"_id":"public/categories/笔记/软件体系结构/index.html","hash":"25fa880a23acc1a7386f4a1a03c9855bf117a859","modified":1664095172061},{"_id":"public/categories/frontend/php/index.html","hash":"4161a7874dafdfba8ddd1210a572b4af084209f9","modified":1664095172061},{"_id":"public/categories/for-babe/index.html","hash":"2dcc591653de9ffca11ce7b860f4e323c3504a37","modified":1664095172061},{"_id":"public/categories/大数据/index.html","hash":"3e327a132c4878240cdb0f9afcec283bdfefdc4b","modified":1664095172061},{"_id":"public/categories/语音合成/index.html","hash":"95cbcd35dc1825ba5f8eea1d44b90b7becca6baf","modified":1664095172061},{"_id":"public/categories/随笔/index.html","hash":"8dbbc40aaef439277f5c9cb8c12a070a554e29e0","modified":1664095172061},{"_id":"public/categories/测试/index.html","hash":"edb2d2a77bfbe2aeacac254385f2b5eccc5a7016","modified":1664095172061},{"_id":"public/categories/物流管理/网络货运/index.html","hash":"78f0f0a2b50c998eb87d82eab35e8bf44be5acc1","modified":1664095172061},{"_id":"public/categories/大数据/Spark/index.html","hash":"aa2c777f4b682136acd9ed470f9467d4394095cc","modified":1664095172061},{"_id":"public/index.html","hash":"742bc620b8e627da4a1087316f82e4f836692031","modified":1664095172061},{"_id":"public/categories/for-babe/spring/index.html","hash":"aa48b898dc968fdba512cf8603007755f4f2aa76","modified":1664095172061},{"_id":"public/categories/语音合成/论文阅读/index.html","hash":"1aafb588800d37eef77419f6ba69baf38c2c597e","modified":1664095172061},{"_id":"public/page/2/index.html","hash":"c6e254c80b823810c1f62d367584e1316f6babb7","modified":1664095172061},{"_id":"public/page/3/index.html","hash":"8a41f5c610eaf5915e0a0ac852daa6807fe26033","modified":1664095172061},{"_id":"public/page/4/index.html","hash":"f09a0f8a748ede8ea41a8a2a2eb37fb896758b42","modified":1664095172061},{"_id":"public/page/5/index.html","hash":"51edf287cb49144ddd28a2098f48952bce289409","modified":1664095172061},{"_id":"public/page/6/index.html","hash":"9f1258a475d89f414906eaf5bad9509e2a6e1c0a","modified":1664095172061},{"_id":"public/page/7/index.html","hash":"441a54c5fc0856f85ac1d77e5dd429fec7f9d4f7","modified":1664095172061},{"_id":"public/page/8/index.html","hash":"4f9df878e5fcc90d0d5b2629c8b028e204528b9f","modified":1664095172061},{"_id":"public/tags/51单片机/index.html","hash":"1a9320451c0953e0eaecd3245bbf113a8551c901","modified":1664095172061},{"_id":"public/tags/开源硬件/index.html","hash":"8094d0c1b1286b154d3098d92828ba5d67d7c25b","modified":1664095172061},{"_id":"public/tags/TTS/index.html","hash":"dfa89035084c61a8e592ed39f04f951289b55657","modified":1664095172061},{"_id":"public/tags/联邦学习/index.html","hash":"331a943abab9a81e4fcd20e4288da4b8a6ec817b","modified":1664095172061},{"_id":"public/tags/Java/index.html","hash":"87bfc8df0a4cca5d6e8ad6b479fa73c1c784d27e","modified":1664095172061},{"_id":"public/tags/Socket/index.html","hash":"cfaccd756173bb58b46358b3fb2fc12d5ac10715","modified":1664095172061},{"_id":"public/tags/Vue/index.html","hash":"77509fee1160de87dc35bd5a93a7b5baa7d08149","modified":1664095172061},{"_id":"public/tags/云服务/index.html","hash":"b0aef4194869d6cecc3369fe8ba74b853ee570c5","modified":1664095172061},{"_id":"public/tags/AWS/index.html","hash":"a6d7fb96baaf62c8c9500c6371a9c9097f3464c3","modified":1664095172061},{"_id":"public/tags/亚马逊/index.html","hash":"0024761261d912fb6041513049cdcbc2eea78067","modified":1664095172061},{"_id":"public/tags/深度学习/page/2/index.html","hash":"c393fa26438685ab7b900f4fa4aac029ca09039a","modified":1664095172061},{"_id":"public/tags/深度学习/index.html","hash":"19bf574d5899b9a2352d6fb441c765a670eb9461","modified":1664095172061},{"_id":"public/tags/Hexo/index.html","hash":"733de962187f43fb3f8f02b50fa131b869c348fb","modified":1664095172061},{"_id":"public/tags/笔记/index.html","hash":"fff987bae742a7fadc973c7551fe6c0e89c91ee8","modified":1664095172061},{"_id":"public/tags/操作系统/index.html","hash":"304f7f4148956671ded1a3b5223082dbd9542a55","modified":1664095172061},{"_id":"public/tags/编译原理/index.html","hash":"d9bc4ec5f50350091c672009ce0f8efee31df0ee","modified":1664095172061},{"_id":"public/tags/XDU/index.html","hash":"1ee3043aef19d0606b55b60d8bfdd3bd88ddee26","modified":1664095172061},{"_id":"public/tags/自动工具/index.html","hash":"9237a449a6ff67788c83b9e4ca86494711203d9d","modified":1664095172061},{"_id":"public/tags/毕设准备/index.html","hash":"ee04f0fefc6953a64606f8103c7dff3e8fb7f5de","modified":1664095172061},{"_id":"public/tags/毕设准备/page/2/index.html","hash":"553890f48861c04c167a77a620dd96e04cab6f46","modified":1664095172061},{"_id":"public/tags/格言/index.html","hash":"f1e07de4295e494a9ab01922a686510897d8f03c","modified":1664095172061},{"_id":"public/tags/go语言/index.html","hash":"9cd08bcb7610521062f00eec1fc41c2afbd2685d","modified":1664095172061},{"_id":"public/tags/go语言/page/2/index.html","hash":"6134b94e464ce741877766189b8fb08a50b8c195","modified":1664095172061},{"_id":"public/tags/贯口/index.html","hash":"fc252a66bc644e6f7ccb7afd625a0832085f0821","modified":1664095172061},{"_id":"public/tags/harmony/index.html","hash":"603d40473ac4295c7b11297da1bd736ff810dbbe","modified":1664095172061},{"_id":"public/tags/计算机组成/index.html","hash":"838d2499a133533a0b9478da5724766bac9683b7","modified":1664095172061},{"_id":"public/tags/数据通信与网络/index.html","hash":"dea93f171c2e11758ea9505b1320991a67b99683","modified":1664095172061},{"_id":"public/tags/网络货运/index.html","hash":"475c30be9ed3216af5288535c43b44f6441253a9","modified":1664095172061},{"_id":"public/tags/php/index.html","hash":"82c9edb7d8678fa400b09abd2002dae8aa7143b9","modified":1664095172061},{"_id":"public/tags/软件体系结构/index.html","hash":"38f8e4296c62f61d206159c63435faf977cc24d1","modified":1664095172061},{"_id":"public/tags/spring/index.html","hash":"fc9241c6429229cc3e13b256f289ac28f9663f13","modified":1664095172061},{"_id":"public/tags/Spark/index.html","hash":"b3d68730450dea8ba62976919f3e524e1e0780ad","modified":1664095172061},{"_id":"public/tags/语音合成/index.html","hash":"82e6e8b25f22a286aa2e159a93f19f13f2ec1f63","modified":1664095172061},{"_id":"public/tags/随笔/index.html","hash":"f36a004c79ee6e73df6527b3d4e5824e96f52b05","modified":1664095172061},{"_id":"public/tags/test/index.html","hash":"bd05e79bfde3a66895fdb8d77879d2c70667814a","modified":1664095172061},{"_id":"public/tags/daily/index.html","hash":"2503ff2d72f0187f8fdb9d825904f1068b43988d","modified":1664095172061},{"_id":"public/tags/hexo/index.html","hash":"c11d5d4ee9dd5b9a58c7cb3f5a1d4db2cf2e2c97","modified":1664095172061},{"_id":"public/pjt-love-lyt/readme.txt","hash":"e43d3e06be1446d6cc0c0a04bc36f8667f4e6fe2","modified":1664095172061},{"_id":"public/melgan/index.html","hash":"a21b7551b382504947018d847976361434670308","modified":1664095172061},{"_id":"public/SV2TTS/index.html","hash":"7862cc01675be126b5fe26fd75fb83afe4e1e352","modified":1664095172061},{"_id":"public/CNAME","hash":"29eadcbe8bf5766a504760667f1dea8608a8436a","modified":1664095172061},{"_id":"public/fastspeech2/index.html","hash":"db8372baba90ca942ef0c73b41efe827600ec038","modified":1664095172061},{"_id":"public/photos/index.html","hash":"16eda1afd6f1079ace92988ec039f7c9bd83ba67","modified":1664095172061},{"_id":"public/vits/index.html","hash":"0b94645b66c6779bf9f77f023802edfd6c0be277","modified":1664095172061},{"_id":"public/pjt-love-lyt/images/r.gif","hash":"b655697e6d787e1150f77db893754cf844588c71","modified":1664095172061},{"_id":"public/photos/css/style.css","hash":"3f57df7851b71cdf623f8fc69c9ad8fd7f0ca7b5","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1664-137600-0003.flac","hash":"0131ad0f731b7d5dd578c34abbe240a8c71d11d4","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/29-123032-0005.flac","hash":"6f726252dd50e25a82a7445e8f6110e24ee4b173","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB06290079_synthesized.wav","hash":"941edc8ec7c36738cb3a538c5e86feacd4f827a6","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1664-137600-0003.flac","hash":"0131ad0f731b7d5dd578c34abbe240a8c71d11d4","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/29-123032-0005.flac","hash":"6f726252dd50e25a82a7445e8f6110e24ee4b173","modified":1664095172061},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1664095172061},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1664095172061},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1664095172061},{"_id":"public/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1664095172061},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1664095172061},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1664095172061},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1664095172061},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1664095172061},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1664095172061},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1664095172061},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1664095172061},{"_id":"public/images/circle.ico","hash":"e58f4dc0976d518283142ab338da87f9261c5aa9","modified":1664095172061},{"_id":"public/images/dribbble.svg","hash":"509d75732c3b33736816814e79e09390ca55a315","modified":1664095172061},{"_id":"public/images/circle2.ico","hash":"b7fb9744773cf42f8051bee7db972f28e49355d6","modified":1664095172061},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1664095172061},{"_id":"public/images/favicon1.jpg","hash":"b089393bfdcf779762a8778fdec3c6c0910f32aa","modified":1664095172061},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1664095172061},{"_id":"public/images/favicon2.jpg","hash":"26b2a9554374ccb5b22089a22c883889b8a69f30","modified":1664095172061},{"_id":"public/images/linkedin.svg","hash":"24069fcb31a97944bc0b276b99a897bc9628aab3","modified":1664095172061},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1664095172061},{"_id":"public/images/logo_white.svg","hash":"e8cbecc3bc7a398ebb7f3abad65cab131a4b6749","modified":1664095172061},{"_id":"public/images/link.svg","hash":"86d76a342f0334ffa6fec20a9009ffb3f66152b8","modified":1664095172061},{"_id":"public/images/wechat_channel.jpg","hash":"9682630470ad20ef61bde5dc0ba197dbf71eb838","modified":1664095172061},{"_id":"public/lib/Han/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/canvas-nest/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/bookmark/LICENSE","hash":"c3036598ab8f45797460e48880c9e859268d574a","modified":1664095172061},{"_id":"public/lib/fastclick/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/fancybox/LICENSE","hash":"7713a1753ce88f2c7e6b054ecc8e4c786df76300","modified":1664095172061},{"_id":"public/lib/canvas-ribbon/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1664095172061},{"_id":"public/lib/jquery_lazyload/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/needsharebutton/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/pangu/LICENSE","hash":"0b609305c50cdc3f1ef5ec9e7d2e174f7f99a183","modified":1664095172061},{"_id":"public/lib/pdf/LICENSE","hash":"78d636bebe5b99f30e0e0676ef71805ebf00c9b9","modified":1664095172061},{"_id":"public/lib/quicklink/LICENSE","hash":"78d636bebe5b99f30e0e0676ef71805ebf00c9b9","modified":1664095172061},{"_id":"public/lib/reading_progress/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1664095172061},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1664095172061},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1664095172061},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1664095172061},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1664095172061},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1664095172061},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1664095172061},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1664095172061},{"_id":"public/lib/pangu/dist/pangu.js.map","hash":"6a7c5927e3410ed4dfe14caa9fb2eb115d85e5e7","modified":1664095172061},{"_id":"public/lib/pangu/dist/pangu.min.js.map","hash":"1aa0d935665a2f075bbc4b5f0a53bbfaece12c5b","modified":1664095172061},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1664095172061},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1664095172061},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1664095172061},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1664095172061},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1664095172061},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1664095172061},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/LICENSE","hash":"2d059656eb6c8025b5bf5b7857d8524828756e28","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1664095172061},{"_id":"public/lib/pdf/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-comment.svg","hash":"253477ce1054bd8dc5219509247126dc89420bf0","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-check.svg","hash":"a1b31f660c5c5026f509e5e694e8bef764eccc0d","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-help.svg","hash":"bef79ecf26f70bf1ee3ba78a5ff6e84159cd98d1","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-insert.svg","hash":"7e4af0d1c5f8800b1fc4c3aa22c5c1b99e6a6fe5","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-key.svg","hash":"4a9f396ca0d5efb81e30117148358ff0d042c8a2","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-noicon.svg","hash":"ef01850e55a94ae6a199a4ec00fef988a0944f24","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-newparagraph.svg","hash":"00eb381b8814d901b6b0af059a76425f27bae19e","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-paragraph.svg","hash":"1fb9a62c3eb3d329e7c50075655d7f97bf4047ff","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-next-rtl.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-next-rtl@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1664095172061},{"_id":"public/lib/pdf/web/images/annotation-note.svg","hash":"04b41bd486cc1bd5f636526dbcc58301ebdcbb5b","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-next.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-next@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-previous-rtl.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-previous-rtl@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-previous@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1664095172061},{"_id":"public/lib/pdf/web/images/findbarButton-previous.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1664095172061},{"_id":"public/lib/pdf/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1664095172061},{"_id":"public/lib/pdf/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1664095172061},{"_id":"public/lib/pdf/web/images/loading-small.png","hash":"c1abf9b89af7392824f2228312785a899df224a0","modified":1664095172061},{"_id":"public/lib/pdf/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-documentProperties.png","hash":"6f1e0ce52dae6af31bb3c5b09bbb33a33849fd08","modified":1664095172061},{"_id":"public/lib/pdf/web/images/loading-small@2x.png","hash":"171aeb1a90c2836c639438fa85c64cd9d94b3516","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-documentProperties@2x.png","hash":"bd55401797e24ae5066afb9677dca1463e74c839","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-firstPage@2x.png","hash":"fd24d7a57e2a1205a67a11a760eb6dd50748da26","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-handTool.png","hash":"8db06773a09e2f407bdf7ce448777398b40fd313","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-handTool@2x.png","hash":"eb8a16519da1e074f9ed07e8a350a6b0d52e5339","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-lastPage.png","hash":"6819bdd3000af84c50df1b10b55b3af33944a261","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-rotateCcw@2x.png","hash":"84f034b57d24f7371d1a605bd12afa1f71b50f1b","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-lastPage@2x.png","hash":"2fb45311e8ee9658cc4276f1202ada9a55df774d","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-rotateCcw.png","hash":"548451d8a12570d66bce4c8922d8ccffb63ca61a","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-rotateCw@2x.png","hash":"f37e80bc600112fa88251e53e953f14946967e19","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-rotateCw.png","hash":"252e8a4adaf406c4e9c78033d8d8163333ce4c1c","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal@2x.png","hash":"0f23b007fe6be937bc1072737e60cf10e4b8c7e1","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-scrollVertical.png","hash":"3509cb4c7f355106103aa663fdcfbba6143f1d96","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-scrollVertical@2x.png","hash":"a80753f432677766ba1cfbf3677bb9498998efd7","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped.png","hash":"4409af25572feb6ac02d9f0ddcbd5ea689b3dd05","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped@2x.png","hash":"8b0ebf82e3f20a7e6cd93ef80b4ac932a02512c5","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-selectTool.png","hash":"f62d271d5403f35e372b2cdf4c892aac7d364665","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-selectTool@2x.png","hash":"9a10930334b9a42429c967b77f8c7e705e31cdaa","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-spreadEven.png","hash":"d27a628de5e1a4ce508c39fcb496b50f3d2d0fa0","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-spreadEven@2x.png","hash":"616b232b0f166467d0c37315709508953fb79358","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-spreadNone.png","hash":"a6648371ee01d687db409f5198f30dafaba76b6b","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-spreadNone@2x.png","hash":"5833ee8fa2394db83739ddbb5f9f0f3f0d39709d","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-spreadOdd.png","hash":"ff70929f97f54c2722e890a38070f749cefd12ee","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-spreadOdd@2x.png","hash":"07f1a8754f63dbb8d480e0923328c9fc0336fd2c","modified":1664095172061},{"_id":"public/lib/pdf/web/images/texture.png","hash":"230a3d5e2dfacfa7228f58a559de5df3734118f5","modified":1664095172061},{"_id":"public/lib/pdf/web/images/shadow.png","hash":"02b6adc1ca6ad8f57605ee92943b65c6250d73ba","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-bookmark.png","hash":"0193cebc494facb8ba8733a1a8f50457e7189f56","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-bookmark@2x.png","hash":"f822c6228ea6f9ad2ee5465ace31c725cf3289c3","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-firstPage.png","hash":"453a575f2676ba39eacc71c074420d6c97c87a42","modified":1664095172061},{"_id":"public/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal.png","hash":"67ec12c5bfe0d933f62e1bdfb2154db263e24712","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-menuArrows.png","hash":"acbbc7071a0641a10e1d50991d1abbfa26b5dce9","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-download@2x.png","hash":"6c2ddead63c9a9ac3371bd7b8b8b914e2f81d605","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-openFile@2x.png","hash":"ae13be299d7c18dde70d975d0e229d3e20137afd","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-download.png","hash":"b25abd4a3c95097a338b8b138476e22189cb235e","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-openFile.png","hash":"6b17acd1c4ea6a9d9859819456952eff133f3cc1","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageDown-rtl.png","hash":"641a0e2d711ec06176c046d8efcdff670da876ef","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageDown-rtl@2x.png","hash":"445833e5eebdcc99270b879d0079bb54310f1615","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-menuArrows@2x.png","hash":"fdb29640d1f7ee31b09550163f85e01a70cebd13","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageDown@2x.png","hash":"2b817130c3724f8a864845b03a142bd7e1cb61e9","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageDown.png","hash":"6e10286da3a52e0bba782d0fc4a7c33d10c8f4b9","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageUp-rtl@2x.png","hash":"1507890ff466f28f78ab7bd9f6eebfe2e4eeee8a","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageUp-rtl.png","hash":"0529bff456111ea1a264771afdcb2daebe68f79a","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageUp.png","hash":"b1eae4614fb964b6d0483f114f3dd2b49ec1b64a","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-presentationMode.png","hash":"3d206e303f9663dca95482df9abe55a08851c574","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-pageUp@2x.png","hash":"9960af5e2ff7dfe8aba862d77305f409f5f1405c","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-presentationMode@2x.png","hash":"c2d54d6f77f831963132555599e7314d4f07b49a","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-print.png","hash":"77463c425966b8a298a2d87863533e68092676bc","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-search@2x.png","hash":"25c50114436d8d598416a5c3eed9e1db282c43b3","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-print@2x.png","hash":"7577a46df5fcc89846737010a14878bffa85098e","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-search.png","hash":"14c3ef60d3979df9e8d13cf39cad10ed043f5578","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","hash":"51055db76ce1e9935fa3d91aaece874c6da14147","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","hash":"990118984a946a8c63d95fd1a8d8af848383118b","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle@2x.png","hash":"6f1dca07696408ce28da5621ebcac57d0b2031a5","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle.png","hash":"6cedbeddac0d6191afe09cabed7b6d517f7c7b21","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl.png","hash":"422b5ed725be51f60e6339da94e0c959ad67990b","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl@2x.png","hash":"29eade71266a6c4b1048eeacb1c29411435bdb41","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-sidebarToggle.png","hash":"ff7ef30371233abe8c548c2f3d5cbb335183ca92","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-sidebarToggle@2x.png","hash":"04c42cddc1e2bdd5130c6fa477ff3fa594edda56","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewAttachments@2x.png","hash":"eb96df312c7ff6fc0451795bc0de8ebadb72cf86","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewAttachments.png","hash":"53c5a0c4c40f5f47fb6d2f57a82a4a6d0a83feb0","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewOutline-rtl.png","hash":"e6214527b9354eb920cbec85e6fe4e1296b7ae15","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewOutline-rtl@2x.png","hash":"6684f9d7964446ec66a8f3865445892187d16d21","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewOutline.png","hash":"ec7aa605c063faf6a951c2d64a8d98933b60f6a4","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewOutline@2x.png","hash":"76be930d871fbd1ebd6c4d76c4fa325f32efc624","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewThumbnail.png","hash":"f62aad7c7719300f1d8e922155f451661d41d42d","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-viewThumbnail@2x.png","hash":"ececa7ff064700efde72fa1e3889c8a1a3073dbc","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-zoomIn.png","hash":"838adbe15d84daceec25cfd4d8d6ac1580b4f693","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-zoomIn@2x.png","hash":"5403ddbeed138cc733020c352ae3bcd8cac03bf7","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-zoomOut.png","hash":"63a719d5e6a708a22014f20abc0722cd54ffb0f6","modified":1664095172061},{"_id":"public/lib/pdf/web/images/toolbarButton-zoomOut@2x.png","hash":"4006d4387f2b0a0f0856d691a8874f74f61d0f51","modified":1664095172061},{"_id":"public/lib/pdf/web/images/treeitem-collapsed-rtl.png","hash":"7c2ff883f666ac379b04d0d41e3e6ddb14ddf220","modified":1664095172061},{"_id":"public/lib/pdf/web/images/treeitem-collapsed-rtl@2x.png","hash":"0465b8f9e77135e2bddd5708d425d5e1fc4ab63c","modified":1664095172061},{"_id":"public/lib/pdf/web/images/treeitem-collapsed@2x.png","hash":"3229d96b4fa4d7e5c26fc135264d134e1024baab","modified":1664095172061},{"_id":"public/lib/pdf/web/images/treeitem-collapsed.png","hash":"4588ca9c86db15c10de4de3f340111d4ce211ebd","modified":1664095172061},{"_id":"public/lib/pdf/web/images/treeitem-expanded.png","hash":"b0b4bca3d9bd0949da19a56214143db18f2a4f69","modified":1664095172061},{"_id":"public/lib/pdf/web/images/treeitem-expanded@2x.png","hash":"bf924ff993236e563dab83b41193bcb43120c0b6","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/locale.properties","hash":"60394d8e9645d7509526d69c26a77bc4e09e4a3e","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ak/viewer.properties","hash":"393740e133a14174dc401207b08db038e42de63c","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/af/viewer.properties","hash":"c945a9847e7da924b32f1a713fefc9c81fd2b4e7","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ach/viewer.properties","hash":"3a662c44188940c4dd4ec9c6dcc43f69a70ecdca","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/an/viewer.properties","hash":"092559e9d02bed540d3d211482963112c2397942","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ar/viewer.properties","hash":"43b49f044616874ad774fa9ec0bf320a6c811309","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/as/viewer.properties","hash":"4c4c2ece223f35d1f09eb294025e986570ccff9c","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/az/viewer.properties","hash":"0631e227d08a5fa163a22d05a507300d44bcbe0c","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ast/viewer.properties","hash":"17736dd4da6b8e294dec4635298740576752b9f5","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/bg/viewer.properties","hash":"97833a1bbb1e067b5989c509385009928a81f82f","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/be/viewer.properties","hash":"2ac4e95e3338c69cb569f3a0ac4cecb3ae5672c0","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/br/viewer.properties","hash":"9926124bd10e9d1e40c60b50f1515018ca68870d","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/bn-IN/viewer.properties","hash":"d60c98500b03645a19c0f85e56d86de1b1460ede","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/bn-BD/viewer.properties","hash":"3e4969e9fa4efb18ea15becb00b5f0c0ab493c73","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/cs/viewer.properties","hash":"509f13fdbc1f33edda81bbff3824a79337d0c041","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ca/viewer.properties","hash":"8b37cd2791908e8c1386b679fbaa818c3075f8c7","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/bs/viewer.properties","hash":"caadd07af8be19f326d8db35776b2522873c1707","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/cak/viewer.properties","hash":"d7bedacf415c04365fcd8433ea43e79e09434a43","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/crh/viewer.properties","hash":"c240dcddeb46b8e9284013f31892dd918c3c0e10","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/csb/viewer.properties","hash":"ac3068416ec117b66a923258f1ca791e6696c5f1","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/brx/viewer.properties","hash":"b2d684221408c68205917dc188b2c9ccd3e68536","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/cy/viewer.properties","hash":"39ed35e773bc41599da20810ba183a5f5e6b0514","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/da/viewer.properties","hash":"38249acdefa0c8e7fd14f69934002d812fbf47ef","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/de/viewer.properties","hash":"d898cdd983f51bf5a165944df986f0f69f29c5f2","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/el/viewer.properties","hash":"3a667280b9bd7af1e30e3a73eac821b0357698af","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/en-CA/viewer.properties","hash":"10f1e27c6f8de390db643be9a7a28ad3aad8741e","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/en-US/viewer.properties","hash":"3be99e3a2e34cdc0308d5acf9b1f34c38a65b382","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/en-ZA/viewer.properties","hash":"b009b190d99fcaa116becc99ee8d7b5442a6509d","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/en-GB/viewer.properties","hash":"c16a0be94120a2477d8af8286e53e75502e849ec","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/eo/viewer.properties","hash":"020c1c322dafb2693c150358f61acb185aa6618c","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/es-ES/viewer.properties","hash":"18c4a0c4c25a801b9b88cc5e476f3833dcd645f3","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/es-AR/viewer.properties","hash":"4ebe62b3c0938e8ff52d9842cabeecc4920534aa","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/eu/viewer.properties","hash":"626afc5c3c2d25c1526ac1a4fb0fc11093e6364d","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/es-MX/viewer.properties","hash":"efd4d7c86d9367fd6b956cd27b5bebfb2bbee703","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/es-CL/viewer.properties","hash":"21670d928d8070a3b64640ef5b1f7b42eb5f123c","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/et/viewer.properties","hash":"7d39a6e781248c51067203cc51c285fdf600ddbc","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ff/viewer.properties","hash":"fc88c0cc728eec1bb6c634171c2bd982ed6df172","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/fr/viewer.properties","hash":"36f631e44dbc8235097c80e9189f16a0cb53fa9a","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/gl/viewer.properties","hash":"76d235d529a6ca27020508921bc30347967e3983","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/fi/viewer.properties","hash":"e20fdcf3c92363913d83558a2c7af75d5a7b157b","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/fy-NL/viewer.properties","hash":"b4759b9968cab45a83c2b79d11612f012621e9a0","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/gd/viewer.properties","hash":"96c7439fe7c71fb3485421baab84a93f46572345","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/fa/viewer.properties","hash":"9f46862dff18bb1fb4d46741e1a1df119daff8cb","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/gn/viewer.properties","hash":"47772f8726c58d5bffc0533ed42b65f7c4643420","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/he/viewer.properties","hash":"9207d4ed5d570efcf435c2913a37c5a0771b5529","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/hi-IN/viewer.properties","hash":"03f12e6e9efde305eea7097accd016fefa9b579f","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/hr/viewer.properties","hash":"bfceb0e249f9221dae03e5707b7cda9a11d5e773","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/gu-IN/viewer.properties","hash":"a89948f3e158c612f79d6434d4d754542a0084a1","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ga-IE/viewer.properties","hash":"6dd3628c1b52c95f65d09cda96fd191e348262d6","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/hsb/viewer.properties","hash":"bd9a840b3428c582be5ffeb090949e06781270d1","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/hto/viewer.properties","hash":"119e206f8fd29b00c302e0f7c54af5f65cb328fa","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/hy-AM/viewer.properties","hash":"0275c5d6365b82fad279d7247f37c4bda8d889c4","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/hu/viewer.properties","hash":"fbb3ceee5b178867c13aa39204d2303ca40bf104","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/is/viewer.properties","hash":"a6a348f3f2ee08a6153ff775ab98cbba69ab683d","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/id/viewer.properties","hash":"3ff8de58f1adec7f681c0d3e50a816edd86391e5","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ka/viewer.properties","hash":"9ac45acb763ad19399cd40b9850bf3b4cf8dc17b","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/kab/viewer.properties","hash":"ef2a2f36b7690b0f5216d4d53c12194c6130a63b","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/kk/viewer.properties","hash":"ad47c566983ba98ed6213376483251915206722a","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ia/viewer.properties","hash":"998abe05165139707f0c50eec508a2f4e3f54ad5","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ja/viewer.properties","hash":"03e9682dc1116d0670c66f366eb2c33e7c7cb281","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/it/viewer.properties","hash":"b8771ca6f2c190f2082fcc3b59d824d146230f8a","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/kn/viewer.properties","hash":"28e09ea4f3cde7e470e74d0a8557e1b3e934850b","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ks/viewer.properties","hash":"00666727634c0e5d15c91e05c7363346f01ba263","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ku/viewer.properties","hash":"073c3cdbf0e3c78c481783c7c157748479fd79c4","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/lg/viewer.properties","hash":"4b8df077503c36aab12013cc2f26d9eae50d7317","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/kok/viewer.properties","hash":"a9d38f6cde30ffb8faa2903a047db57d2cc8f23e","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ko/viewer.properties","hash":"c3ad3340ffda6b1f890a224b1385920b538a0077","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/km/viewer.properties","hash":"4373bd9fe1ef8180be9b8e2ebd2c30094e21e966","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/lij/viewer.properties","hash":"cf4b9b1a8a2f537f183219d015c0040f4041c0ef","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/lt/viewer.properties","hash":"747085a9cb36738a6f8647b1bae5b9529c93a5db","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/lv/viewer.properties","hash":"1640bdf95c269a97298cc578e052047fbfca8ecd","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ml/viewer.properties","hash":"aed97e4ecfc595fdbdc8a13eac66f69a0b4bb6f0","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/mai/viewer.properties","hash":"32bee1a3a904c99d59b3d90c005bb0c7977ecb17","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/meh/viewer.properties","hash":"5c7d7aea361158dabb3381043f1294d942463035","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ltg/viewer.properties","hash":"af0c068b833dfe1b8e8ca0ac17a582a280c75c84","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/lo/viewer.properties","hash":"811f3a8a85a1ae3faec1bf5da5aebf929a153592","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/mn/viewer.properties","hash":"1d06c67375bc61303b86c6236f3a8127ce4a20ba","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/mk/viewer.properties","hash":"7f29395c7586dd2071204fdf938b6eebd6333063","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/mr/viewer.properties","hash":"67b8ad87988055b845f96f1e3e9933dbb47989b5","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ms/viewer.properties","hash":"832b07fa0e2b4a7f7efaeaa746c13f35a675cdca","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ne-NP/viewer.properties","hash":"5bed5986d1ab82d465f23da50043826a62b369a0","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/nb-NO/viewer.properties","hash":"db499cd32e8f4e30119d2002722015a000c8fb77","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/my/viewer.properties","hash":"e11c729b33fbf2e3a7a698d005d7d1e9e6916466","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/nl/viewer.properties","hash":"8b2a65c2ac49c79030e16674eb03511881abd170","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/pa-IN/viewer.properties","hash":"0deb1cf6b305a2cedfd4c481f812b90cabe9e867","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/nn-NO/viewer.properties","hash":"5ab9b6dd1e1e6fbf118f63841f4a68497595a5d6","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/pl/viewer.properties","hash":"727c63597fa71afc174c9e59eb32359b590f7f8b","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/pt-BR/viewer.properties","hash":"584f6d66a630eddaf01b91320bfc0d675c0f9fc8","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/rm/viewer.properties","hash":"92afbd1da165e141b9b700a83e6bf4e5ce25c055","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/pt-PT/viewer.properties","hash":"ed04835017a33d05ec37e744113c93e6aa925aa9","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/rw/viewer.properties","hash":"196bae3faba1aa0e3a63f97daa3da2f3d6433863","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/nso/viewer.properties","hash":"d8fa7daa40bd6a2cadbdc136da72a92b0b863d3d","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ro/viewer.properties","hash":"2201a014977cfeae4e4c331b1ff0786d961348b7","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sk/viewer.properties","hash":"beabb2a210ed599b7cc8d9f5d00c3138747e93c7","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ru/viewer.properties","hash":"54afa4bfebdd9d2e446025c77a0541de68ff14e7","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sat/viewer.properties","hash":"e98f10bbe8d2312af977dacfea0d4eb91607b350","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/si/viewer.properties","hash":"5239cd798f7e0e9d163ed99fd77bca446104768f","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sl/viewer.properties","hash":"d72c2f848acfdc627bddf1d7457094d52007b816","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sah/viewer.properties","hash":"6289005724a86c7f13b53cdfdf514d89ba549ffa","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sr/viewer.properties","hash":"a7d6c27fc8b6c3ad52110c451b685624a1e5ac45","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sq/viewer.properties","hash":"333d4acecc5ca77439bc6f2a182ea25d6fdd637f","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sv-SE/viewer.properties","hash":"076703f13aacad061c0cc5afd5f06ccc71241eaf","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/oc/viewer.properties","hash":"2abe0eca7286b8e9521497e5c173025f8b95e643","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/or/viewer.properties","hash":"d07d18e60dbb54b30d11b1956eb31edab072160a","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/sw/viewer.properties","hash":"1c7a1fafc02ae5e4c95fdc6f82e801b67b8256a2","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ta-LK/viewer.properties","hash":"ab5a977852adbe26ed91035befe1c06f46bf00f7","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/te/viewer.properties","hash":"456e430710ea7f27ad109c9b917a5bb74b6d2b05","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/tl/viewer.properties","hash":"15b7c1f2416c1c4913056d4235881cfbfed5a3cf","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ta/viewer.properties","hash":"bb655a70c1a825af3bf45ea6f879e47f8d244c3f","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/th/viewer.properties","hash":"a2f51c60a11189b5202f8a1b61c610c2a77de95c","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/tn/viewer.properties","hash":"4cf92ca2a24aa58346eb72933728633fcc504029","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/uk/viewer.properties","hash":"b6336586b5390b24d5b5a7a2a7347117077b3d57","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/son/viewer.properties","hash":"ea92cd2fc9d75e6473b1eae2ee596073419eba14","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/tr/viewer.properties","hash":"1cd918ec0a2034e56c67f3820f85285d8e64248a","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/vi/viewer.properties","hash":"d0a86916739c71f9ff9383b70c1d7af3a70000f8","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/zh-TW/viewer.properties","hash":"91b00b49bf61411ba5825930208755d00d63d05e","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/ur/viewer.properties","hash":"bb0db266837c9b439b917fdd062b9426dd4a11c9","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/zh-CN/viewer.properties","hash":"7246df669a1d289be4be0462ca0b9183f7d0d030","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/uz/viewer.properties","hash":"287071ce4b050c63a01e6d4be4adf01abc9951fc","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/wo/viewer.properties","hash":"3ac1807225501636c4ec9288d40960308ae0bc31","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/zu/viewer.properties","hash":"4d85e88a91f1e459026e7c589fec193a74972c6d","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/tsz/viewer.properties","hash":"548b6fc7e5c308664c7ef7720ccf7ed29c87a948","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/zam/viewer.properties","hash":"80f3313d41662607168500a7839c1a6b3101916b","modified":1664095172061},{"_id":"public/lib/pdf/web/locale/xh/viewer.properties","hash":"cd0179cae55e708304cc15a30711bccf0b182cb2","modified":1664095172061},{"_id":"public/posts/51-1/效果.jpg","hash":"8f1466a1c9f36d8c5f3c6e251b4bf23a88931c59","modified":1664095172061},{"_id":"public/posts/51-1/电路图.jpg","hash":"7e40e304a8ff3b184b73fd82209feeae35ed293a","modified":1664095172061},{"_id":"public/posts/Socket-chatroom/客户端下线.jpg","hash":"c62edcaaac060adbe2fbe4d18bac86db51add268","modified":1664095172061},{"_id":"public/posts/Socket-chatroom/客户端初始.jpg","hash":"7d41e70d5f71b288922080c817ae6bab58ab62da","modified":1664095172061},{"_id":"public/posts/aws-1register/30g.png","hash":"92dd5247e477feb14a1e08872290aa1bfc0b673d","modified":1664095172061},{"_id":"public/posts/Socket-chatroom/服务端初始.jpg","hash":"de2b2b39b3eca723b10e58d74d5fadd9843fe2eb","modified":1664095172061},{"_id":"public/posts/aws-1register/密钥.png","hash":"4b2bde77123b9cb05168aafd9bed576ee748eea7","modified":1664095172061},{"_id":"public/posts/aws-1register/查看.png","hash":"8d3db2216d924d4a75d1775cd23010e6c86f3323","modified":1664095172061},{"_id":"public/posts/aws-1register/标签.png","hash":"43be1e45188ceb7fc3a12d9228fd09a2d0928279","modified":1664095172061},{"_id":"public/SV2TTS/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1664095172061},{"_id":"public/fastspeech2/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1664095172061},{"_id":"public/melgan/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1664095172061},{"_id":"public/vits/img/synthesized_melspectrogram.png","hash":"4a3feac5c49bd9479246283262b36abfbff3ef77","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1353-121397-0001.flac","hash":"6d5c83b0652d16d5284ff0e324c43ae912b0623c","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/428-125879-0003.flac","hash":"7c0a682f487ca1fd10cf7cf96f8a1d69fb76794a","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ011-0202_synthesized.wav","hash":"5a24cd77296624c044d5dccd468d7bb6f3f0c65e","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ042-0094_synthesized.wav","hash":"4b294318384352109a261bb8300f437a451040bc","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ011-0202_synthesized.wav","hash":"5a24cd77296624c044d5dccd468d7bb6f3f0c65e","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ042-0094_synthesized.wav","hash":"4b294318384352109a261bb8300f437a451040bc","modified":1664095172061},{"_id":"public/posts/aws-4deepl/4a.png","hash":"3b63e7fd110d89308d9dddf42718257319cf2b01","modified":1664095172061},{"_id":"public/posts/aws-4deepl/4b.png","hash":"7a9aef7402eb7106875c01bca1d72b2b456e2070","modified":1664095172061},{"_id":"public/posts/aws-2staticweb/git库.png","hash":"00346ba956342a17bf7bd75ba1012c1354976147","modified":1664095172061},{"_id":"public/posts/aws-2staticweb/入门.png","hash":"15d2088fc07351372dbf0d2e7060d32f5079ad67","modified":1664095172061},{"_id":"public/posts/aws-2staticweb/分支.png","hash":"a9eb887533bdc2dab6d8f8f736c705d958a7cd72","modified":1664095172061},{"_id":"public/posts/aws-2staticweb/选择.png","hash":"3f9f9fa292f081f5df23bc1cfac8062ccc3c90a5","modified":1664095172061},{"_id":"public/posts/aws-2staticweb/部署.png","hash":"729891c6e7448336de283dceb8bbf7c9b52be539","modified":1664095172061},{"_id":"public/posts/aws-3manager/1a.png","hash":"4f46c2e21ed6bccbd3175ded8e1e80817395e9dc","modified":1664095172061},{"_id":"public/posts/aws-3manager/1d.png","hash":"fc64c36ffa3e036f527faae5cc38c52a4714d7db","modified":1664095172061},{"_id":"public/posts/aws-3manager/1e.png","hash":"d67cb3be763573c6b8158e0bc5eb32d418060da2","modified":1664095172061},{"_id":"public/posts/chenwujian/ceng.jpg","hash":"59fa98bd63b34dc789f1c03cc7c23c1e5e0a48ad","modified":1664095172061},{"_id":"public/posts/chenwujian/gaoji.jpg","hash":"94c9d40a8caf18f41b42ee1cfea01b14f29f7791","modified":1664095172061},{"_id":"public/posts/chenwujian/hanshu.jpg","hash":"ce59d0e6103e36193ae8a5dadcfc9ad8bc46cfa2","modified":1664095172061},{"_id":"public/resource.json","hash":"e21ff53d0855b155d07a033ff348cf8983bd2194","modified":1664095172061},{"_id":"public/css/style.css","hash":"3c41b4aff97be5b5057e7bb34a6ec7a56cd750e3","modified":1664095172061},{"_id":"public/result.json","hash":"1442919e3da40409632722a4d20040b7301cacd3","modified":1664095172061},{"_id":"public/404.html","hash":"6075cf3942c02aa84e4ffcbf3845e1b8175e76f9","modified":1664095172061},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1664095172061},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1664095172061},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1664095172061},{"_id":"public/js/motion.js","hash":"1097b71fd0d68e4f6955487a8da58f8099ca1203","modified":1664095172061},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1664095172061},{"_id":"public/js/script.js","hash":"60ec181c616ace4511bd60ff3df4cb8e66a3ec00","modified":1664095172061},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1664095172061},{"_id":"public/lib/bookmark/bookmark.min.js","hash":"9e525329553335c2484f6faf9e933a6bbee9ab6d","modified":1664095172061},{"_id":"public/lib/bookmark/README.html","hash":"7f7eafeda0668e53fc3b99e6974f611b35829270","modified":1664095172061},{"_id":"public/lib/canvas-nest/README.html","hash":"4e20cd8831f1cce4864388a8ac0966b5f7a59cfd","modified":1664095172061},{"_id":"public/lib/bookmark/package.json","hash":"9f06f3432c12b68a2c2fe3f318455b35a965a1da","modified":1664095172061},{"_id":"public/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"e1c96d454dea33d9a12c786e10b0103debd05b45","modified":1664095172061},{"_id":"public/lib/bookmark/index.js","hash":"5e5cba645a1a4531ccbb4782df2f7a075626393f","modified":1664095172061},{"_id":"public/lib/Han/README.html","hash":"eada32c4b016db5f8d0d697d84d8ef3b7f05752e","modified":1664095172061},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"65b1a8f12d04b15d7ed6eeb9d11dec760a799c5f","modified":1664095172061},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"2e7c767dcbac5f2370c4c4fea6ed2b005d55daa8","modified":1664095172061},{"_id":"public/lib/canvas-ribbon/README.html","hash":"cbd2ebb4be869d420343199ee5c73e763b7afce1","modified":1664095172061},{"_id":"public/lib/fastclick/README.html","hash":"b38b8de077d33d1b2e68ad146b2fd15853b023e9","modified":1664095172061},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1664095172061},{"_id":"public/lib/fancybox/README.html","hash":"beef766ec5237f9611110dd75187bc7888ca3942","modified":1664095172061},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1664095172061},{"_id":"public/lib/jquery_lazyload/README.html","hash":"77016203f2bba6176a054dba09b980dbac7a5045","modified":1664095172061},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1664095172061},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1664095172061},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1664095172061},{"_id":"public/lib/needsharebutton/README.html","hash":"a02a3905ce9ab80b2c5e68d99ad98a9f3ce315cc","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1664095172061},{"_id":"public/lib/pace/README.html","hash":"0739df73902c11eb9a95d2c0845e2d596977a4e7","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1664095172061},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1664095172061},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1664095172061},{"_id":"public/lib/pangu/README.html","hash":"4ad3117553667de708cec2e443f6eb0ce3f3d83d","modified":1664095172061},{"_id":"public/lib/quicklink/README.html","hash":"4e5eae06836709606655c51d1f2427b0aa318665","modified":1664095172061},{"_id":"public/lib/reading_progress/reading_progress.js","hash":"174678a8e2a24763e3fe8b9c25496fdf6ee0220b","modified":1664095172061},{"_id":"public/lib/pdf/README.html","hash":"d43e77a53b962d99f3b94f2298a4c2d71690db0c","modified":1664095172061},{"_id":"public/lib/reading_progress/README.html","hash":"ac0209e94caf41ca02955ec49b0989ec58cbab50","modified":1664095172061},{"_id":"public/lib/reading_progress/package.json","hash":"e404a0bdf26df62eb89173c6fe5f5824345801c5","modified":1664095172061},{"_id":"public/lib/reading_progress/reading_progress.min.js","hash":"98af8d99819882904f9b1a9254bebf40602e1843","modified":1664095172061},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1664095172061},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1664095172061},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1664095172061},{"_id":"public/js/src/fireworks.js","hash":"233e9a9ed0e8aa4799bfbe02899f0c34f9af5a7b","modified":1664095172061},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1664095172061},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1664095172061},{"_id":"public/lib/pangu/dist/pangu.min.js","hash":"9887d0641d828b330969dc2f81f6d45a1e97be2c","modified":1664095172061},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1664095172061},{"_id":"public/lib/quicklink/dist/quicklink.umd.js","hash":"d18dc2633f75d7f3801649f4c4af4b11a291750c","modified":1664095172061},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1664095172061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1664095172061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1664095172061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1664095172061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1664095172061},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1664095172061},{"_id":"public/css/main.css","hash":"fe839294a78f4afa527ccf4ba7e4de4f8df3f7ff","modified":1664095172061},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1664095172061},{"_id":"public/js/jquery.min.js","hash":"62c4042e9ebc691a5372d653b424512a561d1670","modified":1664095172061},{"_id":"public/js/parallax.min.js","hash":"0a7ac970f67b7fa08738a5be55233e9e741ad267","modified":1664095172061},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1664095172061},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"4688ab516edbd7278f0da58d0dc5a3ec73263e89","modified":1664095172061},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"d55ca3e2f697395fb9b1ac9d9166d23258a85438","modified":1664095172061},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1664095172061},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1664095172061},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1664095172061},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1664095172061},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1664095172061},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1664095172061},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1664095172061},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1664095172061},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1664095172061},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1664095172061},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1664095172061},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1664095172061},{"_id":"public/lib/pangu/dist/pangu.js","hash":"8f2c5a78edf77a7e4a6d04e7dd568d544cc93737","modified":1664095172061},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1664095172061},{"_id":"public/lib/pdf/web/viewer.css","hash":"10d9c2bd05e7ae0ca51631a70cb1485a78a29643","modified":1664095172061},{"_id":"public/lib/pdf/web/debugger.js","hash":"1f6522ecedd73ad24ed3b76d1e13c935b64c6ddd","modified":1664095172061},{"_id":"public/lib/pdf/web/viewer.html","hash":"ec2a94e016621a1b7a9dd4c0cb28f921c0814dde","modified":1664095172061},{"_id":"public/lib/pdf/web/viewer.js","hash":"71da2a7cd76abd03af79a38b2b3224d7db59c3d8","modified":1664095172061},{"_id":"public/posts/dl-12GRU-and-LSTM/523650730db3f0d5c05a7192da02f878.png","hash":"1d8e6e516a4a679600ee6165b2790fad1ade850a","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/1a3d288dc243ca9c5a70a69799180c4a.png","hash":"701289648f8dc3020a381acccb9b655fcf104618","modified":1664095172061},{"_id":"public/posts/dl-3logistic-regression/7e304debcca5945a3443d56bcbdd2964.png","hash":"39171bb35391da14a588dfa28ceba6089f543054","modified":1664095172061},{"_id":"public/posts/dl-3logistic-regression/4c9a27b071ce9162dbbcdad3393061d2.png","hash":"21338fe2140dd5374056841eaf5fed1fdf9a95b4","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/1bebe0ac41715ef8132f2d802968495c.png","hash":"5ae85f1eb5c72048c786b20949bcfd10d01b92af","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/4656617e30e7ad44490fe605b2e49e56.png","hash":"dff6174cd7738deafe19754ddbd51fe1ec6e892e","modified":1664095172061},{"_id":"public/posts/dl-4Gradient-Descent/4fb3b91114ecb2cd81ec9f3662434d81.jpg","hash":"5bb86fee67fb1173bcefc3c8c6abb8b973288afd","modified":1664095172061},{"_id":"public/posts/dl-4Gradient-Descent/6403f00e5844c3100f4aa9ff043e2319.jpg","hash":"974fc505b3d832420f19eed60136ec0db508749e","modified":1664095172061},{"_id":"public/posts/dl-4Gradient-Descent/03f5f96177ab15d5ead8298ba50300ac.jpg","hash":"b976618a517f56363e12d963805d7244b34e9df1","modified":1664095172061},{"_id":"public/posts/dl-4Gradient-Descent/cbd5ff8c461fcb5a699c4ec4789687b3.jpg","hash":"88f05e0eabd7ca376768a94fb4198887466334fd","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/L1_week3_3.png","hash":"a315ca6265625c464c436f5e260b73803e1f6d57","modified":1664095172061},{"_id":"public/posts/dl-4Gradient-Descent/c5eda5608fd2f4d846559ed8e89ed33c.jpg","hash":"3589a916959db6600dfad6956a8b0fd90b500513","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/L1_week3_7.png","hash":"9ef45e2ee89d3aaf242585b070a8388ebb9462cd","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/QQ截图20210305135223.jpg","hash":"2982f371e302a24f9ab93273075dc1707f021998","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/QQ截图20210305135246.jpg","hash":"6e711b745416b3c53fc3e2dbd484086f914bf233","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/L1_week3_6.png","hash":"9792f6425f09a1243dba6fcd170238569b36cdef","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/L1_week3_5.png","hash":"fa48155cd61b566bbeee8dc8ea03880c157cb995","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/QQ截图20210305142218.jpg","hash":"d8d078a0da9b7151d494c7e0738d506e817ad081","modified":1664095172061},{"_id":"public/posts/dl-7activation-functions/L1_week3_9.jpg","hash":"7128a43c35553a5d97621976727a5b4331fd244a","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/QQ截图20210305142550.jpg","hash":"88568d4004f700dce5d950c8b423560ecb332990","modified":1664095172061},{"_id":"public/posts/dl-6neural-network-representation/QQ截图20210305142539.jpg","hash":"6393dfb49ae1df8d051951abbf8c141b4be92432","modified":1664095172061},{"_id":"public/posts/dl-8Gradient-descent-for-neural/QQ截图20210307171037.jpg","hash":"36b306deb4d07682148e9fb8cd2b6ae35836c980","modified":1664095172061},{"_id":"public/posts/harmony-start/create.jpg","hash":"3c535c6357fbb0ee4a48875ea094ef78a2cf5d51","modified":1664095172061},{"_id":"public/posts/harmony-start/create2.jpg","hash":"d5bb823248d879976b99877e093670e37158eb45","modified":1664095172061},{"_id":"public/posts/spring1/1.png","hash":"57f4545ec24f8497f79d52c8e5a868af5ed89c72","modified":1664095172061},{"_id":"public/posts/spring1/3.jpg","hash":"20eed7aec59ed7732853409aa403ce14cffc03ca","modified":1664095172061},{"_id":"public/posts/spring1/2.png","hash":"5736e072ef906c3072df92c4ee7260ac8a5cefdf","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/2.jpg","hash":"edafdb463ef40804d9fa6765c5ba25da0e927784","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/3.jpg","hash":"ce52c734540989b945095060ce542c6a7b8a8af7","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/4.jpg","hash":"abb2779d7d22de9ea75aa2b8d92d1d8a43a83926","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/6.jpg","hash":"7f58991db66244613c5f238a5d6cd3d045f80361","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/5.jpg","hash":"2021303b199f7a6c9441fa281c33ba6de244343a","modified":1664095172061},{"_id":"public/posts/test/SomethingJustLikeThis.jpg","hash":"6c73446b699807ee49fd449adb75411882c68917","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/7.jpg","hash":"c0c5ec10326a6047b06b9f2e52c5b09c9d437065","modified":1664095172061},{"_id":"public/posts/ziti/moban.jpg","hash":"e88e4a2ccc3163636f13d37c2d8c33e0fe8f34fe","modified":1664095172061},{"_id":"public/posts/test/SomethingJustLikeThis.txt","hash":"8275376ecd8e55ba15baedd2e068e0315694cfaf","modified":1664095172061},{"_id":"public/posts/ziti/shengcheng.jpg","hash":"a90bc1c987a11e266f5798a3410442febd261ae3","modified":1664095172061},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1664095172061},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/43_synthesized.wav","hash":"d4bef5a65697d930b1eeb430ee7cd83531109356","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/44_synthesized.wav","hash":"d495e562d338e82801076d7e008962cee4d184b5","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/45_synthesized.wav","hash":"29520b79ea962832b03caac99683bb1a686792c3","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/47_synthesized.wav","hash":"bf1c660be0c0842999cee3357a0379f6d829c2fb","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/48_synthesized.wav","hash":"9d3ac0fb0a659efbebeceeb2aabdcfb29d6d0945","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/49_synthesized.wav","hash":"e56739deaa3e70bca687926006d97da41ce46200","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/51_synthesized.wav","hash":"2301734fc090ac28e1a49b7cf9bcd9a641d5aa4a","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ011-0202_synthesized.wav","hash":"5a24cd77296624c044d5dccd468d7bb6f3f0c65e","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ042-0094_synthesized.wav","hash":"4b294318384352109a261bb8300f437a451040bc","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB00800003_synthesized.wav","hash":"7f334a4da371326227b1551394d4f9c22a409a18","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB04700028_synthesized.wav","hash":"102ddec95f62f600245958fdec17bcb0ec0faa6e","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB04700028_ground-truth.wav","hash":"bf0f843548168d50f4f5b81a303b9f97a37c99a8","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB05900363_ground-truth.wav","hash":"94a632937f721b36167b9ab5b03f0b03704cdd24","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB06290079_ground-truth.wav","hash":"849deaed12425d85e8a47618c28f0fe060a07146","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB05900363_synthesized.wav","hash":"aa1eb6acebb568d8bdb71a7b91622a950fd6a722","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB08630110_ground-truth.wav","hash":"638cef50398369b641a4c3ff236bf7211ec94727","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB08630110_synthesized.wav","hash":"8451e8fc286e747f23145f2b35a46b7d4e3bc16d","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB15930399_ground-truth.wav","hash":"db2684f7474cd1b1b8444e74084d654079d4459d","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB10200388_synthesized.wav","hash":"2900763e7000e9d52a79a424cf93b6a8c6498af0","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB10200388_ground-truth.wav","hash":"4b8a9ae081c93fd5173f31f4aefb9f494f43d68a","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB15930399_synthesized.wav","hash":"34117dc2a946712284935efbbd02d6bdeb5c4eac","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1353-121397-0001.flac","hash":"6d5c83b0652d16d5284ff0e324c43ae912b0623c","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB16070080_synthesized.wav","hash":"a748ca8bebe52beb86e46475695adeb80f4be096","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/428-125879-0003.flac","hash":"7c0a682f487ca1fd10cf7cf96f8a1d69fb76794a","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0148_reconstructed_epoch0610.wav","hash":"487e527b962464ee8de8819be6078094b84fa76b","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0148.wav","hash":"0d3998effeb771f2293dd1a8836f5bd6b9316042","modified":1664095172061},{"_id":"public/vits/demo/baker/43_synthesized.wav","hash":"d4bef5a65697d930b1eeb430ee7cd83531109356","modified":1664095172061},{"_id":"public/vits/demo/baker/44_synthesized.wav","hash":"d495e562d338e82801076d7e008962cee4d184b5","modified":1664095172061},{"_id":"public/vits/demo/baker/45_synthesized.wav","hash":"29520b79ea962832b03caac99683bb1a686792c3","modified":1664095172061},{"_id":"public/vits/demo/baker/47_synthesized.wav","hash":"bf1c660be0c0842999cee3357a0379f6d829c2fb","modified":1664095172061},{"_id":"public/vits/demo/baker/48_synthesized.wav","hash":"9d3ac0fb0a659efbebeceeb2aabdcfb29d6d0945","modified":1664095172061},{"_id":"public/vits/demo/baker/49_synthesized.wav","hash":"e56739deaa3e70bca687926006d97da41ce46200","modified":1664095172061},{"_id":"public/vits/demo/baker/51_synthesized.wav","hash":"2301734fc090ac28e1a49b7cf9bcd9a641d5aa4a","modified":1664095172061},{"_id":"public/images/alipay.png","hash":"de347d4dbc3f2be544b5e2b06733a0862a5b222d","modified":1664095172061},{"_id":"public/images/avatar.jpg","hash":"affe18597d98da53222ea6482034ed77b5991d01","modified":1664095172061},{"_id":"public/images/wechatpay.png","hash":"acb49c99f6b50cb8ab9143af18fefb1b3be39a39","modified":1664095172061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1664095172061},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1664095172061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1664095172061},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1664095172061},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1664095172061},{"_id":"public/posts/Socket-chatroom/发送消息.jpg","hash":"a0fdfb30d82a91a4168a891164d0a4680832f858","modified":1664095172061},{"_id":"public/posts/Socket-chatroom/客户上线.jpg","hash":"6e65c10b5671f3b282a8281e71029912a4f26023","modified":1664095172061},{"_id":"public/posts/aws-1register/ami.png","hash":"8c43f0bff4fe74cb38e0733167bc1b2f6c9d49f1","modified":1664095172061},{"_id":"public/posts/aws-1register/启动.png","hash":"97522578e57e377ab9105ff5a96c01898f920b01","modified":1664095172061},{"_id":"public/posts/aws-1register/安全组.png","hash":"bbf8f55dd11e2b98436fb918f7dd01451ac3318b","modified":1664095172061},{"_id":"public/posts/aws-1register/实例.png","hash":"5feee1b63fda3ebbde1537f47f5b48692a8569ef","modified":1664095172061},{"_id":"public/posts/aws-1register/审核.png","hash":"dc0b2a6f63b82eac3536264a0cade0fc8e36f2d7","modified":1664095172061},{"_id":"public/posts/aws-1register/服务.png","hash":"34b0c25e7bd46c0b32daef30778a73c62a927a20","modified":1664095172061},{"_id":"public/posts/aws-1register/详细.png","hash":"450467dfcfb7b86ac0453f3f342f4c879d5e7eb2","modified":1664095172061},{"_id":"public/posts/aws-1register/状态.png","hash":"3262e0f76e3c6098d2c99cc74e5c2219466fed28","modified":1664095172061},{"_id":"public/SV2TTS/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1664095172061},{"_id":"public/SV2TTS/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1664095172061},{"_id":"public/fastspeech2/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1664095172061},{"_id":"public/fastspeech2/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1664095172061},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1664095172061},{"_id":"public/melgan/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1664095172061},{"_id":"public/melgan/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1085-156170-0001.flac","hash":"61228b245e69165d2c4817ae71a2db0359b473ac","modified":1664095172061},{"_id":"public/vits/img/tensorboard_audio.png","hash":"6b6e4fc06b2457e248195f011bd9f45fb2f23cb3","modified":1664095172061},{"_id":"public/vits/img/tensorboard_loss.png","hash":"96040d303c8664404503c0991c255114237c3769","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1085-156170-0001_synthesized.flac","hash":"c94470aef3b4bd6f12143e74226bcdba713dd1d7","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1492-55449-0000_synthesized.flac","hash":"e47371b86c111c269c342bae1fbd0dbe419ce91c","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1664-137600-0003_synthesized.flac","hash":"d7eade7e4c9dd64aab720e3f973ba29e43f24bda","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/218-131206-0003.flac","hash":"5a23113befa93e363c9f9fe9a97fdc3ae4667a72","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/218-131206-0003_synthesized.flac","hash":"0d0b70387e123f5dcbdd1dddc2cf7e47e11f2b90","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/29-123032-0005_synthesized.flac","hash":"2d319cba29eaa1a714998ba8c05f3a84da2fbf59","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/319-134959-0006_synthesized.flac","hash":"e74b49a4b535e4003d62ab09e83f830a0c5b03a5","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/36-16603-0002.flac","hash":"2fa3157fb7dd97d1ae93f8a36d667f81523068d8","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB00800003_ground-ada.wav","hash":"85b9bc15ae801e9703e525ba3edf6a516971ff65","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB05900363_ground-ada.wav","hash":"a767569b1019960f4c9ab4f6528b699e1b546cc7","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB04700028_ground-ada.wav","hash":"63a31ee8691ae5d07cdb1746c4fedcf4ee78ed56","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB06290079_ground-ada.wav","hash":"2c80f3724bff770fd7ac46ad05ae45e4a0e94ea8","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB07940279_ground-ada.wav","hash":"fcdd83fb7071b32e20a7bad1fd76a2554897e719","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB08220199_ground-ada.wav","hash":"be82074f4efb5d9c24d9503c1242618f89e2c4d1","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB08630110_ground-ada.wav","hash":"8a7fc2e966db01ea645103ccac45e6b2a1a26e5e","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB15930399_ground-ada.wav","hash":"422e429920a374ba0968a1d30d2946423ed3fd4f","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB16070080_ground-ada.wav","hash":"9c8fb8d26dda7a06a9c7139fbfee94faeb481e6f","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB10200388_ground-ada.wav","hash":"ef1e9ee80f1bfbdc70f024db9307039f14907fa5","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ011-0202_ground-truth.wav","hash":"525a494707f6e59045081b0cc06631ebd8ec6fc2","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ042-0094_ground-truth.wav","hash":"17a7a79e47373ae8233699dd21f9d3a3e087ba5a","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ011-0202_ground-truth.wav","hash":"525a494707f6e59045081b0cc06631ebd8ec6fc2","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ042-0094_ground-truth.wav","hash":"17a7a79e47373ae8233699dd21f9d3a3e087ba5a","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","hash":"6c9f4025499aaa023e9aad6d94dcfdcd00b86ac1","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","hash":"3c79e2361bd887c282abc9759ad08d5ccdca9c74","modified":1664095172061},{"_id":"public/posts/aws-4deepl/5a.png","hash":"f09e8d4698fab06e085c92a60806f1d14edaaeba","modified":1664095172061},{"_id":"public/posts/aws-4deepl/5b.png","hash":"744f6e9d0129c23cffcb2db2f86dd6d06fde79a6","modified":1664095172061},{"_id":"public/posts/aws-3manager/1b.png","hash":"4f3e416a4d45850fffe24810ae673067703f14a7","modified":1664095172061},{"_id":"public/posts/aws-3manager/1c.png","hash":"3935c8d03afd8d1b291597ef9d1283981440dd4a","modified":1664095172061},{"_id":"public/posts/aws-3manager/3a.png","hash":"e8a1f626e4e2c46b7badad9545237844bca9ca77","modified":1664095172061},{"_id":"public/posts/aws-3manager/3b.png","hash":"f6f95f416e2106b47e35a897800ab35d7dd691cb","modified":1664095172061},{"_id":"public/posts/aws-3manager/3c.png","hash":"de43213d69ac3864e2b1dae8668c4337a763d6d5","modified":1664095172061},{"_id":"public/posts/aws-3manager/3e.png","hash":"4b3dba20d4f5e8a23de11f2c39df9b1d52e14617","modified":1664095172061},{"_id":"public/posts/aws-3manager/4a.png","hash":"b756925f12b7f55b5dff124efac3c88aded6e104","modified":1664095172061},{"_id":"public/posts/aws-3manager/3d.png","hash":"8e1aa219b45b129ea6aef876636f92ac5f1114d5","modified":1664095172061},{"_id":"public/posts/aws-3manager/4b.png","hash":"46a0d011fcd4f8dbeb2eab3333c7aef70b4a9807","modified":1664095172061},{"_id":"public/posts/aws-3manager/4c.png","hash":"86bf3010552c7389782ac585ddec5c73e03be67a","modified":1664095172061},{"_id":"public/posts/aws-3manager/4d.png","hash":"03675a01ee99b02f83cec013cfb515b2c5721f7c","modified":1664095172061},{"_id":"public/lib/pdf/build/pdf.js","hash":"dd3387e7a0eb66f57b1b99be39d38fb946b2676f","modified":1664095172061},{"_id":"public/posts/dl-10different-rnn/14e1df0a7a8cdd1584b2e92e87e23aa7.png","hash":"2c0261d41f4f12778751d5eff1890f66ef582bdc","modified":1664095172061},{"_id":"public/posts/dl-11Language-model-and-Sample/8b901fc8fcab9e16b1fe26b92f4ec546.png","hash":"7416d6d6a4f5305d2b9b8ed04dfbe8cc5655251c","modified":1664095172061},{"_id":"public/posts/dl-10different-rnn/db580f1dfd6095d672fc62cce74ce5e2.png","hash":"4a5b2b09121b971ec4e71884f3425c075acc4d04","modified":1664095172061},{"_id":"public/posts/dl-11Language-model-and-Sample/986226c39270a1e14643e8658fe6c374.png","hash":"86921bf6e45834beec1235f0f619f240d0b50e83","modified":1664095172061},{"_id":"public/posts/dl-13speech-recognition/8da3e9cf049139a8e4a78503bd72e7fd.png","hash":"a54a580e5cb9c8c5e0ac802d773f2d085dcf72f6","modified":1664095172061},{"_id":"public/posts/dl-3logistic-regression/1e664a86fa2014d5212bcb88f1c419cf.png","hash":"2e2eebcde2788ecf67e87648db6c5b6a64d8be4f","modified":1664095172061},{"_id":"public/posts/dl-3logistic-regression/55345ba411053da11ff843bbb3406369.png","hash":"82b094923e1566eb59176685cbfbc250cd642bb2","modified":1664095172061},{"_id":"public/posts/dl-13speech-recognition/8f409fc3980b0be00dca49bf4fac2659.png","hash":"529ece2177127130768ac8af1ba804be4f4b2d9a","modified":1664095172061},{"_id":"public/posts/dl-3logistic-regression/dfb5731c30b81eced917450d31e860a3.png","hash":"057d298974e49b07a5f568c4bdc148c7e002c6a8","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/2b14edfcb21235115fca05879f8d9de2.png","hash":"9aa06bb3a97838131b92b3d954d1ff209e9422aa","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/QQ截图20210219142516.jpg","hash":"4bd0dc1567965175c44f61bd22d12eb022665ab2","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/7a0e0d40f4ba80a0466f0bd7aa9f8537.png","hash":"b24211746007e02b7cdafe959501144e942c2f8b","modified":1664095172061},{"_id":"public/posts/dl-2Neural-Networks/3fe6da26014467243e3d499569be3675.png","hash":"73dcaf37a389637ea182b6073f315afad7961037","modified":1664095172061},{"_id":"public/posts/go-1intruduct/coderunner.jpg","hash":"db34a75995f64ba6ea6ce5c11c6c8980e56301e9","modified":1664095172061},{"_id":"public/posts/go-1intruduct/go插件.jpg","hash":"ca70d69a35a4ade222b5cc9530212963a50b155a","modified":1664095172061},{"_id":"public/posts/dl-9Sequence-Models-introduce/cb041c33b65e17600842ebf87174c4f2.png","hash":"138a57055c043c828c5336e5755e16a46b3f0e34","modified":1664095172061},{"_id":"public/posts/dl-9Sequence-Models-introduce/8deca8a84f06466155d2d8d53d26e05d.png","hash":"0a66fcafbebe961ee6f3f1be096952eafa375c6d","modified":1664095172061},{"_id":"public/posts/harmony-start/hvd.jpg","hash":"e7fe5d66a18469f62b18d6b1e5f58d5e562e6524","modified":1664095172061},{"_id":"public/posts/harmony-start/hello.jpg","hash":"e37cf0e37467c3e366b92c7bc531874328bd9035","modified":1664095172061},{"_id":"public/posts/spring2-helloworld/1.jpg","hash":"17c4fde45929d6c29d0f15feec445faa68a9a57a","modified":1664095172061},{"_id":"public/posts/ziti/paizhao.jpg","hash":"1e8fae0afbf886dec783e20a3d800941ff40f206","modified":1664095172061},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","hash":"d5bc9d9b6a321843a3ad67b02ecacb487f92df77","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","hash":"39482e1e7957b6a18fae74bc3e07521f59cba545","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/50_synthesized.wav","hash":"34b14b683e97f48537b05424c62ce7f8ba980c63","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ011-0202_ground-truth.wav","hash":"525a494707f6e59045081b0cc06631ebd8ec6fc2","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ042-0094_ground-truth.wav","hash":"17a7a79e47373ae8233699dd21f9d3a3e087ba5a","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB00800003_ground-truth.wav","hash":"db8ccb30c09fd7e74e1029b5ef333694b524a901","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1085-156170-0001.flac","hash":"61228b245e69165d2c4817ae71a2db0359b473ac","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1085-156170-0001_synthesized.flac","hash":"c94470aef3b4bd6f12143e74226bcdba713dd1d7","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB16070080_ground-truth.wav","hash":"f73ff2b0cc965218a80bf3f77abf65acf074a521","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1492-55449-0000_synthesized.flac","hash":"e47371b86c111c269c342bae1fbd0dbe419ce91c","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1664-137600-0003_synthesized.flac","hash":"d7eade7e4c9dd64aab720e3f973ba29e43f24bda","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/29-123032-0005_synthesized.flac","hash":"2d319cba29eaa1a714998ba8c05f3a84da2fbf59","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/218-131206-0003_synthesized.flac","hash":"0d0b70387e123f5dcbdd1dddc2cf7e47e11f2b90","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/36-16603-0002.flac","hash":"2fa3157fb7dd97d1ae93f8a36d667f81523068d8","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/319-134959-0006_synthesized.flac","hash":"e74b49a4b535e4003d62ab09e83f830a0c5b03a5","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/218-131206-0003.flac","hash":"5a23113befa93e363c9f9fe9a97fdc3ae4667a72","modified":1664095172061},{"_id":"public/vits/demo/baker/50_synthesized.wav","hash":"34b14b683e97f48537b05424c62ce7f8ba980c63","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/2299_6524_000057_000000_ground-truth.wav","hash":"3c79e2361bd887c282abc9759ad08d5ccdca9c74","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/2299_6524_000057_000000_synthesized.wav","hash":"6c9f4025499aaa023e9aad6d94dcfdcd00b86ac1","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/6544_231862_000065_000001_ground-truth.wav","hash":"d5bc9d9b6a321843a3ad67b02ecacb487f92df77","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/6544_231862_000065_000001_synthesized.wav","hash":"39482e1e7957b6a18fae74bc3e07521f59cba545","modified":1664095172061},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1664095172061},{"_id":"public/posts/aws-1register/主页.png","hash":"7660534a31c9d299700cf406f02533decfa7c5b0","modified":1664095172061},{"_id":"public/posts/aws-4deepl/1d.png","hash":"7a58f382da8fa936538024ac84419908cd8831ea","modified":1664095172061},{"_id":"public/posts/aws-4deepl/1f.png","hash":"d5299d2bf370d0b95edd645f16612a03415cac53","modified":1664095172061},{"_id":"public/SV2TTS/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1664095172061},{"_id":"public/SV2TTS/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1664095172061},{"_id":"public/SV2TTS/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1664095172061},{"_id":"public/SV2TTS/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1664095172061},{"_id":"public/SV2TTS/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1664095172061},{"_id":"public/SV2TTS/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1664095172061},{"_id":"public/fastspeech2/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1664095172061},{"_id":"public/fastspeech2/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1664095172061},{"_id":"public/fastspeech2/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1664095172061},{"_id":"public/fastspeech2/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1664095172061},{"_id":"public/fastspeech2/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1664095172061},{"_id":"public/fastspeech2/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1664095172061},{"_id":"public/melgan/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1664095172061},{"_id":"public/melgan/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1664095172061},{"_id":"public/melgan/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1664095172061},{"_id":"public/melgan/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1664095172061},{"_id":"public/melgan/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1664095172061},{"_id":"public/melgan/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1664095172061},{"_id":"public/vits/img/10000.png","hash":"b785667ed0276987f746db97cec9e86887871adc","modified":1664095172061},{"_id":"public/vits/img/50000.png","hash":"586c52da682e59e52500dbcc44cad08d90c3ebe7","modified":1664095172061},{"_id":"public/vits/img/100000.png","hash":"6384daa603bfcf8ccda594a6b4f1ef1f93e4815e","modified":1664095172061},{"_id":"public/vits/img/160000.png","hash":"f606b16df7b2d133e694a7f9986116a53bc02e04","modified":1664095172061},{"_id":"public/vits/img/900000.png","hash":"4c4c6edcf6fb9e7414295088f7f0b56780a3289d","modified":1664095172061},{"_id":"public/vits/img/1000.png","hash":"7c9e96b25fcb73bd6e60d705e1735f787d64696d","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1353-121397-0001_synthesized.flac","hash":"86ca3ecab88f5813c9df84e8fce706fef3c9f51f","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/319-134959-0006.flac","hash":"1b13499d1a275e91a16ef7322a8e5cfd274211de","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/428-125879-0003_synthesized.flac","hash":"59ade3702d21e0a9ec810a5be7466eeefe09a0be","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/713-291178-0007.flac","hash":"0db34425e53f924cb5277910d338730e94f919c9","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/713-291178-0007_synthesized.flac","hash":"7d6f86d23f7c9036edca54c8d78c904a890fd163","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/36-16603-0002_synthesized.flac","hash":"876dc9d401fb1a4bbafe1658cac3b28ac3d4b88b","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ006-0161_synthesized.wav","hash":"5e2ac23cd44b0ca5a25d634e240b4e3ea89e7f03","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ006-0114_ground-truth.wav","hash":"8150140bb922785713c57aaf3fdc5908eb1d716e","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ006-0114_synthesized.wav","hash":"8f148ac82bd7f4b46db53433f64612d40f4859a9","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ021-0108_synthesized.wav","hash":"87bf133faf45a887ba51f0c9bbcdf24293f6063d","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ006-0114_ground-truth.wav","hash":"8150140bb922785713c57aaf3fdc5908eb1d716e","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ006-0114_synthesized.wav","hash":"8f148ac82bd7f4b46db53433f64612d40f4859a9","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ006-0161_synthesized.wav","hash":"5e2ac23cd44b0ca5a25d634e240b4e3ea89e7f03","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ021-0108_synthesized.wav","hash":"87bf133faf45a887ba51f0c9bbcdf24293f6063d","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","hash":"86fe0096964b9be5c11f952671fdc8201a9cddd1","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","hash":"1e06f1a9c09bc0d1f76e1f181f41b9219d6e7425","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","hash":"978079c8a39d9c52f7e5080cb7327c723365721f","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","hash":"b3295b056d183f877c284e0bc393677107749104","modified":1664095172061},{"_id":"public/posts/aws-4deepl/3b.png","hash":"e66e8b9ad56218be671e563ee4ade46bd982b05f","modified":1664095172061},{"_id":"public/posts/aws-2staticweb/确认.png","hash":"435bd9686a095bd30cf29344aeccd9f6f4718eb3","modified":1664095172061},{"_id":"public/posts/aws-3manager/4e.png","hash":"32aa4eb66a6077ba0a4616cc0fb19328c25cd4c3","modified":1664095172061},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1664095172061},{"_id":"public/posts/dl-4Gradient-Descent/8b725e51dcffc53a5def49438b70d925.png","hash":"9a0a0371a7b630ed7b0aeffd1751d0ff6deadd46","modified":1664095172061},{"_id":"public/posts/dl-9Sequence-Models-introduce/71a0ed918704f6d35091d8b6d60793e4.png","hash":"449f48e12e45b7d69d2171cdbc540a7fefd336d2","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/43_ground-truth.wav","hash":"4d91e8d9ddbf3614c461ae8ab4147e9e755950a4","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/44_ground-truth.wav","hash":"b33b0597dd87373af885accb8c41de17a79842c0","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/46_synthesized.wav","hash":"20e3c633eeea734ec490e16679dff1524e820a18","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/47_ground-truth.wav","hash":"08d2d2967aaa6d59317a48152c7c5e46faeb5ea7","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/49_ground-truth.wav","hash":"81481a488e3666d0b7f7d380805d49bcd374f4c5","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/48_ground-truth.wav","hash":"e38e5181f012b0b329c66e52efc39cb6bf09b4b5","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ006-0114_ground-truth.wav","hash":"8150140bb922785713c57aaf3fdc5908eb1d716e","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ006-0114_synthesized.wav","hash":"8f148ac82bd7f4b46db53433f64612d40f4859a9","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ006-0161_synthesized.wav","hash":"5e2ac23cd44b0ca5a25d634e240b4e3ea89e7f03","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ021-0108_synthesized.wav","hash":"87bf133faf45a887ba51f0c9bbcdf24293f6063d","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB07940279_synthesized.wav","hash":"fff3b61b4dfd16bfb7db27a0335bed9184bb6d98","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB08220199_ground-truth.wav","hash":"461ed0f143ac02e511bc263dae9e9ea862ea9c00","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB08220199_synthesized.wav","hash":"8f0c5de1e3532654a6e938a3f702117ac69d150e","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1353-121397-0001_synthesized.flac","hash":"86ca3ecab88f5813c9df84e8fce706fef3c9f51f","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/319-134959-0006.flac","hash":"1b13499d1a275e91a16ef7322a8e5cfd274211de","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/36-16603-0002_synthesized.flac","hash":"876dc9d401fb1a4bbafe1658cac3b28ac3d4b88b","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/428-125879-0003_synthesized.flac","hash":"59ade3702d21e0a9ec810a5be7466eeefe09a0be","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/713-291178-0007.flac","hash":"0db34425e53f924cb5277910d338730e94f919c9","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/713-291178-0007_synthesized.flac","hash":"7d6f86d23f7c9036edca54c8d78c904a890fd163","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0142_reconstructed_epoch0610.wav","hash":"3bf779251e88605efb187b66cdfccb5a6081ea4d","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0142.wav","hash":"7ca784102171b54cfdcc82e6243eedba51ea2a94","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0146.wav","hash":"43528535701f88291461e45ca938e0274ac78918","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0146_reconstructed_epoch0610.wav","hash":"80dbfa272375a21a25129203f45ef3e2ea8f4eab","modified":1664095172061},{"_id":"public/vits/demo/baker/43_ground-truth.wav","hash":"4d91e8d9ddbf3614c461ae8ab4147e9e755950a4","modified":1664095172061},{"_id":"public/vits/demo/baker/44_ground-truth.wav","hash":"b33b0597dd87373af885accb8c41de17a79842c0","modified":1664095172061},{"_id":"public/vits/demo/baker/48_ground-truth.wav","hash":"e38e5181f012b0b329c66e52efc39cb6bf09b4b5","modified":1664095172061},{"_id":"public/vits/demo/baker/46_synthesized.wav","hash":"20e3c633eeea734ec490e16679dff1524e820a18","modified":1664095172061},{"_id":"public/vits/demo/baker/49_ground-truth.wav","hash":"81481a488e3666d0b7f7d380805d49bcd374f4c5","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/207_131203_000011_000000_synthesized.wav","hash":"1e06f1a9c09bc0d1f76e1f181f41b9219d6e7425","modified":1664095172061},{"_id":"public/vits/demo/baker/47_ground-truth.wav","hash":"08d2d2967aaa6d59317a48152c7c5e46faeb5ea7","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/207_131203_000011_000000_ground-truth.wav","hash":"86fe0096964b9be5c11f952671fdc8201a9cddd1","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/3615_14677_000014_000000_ground-truth.wav","hash":"b3295b056d183f877c284e0bc393677107749104","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/3615_14677_000014_000000_synthesized.wav","hash":"978079c8a39d9c52f7e5080cb7327c723365721f","modified":1664095172061},{"_id":"public/posts/aws-4deepl/1a.png","hash":"423fcf3a2ba6071c11f15760ad491175e4dd8c04","modified":1664095172061},{"_id":"public/posts/aws-4deepl/1c.png","hash":"e78cfc97b2433ffdefdb26dcd736ff02cb747aca","modified":1664095172061},{"_id":"public/posts/aws-4deepl/1e.png","hash":"b47a3bffa133b51dde16be8316497c71ce37506d","modified":1664095172061},{"_id":"public/posts/aws-4deepl/2a.png","hash":"af1f4e172e7717549359e7a9498752cb2d354734","modified":1664095172061},{"_id":"public/SV2TTS/demo/LibriTTS/1492-55449-0000.flac","hash":"bf45f6c134b75b89662ba72f14d12b9105bc550b","modified":1664095172061},{"_id":"public/SV2TTS/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1664095172061},{"_id":"public/fastspeech2/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ009-0038_synthesized.wav","hash":"6a47a5c560cf6be80f2f9fe5acd442296453286a","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ009-0038_ground-truth.wav","hash":"0ba8d0c181a5db0fd5b1915286d5d2460f030ef1","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ006-0161_ground-truth.wav","hash":"127ef88ee9a18f1ed07d917a893e5ffa5e3bf2cb","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ021-0108_ground-truth.wav","hash":"af6aba97363ce5d2984f5df6e2abc672948c82ac","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ050-0158_synthesized.wav","hash":"0913201c39fc7fffa96a46da2246d102431edce6","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ006-0161_ground-truth.wav","hash":"127ef88ee9a18f1ed07d917a893e5ffa5e3bf2cb","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ009-0038_synthesized.wav","hash":"6a47a5c560cf6be80f2f9fe5acd442296453286a","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ009-0038_ground-truth.wav","hash":"0ba8d0c181a5db0fd5b1915286d5d2460f030ef1","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ021-0108_ground-truth.wav","hash":"af6aba97363ce5d2984f5df6e2abc672948c82ac","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ050-0158_synthesized.wav","hash":"0913201c39fc7fffa96a46da2246d102431edce6","modified":1664095172061},{"_id":"public/posts/aws-4deepl/2g.png","hash":"a0b760813c7b39feb3b1b2a139b66ef0b84c20ae","modified":1664095172061},{"_id":"public/posts/aws-4deepl/3a.png","hash":"f854f0e660f43a069e5dc0308d7d65f7ca631a63","modified":1664095172061},{"_id":"public/posts/aws-4deepl/2e.png","hash":"29c870c6eb14df21501ed4c2a66b08a741cc2b00","modified":1664095172061},{"_id":"public/posts/aws-4deepl/5c.png","hash":"6828067d3da7ebcfca5914b6d42a80ba8aabdb05","modified":1664095172061},{"_id":"public/posts/aws-4deepl/2d.png","hash":"15bcaf8c268833fcda409b81e73244f8f4bf43ca","modified":1664095172061},{"_id":"public/lib/pdf/build/pdf.worker.js","hash":"73bdc1a6a241c81d997e7e18cd759ee81c6e7a95","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","hash":"4891fce32d998ab480a0deb1adf36202fa4d05f8","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","hash":"191a0abe653e998df5d1f5c40f49777e1acc965a","modified":1664095172061},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/42_synthesized.wav","hash":"5229eeb9593c56835229428a0fff90d4aeecc6ce","modified":1664095172061},{"_id":"public/melgan/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/51_ground-truth.wav","hash":"b56582827e1a98430a104d2c4328f8a26ecb469a","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ006-0161_ground-truth.wav","hash":"127ef88ee9a18f1ed07d917a893e5ffa5e3bf2cb","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ009-0038_synthesized.wav","hash":"6a47a5c560cf6be80f2f9fe5acd442296453286a","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ009-0038_ground-truth.wav","hash":"0ba8d0c181a5db0fd5b1915286d5d2460f030ef1","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ011-0202_synthesized_vits.wav","hash":"5e58e8804089d97bc77418ddc01dd549575ad47b","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ021-0108_ground-truth.wav","hash":"af6aba97363ce5d2984f5df6e2abc672948c82ac","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ042-0094_synthesized_vits.wav","hash":"21be127ad7a3f391ce00ead839fb874be4201d6a","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ050-0158_synthesized.wav","hash":"0913201c39fc7fffa96a46da2246d102431edce6","modified":1664095172061},{"_id":"public/vits/demo/AISHELL3/SSB07940279_ground-truth.wav","hash":"ee0462c7e8c4abc32edd09a00f18803c155fccd4","modified":1664095172061},{"_id":"public/melgan/demo/LibriTTS/1492-55449-0000.flac","hash":"bf45f6c134b75b89662ba72f14d12b9105bc550b","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0150_reconstructed_epoch0610.wav","hash":"ed6694e2e4fad8c42a2f8959a41cd5f4f5be5850","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0150.wav","hash":"3f8eb72d6e7517db75c32cb3c78193ec2ab40269","modified":1664095172061},{"_id":"public/vits/demo/baker/42_synthesized.wav","hash":"5229eeb9593c56835229428a0fff90d4aeecc6ce","modified":1664095172061},{"_id":"public/vits/demo/baker/51_ground-truth.wav","hash":"b56582827e1a98430a104d2c4328f8a26ecb469a","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/6098_57837_000008_000000_ground-truth.wav","hash":"4891fce32d998ab480a0deb1adf36202fa4d05f8","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/6098_57837_000008_000000_synthesized.wav","hash":"191a0abe653e998df5d1f5c40f49777e1acc965a","modified":1664095172061},{"_id":"public/posts/aws-4deepl/2b.png","hash":"b63800ea521f66ba972e40a001e2baac3335c9d1","modified":1664095172061},{"_id":"public/SV2TTS/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1664095172061},{"_id":"public/fastspeech2/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1664095172061},{"_id":"public/vits/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1664095172061},{"_id":"public/melgan/img/model.png","hash":"c7a6bfa59fe0eefa75ddd26dd3393174bca26df3","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ001-0012_ground-truth.wav","hash":"8dae7b8b97519dbaebf2ae690b08333dba90fe11","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ001-0012_synthesized.wav","hash":"b53b2193f1d06e24fa8ae05d3b08d6d14a3ac484","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ030-0031_synthesized.wav","hash":"1dc09c81da54376b2c10ed234a2e800da1f2e799","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ050-0158_ground-truth.wav","hash":"4a30663dc767584a93debf9267ab73d1e92e9f33","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ001-0012_synthesized.wav","hash":"b53b2193f1d06e24fa8ae05d3b08d6d14a3ac484","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ001-0012_ground-truth.wav","hash":"8dae7b8b97519dbaebf2ae690b08333dba90fe11","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ030-0031_synthesized.wav","hash":"1dc09c81da54376b2c10ed234a2e800da1f2e799","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","hash":"e0126f1c0b368acc1e9f42047176b3ab1eeea98a","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","hash":"4e02805cbe81f5c98922bbd1636ecebfef7c5cd8","modified":1664095172061},{"_id":"public/posts/aws-4deepl/2c.png","hash":"151b4190babe9437684e32ba069f0a8a52eedd36","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ050-0158_ground-truth.wav","hash":"4a30663dc767584a93debf9267ab73d1e92e9f33","modified":1664095172061},{"_id":"public/posts/aws-4deepl/2f.png","hash":"42cfef47ca55b3054b6adce5dd4911e64da38804","modified":1664095172061},{"_id":"public/posts/aws-4deepl/6c.png","hash":"f4da49596bca99d4d70ab285a4fd88ff3a3c7614","modified":1664095172061},{"_id":"public/posts/aws-4deepl/6a.png","hash":"b0dd29d4bced57b43358cce3ec2355883b420aa7","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/45_ground-truth.wav","hash":"a50433804ef063eb102b09a8f76b59743fea4b00","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/50_ground-truth.wav","hash":"b1ed0a9252c6724c6b48f62454363d12213d01bf","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ001-0012_synthesized.wav","hash":"b53b2193f1d06e24fa8ae05d3b08d6d14a3ac484","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ001-0012_ground-truth.wav","hash":"8dae7b8b97519dbaebf2ae690b08333dba90fe11","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ050-0158_ground-truth.wav","hash":"4a30663dc767584a93debf9267ab73d1e92e9f33","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ030-0031_synthesized.wav","hash":"1dc09c81da54376b2c10ed234a2e800da1f2e799","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0144.wav","hash":"6e698235f39cf80b1ca9fb33a1c61e85e5ea759b","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0144_reconstructed_epoch0610.wav","hash":"2d3485fa03eae688c63ddc46d5374f5717d44bb3","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0143.wav","hash":"5fe2bd1da2f804e16df0a3d451b0d06fad230aee","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0145_reconstructed_epoch0610.wav","hash":"5e68b20214aa9dedf8802e8a7fd71a05ee7fc836","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0145.wav","hash":"3f9a10d6e776898997b2b4a56c15fcf21d1e59b5","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0143_reconstructed_epoch0610.wav","hash":"3d39cf510b9a15010a09d1527d3a17cdead2596b","modified":1664095172061},{"_id":"public/vits/demo/baker/50_ground-truth.wav","hash":"b1ed0a9252c6724c6b48f62454363d12213d01bf","modified":1664095172061},{"_id":"public/vits/demo/baker/45_ground-truth.wav","hash":"a50433804ef063eb102b09a8f76b59743fea4b00","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/2388_153731_000003_000000_ground-truth.wav","hash":"e0126f1c0b368acc1e9f42047176b3ab1eeea98a","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/2388_153731_000003_000000_synthesized.wav","hash":"4e02805cbe81f5c98922bbd1636ecebfef7c5cd8","modified":1664095172061},{"_id":"public/posts/aws-4deepl/1b.png","hash":"02a7694c5b27d10f03845c62349647fc7a3412a7","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ027-0127_ground-truth.wav","hash":"8a15b2662ffef9d8af016c0d0a656a94aa7f09aa","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ030-0031_ground-truth.wav","hash":"07ae81660692ac9bab3ea653ed5971e07bfe8205","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ030-0031_ground-truth.wav","hash":"07ae81660692ac9bab3ea653ed5971e07bfe8205","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ027-0127_ground-truth.wav","hash":"8a15b2662ffef9d8af016c0d0a656a94aa7f09aa","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","hash":"432763a08da7c8d9bc14e02be16e89cd1e50985a","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","hash":"d9f9dcac203eaa49e827a36dd221e32c2f18fc49","modified":1664095172061},{"_id":"public/posts/aws-4deepl/6b.png","hash":"0a9769010d19684cabfed03b611aefe0bdf1b0d4","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","hash":"38881c01b31cebd24a1baa6ef7c4703e5bed1ea7","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","hash":"dbab9c5583bddcdf808f5a5048b19ecb428b70e7","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","hash":"daa91b1a7705b6b8994b3e342d7efff37bae5326","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ027-0127_ground-truth.wav","hash":"8a15b2662ffef9d8af016c0d0a656a94aa7f09aa","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ030-0031_ground-truth.wav","hash":"07ae81660692ac9bab3ea653ed5971e07bfe8205","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0149_reconstructed_epoch0610.wav","hash":"4481b90441bf0b3adec75ec56d0628d769e4df67","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0147.wav","hash":"a3f3aa228a9fdf7ef6d7f5c0d853688e35f64595","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0149.wav","hash":"1060625a926b19b8e0b2b9eb3ef8f8cbb97df440","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0151.wav","hash":"9f04a1fbc0579e4ae1b6ad8c26bd9b75081112e0","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0151_reconstructed_epoch0610.wav","hash":"31de1f27a46ae85abb17a969e0aac31daf39a57a","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/4744_31668_000003_000001_ground-truth.wav","hash":"432763a08da7c8d9bc14e02be16e89cd1e50985a","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/4744_31668_000003_000001_synthesized.wav","hash":"d9f9dcac203eaa49e827a36dd221e32c2f18fc49","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/5126_27504_000011_000003_ground-truth.wav","hash":"38881c01b31cebd24a1baa6ef7c4703e5bed1ea7","modified":1664095172061},{"_id":"public/melgan/demo/LJSpeech/LJ013-0147_reconstructed_epoch0610.wav","hash":"4a162a5b8ae8d6ed507c2cca1d4ed8a10eefe598","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/968_122545_000053_000000_synthesized.wav","hash":"dbab9c5583bddcdf808f5a5048b19ecb428b70e7","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/968_122545_000053_000000_ground-truth.wav","hash":"daa91b1a7705b6b8994b3e342d7efff37bae5326","modified":1664095172061},{"_id":"public/SV2TTS/demo/LJSpeech/LJ027-0127_synthesized.wav","hash":"35bac3ba1d99b296f7b45b7d6ca9634b68f72103","modified":1664095172061},{"_id":"public/fastspeech2/demo/LJSpeech/LJ027-0127_synthesized.wav","hash":"35bac3ba1d99b296f7b45b7d6ca9634b68f72103","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","hash":"7f3b6513c938c4a68412367a174f6fd2b46fa443","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","hash":"dc7fb6fa0725d578d4ff9d1bc6d75544c4585b0c","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ006-0114_synthesized_vits.wav","hash":"2ff62231900a8c6caa431f55b1a0a94d4440cd9c","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ006-0161_synthesized_vits.wav","hash":"b2a1f2bad6f378e2a5906b79f844890f5d334bdf","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ027-0127_synthesized.wav","hash":"35bac3ba1d99b296f7b45b7d6ca9634b68f72103","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/5126_27504_000011_000003_synthesized.wav","hash":"7f3b6513c938c4a68412367a174f6fd2b46fa443","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/480_127525_000006_000000_synthesized.wav","hash":"dc7fb6fa0725d578d4ff9d1bc6d75544c4585b0c","modified":1664095172061},{"_id":"public/fastspeech2/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","hash":"af49cb2a67bc5ff3116dc958a60d5e274837c5b6","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/46_ground-truth.wav","hash":"dae42c50d02770dde3e37e78736b7a344ec9620c","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ009-0038_synthesized_vits.wav","hash":"95207c023aed7d108dc09569f19b4ce34db98c4f","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ021-0108_synthesized_vits.wav","hash":"fcec47f4517d423d3d41c77a0a268307ed7aa517","modified":1664095172061},{"_id":"public/vits/demo/baker/46_ground-truth.wav","hash":"dae42c50d02770dde3e37e78736b7a344ec9620c","modified":1664095172061},{"_id":"public/vits/demo/LibriTTS/480_127525_000006_000000_ground-truth.wav","hash":"af49cb2a67bc5ff3116dc958a60d5e274837c5b6","modified":1664095172061},{"_id":"public/SV2TTS/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1664095172061},{"_id":"public/melgan/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1664095172061},{"_id":"public/vits/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1664095172061},{"_id":"public/fastspeech2/img/tensorboard_spec.png","hash":"31f00483ff2ab518678a0e5def1ad1bfb4f03abf","modified":1664095172061},{"_id":"public/fastspeech2/demo/baker/42_ground-truth.wav","hash":"7d423126bdea65cdedc3b0a40ba3d66d74e03026","modified":1664095172061},{"_id":"public/vits/demo/baker/42_ground-truth.wav","hash":"7d423126bdea65cdedc3b0a40ba3d66d74e03026","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ050-0158_synthesized_vits.wav","hash":"f381cf2073c3d68c5877ce10ad8ea6970b918d02","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ001-0012_synthesized_vits.wav","hash":"28ac4c1f24f9a4e23a9db8bd0008c04bd2dd76b0","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ030-0031_synthesized_vits.wav","hash":"c95b24ee2a293c6cd2a2485e5edd4a1386115e9b","modified":1664095172061},{"_id":"public/lib/pdf/web/viewer.js.map","hash":"a7ae584397f178eaf0c124e16794979550f15084","modified":1664095172061},{"_id":"public/vits/demo/LJSpeech/LJ027-0127_synthesized_vits.wav","hash":"3cb8a89c46969358a37cd7a64f46dc5ff3c614ab","modified":1664095172061},{"_id":"public/lib/pdf/web/compressed.tracemonkey-pldi-09.pdf","hash":"0d281938d3ff2377541704cab6ba1c4408420733","modified":1664095172061},{"_id":"public/lib/pdf/build/pdf.js.map","hash":"698ac4d064bc39f6206b210110b91904323e8118","modified":1664095172061},{"_id":"public/photos/fonts/JTHandwrite.eot","hash":"13e5c8511ae67915760cbb81c8113c50332e9df0","modified":1664095172061},{"_id":"public/photos/fonts/JTHandwrite.ttf","hash":"b6e354da5b485e9ff85f206539113dbaca87cb9f","modified":1664095172061},{"_id":"public/fonts/JTHandwrite.eot","hash":"13e5c8511ae67915760cbb81c8113c50332e9df0","modified":1664095172061},{"_id":"public/fonts/JTHandwrite.ttf","hash":"b6e354da5b485e9ff85f206539113dbaca87cb9f","modified":1664095172061},{"_id":"public/lib/pdf/build/pdf.worker.js.map","hash":"5e62344fe4f32dbc2c8dfcf5e4fb028fa8799be0","modified":1664095172061},{"_id":"public/media/music.mp3","hash":"1dd678a6bd1777010dfdcf7131cdb6da0dd6c7e3","modified":1664095172061},{"_id":"public/fonts/JTHandwrite.svg","hash":"4327f3a29570e0c71986061e5df4e5b9f3640966","modified":1664095172061},{"_id":"public/photos/fonts/JTHandwrite.svg","hash":"4327f3a29570e0c71986061e5df4e5b9f3640966","modified":1664095172061}],"Category":[{"name":"硬件","_id":"cl8h3b0fm0004c8pv4b5e417c"},{"name":"TTS","_id":"cl8h3b0fu000cc8pvcac4e1kz"},{"name":"深度学习","_id":"cl8h3b0fz000ic8pvada3d3dt"},{"name":"51单片机","parent":"cl8h3b0fm0004c8pv4b5e417c","_id":"cl8h3b0g7000wc8pvhid2bn8b"},{"name":"Fastspeech2","parent":"cl8h3b0fu000cc8pvcac4e1kz","_id":"cl8h3b0gk001ec8pv51u0007x"},{"name":"backend","_id":"cl8h3b0go001mc8pv8qhz8qdr"},{"name":"frontend","_id":"cl8h3b0gr001rc8pv5eer0isz"},{"name":"联邦学习","parent":"cl8h3b0fz000ic8pvada3d3dt","_id":"cl8h3b0gu001yc8pv5u554pap"},{"name":"Adaptive TTS","parent":"cl8h3b0fu000cc8pvcac4e1kz","_id":"cl8h3b0gw0023c8pv4ld27gzg"},{"name":"云服务","_id":"cl8h3b0gy0029c8pv1yi4d6z9"},{"name":"Hexo","_id":"cl8h3b0hg0036c8pv1gp4ehw8"},{"name":"笔记","_id":"cl8h3b0hh003cc8pvat13ej8a"},{"name":"生活","_id":"cl8h3b0hp003uc8pvgkv6aqcz"},{"name":"毕设准备","_id":"cl8h3b0hw0041c8pv7ue8gjc4"},{"name":"java","parent":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0i2004jc8pv2y0n3sv2"},{"name":"Vue","parent":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0ib004zc8pv88oqdy0k"},{"name":"AWS","parent":"cl8h3b0gy0029c8pv1yi4d6z9","_id":"cl8h3b0is005zc8pvegxvekyz"},{"name":"go语言","parent":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0iu0065c8pva65xht54"},{"name":"操作系统","parent":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0j9008ec8pv5aeyf73e"},{"name":"编译原理","parent":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0jc008tc8pv8tw8be8y"},{"name":"相声","_id":"cl8h3b0jj009jc8pv6pu86i9u"},{"name":"搬运","parent":"cl8h3b0hp003uc8pvgkv6aqcz","_id":"cl8h3b0jk009qc8pver5tglkv"},{"name":"harmony","parent":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0jl009vc8pvhymj9qyf"},{"name":"深度学习","parent":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0jm009zc8pvgmta4343"},{"name":"计算机组成","parent":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0jn00a5c8pvfqdl8ekj"},{"name":"数据通信与网络","parent":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0jn00aac8pva76e9hv6"},{"name":"物流管理","_id":"cl8h3b0jo00afc8pv97mqe9zt"},{"name":"php","parent":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0jp00akc8pv4l7kftk7"},{"name":"软件体系结构","parent":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0k000buc8pv5d3x7orq"},{"name":"for babe","_id":"cl8h3b0k200c0c8pv6wm32td7"},{"name":"大数据","_id":"cl8h3b0k300c5c8pvantd8r8j"},{"name":"语音合成","_id":"cl8h3b0k400cdc8pv41u007b9"},{"name":"随笔","_id":"cl8h3b0k900cuc8pv89t170cp"},{"name":"测试","_id":"cl8h3b0ka00cyc8pveg4wazjo"},{"name":"网络货运","parent":"cl8h3b0jo00afc8pv97mqe9zt","_id":"cl8h3b0kj00dzc8pvel3n7c0v"},{"name":"spring","parent":"cl8h3b0k200c0c8pv6wm32td7","_id":"cl8h3b0kl00e5c8pv3hc9dnwe"},{"name":"Spark","parent":"cl8h3b0k300c5c8pvantd8r8j","_id":"cl8h3b0km00eac8pvbyxr2333"},{"name":"论文阅读","parent":"cl8h3b0k400cdc8pv41u007b9","_id":"cl8h3b0ko00ehc8pv1kziavx8"}],"Data":[{"_id":"styles","data":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}],"Page":[{"title":"PJTの神奇歌单","date":"2020-09-18T08:33:54.000Z","_content":"\n{% cq %}\n**生而为人，真开心**\n                    **————PJT**\n{% endcq %}\n\n<!-- <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=600 height=450 src=\"http://music.163.com/outchain/player?type=0&id=5241471999&auto=1&height=430\"></iframe> -->\n{% meting \"5241471999\" \"netease\" \"playlist\" \"theme:#FF4081\" \"mode:circulation\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %}\n\n{% cq %}\n### 想听的歌，写在下面\n{% endcq %}","source":"PJT的神奇歌单/index.md","raw":"---\ntitle: PJTの神奇歌单\ndate: 2020-09-18 16:33:54\n---\n\n{% cq %}\n**生而为人，真开心**\n                    **————PJT**\n{% endcq %}\n\n<!-- <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=600 height=450 src=\"http://music.163.com/outchain/player?type=0&id=5241471999&auto=1&height=430\"></iframe> -->\n{% meting \"5241471999\" \"netease\" \"playlist\" \"theme:#FF4081\" \"mode:circulation\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %}\n\n{% cq %}\n### 想听的歌，写在下面\n{% endcq %}","updated":"2021-11-05T09:06:10.066Z","path":"PJT的神奇歌单/index.html","comments":1,"layout":"page","_id":"cl8h3b0fb0000c8pv65ij68kj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <p><strong>生而为人，真开心</strong><br>                    <strong>————PJT</strong></p>\n\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<!-- <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=600 height=450 src=\"http://music.163.com/outchain/player?type=0&id=5241471999&auto=1&height=430\"></iframe> -->\n\n    <div id=\"aplayer-gxLwCqCd\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"5241471999\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#FF4081\"></div>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"想听的歌，写在下面\"><a href=\"#想听的歌，写在下面\" class=\"headerlink\" title=\"想听的歌，写在下面\"></a>想听的歌，写在下面</h3>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":24,"excerpt":"","more":"<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <p><strong>生而为人，真开心</strong><br>                    <strong>————PJT</strong></p>\n\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<!-- <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=600 height=450 src=\"http://music.163.com/outchain/player?type=0&id=5241471999&auto=1&height=430\"></iframe> -->\n\n    <div id=\"aplayer-gxLwCqCd\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"5241471999\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#FF4081\"></div>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"想听的歌，写在下面\"><a href=\"#想听的歌，写在下面\" class=\"headerlink\" title=\"想听的歌，写在下面\"></a>想听的歌，写在下面</h3>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>"},{"title":"全世界无产者联合起来！","date":"2020-09-17T10:15:30.000Z","type":"about","_content":"\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=530 height=86 src=\"//music.163.com/outchain/player?type=2&id=5281551&auto=1&height=66\"></iframe>\n\n{% cq %}\n## 试看将来的环球，必是赤旗的世界\n#### ————李大钊\n{% endcq %}\n![党旗](http://file.panjiangtao.cn/dangqi.jpg)\n\n---\n<video src=\"http://file.panjiangtao.cn/tongyi.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/tongyi.jpg\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n","source":"about/index.md","raw":"---\ntitle: 全世界无产者联合起来！\ndate: 2020-09-17 18:15:30\ntype: \"about\"\n---\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=530 height=86 src=\"//music.163.com/outchain/player?type=2&id=5281551&auto=1&height=66\"></iframe>\n\n{% cq %}\n## 试看将来的环球，必是赤旗的世界\n#### ————李大钊\n{% endcq %}\n![党旗](http://file.panjiangtao.cn/dangqi.jpg)\n\n---\n<video src=\"http://file.panjiangtao.cn/tongyi.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/tongyi.jpg\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n","updated":"2021-03-08T07:07:13.561Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl8h3b0fj0002c8pv6qbv3iah","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"530\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=5281551&auto=1&height=66\"></iframe>\n\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h2 id=\"试看将来的环球，必是赤旗的世界\"><a href=\"#试看将来的环球，必是赤旗的世界\" class=\"headerlink\" title=\"试看将来的环球，必是赤旗的世界\"></a>试看将来的环球，必是赤旗的世界</h2><h4 id=\"————李大钊\"><a href=\"#————李大钊\" class=\"headerlink\" title=\"————李大钊\"></a>————李大钊</h4>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p><img src=\"http://file.panjiangtao.cn/dangqi.jpg\" alt=\"党旗\"></p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/tongyi.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/tongyi.jpg\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":38,"excerpt":"","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"530\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=5281551&auto=1&height=66\"></iframe>\n\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h2 id=\"试看将来的环球，必是赤旗的世界\"><a href=\"#试看将来的环球，必是赤旗的世界\" class=\"headerlink\" title=\"试看将来的环球，必是赤旗的世界\"></a>试看将来的环球，必是赤旗的世界</h2><h4 id=\"————李大钊\"><a href=\"#————李大钊\" class=\"headerlink\" title=\"————李大钊\"></a>————李大钊</h4>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p><img src=\"http://file.panjiangtao.cn/dangqi.jpg\" alt=\"党旗\"></p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/tongyi.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/tongyi.jpg\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n"},{"title":"分类","date":"2020-09-17T10:16:39.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2020-09-17 18:16:39\ntype: \"categories\"\ncomments: false\n---\n","updated":"2020-09-17T14:13:43.926Z","path":"categories/index.html","layout":"page","_id":"cl8h3b0fp0006c8pv7e335e4a","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":0,"excerpt":"","more":""},{"_content":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>PJT love LYT</title>\n\n<meta http-equiv=\"imagetoolbar\" content=\"no\">\n<style type=\"text/css\">\n\thtml {\n\t\toverflow: hidden;\n\t}\n\tbody {\n\t\tposition: absolute;\n\t\tmargin: 0px;\n\t\tpadding: 0px;\n\t\tbackground: #eee;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcolor: #fff;\n\t\tfont-family: arial;\n\t\tfont-size: 0.8em;\n\t}\n\t#screen {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: #11264f;\n\t\toverflow: hidden;\n\t}\n\t#screen img, canvas { \n\t\tposition: absolute;\n\t\tleft: -9999px;\n\t\tcursor: pointer;\n        image-rendering: optimizeSpeed;\n\n\t}\n\t#screen .href {\n\t\tborder: #FFF dotted 1px;\n\t}\n\t#screen .fog { \n\t\tposition: absolute;\n\t\tbackground: #fff;\n\t\topacity: 0.1;\n\t\tfilter: alpha(opacity=10);\n\t}\n\t#command {\n\t\tposition:absolute;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\twidth: 130px;\n\t\tz-index: 30000;\n\t\tbackground:#000;\n\t\tborder: #000 solid 1em;\n\t}\n\t#bar {\n\t\tposition:relative;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\theight: 160px;\n\t}\n\t#bar .button { \n\t\tposition: absolute;\n\t\tbackground: #222;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tcursor: pointer;\n\t}\n\t#bar .loaded { \n\t\tbackground: #666;\n\t}\n\t#bar .viewed { \n\t\tbackground: #fff;\n\t}\n\t#bar .selected { \n\t\tbackground: #f00;\n\t}\n\t#urlInfo {\n\t\tposition: absolute;\n\t\tbackground: url(images/r.gif) no-repeat 0 4px;\n\t\tvisibility: hidden;\n\t\tz-index: 30000;\n\t\tpadding-left: 12px;\n\t\tcursor: pointer;\n\t}\n</style>\n\n<script type=\"text/javascript\">\n// =============================================================\n//           ===== 3D gallery experiment =====\n// script written by Gerard Ferrandez - April 5, 2010\n// http://www.dhteumeuleu.com\n// use under a CC-BY-NC license\n// -------------------------------------------------------------\n// update: April 17 : added hyperlinks, tweaked z-index\n// =============================================================\n\nvar m3D = function () {\n\t/* ---- private vars ---- */\n\tvar diapo = [],\n\t\timb,\n\t\tscr,\n\t\tbar,\n\t\tselected,\n\t\turlInfo,\n\t\timagesPath = \"images/\",\n\t\tcamera = {x:0, y:0, z:-650, s:0, fov: 500},\n\t\tnw = 0,\n\t\tnh = 0;\n\t/* ==== camera tween methods ==== */\n\tcamera.setTarget = function (c0, t1, p) {\n\t\tif (Math.abs(t1 - c0) > .1) {\n\t\t\tcamera.s = 1;\n\t\t\tcamera.p = 0;\n\t\t\tcamera.d = t1 - c0;\n\t\t\tif (p) {\n\t\t\t\tcamera.d *= 2;\n\t\t\t\tcamera.p = 9;\n\t\t\t}\n\t\t}\n\t}\n\tcamera.tween = function (v) {\n\t\tif (camera.s != 0) {\n\t\t\tcamera.p += camera.s;\n\t\t\tcamera[v] += camera.d * camera.p * .01;\n\t\t\tif (camera.p == 10) camera.s = -1;\n\t\t\telse if (camera.p == 0) camera.s = 0;\n\t\t}\n\t\treturn camera.s;\n\t}\n\t/* ==== diapo constructor ==== */\n\tvar Diapo = function (n, img, x, y, z) {\n\t\tif (img) {\n\t\t\tthis.url = img.url;\n\t\t\tthis.title = img.title;\n\t\t\tthis.color = img.color;\n\t\t\tthis.isLoaded = false;\n\t\t\tif (document.createElement(\"canvas\").getContext) {\n\t\t\t\t/* ---- using canvas in place of images (performance trick) ---- */\n\t\t\t\tthis.srcImg = new Image();\n\t\t\t\tthis.srcImg.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tthis.img = document.createElement(\"canvas\");\n\t\t\t\tthis.canvas = true;\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t} else {\n\t\t\t\t/* ---- normal image ---- */\n\t\t\t\tthis.img = document.createElement('img');\n\t\t\t\tthis.img.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t}\n\t\t\t/* ---- on click event ---- */\n\t\t\tthis.img.onclick = function () {\n\t\t\t\tif (camera.s) return;\n\t\t\t\tif (this.diapo.isLoaded) {\n\t\t\t\t\tif (this.diapo.urlActive) {\n\t\t\t\t\t\t/* ---- jump hyperlink ---- */\n\t\t\t\t\t\ttop.location.href = this.diapo.url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* ---- target positions ---- */\n\t\t\t\t\t\tcamera.tz = this.diapo.z - camera.fov;\n\t\t\t\t\t\tcamera.tx = this.diapo.x;\n\t\t\t\t\t\tcamera.ty = this.diapo.y;\n\t\t\t\t\t\t/* ---- disable previously selected img ---- */\n\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\tselected.but.className = \"button viewed\";\n\t\t\t\t\t\t\tselected.img.className = \"\";\n\t\t\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\t\t\tselected.urlActive = false;\n\t\t\t\t\t\t\turlInfo.style.visibility = \"hidden\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* ---- select current img ---- */\n\t\t\t\t\t\tthis.diapo.but.className = \"button selected\";\n\t\t\t\t\t\tinterpolation(false);\n\t\t\t\t\t\tselected = this.diapo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* ---- command bar buttons ---- */\n\t\t\tthis.but = document.createElement('div');\n\t\t\tthis.but.className = \"button\";\n\t\t\tbar.appendChild(this.but);\n\t\t\tthis.but.diapo = this;\n\t\t\tthis.but.style.left = Math.round((this.but.offsetWidth  * 1.2) * (n % 4)) + 'px';\n\t\t\tthis.but.style.top  = Math.round((this.but.offsetHeight * 1.2) * Math.floor(n / 4)) + 'px';\n\t\t\tthis.but.onclick = this.img.onclick;\n\t\t\timb = this.img;\n\t\t\tthis.img.diapo = this;\n\t\t\tthis.zi = 25000;\n\t\t} else {\n\t\t\t/* ---- transparent div ---- */\n\t\t\tthis.img = document.createElement('div');\n\t\t\tthis.isLoaded = true;\n\t\t\tthis.img.className = \"fog\";\n\t\t\tscr.appendChild(this.img);\n\t\t\tthis.w = 300;\n\t\t\tthis.h = 300;\n\t\t\tthis.zi = 15000;\n\t\t}\n\t\t/* ---- object variables ---- */\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.css = this.img.style;\n\t}\n\t/* ==== main 3D animation ==== */\n\tDiapo.prototype.anim = function () {\n\t\tif (this.isLoaded) {\n\t\t\t/* ---- 3D to 2D projection ---- */\n\t\t\tvar x = this.x - camera.x;\n\t\t\tvar y = this.y - camera.y;\n\t\t\tvar z = this.z - camera.z;\n\t\t\tif (z < 20) z += 5000;\n\t\t\tvar p = camera.fov / z;\n\t\t\tvar w = this.w * p;\n\t\t\tvar h = this.h * p;\n\t\t\t/* ---- HTML rendering ---- */\n\t\t\tthis.css.left   = Math.round(nw + x * p - w * .5) + 'px';\n\t\t\tthis.css.top    = Math.round(nh + y * p - h * .5) + 'px';  \n\t\t\tthis.css.width  = Math.round(w) + 'px';\n\t\t\tthis.css.height = Math.round(h) + 'px';\n\t\t\tthis.css.zIndex = this.zi - Math.round(z);\n\t\t} else {\n\t\t\t/* ---- image is loaded? ---- */\n\t\t\tthis.isLoaded = this.loading();\n\t\t}\n\t}\n\t/* ==== onload initialization ==== */\n\tDiapo.prototype.loading = function () {\n\t\tif ((this.canvas && this.srcImg.complete) || this.img.complete) {\n\t\t\tif (this.canvas) {\n\t\t\t\t/* ---- canvas version ---- */\n\t\t\t\tthis.w = this.srcImg.width;\n\t\t\t\tthis.h = this.srcImg.height;\n\t\t\t\tthis.img.width = this.w;\n\t\t\t\tthis.img.height = this.h;\n\t\t\t\tvar context = this.img.getContext(\"2d\");\n\t\t\t\tcontext.drawImage(this.srcImg, 0, 0, this.w, this.h);\n\t\t\t} else {\n\t\t\t\t/* ---- plain image version ---- */\n\t\t\t\tthis.w = this.img.width;\n\t\t\t\tthis.h = this.img.height;\n\t\t\t}\n\t\t\t/* ---- button loaded ---- */\n\t\t\tthis.but.className += \" loaded\";\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== screen dimensions ==== */\n\tvar resize = function () {\n\t\tnw = scr.offsetWidth * .5;\n\t\tnh = scr.offsetHeight * .5;\n\t}\n\t/* ==== disable interpolation during animation ==== */\n\tvar interpolation = function (bicubic) {\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) {\n\t\t\tif (o.but) {\n\t\t\t\to.css.msInterpolationMode = bicubic ? 'bicubic' : 'nearest-neighbor'; // makes IE8 happy\n\t\t\t\to.css.imageRendering = bicubic ? 'optimizeQuality' : 'optimizeSpeed'; // does not really work...\n\t\t\t}\n\t\t}\n\t}\n\t/* ==== init script ==== */\n\tvar init = function (data) {\n\t\t/* ---- containers ---- */\n\t\tscr = document.getElementById(\"screen\");\n\t\tbar = document.getElementById(\"bar\");\n\t\turlInfo = document.getElementById(\"urlInfo\");\n\t\tresize();\n\t\t/* ---- loading images ---- */\n\t\tvar i = 0, \n\t\t    o,\n\t\t\tn = data.length;\n\t\twhile( o = data[i++] ) {\n\t\t\t/* ---- images ---- */\n\t\t\tvar x = 1000 * ((i % 4) - 1.5);\n\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\tvar z = i * (5000 / n);\n\t\t\tdiapo.push( new Diapo(i - 1, o, x, y, z));\n\t\t\t/* ---- transparent frames ---- */\n\t\t\tvar k = diapo.length - 1;\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar x = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tdiapo.push( new Diapo(k, null, x, y, z + 100));\n\t\t\t}\n\t\t}\n\t\t/* ---- start engine ---- */\n\t\trun();\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== main loop ==== */\n\tvar run = function () {\n\t\t/* ---- x axis move ---- */\n\t\tif (camera.tx) {\n\t\t\tif (!camera.s) camera.setTarget(camera.x, camera.tx);\n\t\t\tvar m = camera.tween('x');\n\t\t\tif (!m) camera.tx = 0;\n\t\t/* ---- y axis move ---- */\n\t\t} else if (camera.ty) {\n\t\t\tif (!camera.s) camera.setTarget(camera.y, camera.ty); \n\t\t\tvar m = camera.tween('y');\n\t\t\tif (!m) camera.ty = 0;\n\t\t/* ---- z axis move ---- */\n\t\t} else if (camera.tz) {\n\t\t\tif (!camera.s) camera.setTarget(camera.z, camera.tz);\n\t\t\tvar m = camera.tween('z');\n\t\t\tif (!m) {\n\t\t\t\t/* ---- animation end ---- */\n\t\t\t\tcamera.tz = 0;\n\t\t\t\tinterpolation(true);\n\t\t\t\t/* ---- activate hyperlink ---- */\n\t\t\t\tif (selected.url) {\n\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\tselected.urlActive = true;\n\t\t\t\t\tselected.img.className = \"href\";\n\t\t\t\t\turlInfo.diapo = selected;\n\t\t\t\t\turlInfo.onclick = selected.img.onclick;\n\t\t\t\t\turlInfo.innerHTML = selected.title || selected.url;\n\t\t\t\t\turlInfo.style.visibility = \"visible\";\n\t\t\t\t\turlInfo.style.color = selected.color || \"#fff\";\n\t\t\t\t\turlInfo.style.top = Math.round(selected.img.offsetTop + selected.img.offsetHeight - urlInfo.offsetHeight - 5) + \"px\";\n\t\t\t\t\turlInfo.style.left = Math.round(selected.img.offsetLeft + selected.img.offsetWidth - urlInfo.offsetWidth - 5) + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tselected.img.style.cursor = \"default\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* ---- anim images ---- */\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) o.anim();\n\t\t/* ---- loop ---- */\n\t\tsetTimeout(run, 32);\n\t}\n\treturn {\n\t\t////////////////////////////////////////////////////////////////////////////\n\t\t/* ==== initialize script ==== */\n\t\tinit : init\n\t}\n}();\n\n</script>\n</head>\n\n<body>\n<div id=\"screen\">\n\t<div id=\"command\">\n\n\t\t<h1>我和彤宝</h1>\n\t\t 点方格可以跳转图片\n\t\t<div id=\"bar\"></div>\n\t</div>\n\t<div id=\"urlInfo\"></div>\n</div>\n\n<script type=\"text/javascript\">\n/* ==== start script ==== */\nsetTimeout(function() {\n\tm3D.init(\n\t\t[ \n\t\t\t{ src: 'http://image.panjiangtao.cn/love/1.JPG',  title: 'jump to random script', color: '#fff' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/2.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/3.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/4.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/5.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/6.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/7.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/8.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/9.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/10.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/11.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/12.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/13.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/14.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/15.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/16.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/17.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/18.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/19.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/20.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/21.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/22.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/23.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/24.JPG' , color: '#fff' }\n\t\t]\n\t);\n}, 500);\n</script>\n<div style=\"text-align:center;\">\n</div>\n</body>\n</html>\n","source":"pjt-love-lyt/index.html","raw":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>PJT love LYT</title>\n\n<meta http-equiv=\"imagetoolbar\" content=\"no\">\n<style type=\"text/css\">\n\thtml {\n\t\toverflow: hidden;\n\t}\n\tbody {\n\t\tposition: absolute;\n\t\tmargin: 0px;\n\t\tpadding: 0px;\n\t\tbackground: #eee;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcolor: #fff;\n\t\tfont-family: arial;\n\t\tfont-size: 0.8em;\n\t}\n\t#screen {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: #11264f;\n\t\toverflow: hidden;\n\t}\n\t#screen img, canvas { \n\t\tposition: absolute;\n\t\tleft: -9999px;\n\t\tcursor: pointer;\n        image-rendering: optimizeSpeed;\n\n\t}\n\t#screen .href {\n\t\tborder: #FFF dotted 1px;\n\t}\n\t#screen .fog { \n\t\tposition: absolute;\n\t\tbackground: #fff;\n\t\topacity: 0.1;\n\t\tfilter: alpha(opacity=10);\n\t}\n\t#command {\n\t\tposition:absolute;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\twidth: 130px;\n\t\tz-index: 30000;\n\t\tbackground:#000;\n\t\tborder: #000 solid 1em;\n\t}\n\t#bar {\n\t\tposition:relative;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\theight: 160px;\n\t}\n\t#bar .button { \n\t\tposition: absolute;\n\t\tbackground: #222;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tcursor: pointer;\n\t}\n\t#bar .loaded { \n\t\tbackground: #666;\n\t}\n\t#bar .viewed { \n\t\tbackground: #fff;\n\t}\n\t#bar .selected { \n\t\tbackground: #f00;\n\t}\n\t#urlInfo {\n\t\tposition: absolute;\n\t\tbackground: url(images/r.gif) no-repeat 0 4px;\n\t\tvisibility: hidden;\n\t\tz-index: 30000;\n\t\tpadding-left: 12px;\n\t\tcursor: pointer;\n\t}\n</style>\n\n<script type=\"text/javascript\">\n// =============================================================\n//           ===== 3D gallery experiment =====\n// script written by Gerard Ferrandez - April 5, 2010\n// http://www.dhteumeuleu.com\n// use under a CC-BY-NC license\n// -------------------------------------------------------------\n// update: April 17 : added hyperlinks, tweaked z-index\n// =============================================================\n\nvar m3D = function () {\n\t/* ---- private vars ---- */\n\tvar diapo = [],\n\t\timb,\n\t\tscr,\n\t\tbar,\n\t\tselected,\n\t\turlInfo,\n\t\timagesPath = \"images/\",\n\t\tcamera = {x:0, y:0, z:-650, s:0, fov: 500},\n\t\tnw = 0,\n\t\tnh = 0;\n\t/* ==== camera tween methods ==== */\n\tcamera.setTarget = function (c0, t1, p) {\n\t\tif (Math.abs(t1 - c0) > .1) {\n\t\t\tcamera.s = 1;\n\t\t\tcamera.p = 0;\n\t\t\tcamera.d = t1 - c0;\n\t\t\tif (p) {\n\t\t\t\tcamera.d *= 2;\n\t\t\t\tcamera.p = 9;\n\t\t\t}\n\t\t}\n\t}\n\tcamera.tween = function (v) {\n\t\tif (camera.s != 0) {\n\t\t\tcamera.p += camera.s;\n\t\t\tcamera[v] += camera.d * camera.p * .01;\n\t\t\tif (camera.p == 10) camera.s = -1;\n\t\t\telse if (camera.p == 0) camera.s = 0;\n\t\t}\n\t\treturn camera.s;\n\t}\n\t/* ==== diapo constructor ==== */\n\tvar Diapo = function (n, img, x, y, z) {\n\t\tif (img) {\n\t\t\tthis.url = img.url;\n\t\t\tthis.title = img.title;\n\t\t\tthis.color = img.color;\n\t\t\tthis.isLoaded = false;\n\t\t\tif (document.createElement(\"canvas\").getContext) {\n\t\t\t\t/* ---- using canvas in place of images (performance trick) ---- */\n\t\t\t\tthis.srcImg = new Image();\n\t\t\t\tthis.srcImg.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tthis.img = document.createElement(\"canvas\");\n\t\t\t\tthis.canvas = true;\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t} else {\n\t\t\t\t/* ---- normal image ---- */\n\t\t\t\tthis.img = document.createElement('img');\n\t\t\t\tthis.img.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t}\n\t\t\t/* ---- on click event ---- */\n\t\t\tthis.img.onclick = function () {\n\t\t\t\tif (camera.s) return;\n\t\t\t\tif (this.diapo.isLoaded) {\n\t\t\t\t\tif (this.diapo.urlActive) {\n\t\t\t\t\t\t/* ---- jump hyperlink ---- */\n\t\t\t\t\t\ttop.location.href = this.diapo.url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* ---- target positions ---- */\n\t\t\t\t\t\tcamera.tz = this.diapo.z - camera.fov;\n\t\t\t\t\t\tcamera.tx = this.diapo.x;\n\t\t\t\t\t\tcamera.ty = this.diapo.y;\n\t\t\t\t\t\t/* ---- disable previously selected img ---- */\n\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\tselected.but.className = \"button viewed\";\n\t\t\t\t\t\t\tselected.img.className = \"\";\n\t\t\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\t\t\tselected.urlActive = false;\n\t\t\t\t\t\t\turlInfo.style.visibility = \"hidden\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* ---- select current img ---- */\n\t\t\t\t\t\tthis.diapo.but.className = \"button selected\";\n\t\t\t\t\t\tinterpolation(false);\n\t\t\t\t\t\tselected = this.diapo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* ---- command bar buttons ---- */\n\t\t\tthis.but = document.createElement('div');\n\t\t\tthis.but.className = \"button\";\n\t\t\tbar.appendChild(this.but);\n\t\t\tthis.but.diapo = this;\n\t\t\tthis.but.style.left = Math.round((this.but.offsetWidth  * 1.2) * (n % 4)) + 'px';\n\t\t\tthis.but.style.top  = Math.round((this.but.offsetHeight * 1.2) * Math.floor(n / 4)) + 'px';\n\t\t\tthis.but.onclick = this.img.onclick;\n\t\t\timb = this.img;\n\t\t\tthis.img.diapo = this;\n\t\t\tthis.zi = 25000;\n\t\t} else {\n\t\t\t/* ---- transparent div ---- */\n\t\t\tthis.img = document.createElement('div');\n\t\t\tthis.isLoaded = true;\n\t\t\tthis.img.className = \"fog\";\n\t\t\tscr.appendChild(this.img);\n\t\t\tthis.w = 300;\n\t\t\tthis.h = 300;\n\t\t\tthis.zi = 15000;\n\t\t}\n\t\t/* ---- object variables ---- */\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.css = this.img.style;\n\t}\n\t/* ==== main 3D animation ==== */\n\tDiapo.prototype.anim = function () {\n\t\tif (this.isLoaded) {\n\t\t\t/* ---- 3D to 2D projection ---- */\n\t\t\tvar x = this.x - camera.x;\n\t\t\tvar y = this.y - camera.y;\n\t\t\tvar z = this.z - camera.z;\n\t\t\tif (z < 20) z += 5000;\n\t\t\tvar p = camera.fov / z;\n\t\t\tvar w = this.w * p;\n\t\t\tvar h = this.h * p;\n\t\t\t/* ---- HTML rendering ---- */\n\t\t\tthis.css.left   = Math.round(nw + x * p - w * .5) + 'px';\n\t\t\tthis.css.top    = Math.round(nh + y * p - h * .5) + 'px';  \n\t\t\tthis.css.width  = Math.round(w) + 'px';\n\t\t\tthis.css.height = Math.round(h) + 'px';\n\t\t\tthis.css.zIndex = this.zi - Math.round(z);\n\t\t} else {\n\t\t\t/* ---- image is loaded? ---- */\n\t\t\tthis.isLoaded = this.loading();\n\t\t}\n\t}\n\t/* ==== onload initialization ==== */\n\tDiapo.prototype.loading = function () {\n\t\tif ((this.canvas && this.srcImg.complete) || this.img.complete) {\n\t\t\tif (this.canvas) {\n\t\t\t\t/* ---- canvas version ---- */\n\t\t\t\tthis.w = this.srcImg.width;\n\t\t\t\tthis.h = this.srcImg.height;\n\t\t\t\tthis.img.width = this.w;\n\t\t\t\tthis.img.height = this.h;\n\t\t\t\tvar context = this.img.getContext(\"2d\");\n\t\t\t\tcontext.drawImage(this.srcImg, 0, 0, this.w, this.h);\n\t\t\t} else {\n\t\t\t\t/* ---- plain image version ---- */\n\t\t\t\tthis.w = this.img.width;\n\t\t\t\tthis.h = this.img.height;\n\t\t\t}\n\t\t\t/* ---- button loaded ---- */\n\t\t\tthis.but.className += \" loaded\";\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== screen dimensions ==== */\n\tvar resize = function () {\n\t\tnw = scr.offsetWidth * .5;\n\t\tnh = scr.offsetHeight * .5;\n\t}\n\t/* ==== disable interpolation during animation ==== */\n\tvar interpolation = function (bicubic) {\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) {\n\t\t\tif (o.but) {\n\t\t\t\to.css.msInterpolationMode = bicubic ? 'bicubic' : 'nearest-neighbor'; // makes IE8 happy\n\t\t\t\to.css.imageRendering = bicubic ? 'optimizeQuality' : 'optimizeSpeed'; // does not really work...\n\t\t\t}\n\t\t}\n\t}\n\t/* ==== init script ==== */\n\tvar init = function (data) {\n\t\t/* ---- containers ---- */\n\t\tscr = document.getElementById(\"screen\");\n\t\tbar = document.getElementById(\"bar\");\n\t\turlInfo = document.getElementById(\"urlInfo\");\n\t\tresize();\n\t\t/* ---- loading images ---- */\n\t\tvar i = 0, \n\t\t    o,\n\t\t\tn = data.length;\n\t\twhile( o = data[i++] ) {\n\t\t\t/* ---- images ---- */\n\t\t\tvar x = 1000 * ((i % 4) - 1.5);\n\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\tvar z = i * (5000 / n);\n\t\t\tdiapo.push( new Diapo(i - 1, o, x, y, z));\n\t\t\t/* ---- transparent frames ---- */\n\t\t\tvar k = diapo.length - 1;\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar x = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tdiapo.push( new Diapo(k, null, x, y, z + 100));\n\t\t\t}\n\t\t}\n\t\t/* ---- start engine ---- */\n\t\trun();\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== main loop ==== */\n\tvar run = function () {\n\t\t/* ---- x axis move ---- */\n\t\tif (camera.tx) {\n\t\t\tif (!camera.s) camera.setTarget(camera.x, camera.tx);\n\t\t\tvar m = camera.tween('x');\n\t\t\tif (!m) camera.tx = 0;\n\t\t/* ---- y axis move ---- */\n\t\t} else if (camera.ty) {\n\t\t\tif (!camera.s) camera.setTarget(camera.y, camera.ty); \n\t\t\tvar m = camera.tween('y');\n\t\t\tif (!m) camera.ty = 0;\n\t\t/* ---- z axis move ---- */\n\t\t} else if (camera.tz) {\n\t\t\tif (!camera.s) camera.setTarget(camera.z, camera.tz);\n\t\t\tvar m = camera.tween('z');\n\t\t\tif (!m) {\n\t\t\t\t/* ---- animation end ---- */\n\t\t\t\tcamera.tz = 0;\n\t\t\t\tinterpolation(true);\n\t\t\t\t/* ---- activate hyperlink ---- */\n\t\t\t\tif (selected.url) {\n\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\tselected.urlActive = true;\n\t\t\t\t\tselected.img.className = \"href\";\n\t\t\t\t\turlInfo.diapo = selected;\n\t\t\t\t\turlInfo.onclick = selected.img.onclick;\n\t\t\t\t\turlInfo.innerHTML = selected.title || selected.url;\n\t\t\t\t\turlInfo.style.visibility = \"visible\";\n\t\t\t\t\turlInfo.style.color = selected.color || \"#fff\";\n\t\t\t\t\turlInfo.style.top = Math.round(selected.img.offsetTop + selected.img.offsetHeight - urlInfo.offsetHeight - 5) + \"px\";\n\t\t\t\t\turlInfo.style.left = Math.round(selected.img.offsetLeft + selected.img.offsetWidth - urlInfo.offsetWidth - 5) + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tselected.img.style.cursor = \"default\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* ---- anim images ---- */\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) o.anim();\n\t\t/* ---- loop ---- */\n\t\tsetTimeout(run, 32);\n\t}\n\treturn {\n\t\t////////////////////////////////////////////////////////////////////////////\n\t\t/* ==== initialize script ==== */\n\t\tinit : init\n\t}\n}();\n\n</script>\n</head>\n\n<body>\n<div id=\"screen\">\n\t<div id=\"command\">\n\n\t\t<h1>我和彤宝</h1>\n\t\t 点方格可以跳转图片\n\t\t<div id=\"bar\"></div>\n\t</div>\n\t<div id=\"urlInfo\"></div>\n</div>\n\n<script type=\"text/javascript\">\n/* ==== start script ==== */\nsetTimeout(function() {\n\tm3D.init(\n\t\t[ \n\t\t\t{ src: 'http://image.panjiangtao.cn/love/1.JPG',  title: 'jump to random script', color: '#fff' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/2.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/3.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/4.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/5.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/6.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/7.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/8.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/9.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/10.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/11.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/12.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/13.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/14.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/15.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/16.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/17.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/18.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/19.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/20.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/21.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/22.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/23.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/24.JPG' , color: '#fff' }\n\t\t]\n\t);\n}, 500);\n</script>\n<div style=\"text-align:center;\">\n</div>\n</body>\n</html>\n","date":"2021-09-08T09:33:47.059Z","updated":"2021-09-08T09:33:47.059Z","path":"pjt-love-lyt/index.html","title":"","comments":1,"layout":"page","_id":"cl8h3b0fr0008c8pv7bfmbbnv","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>PJT love LYT</title>\n\n<meta http-equiv=\"imagetoolbar\" content=\"no\">\n<style type=\"text/css\">\n\thtml {\n\t\toverflow: hidden;\n\t}\n\tbody {\n\t\tposition: absolute;\n\t\tmargin: 0px;\n\t\tpadding: 0px;\n\t\tbackground: #eee;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcolor: #fff;\n\t\tfont-family: arial;\n\t\tfont-size: 0.8em;\n\t}\n\t#screen {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: #11264f;\n\t\toverflow: hidden;\n\t}\n\t#screen img, canvas { \n\t\tposition: absolute;\n\t\tleft: -9999px;\n\t\tcursor: pointer;\n        image-rendering: optimizeSpeed;\n\n\t}\n\t#screen .href {\n\t\tborder: #FFF dotted 1px;\n\t}\n\t#screen .fog { \n\t\tposition: absolute;\n\t\tbackground: #fff;\n\t\topacity: 0.1;\n\t\tfilter: alpha(opacity=10);\n\t}\n\t#command {\n\t\tposition:absolute;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\twidth: 130px;\n\t\tz-index: 30000;\n\t\tbackground:#000;\n\t\tborder: #000 solid 1em;\n\t}\n\t#bar {\n\t\tposition:relative;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\theight: 160px;\n\t}\n\t#bar .button { \n\t\tposition: absolute;\n\t\tbackground: #222;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tcursor: pointer;\n\t}\n\t#bar .loaded { \n\t\tbackground: #666;\n\t}\n\t#bar .viewed { \n\t\tbackground: #fff;\n\t}\n\t#bar .selected { \n\t\tbackground: #f00;\n\t}\n\t#urlInfo {\n\t\tposition: absolute;\n\t\tbackground: url(images/r.gif) no-repeat 0 4px;\n\t\tvisibility: hidden;\n\t\tz-index: 30000;\n\t\tpadding-left: 12px;\n\t\tcursor: pointer;\n\t}\n</style>\n\n<script type=\"text/javascript\">\n// =============================================================\n//           ===== 3D gallery experiment =====\n// script written by Gerard Ferrandez - April 5, 2010\n// http://www.dhteumeuleu.com\n// use under a CC-BY-NC license\n// -------------------------------------------------------------\n// update: April 17 : added hyperlinks, tweaked z-index\n// =============================================================\n\nvar m3D = function () {\n\t/* ---- private vars ---- */\n\tvar diapo = [],\n\t\timb,\n\t\tscr,\n\t\tbar,\n\t\tselected,\n\t\turlInfo,\n\t\timagesPath = \"images/\",\n\t\tcamera = {x:0, y:0, z:-650, s:0, fov: 500},\n\t\tnw = 0,\n\t\tnh = 0;\n\t/* ==== camera tween methods ==== */\n\tcamera.setTarget = function (c0, t1, p) {\n\t\tif (Math.abs(t1 - c0) > .1) {\n\t\t\tcamera.s = 1;\n\t\t\tcamera.p = 0;\n\t\t\tcamera.d = t1 - c0;\n\t\t\tif (p) {\n\t\t\t\tcamera.d *= 2;\n\t\t\t\tcamera.p = 9;\n\t\t\t}\n\t\t}\n\t}\n\tcamera.tween = function (v) {\n\t\tif (camera.s != 0) {\n\t\t\tcamera.p += camera.s;\n\t\t\tcamera[v] += camera.d * camera.p * .01;\n\t\t\tif (camera.p == 10) camera.s = -1;\n\t\t\telse if (camera.p == 0) camera.s = 0;\n\t\t}\n\t\treturn camera.s;\n\t}\n\t/* ==== diapo constructor ==== */\n\tvar Diapo = function (n, img, x, y, z) {\n\t\tif (img) {\n\t\t\tthis.url = img.url;\n\t\t\tthis.title = img.title;\n\t\t\tthis.color = img.color;\n\t\t\tthis.isLoaded = false;\n\t\t\tif (document.createElement(\"canvas\").getContext) {\n\t\t\t\t/* ---- using canvas in place of images (performance trick) ---- */\n\t\t\t\tthis.srcImg = new Image();\n\t\t\t\tthis.srcImg.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tthis.img = document.createElement(\"canvas\");\n\t\t\t\tthis.canvas = true;\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t} else {\n\t\t\t\t/* ---- normal image ---- */\n\t\t\t\tthis.img = document.createElement('img');\n\t\t\t\tthis.img.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t}\n\t\t\t/* ---- on click event ---- */\n\t\t\tthis.img.onclick = function () {\n\t\t\t\tif (camera.s) return;\n\t\t\t\tif (this.diapo.isLoaded) {\n\t\t\t\t\tif (this.diapo.urlActive) {\n\t\t\t\t\t\t/* ---- jump hyperlink ---- */\n\t\t\t\t\t\ttop.location.href = this.diapo.url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* ---- target positions ---- */\n\t\t\t\t\t\tcamera.tz = this.diapo.z - camera.fov;\n\t\t\t\t\t\tcamera.tx = this.diapo.x;\n\t\t\t\t\t\tcamera.ty = this.diapo.y;\n\t\t\t\t\t\t/* ---- disable previously selected img ---- */\n\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\tselected.but.className = \"button viewed\";\n\t\t\t\t\t\t\tselected.img.className = \"\";\n\t\t\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\t\t\tselected.urlActive = false;\n\t\t\t\t\t\t\turlInfo.style.visibility = \"hidden\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* ---- select current img ---- */\n\t\t\t\t\t\tthis.diapo.but.className = \"button selected\";\n\t\t\t\t\t\tinterpolation(false);\n\t\t\t\t\t\tselected = this.diapo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* ---- command bar buttons ---- */\n\t\t\tthis.but = document.createElement('div');\n\t\t\tthis.but.className = \"button\";\n\t\t\tbar.appendChild(this.but);\n\t\t\tthis.but.diapo = this;\n\t\t\tthis.but.style.left = Math.round((this.but.offsetWidth  * 1.2) * (n % 4)) + 'px';\n\t\t\tthis.but.style.top  = Math.round((this.but.offsetHeight * 1.2) * Math.floor(n / 4)) + 'px';\n\t\t\tthis.but.onclick = this.img.onclick;\n\t\t\timb = this.img;\n\t\t\tthis.img.diapo = this;\n\t\t\tthis.zi = 25000;\n\t\t} else {\n\t\t\t/* ---- transparent div ---- */\n\t\t\tthis.img = document.createElement('div');\n\t\t\tthis.isLoaded = true;\n\t\t\tthis.img.className = \"fog\";\n\t\t\tscr.appendChild(this.img);\n\t\t\tthis.w = 300;\n\t\t\tthis.h = 300;\n\t\t\tthis.zi = 15000;\n\t\t}\n\t\t/* ---- object variables ---- */\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.css = this.img.style;\n\t}\n\t/* ==== main 3D animation ==== */\n\tDiapo.prototype.anim = function () {\n\t\tif (this.isLoaded) {\n\t\t\t/* ---- 3D to 2D projection ---- */\n\t\t\tvar x = this.x - camera.x;\n\t\t\tvar y = this.y - camera.y;\n\t\t\tvar z = this.z - camera.z;\n\t\t\tif (z < 20) z += 5000;\n\t\t\tvar p = camera.fov / z;\n\t\t\tvar w = this.w * p;\n\t\t\tvar h = this.h * p;\n\t\t\t/* ---- HTML rendering ---- */\n\t\t\tthis.css.left   = Math.round(nw + x * p - w * .5) + 'px';\n\t\t\tthis.css.top    = Math.round(nh + y * p - h * .5) + 'px';  \n\t\t\tthis.css.width  = Math.round(w) + 'px';\n\t\t\tthis.css.height = Math.round(h) + 'px';\n\t\t\tthis.css.zIndex = this.zi - Math.round(z);\n\t\t} else {\n\t\t\t/* ---- image is loaded? ---- */\n\t\t\tthis.isLoaded = this.loading();\n\t\t}\n\t}\n\t/* ==== onload initialization ==== */\n\tDiapo.prototype.loading = function () {\n\t\tif ((this.canvas && this.srcImg.complete) || this.img.complete) {\n\t\t\tif (this.canvas) {\n\t\t\t\t/* ---- canvas version ---- */\n\t\t\t\tthis.w = this.srcImg.width;\n\t\t\t\tthis.h = this.srcImg.height;\n\t\t\t\tthis.img.width = this.w;\n\t\t\t\tthis.img.height = this.h;\n\t\t\t\tvar context = this.img.getContext(\"2d\");\n\t\t\t\tcontext.drawImage(this.srcImg, 0, 0, this.w, this.h);\n\t\t\t} else {\n\t\t\t\t/* ---- plain image version ---- */\n\t\t\t\tthis.w = this.img.width;\n\t\t\t\tthis.h = this.img.height;\n\t\t\t}\n\t\t\t/* ---- button loaded ---- */\n\t\t\tthis.but.className += \" loaded\";\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== screen dimensions ==== */\n\tvar resize = function () {\n\t\tnw = scr.offsetWidth * .5;\n\t\tnh = scr.offsetHeight * .5;\n\t}\n\t/* ==== disable interpolation during animation ==== */\n\tvar interpolation = function (bicubic) {\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) {\n\t\t\tif (o.but) {\n\t\t\t\to.css.msInterpolationMode = bicubic ? 'bicubic' : 'nearest-neighbor'; // makes IE8 happy\n\t\t\t\to.css.imageRendering = bicubic ? 'optimizeQuality' : 'optimizeSpeed'; // does not really work...\n\t\t\t}\n\t\t}\n\t}\n\t/* ==== init script ==== */\n\tvar init = function (data) {\n\t\t/* ---- containers ---- */\n\t\tscr = document.getElementById(\"screen\");\n\t\tbar = document.getElementById(\"bar\");\n\t\turlInfo = document.getElementById(\"urlInfo\");\n\t\tresize();\n\t\t/* ---- loading images ---- */\n\t\tvar i = 0, \n\t\t    o,\n\t\t\tn = data.length;\n\t\twhile( o = data[i++] ) {\n\t\t\t/* ---- images ---- */\n\t\t\tvar x = 1000 * ((i % 4) - 1.5);\n\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\tvar z = i * (5000 / n);\n\t\t\tdiapo.push( new Diapo(i - 1, o, x, y, z));\n\t\t\t/* ---- transparent frames ---- */\n\t\t\tvar k = diapo.length - 1;\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar x = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tdiapo.push( new Diapo(k, null, x, y, z + 100));\n\t\t\t}\n\t\t}\n\t\t/* ---- start engine ---- */\n\t\trun();\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== main loop ==== */\n\tvar run = function () {\n\t\t/* ---- x axis move ---- */\n\t\tif (camera.tx) {\n\t\t\tif (!camera.s) camera.setTarget(camera.x, camera.tx);\n\t\t\tvar m = camera.tween('x');\n\t\t\tif (!m) camera.tx = 0;\n\t\t/* ---- y axis move ---- */\n\t\t} else if (camera.ty) {\n\t\t\tif (!camera.s) camera.setTarget(camera.y, camera.ty); \n\t\t\tvar m = camera.tween('y');\n\t\t\tif (!m) camera.ty = 0;\n\t\t/* ---- z axis move ---- */\n\t\t} else if (camera.tz) {\n\t\t\tif (!camera.s) camera.setTarget(camera.z, camera.tz);\n\t\t\tvar m = camera.tween('z');\n\t\t\tif (!m) {\n\t\t\t\t/* ---- animation end ---- */\n\t\t\t\tcamera.tz = 0;\n\t\t\t\tinterpolation(true);\n\t\t\t\t/* ---- activate hyperlink ---- */\n\t\t\t\tif (selected.url) {\n\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\tselected.urlActive = true;\n\t\t\t\t\tselected.img.className = \"href\";\n\t\t\t\t\turlInfo.diapo = selected;\n\t\t\t\t\turlInfo.onclick = selected.img.onclick;\n\t\t\t\t\turlInfo.innerHTML = selected.title || selected.url;\n\t\t\t\t\turlInfo.style.visibility = \"visible\";\n\t\t\t\t\turlInfo.style.color = selected.color || \"#fff\";\n\t\t\t\t\turlInfo.style.top = Math.round(selected.img.offsetTop + selected.img.offsetHeight - urlInfo.offsetHeight - 5) + \"px\";\n\t\t\t\t\turlInfo.style.left = Math.round(selected.img.offsetLeft + selected.img.offsetWidth - urlInfo.offsetWidth - 5) + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tselected.img.style.cursor = \"default\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* ---- anim images ---- */\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) o.anim();\n\t\t/* ---- loop ---- */\n\t\tsetTimeout(run, 32);\n\t}\n\treturn {\n\t\t////////////////////////////////////////////////////////////////////////////\n\t\t/* ==== initialize script ==== */\n\t\tinit : init\n\t}\n}();\n\n</script>\n</head>\n\n<body>\n<div id=\"screen\">\n\t<div id=\"command\">\n\n\t\t<h1>我和彤宝</h1>\n\t\t 点方格可以跳转图片\n\t\t<div id=\"bar\"></div>\n\t</div>\n\t<div id=\"urlInfo\"></div>\n</div>\n\n<script type=\"text/javascript\">\n/* ==== start script ==== */\nsetTimeout(function() {\n\tm3D.init(\n\t\t[ \n\t\t\t{ src: 'http://image.panjiangtao.cn/love/1.JPG',  title: 'jump to random script', color: '#fff' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/2.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/3.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/4.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/5.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/6.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/7.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/8.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/9.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/10.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/11.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/12.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/13.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/14.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/15.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/16.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/17.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/18.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/19.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/20.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/21.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/22.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/23.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/24.JPG' , color: '#fff' }\n\t\t]\n\t);\n}, 500);\n</script>\n<div style=\"text-align:center;\">\n</div>\n</body>\n</html>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":8353,"excerpt":"","more":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>PJT love LYT</title>\n\n<meta http-equiv=\"imagetoolbar\" content=\"no\">\n<style type=\"text/css\">\n\thtml {\n\t\toverflow: hidden;\n\t}\n\tbody {\n\t\tposition: absolute;\n\t\tmargin: 0px;\n\t\tpadding: 0px;\n\t\tbackground: #eee;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcolor: #fff;\n\t\tfont-family: arial;\n\t\tfont-size: 0.8em;\n\t}\n\t#screen {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: #11264f;\n\t\toverflow: hidden;\n\t}\n\t#screen img, canvas { \n\t\tposition: absolute;\n\t\tleft: -9999px;\n\t\tcursor: pointer;\n        image-rendering: optimizeSpeed;\n\n\t}\n\t#screen .href {\n\t\tborder: #FFF dotted 1px;\n\t}\n\t#screen .fog { \n\t\tposition: absolute;\n\t\tbackground: #fff;\n\t\topacity: 0.1;\n\t\tfilter: alpha(opacity=10);\n\t}\n\t#command {\n\t\tposition:absolute;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\twidth: 130px;\n\t\tz-index: 30000;\n\t\tbackground:#000;\n\t\tborder: #000 solid 1em;\n\t}\n\t#bar {\n\t\tposition:relative;\n\t\tleft: 1em;\n\t\ttop: 1em;\n\t\theight: 160px;\n\t}\n\t#bar .button { \n\t\tposition: absolute;\n\t\tbackground: #222;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tcursor: pointer;\n\t}\n\t#bar .loaded { \n\t\tbackground: #666;\n\t}\n\t#bar .viewed { \n\t\tbackground: #fff;\n\t}\n\t#bar .selected { \n\t\tbackground: #f00;\n\t}\n\t#urlInfo {\n\t\tposition: absolute;\n\t\tbackground: url(images/r.gif) no-repeat 0 4px;\n\t\tvisibility: hidden;\n\t\tz-index: 30000;\n\t\tpadding-left: 12px;\n\t\tcursor: pointer;\n\t}\n</style>\n\n<script type=\"text/javascript\">\n// =============================================================\n//           ===== 3D gallery experiment =====\n// script written by Gerard Ferrandez - April 5, 2010\n// http://www.dhteumeuleu.com\n// use under a CC-BY-NC license\n// -------------------------------------------------------------\n// update: April 17 : added hyperlinks, tweaked z-index\n// =============================================================\n\nvar m3D = function () {\n\t/* ---- private vars ---- */\n\tvar diapo = [],\n\t\timb,\n\t\tscr,\n\t\tbar,\n\t\tselected,\n\t\turlInfo,\n\t\timagesPath = \"images/\",\n\t\tcamera = {x:0, y:0, z:-650, s:0, fov: 500},\n\t\tnw = 0,\n\t\tnh = 0;\n\t/* ==== camera tween methods ==== */\n\tcamera.setTarget = function (c0, t1, p) {\n\t\tif (Math.abs(t1 - c0) > .1) {\n\t\t\tcamera.s = 1;\n\t\t\tcamera.p = 0;\n\t\t\tcamera.d = t1 - c0;\n\t\t\tif (p) {\n\t\t\t\tcamera.d *= 2;\n\t\t\t\tcamera.p = 9;\n\t\t\t}\n\t\t}\n\t}\n\tcamera.tween = function (v) {\n\t\tif (camera.s != 0) {\n\t\t\tcamera.p += camera.s;\n\t\t\tcamera[v] += camera.d * camera.p * .01;\n\t\t\tif (camera.p == 10) camera.s = -1;\n\t\t\telse if (camera.p == 0) camera.s = 0;\n\t\t}\n\t\treturn camera.s;\n\t}\n\t/* ==== diapo constructor ==== */\n\tvar Diapo = function (n, img, x, y, z) {\n\t\tif (img) {\n\t\t\tthis.url = img.url;\n\t\t\tthis.title = img.title;\n\t\t\tthis.color = img.color;\n\t\t\tthis.isLoaded = false;\n\t\t\tif (document.createElement(\"canvas\").getContext) {\n\t\t\t\t/* ---- using canvas in place of images (performance trick) ---- */\n\t\t\t\tthis.srcImg = new Image();\n\t\t\t\tthis.srcImg.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tthis.img = document.createElement(\"canvas\");\n\t\t\t\tthis.canvas = true;\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t} else {\n\t\t\t\t/* ---- normal image ---- */\n\t\t\t\tthis.img = document.createElement('img');\n\t\t\t\tthis.img.src = img.src + '?imageMogr2/auto-orient/thumbnail/160000@/blur/1x0/quality/90';\n\t\t\t\tscr.appendChild(this.img);\n\t\t\t}\n\t\t\t/* ---- on click event ---- */\n\t\t\tthis.img.onclick = function () {\n\t\t\t\tif (camera.s) return;\n\t\t\t\tif (this.diapo.isLoaded) {\n\t\t\t\t\tif (this.diapo.urlActive) {\n\t\t\t\t\t\t/* ---- jump hyperlink ---- */\n\t\t\t\t\t\ttop.location.href = this.diapo.url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* ---- target positions ---- */\n\t\t\t\t\t\tcamera.tz = this.diapo.z - camera.fov;\n\t\t\t\t\t\tcamera.tx = this.diapo.x;\n\t\t\t\t\t\tcamera.ty = this.diapo.y;\n\t\t\t\t\t\t/* ---- disable previously selected img ---- */\n\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\tselected.but.className = \"button viewed\";\n\t\t\t\t\t\t\tselected.img.className = \"\";\n\t\t\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\t\t\tselected.urlActive = false;\n\t\t\t\t\t\t\turlInfo.style.visibility = \"hidden\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* ---- select current img ---- */\n\t\t\t\t\t\tthis.diapo.but.className = \"button selected\";\n\t\t\t\t\t\tinterpolation(false);\n\t\t\t\t\t\tselected = this.diapo;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* ---- command bar buttons ---- */\n\t\t\tthis.but = document.createElement('div');\n\t\t\tthis.but.className = \"button\";\n\t\t\tbar.appendChild(this.but);\n\t\t\tthis.but.diapo = this;\n\t\t\tthis.but.style.left = Math.round((this.but.offsetWidth  * 1.2) * (n % 4)) + 'px';\n\t\t\tthis.but.style.top  = Math.round((this.but.offsetHeight * 1.2) * Math.floor(n / 4)) + 'px';\n\t\t\tthis.but.onclick = this.img.onclick;\n\t\t\timb = this.img;\n\t\t\tthis.img.diapo = this;\n\t\t\tthis.zi = 25000;\n\t\t} else {\n\t\t\t/* ---- transparent div ---- */\n\t\t\tthis.img = document.createElement('div');\n\t\t\tthis.isLoaded = true;\n\t\t\tthis.img.className = \"fog\";\n\t\t\tscr.appendChild(this.img);\n\t\t\tthis.w = 300;\n\t\t\tthis.h = 300;\n\t\t\tthis.zi = 15000;\n\t\t}\n\t\t/* ---- object variables ---- */\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.css = this.img.style;\n\t}\n\t/* ==== main 3D animation ==== */\n\tDiapo.prototype.anim = function () {\n\t\tif (this.isLoaded) {\n\t\t\t/* ---- 3D to 2D projection ---- */\n\t\t\tvar x = this.x - camera.x;\n\t\t\tvar y = this.y - camera.y;\n\t\t\tvar z = this.z - camera.z;\n\t\t\tif (z < 20) z += 5000;\n\t\t\tvar p = camera.fov / z;\n\t\t\tvar w = this.w * p;\n\t\t\tvar h = this.h * p;\n\t\t\t/* ---- HTML rendering ---- */\n\t\t\tthis.css.left   = Math.round(nw + x * p - w * .5) + 'px';\n\t\t\tthis.css.top    = Math.round(nh + y * p - h * .5) + 'px';  \n\t\t\tthis.css.width  = Math.round(w) + 'px';\n\t\t\tthis.css.height = Math.round(h) + 'px';\n\t\t\tthis.css.zIndex = this.zi - Math.round(z);\n\t\t} else {\n\t\t\t/* ---- image is loaded? ---- */\n\t\t\tthis.isLoaded = this.loading();\n\t\t}\n\t}\n\t/* ==== onload initialization ==== */\n\tDiapo.prototype.loading = function () {\n\t\tif ((this.canvas && this.srcImg.complete) || this.img.complete) {\n\t\t\tif (this.canvas) {\n\t\t\t\t/* ---- canvas version ---- */\n\t\t\t\tthis.w = this.srcImg.width;\n\t\t\t\tthis.h = this.srcImg.height;\n\t\t\t\tthis.img.width = this.w;\n\t\t\t\tthis.img.height = this.h;\n\t\t\t\tvar context = this.img.getContext(\"2d\");\n\t\t\t\tcontext.drawImage(this.srcImg, 0, 0, this.w, this.h);\n\t\t\t} else {\n\t\t\t\t/* ---- plain image version ---- */\n\t\t\t\tthis.w = this.img.width;\n\t\t\t\tthis.h = this.img.height;\n\t\t\t}\n\t\t\t/* ---- button loaded ---- */\n\t\t\tthis.but.className += \" loaded\";\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== screen dimensions ==== */\n\tvar resize = function () {\n\t\tnw = scr.offsetWidth * .5;\n\t\tnh = scr.offsetHeight * .5;\n\t}\n\t/* ==== disable interpolation during animation ==== */\n\tvar interpolation = function (bicubic) {\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) {\n\t\t\tif (o.but) {\n\t\t\t\to.css.msInterpolationMode = bicubic ? 'bicubic' : 'nearest-neighbor'; // makes IE8 happy\n\t\t\t\to.css.imageRendering = bicubic ? 'optimizeQuality' : 'optimizeSpeed'; // does not really work...\n\t\t\t}\n\t\t}\n\t}\n\t/* ==== init script ==== */\n\tvar init = function (data) {\n\t\t/* ---- containers ---- */\n\t\tscr = document.getElementById(\"screen\");\n\t\tbar = document.getElementById(\"bar\");\n\t\turlInfo = document.getElementById(\"urlInfo\");\n\t\tresize();\n\t\t/* ---- loading images ---- */\n\t\tvar i = 0, \n\t\t    o,\n\t\t\tn = data.length;\n\t\twhile( o = data[i++] ) {\n\t\t\t/* ---- images ---- */\n\t\t\tvar x = 1000 * ((i % 4) - 1.5);\n\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\tvar z = i * (5000 / n);\n\t\t\tdiapo.push( new Diapo(i - 1, o, x, y, z));\n\t\t\t/* ---- transparent frames ---- */\n\t\t\tvar k = diapo.length - 1;\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar x = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tvar y = Math.round(Math.random() * 4000) - 2000;\n\t\t\t\tdiapo.push( new Diapo(k, null, x, y, z + 100));\n\t\t\t}\n\t\t}\n\t\t/* ---- start engine ---- */\n\t\trun();\n\t}\n\t////////////////////////////////////////////////////////////////////////////\n\t/* ==== main loop ==== */\n\tvar run = function () {\n\t\t/* ---- x axis move ---- */\n\t\tif (camera.tx) {\n\t\t\tif (!camera.s) camera.setTarget(camera.x, camera.tx);\n\t\t\tvar m = camera.tween('x');\n\t\t\tif (!m) camera.tx = 0;\n\t\t/* ---- y axis move ---- */\n\t\t} else if (camera.ty) {\n\t\t\tif (!camera.s) camera.setTarget(camera.y, camera.ty); \n\t\t\tvar m = camera.tween('y');\n\t\t\tif (!m) camera.ty = 0;\n\t\t/* ---- z axis move ---- */\n\t\t} else if (camera.tz) {\n\t\t\tif (!camera.s) camera.setTarget(camera.z, camera.tz);\n\t\t\tvar m = camera.tween('z');\n\t\t\tif (!m) {\n\t\t\t\t/* ---- animation end ---- */\n\t\t\t\tcamera.tz = 0;\n\t\t\t\tinterpolation(true);\n\t\t\t\t/* ---- activate hyperlink ---- */\n\t\t\t\tif (selected.url) {\n\t\t\t\t\tselected.img.style.cursor = \"pointer\";\n\t\t\t\t\tselected.urlActive = true;\n\t\t\t\t\tselected.img.className = \"href\";\n\t\t\t\t\turlInfo.diapo = selected;\n\t\t\t\t\turlInfo.onclick = selected.img.onclick;\n\t\t\t\t\turlInfo.innerHTML = selected.title || selected.url;\n\t\t\t\t\turlInfo.style.visibility = \"visible\";\n\t\t\t\t\turlInfo.style.color = selected.color || \"#fff\";\n\t\t\t\t\turlInfo.style.top = Math.round(selected.img.offsetTop + selected.img.offsetHeight - urlInfo.offsetHeight - 5) + \"px\";\n\t\t\t\t\turlInfo.style.left = Math.round(selected.img.offsetLeft + selected.img.offsetWidth - urlInfo.offsetWidth - 5) + \"px\";\n\t\t\t\t} else {\n\t\t\t\t\tselected.img.style.cursor = \"default\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* ---- anim images ---- */\n\t\tvar i = 0, o;\n\t\twhile( o = diapo[i++] ) o.anim();\n\t\t/* ---- loop ---- */\n\t\tsetTimeout(run, 32);\n\t}\n\treturn {\n\t\t////////////////////////////////////////////////////////////////////////////\n\t\t/* ==== initialize script ==== */\n\t\tinit : init\n\t}\n}();\n\n</script>\n</head>\n\n<body>\n<div id=\"screen\">\n\t<div id=\"command\">\n\n\t\t<h1>我和彤宝</h1>\n\t\t 点方格可以跳转图片\n\t\t<div id=\"bar\"></div>\n\t</div>\n\t<div id=\"urlInfo\"></div>\n</div>\n\n<script type=\"text/javascript\">\n/* ==== start script ==== */\nsetTimeout(function() {\n\tm3D.init(\n\t\t[ \n\t\t\t{ src: 'http://image.panjiangtao.cn/love/1.JPG',  title: 'jump to random script', color: '#fff' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/2.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/3.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/4.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/5.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/6.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/7.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/8.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/9.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/10.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/11.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/12.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/13.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/14.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/15.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/16.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/17.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/18.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/19.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/20.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/21.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/22.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/23.JPG' },\n\t\t\t{ src: 'http://image.panjiangtao.cn/love/24.JPG' , color: '#fff' }\n\t\t]\n\t);\n}, 500);\n</script>\n<div style=\"text-align:center;\">\n</div>\n</body>\n</html>\n"},{"_content":"{\n    \"header\": [\n        \" *   \",\n        \" *   文件描述：本文件为网页资源信息\",\n        \" *   success字段为下载保存成功的资源;failures字段则为下载保存失败的资源URL\",\n        \" *   success字段为标准树结构，每一层资源父子关系、URL和保存路径清晰明了\",\n        \" *   本文件仅为记录检测到的网页资源以便于调试，非专业人员可将本文件删除\",\n        \" *   详细介绍请参考: https://bazhan.me/faq\",\n        \" *   \"\n    ],\n    \"success\": [\n        {\n            \"url\": \"http://xsdggw.cn/t/webpage/3dxk/\",\n            \"path\": \"index.html\",\n            \"children\": [\n                {\n                    \"url\": \"http://xsdggw.cn/t/webpage/3dxk/images/r.gif\",\n                    \"path\": \"images/r.gif\"\n                }\n            ]\n        }\n    ],\n    \"failures\": []\n}","source":"pjt-love-lyt/resource.json","raw":"{\n    \"header\": [\n        \" *   \",\n        \" *   文件描述：本文件为网页资源信息\",\n        \" *   success字段为下载保存成功的资源;failures字段则为下载保存失败的资源URL\",\n        \" *   success字段为标准树结构，每一层资源父子关系、URL和保存路径清晰明了\",\n        \" *   本文件仅为记录检测到的网页资源以便于调试，非专业人员可将本文件删除\",\n        \" *   详细介绍请参考: https://bazhan.me/faq\",\n        \" *   \"\n    ],\n    \"success\": [\n        {\n            \"url\": \"http://xsdggw.cn/t/webpage/3dxk/\",\n            \"path\": \"index.html\",\n            \"children\": [\n                {\n                    \"url\": \"http://xsdggw.cn/t/webpage/3dxk/images/r.gif\",\n                    \"path\": \"images/r.gif\"\n                }\n            ]\n        }\n    ],\n    \"failures\": []\n}","date":"2021-07-03T07:43:19.949Z","updated":"2021-07-02T23:43:00.000Z","path":"pjt-love-lyt/resource.json","layout":"false","title":"","comments":1,"_id":"cl8h3b0ft000ac8pv5ji36dj3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>{\"header\":[\" *   \",\" *   文件描述：本文件为网页资源信息\",\" *   success字段为下载保存成功的资源;failures字段则为下载保存失败的资源URL\",\" *   success字段为标准树结构，每一层资源父子关系、URL和保存路径清晰明了\",\" *   本文件仅为记录检测到的网页资源以便于调试，非专业人员可将本文件删除\",\" *   详细介绍请参考: https://bazhan.me/faq\",\" *   \"],\"success\":[{\"url\":\"http://xsdggw.cn/t/webpage/3dxk/\",\"path\":\"index.html\",\"children\":[{\"url\":\"http://xsdggw.cn/t/webpage/3dxk/images/r.gif\",\"path\":\"images/r.gif\"}]}],\"failures\":[]}","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":378,"excerpt":"","more":"{\"header\":[\" *   \",\" *   文件描述：本文件为网页资源信息\",\" *   success字段为下载保存成功的资源;failures字段则为下载保存失败的资源URL\",\" *   success字段为标准树结构，每一层资源父子关系、URL和保存路径清晰明了\",\" *   本文件仅为记录检测到的网页资源以便于调试，非专业人员可将本文件删除\",\" *   详细介绍请参考: https://bazhan.me/faq\",\" *   \"],\"success\":[{\"url\":\"http://xsdggw.cn/t/webpage/3dxk/\",\"path\":\"index.html\",\"children\":[{\"url\":\"http://xsdggw.cn/t/webpage/3dxk/images/r.gif\",\"path\":\"images/r.gif\"}]}],\"failures\":[]}"},{"_content":"{\n    \"header\": [\n        \" *   \",\n        \" *   文件描述：本文件为请求参数，包括不限于网址、请求头、响应头、COOKIE、Referer、UserAgent\",\n        \" *   本文件仅为记录详细请求参数便于调试，非专业人员可将本文件删除\",\n        \" *   详细介绍请参考: https://bazhan.me/faq\",\n        \" *   \"\n    ],\n    \"directory\": \"xsdggw-cn-vhhnaf4g\",\n    \"options\": {\n        \"url\": \"http://xsdggw.cn/t/webpage/3dxk/\",\n        \"index\": \"index.html\",\n        \"domain\": \"xsdggw.cn\",\n        \"origin\": \"http://xsdggw.cn\",\n        \"ipaddress\": \"118.89.173.41\",\n        \"originURL\": \"http://xsdggw.cn/t/webpage/3dxk/\",\n        \"filenameGenerator\": \"byType\",\n        \"request\": {\n            \"headers\": {\n                \"accept\": \"text/html,*/*\",\n                \"accept-language\": \"zh-CN,zh;q=0.9\",\n                \"accept-encoding\": \"gzip\",\n                \"cache-control\": \"no-cache\",\n                \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\",\n                \"x-scraper-website\": \"https://bazhan.me/\"\n            }\n        },\n        \"response\": {\n            \"statusCode\": 200,\n            \"headers\": {\n                \"server\": \"nginx\",\n                \"date\": \"Sat, 03 Jul 2021 07:43:01 GMT\",\n                \"content-type\": \"text/html\",\n                \"last-modified\": \"Fri, 19 Mar 2021 09:01:08 GMT\",\n                \"transfer-encoding\": \"chunked\",\n                \"connection\": \"close\",\n                \"vary\": \"Accept-Encoding\",\n                \"etag\": \"W/\\\"60546854-29af\\\"\",\n                \"content-encoding\": \"gzip\"\n            }\n        }\n    },\n    \"user\": {\n        \"isWhite\": false\n    },\n    \"formatter\": [\n        \"saveOriginal\"\n    ],\n    \"time\": {\n        \"start\": 1625298181196,\n        \"end\": 1625298181845,\n        \"spend\": 0.649\n    }\n}","source":"pjt-love-lyt/result.json","raw":"{\n    \"header\": [\n        \" *   \",\n        \" *   文件描述：本文件为请求参数，包括不限于网址、请求头、响应头、COOKIE、Referer、UserAgent\",\n        \" *   本文件仅为记录详细请求参数便于调试，非专业人员可将本文件删除\",\n        \" *   详细介绍请参考: https://bazhan.me/faq\",\n        \" *   \"\n    ],\n    \"directory\": \"xsdggw-cn-vhhnaf4g\",\n    \"options\": {\n        \"url\": \"http://xsdggw.cn/t/webpage/3dxk/\",\n        \"index\": \"index.html\",\n        \"domain\": \"xsdggw.cn\",\n        \"origin\": \"http://xsdggw.cn\",\n        \"ipaddress\": \"118.89.173.41\",\n        \"originURL\": \"http://xsdggw.cn/t/webpage/3dxk/\",\n        \"filenameGenerator\": \"byType\",\n        \"request\": {\n            \"headers\": {\n                \"accept\": \"text/html,*/*\",\n                \"accept-language\": \"zh-CN,zh;q=0.9\",\n                \"accept-encoding\": \"gzip\",\n                \"cache-control\": \"no-cache\",\n                \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\",\n                \"x-scraper-website\": \"https://bazhan.me/\"\n            }\n        },\n        \"response\": {\n            \"statusCode\": 200,\n            \"headers\": {\n                \"server\": \"nginx\",\n                \"date\": \"Sat, 03 Jul 2021 07:43:01 GMT\",\n                \"content-type\": \"text/html\",\n                \"last-modified\": \"Fri, 19 Mar 2021 09:01:08 GMT\",\n                \"transfer-encoding\": \"chunked\",\n                \"connection\": \"close\",\n                \"vary\": \"Accept-Encoding\",\n                \"etag\": \"W/\\\"60546854-29af\\\"\",\n                \"content-encoding\": \"gzip\"\n            }\n        }\n    },\n    \"user\": {\n        \"isWhite\": false\n    },\n    \"formatter\": [\n        \"saveOriginal\"\n    ],\n    \"time\": {\n        \"start\": 1625298181196,\n        \"end\": 1625298181845,\n        \"spend\": 0.649\n    }\n}","date":"2021-07-03T07:43:19.950Z","updated":"2021-07-02T23:43:00.000Z","path":"pjt-love-lyt/result.json","layout":"false","title":"","comments":1,"_id":"cl8h3b0fv000ec8pv1uicg2en","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>{\"header\":[\" *   \",\" *   文件描述：本文件为请求参数，包括不限于网址、请求头、响应头、COOKIE、Referer、UserAgent\",\" *   本文件仅为记录详细请求参数便于调试，非专业人员可将本文件删除\",\" *   详细介绍请参考: https://bazhan.me/faq\",\" *   \"],\"directory\":\"xsdggw-cn-vhhnaf4g\",\"options\":{\"url\":\"http://xsdggw.cn/t/webpage/3dxk/\",\"index\":\"index.html\",\"domain\":\"xsdggw.cn\",\"origin\":\"http://xsdggw.cn\",\"ipaddress\":\"118.89.173.41\",\"originURL\":\"http://xsdggw.cn/t/webpage/3dxk/\",\"filenameGenerator\":\"byType\",\"request\":{\"headers\":{\"accept\":\"text/html,*/*\",\"accept-language\":\"zh-CN,zh;q=0.9\",\"accept-encoding\":\"gzip\",\"cache-control\":\"no-cache\",\"user-agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\",\"x-scraper-website\":\"https://bazhan.me/\"}},\"response\":{\"statusCode\":200,\"headers\":{\"server\":\"nginx\",\"date\":\"Sat, 03 Jul 2021 07:43:01 GMT\",\"content-type\":\"text/html\",\"last-modified\":\"Fri, 19 Mar 2021 09:01:08 GMT\",\"transfer-encoding\":\"chunked\",\"connection\":\"close\",\"vary\":\"Accept-Encoding\",\"etag\":\"W/\\\"60546854-29af\\\"\",\"content-encoding\":\"gzip\"}}},\"user\":{\"isWhite\":false},\"formatter\":[\"saveOriginal\"],\"time\":{\"start\":1625298181196,\"end\":1625298181845,\"spend\":0.649}}","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1115,"excerpt":"","more":"{\"header\":[\" *   \",\" *   文件描述：本文件为请求参数，包括不限于网址、请求头、响应头、COOKIE、Referer、UserAgent\",\" *   本文件仅为记录详细请求参数便于调试，非专业人员可将本文件删除\",\" *   详细介绍请参考: https://bazhan.me/faq\",\" *   \"],\"directory\":\"xsdggw-cn-vhhnaf4g\",\"options\":{\"url\":\"http://xsdggw.cn/t/webpage/3dxk/\",\"index\":\"index.html\",\"domain\":\"xsdggw.cn\",\"origin\":\"http://xsdggw.cn\",\"ipaddress\":\"118.89.173.41\",\"originURL\":\"http://xsdggw.cn/t/webpage/3dxk/\",\"filenameGenerator\":\"byType\",\"request\":{\"headers\":{\"accept\":\"text/html,*/*\",\"accept-language\":\"zh-CN,zh;q=0.9\",\"accept-encoding\":\"gzip\",\"cache-control\":\"no-cache\",\"user-agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\",\"x-scraper-website\":\"https://bazhan.me/\"}},\"response\":{\"statusCode\":200,\"headers\":{\"server\":\"nginx\",\"date\":\"Sat, 03 Jul 2021 07:43:01 GMT\",\"content-type\":\"text/html\",\"last-modified\":\"Fri, 19 Mar 2021 09:01:08 GMT\",\"transfer-encoding\":\"chunked\",\"connection\":\"close\",\"vary\":\"Accept-Encoding\",\"etag\":\"W/\\\"60546854-29af\\\"\",\"content-encoding\":\"gzip\"}}},\"user\":{\"isWhite\":false},\"formatter\":[\"saveOriginal\"],\"time\":{\"start\":1625298181196,\"end\":1625298181845,\"spend\":0.649}}"},{"_content":"* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nhtml {\n    place-items: center;\n}\n\nbody {\n    font-family: monospace;\n    font-size: 2rem;\n    min-height: 100vh;\n    display: grid;\n    overflow-y: hidden;\n    place-items: center;\n    background: linear-gradient(-45deg, #c4d2ef, #dfe6f6);\n}\n\n.hr,\n.min,\n.sec {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    grid-row: 1/2;\n    align-items: start;\n}\n\n.number {\n    padding: 0.5em;\n    width: 4rem;\n    height: 4rem;\n    display: grid;\n    place-items: center;\n    color: #f9fbfd;\n    transition: all 500ms 100ms ease;\n    border-radius: 50%;\n}\n\n.number.pop {\n    color: #3e6ccb;\n    font-weight: bold;\n    transform: scale(1.3);\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.strip {\n    transition: transform 500ms ease-in-out;\n    border-radius: 8px;\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.clock {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 5rem;\n    height: 4rem;\n    position: relative;\n    padding: 0 4rem;\n}\n","source":"pjt-love-lyt/css/index.css","raw":"* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nhtml {\n    place-items: center;\n}\n\nbody {\n    font-family: monospace;\n    font-size: 2rem;\n    min-height: 100vh;\n    display: grid;\n    overflow-y: hidden;\n    place-items: center;\n    background: linear-gradient(-45deg, #c4d2ef, #dfe6f6);\n}\n\n.hr,\n.min,\n.sec {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    grid-row: 1/2;\n    align-items: start;\n}\n\n.number {\n    padding: 0.5em;\n    width: 4rem;\n    height: 4rem;\n    display: grid;\n    place-items: center;\n    color: #f9fbfd;\n    transition: all 500ms 100ms ease;\n    border-radius: 50%;\n}\n\n.number.pop {\n    color: #3e6ccb;\n    font-weight: bold;\n    transform: scale(1.3);\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.strip {\n    transition: transform 500ms ease-in-out;\n    border-radius: 8px;\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.clock {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 5rem;\n    height: 4rem;\n    position: relative;\n    padding: 0 4rem;\n}\n","date":"2021-01-02T13:56:44.781Z","updated":"2021-01-02T13:56:44.492Z","path":"pjt-love-lyt/css/index.css","layout":"false","title":"","comments":1,"_id":"cl8h3b0fx000gc8pvbvvbenfs","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nhtml {\n    place-items: center;\n}\n\nbody {\n    font-family: monospace;\n    font-size: 2rem;\n    min-height: 100vh;\n    display: grid;\n    overflow-y: hidden;\n    place-items: center;\n    background: linear-gradient(-45deg, #c4d2ef, #dfe6f6);\n}\n\n.hr,\n.min,\n.sec {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    grid-row: 1/2;\n    align-items: start;\n}\n\n.number {\n    padding: 0.5em;\n    width: 4rem;\n    height: 4rem;\n    display: grid;\n    place-items: center;\n    color: #f9fbfd;\n    transition: all 500ms 100ms ease;\n    border-radius: 50%;\n}\n\n.number.pop {\n    color: #3e6ccb;\n    font-weight: bold;\n    transform: scale(1.3);\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.strip {\n    transition: transform 500ms ease-in-out;\n    border-radius: 8px;\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.clock {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 5rem;\n    height: 4rem;\n    position: relative;\n    padding: 0 4rem;\n}\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":878,"excerpt":"","more":"* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nhtml {\n    place-items: center;\n}\n\nbody {\n    font-family: monospace;\n    font-size: 2rem;\n    min-height: 100vh;\n    display: grid;\n    overflow-y: hidden;\n    place-items: center;\n    background: linear-gradient(-45deg, #c4d2ef, #dfe6f6);\n}\n\n.hr,\n.min,\n.sec {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 3rem;\n    grid-row: 1/2;\n    align-items: start;\n}\n\n.number {\n    padding: 0.5em;\n    width: 4rem;\n    height: 4rem;\n    display: grid;\n    place-items: center;\n    color: #f9fbfd;\n    transition: all 500ms 100ms ease;\n    border-radius: 50%;\n}\n\n.number.pop {\n    color: #3e6ccb;\n    font-weight: bold;\n    transform: scale(1.3);\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.strip {\n    transition: transform 500ms ease-in-out;\n    border-radius: 8px;\n    background-color: #dfe6f6;\n    box-shadow: -10px -10px 20px -5px #f9fbfd, 10px 10px 20px #a9bee8;\n}\n\n.clock {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 5rem;\n    height: 4rem;\n    position: relative;\n    padding: 0 4rem;\n}\n"},{"title":"标签","date":"2020-09-17T10:15:39.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2020-09-17 18:15:39\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-09-17T14:13:50.014Z","path":"tags/index.html","layout":"page","_id":"cl8h3b0g0000kc8pv27fact13","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":0,"excerpt":"","more":""},{"_content":"const strips = [...document.querySelectorAll(\".strip\")];\nconst numberSize = \"4\"; // in rem\n\nvar lastTime = new Array(-1, -1, -1)\n\n// highlight number i on strip s for 1 second\nfunction highlight(strip, d) {\n    strips[strip]\n        .querySelector(`.number:nth-of-type(${d + 1})`)\n        .classList.add(\"pop\");\n\n    setTimeout(() => {\n        strips[strip]\n            .querySelector(`.number:nth-of-type(${d + 1})`)\n            .classList.remove(\"pop\");\n    }, 950); // causes ticking\n}\n\nfunction stripSlider(strip, id, number) {\n    let d1 = Math.floor(number / 10);\n    let d2 = number % 10;\n\n    if (lastTime[id] == -1 || lastTime[id] != number) {\n        strips[strip].style.transform = `translateY(${d1 * -numberSize}rem)`;\n        strips[strip + 1].style.transform = `translateY(${d2 * -numberSize}rem)`;\n\n        lastTime[id] = number;\n    }\n\n    highlight(strip, d1);\n    highlight(strip + 1, d2);\n}\n\nfunction updateClock() {\n    // get new time\n    const time = new Date();\n\n    // get h,m,s\n    const hours = time.getHours();\n    const mins = time.getMinutes();\n    const secs = time.getSeconds();\n\n    // slide strips\n    stripSlider(0, 0, hours);\n    stripSlider(2, 1, mins);\n    stripSlider(4, 2, secs);\n}\n\n// set Timer for clock-update\nsetInterval(updateClock, 1000);\n\nupdateClock();\n","source":"pjt-love-lyt/js/sliderClock.js","raw":"const strips = [...document.querySelectorAll(\".strip\")];\nconst numberSize = \"4\"; // in rem\n\nvar lastTime = new Array(-1, -1, -1)\n\n// highlight number i on strip s for 1 second\nfunction highlight(strip, d) {\n    strips[strip]\n        .querySelector(`.number:nth-of-type(${d + 1})`)\n        .classList.add(\"pop\");\n\n    setTimeout(() => {\n        strips[strip]\n            .querySelector(`.number:nth-of-type(${d + 1})`)\n            .classList.remove(\"pop\");\n    }, 950); // causes ticking\n}\n\nfunction stripSlider(strip, id, number) {\n    let d1 = Math.floor(number / 10);\n    let d2 = number % 10;\n\n    if (lastTime[id] == -1 || lastTime[id] != number) {\n        strips[strip].style.transform = `translateY(${d1 * -numberSize}rem)`;\n        strips[strip + 1].style.transform = `translateY(${d2 * -numberSize}rem)`;\n\n        lastTime[id] = number;\n    }\n\n    highlight(strip, d1);\n    highlight(strip + 1, d2);\n}\n\nfunction updateClock() {\n    // get new time\n    const time = new Date();\n\n    // get h,m,s\n    const hours = time.getHours();\n    const mins = time.getMinutes();\n    const secs = time.getSeconds();\n\n    // slide strips\n    stripSlider(0, 0, hours);\n    stripSlider(2, 1, mins);\n    stripSlider(4, 2, secs);\n}\n\n// set Timer for clock-update\nsetInterval(updateClock, 1000);\n\nupdateClock();\n","date":"2021-01-02T13:56:44.784Z","updated":"2021-01-02T13:56:44.601Z","path":"pjt-love-lyt/js/sliderClock.js","layout":"false","title":"","comments":1,"_id":"cl8h3b0g1000nc8pvcin50jp6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>const strips = [...document.querySelectorAll(\".strip\")];\nconst numberSize = \"4\"; // in rem\n\nvar lastTime = new Array(-1, -1, -1)\n\n// highlight number i on strip s for 1 second\nfunction highlight(strip, d) {\n    strips[strip]\n        .querySelector(`.number:nth-of-type(${d + 1})`)\n        .classList.add(\"pop\");\n\n    setTimeout(() => {\n        strips[strip]\n            .querySelector(`.number:nth-of-type(${d + 1})`)\n            .classList.remove(\"pop\");\n    }, 950); // causes ticking\n}\n\nfunction stripSlider(strip, id, number) {\n    let d1 = Math.floor(number / 10);\n    let d2 = number % 10;\n\n    if (lastTime[id] == -1 || lastTime[id] != number) {\n        strips[strip].style.transform = `translateY(${d1 * -numberSize}rem)`;\n        strips[strip + 1].style.transform = `translateY(${d2 * -numberSize}rem)`;\n\n        lastTime[id] = number;\n    }\n\n    highlight(strip, d1);\n    highlight(strip + 1, d2);\n}\n\nfunction updateClock() {\n    // get new time\n    const time = new Date();\n\n    // get h,m,s\n    const hours = time.getHours();\n    const mins = time.getMinutes();\n    const secs = time.getSeconds();\n\n    // slide strips\n    stripSlider(0, 0, hours);\n    stripSlider(2, 1, mins);\n    stripSlider(4, 2, secs);\n}\n\n// set Timer for clock-update\nsetInterval(updateClock, 1000);\n\nupdateClock();\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":992,"excerpt":"","more":"const strips = [...document.querySelectorAll(\".strip\")];\nconst numberSize = \"4\"; // in rem\n\nvar lastTime = new Array(-1, -1, -1)\n\n// highlight number i on strip s for 1 second\nfunction highlight(strip, d) {\n    strips[strip]\n        .querySelector(`.number:nth-of-type(${d + 1})`)\n        .classList.add(\"pop\");\n\n    setTimeout(() => {\n        strips[strip]\n            .querySelector(`.number:nth-of-type(${d + 1})`)\n            .classList.remove(\"pop\");\n    }, 950); // causes ticking\n}\n\nfunction stripSlider(strip, id, number) {\n    let d1 = Math.floor(number / 10);\n    let d2 = number % 10;\n\n    if (lastTime[id] == -1 || lastTime[id] != number) {\n        strips[strip].style.transform = `translateY(${d1 * -numberSize}rem)`;\n        strips[strip + 1].style.transform = `translateY(${d2 * -numberSize}rem)`;\n\n        lastTime[id] = number;\n    }\n\n    highlight(strip, d1);\n    highlight(strip + 1, d2);\n}\n\nfunction updateClock() {\n    // get new time\n    const time = new Date();\n\n    // get h,m,s\n    const hours = time.getHours();\n    const mins = time.getMinutes();\n    const secs = time.getSeconds();\n\n    // slide strips\n    stripSlider(0, 0, hours);\n    stripSlider(2, 1, mins);\n    stripSlider(4, 2, secs);\n}\n\n// set Timer for clock-update\nsetInterval(updateClock, 1000);\n\nupdateClock();\n"}],"Post":[{"title":"基于51单片机的时钟","date":"2020-11-22T06:02:35.000Z","_content":"{% note info %}\n参考视频：[哈工程郭天祥老师51单片机](https://www.bilibili.com/video/BV1DW411a7mz)\n{% endnote %}\n# 硬件\n* AT89C52芯片\n* 7SEG-MPX8-CA-BLUE八位共阳数码管\n* 74HC573锁存器\n<!-- more -->\n\n# 电路图\n![电路图](电路图.jpg)\n\n# 代码\n```c++\n#include<reg52.h>\n#define uint unsigned int\nint tt=0,ts=0;\nint num=1;\nint A[10]={192,249,164,176,153,146,130,248,128,144};\nint C[8]={1,7,-1,5,6,-1,0,0};\nvoid main(){\t\n\tint i=0;\n\tTMOD=0x01;//timer0 work motion 1\n\tTH0=(65536-50000)/256;\n\tTL0=(65536-50000)%256;\n\tEA=1;//all interrupt\n\tET0=1; //open timer0 interrupt\n\tTR0=1; //start timer0\n\tP2=1;\n\tP1=A[1];\n\twhile(1){\n\t\tif(tt==2){\n\t\t\ttt=0;\n\t\t\tP2=P2<<1;\t\t\t\n\t\t\tif(P2==0) P2=1;\n\t\t\tif(ts==500){\n\t\t\t\tts=0;\n\t\t\t\tC[7]=(C[7]+1)%10;\n\t\t\t\tif(C[7]==0){\n\t\t\t\t\tC[6]=(C[6]+1)%6;\n\t\t\t\t\tif(C[6]==0){\n\t\t\t\t\t\tC[4]=(C[4]+1)%10;\n\t\t\t\t\t\tif(C[4]==0){\n\t\t\t\t\t\t\tC[3]=(C[3]+1)%6;\n\t\t\t\t\t\t\tif(C[3]==0){\n\t\t\t\t\t\t\t\tC[1]=(C[1]+1)%10;\n\t\t\t\t\t\t\t\tif(C[1]==0){\n\t\t\t\t\t\t\t\t\tC[0]=(C[0]+1)%6;\n\t\t\t\t\t\t\t\t\tif(C[1]==0){\n\t\t\t\t\t\t\t\t\t\tC[0]++;\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(C[0]==2 && C[1]==4){\n\t\t\t\t\t\t\t\t\tC[0]=0;\n\t\t\t\t\t\t\t\t\tC[1]=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnum++;\n\t\t\tif(num==9) num=1;\n\t\t\tif(C[num-1]==-1){\n\t\t\t\tP1=191;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tP1=A[C[num-1]];\n\t\t\t}\n\t\t}\n\t}\n}\n//计时器中断\nvoid enter0() interrupt 1\n{\n\tTH0=(65536-1650)/256;\n\tTL0=(65536-1650)%256;\n\ttt++;\n\tts++;\n}\n\n```\n\n# 实现效果\n![时钟效果](效果.jpg)\n\n","source":"_posts/51-1.md","raw":"---\ntitle: 基于51单片机的时钟\ndate: 2020-11-22 14:02:35\ntags:\n- 51单片机\n- 开源硬件\ncategories:\n- 硬件\n- 51单片机\n---\n{% note info %}\n参考视频：[哈工程郭天祥老师51单片机](https://www.bilibili.com/video/BV1DW411a7mz)\n{% endnote %}\n# 硬件\n* AT89C52芯片\n* 7SEG-MPX8-CA-BLUE八位共阳数码管\n* 74HC573锁存器\n<!-- more -->\n\n# 电路图\n![电路图](电路图.jpg)\n\n# 代码\n```c++\n#include<reg52.h>\n#define uint unsigned int\nint tt=0,ts=0;\nint num=1;\nint A[10]={192,249,164,176,153,146,130,248,128,144};\nint C[8]={1,7,-1,5,6,-1,0,0};\nvoid main(){\t\n\tint i=0;\n\tTMOD=0x01;//timer0 work motion 1\n\tTH0=(65536-50000)/256;\n\tTL0=(65536-50000)%256;\n\tEA=1;//all interrupt\n\tET0=1; //open timer0 interrupt\n\tTR0=1; //start timer0\n\tP2=1;\n\tP1=A[1];\n\twhile(1){\n\t\tif(tt==2){\n\t\t\ttt=0;\n\t\t\tP2=P2<<1;\t\t\t\n\t\t\tif(P2==0) P2=1;\n\t\t\tif(ts==500){\n\t\t\t\tts=0;\n\t\t\t\tC[7]=(C[7]+1)%10;\n\t\t\t\tif(C[7]==0){\n\t\t\t\t\tC[6]=(C[6]+1)%6;\n\t\t\t\t\tif(C[6]==0){\n\t\t\t\t\t\tC[4]=(C[4]+1)%10;\n\t\t\t\t\t\tif(C[4]==0){\n\t\t\t\t\t\t\tC[3]=(C[3]+1)%6;\n\t\t\t\t\t\t\tif(C[3]==0){\n\t\t\t\t\t\t\t\tC[1]=(C[1]+1)%10;\n\t\t\t\t\t\t\t\tif(C[1]==0){\n\t\t\t\t\t\t\t\t\tC[0]=(C[0]+1)%6;\n\t\t\t\t\t\t\t\t\tif(C[1]==0){\n\t\t\t\t\t\t\t\t\t\tC[0]++;\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(C[0]==2 && C[1]==4){\n\t\t\t\t\t\t\t\t\tC[0]=0;\n\t\t\t\t\t\t\t\t\tC[1]=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnum++;\n\t\t\tif(num==9) num=1;\n\t\t\tif(C[num-1]==-1){\n\t\t\t\tP1=191;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tP1=A[C[num-1]];\n\t\t\t}\n\t\t}\n\t}\n}\n//计时器中断\nvoid enter0() interrupt 1\n{\n\tTH0=(65536-1650)/256;\n\tTL0=(65536-1650)%256;\n\ttt++;\n\tts++;\n}\n\n```\n\n# 实现效果\n![时钟效果](效果.jpg)\n\n","slug":"51-1","published":1,"updated":"2020-12-02T08:11:03.172Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0fe0001c8pv6ky0b3ff","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>参考视频：<a href=\"https://www.bilibili.com/video/BV1DW411a7mz\">哈工程郭天祥老师51单片机</a></p>\n          </div>\n<h1 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h1><ul>\n<li>AT89C52芯片</li>\n<li>7SEG-MPX8-CA-BLUE八位共阳数码管</li>\n<li>74HC573锁存器<a id=\"more\"></a>\n</li>\n</ul>\n<h1 id=\"电路图\"><a href=\"#电路图\" class=\"headerlink\" title=\"电路图\"></a>电路图</h1><p><img src=\"/posts/51-1/电路图.jpg\" alt=\"电路图\"></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;reg52.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> uint unsigned int</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> tt=<span class=\"number\">0</span>,ts=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> A[<span class=\"number\">10</span>]=&#123;<span class=\"number\">192</span>,<span class=\"number\">249</span>,<span class=\"number\">164</span>,<span class=\"number\">176</span>,<span class=\"number\">153</span>,<span class=\"number\">146</span>,<span class=\"number\">130</span>,<span class=\"number\">248</span>,<span class=\"number\">128</span>,<span class=\"number\">144</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> C[<span class=\"number\">8</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>,<span class=\"number\">-1</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;\t</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tTMOD=<span class=\"number\">0x01</span>;<span class=\"comment\">//timer0 work motion 1</span></span><br><span class=\"line\">\tTH0=(<span class=\"number\">65536</span><span class=\"number\">-50000</span>)/<span class=\"number\">256</span>;</span><br><span class=\"line\">\tTL0=(<span class=\"number\">65536</span><span class=\"number\">-50000</span>)%<span class=\"number\">256</span>;</span><br><span class=\"line\">\tEA=<span class=\"number\">1</span>;<span class=\"comment\">//all interrupt</span></span><br><span class=\"line\">\tET0=<span class=\"number\">1</span>; <span class=\"comment\">//open timer0 interrupt</span></span><br><span class=\"line\">\tTR0=<span class=\"number\">1</span>; <span class=\"comment\">//start timer0</span></span><br><span class=\"line\">\tP2=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tP1=A[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tt==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\ttt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\tP2=P2&lt;&lt;<span class=\"number\">1</span>;\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(P2==<span class=\"number\">0</span>) P2=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ts==<span class=\"number\">500</span>)&#123;</span><br><span class=\"line\">\t\t\t\tts=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\tC[<span class=\"number\">7</span>]=(C[<span class=\"number\">7</span>]+<span class=\"number\">1</span>)%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">7</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tC[<span class=\"number\">6</span>]=(C[<span class=\"number\">6</span>]+<span class=\"number\">1</span>)%<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">6</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tC[<span class=\"number\">4</span>]=(C[<span class=\"number\">4</span>]+<span class=\"number\">1</span>)%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">4</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tC[<span class=\"number\">3</span>]=(C[<span class=\"number\">3</span>]+<span class=\"number\">1</span>)%<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">3</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tC[<span class=\"number\">1</span>]=(C[<span class=\"number\">1</span>]+<span class=\"number\">1</span>)%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">1</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tC[<span class=\"number\">0</span>]=(C[<span class=\"number\">0</span>]+<span class=\"number\">1</span>)%<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">1</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tC[<span class=\"number\">0</span>]++;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t&#125;\t\t\t\t</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">0</span>]==<span class=\"number\">2</span> &amp;&amp; C[<span class=\"number\">1</span>]==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tC[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tC[<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tnum++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(num==<span class=\"number\">9</span>) num=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(C[num<span class=\"number\">-1</span>]==<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\t\tP1=<span class=\"number\">191</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tP1=A[C[num<span class=\"number\">-1</span>]];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//计时器中断</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">enter0</span><span class=\"params\">()</span> interrupt 1</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tTH0=(<span class=\"number\">65536</span><span class=\"number\">-1650</span>)/<span class=\"number\">256</span>;</span><br><span class=\"line\">\tTL0=(<span class=\"number\">65536</span><span class=\"number\">-1650</span>)%<span class=\"number\">256</span>;</span><br><span class=\"line\">\ttt++;</span><br><span class=\"line\">\tts++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h1><p><img src=\"/posts/51-1/效果.jpg\" alt=\"时钟效果\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1125,"excerpt":"<div class=\"note info\">\n            <p>参考视频：<a href=\"https://www.bilibili.com/video/BV1DW411a7mz\">哈工程郭天祥老师51单片机</a></p>\n          </div>\n<h1 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h1><ul>\n<li>AT89C52芯片</li>\n<li>7SEG-MPX8-CA-BLUE八位共阳数码管</li>\n<li>74HC573锁存器</li></ul>","more":"\n\n<h1 id=\"电路图\"><a href=\"#电路图\" class=\"headerlink\" title=\"电路图\"></a>电路图</h1><p><img src=\"/posts/51-1/电路图.jpg\" alt=\"电路图\"></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;reg52.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> uint unsigned int</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> tt=<span class=\"number\">0</span>,ts=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> A[<span class=\"number\">10</span>]=&#123;<span class=\"number\">192</span>,<span class=\"number\">249</span>,<span class=\"number\">164</span>,<span class=\"number\">176</span>,<span class=\"number\">153</span>,<span class=\"number\">146</span>,<span class=\"number\">130</span>,<span class=\"number\">248</span>,<span class=\"number\">128</span>,<span class=\"number\">144</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> C[<span class=\"number\">8</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>,<span class=\"number\">-1</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;\t</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tTMOD=<span class=\"number\">0x01</span>;<span class=\"comment\">//timer0 work motion 1</span></span><br><span class=\"line\">\tTH0=(<span class=\"number\">65536</span><span class=\"number\">-50000</span>)/<span class=\"number\">256</span>;</span><br><span class=\"line\">\tTL0=(<span class=\"number\">65536</span><span class=\"number\">-50000</span>)%<span class=\"number\">256</span>;</span><br><span class=\"line\">\tEA=<span class=\"number\">1</span>;<span class=\"comment\">//all interrupt</span></span><br><span class=\"line\">\tET0=<span class=\"number\">1</span>; <span class=\"comment\">//open timer0 interrupt</span></span><br><span class=\"line\">\tTR0=<span class=\"number\">1</span>; <span class=\"comment\">//start timer0</span></span><br><span class=\"line\">\tP2=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tP1=A[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tt==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\ttt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\tP2=P2&lt;&lt;<span class=\"number\">1</span>;\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(P2==<span class=\"number\">0</span>) P2=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ts==<span class=\"number\">500</span>)&#123;</span><br><span class=\"line\">\t\t\t\tts=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\tC[<span class=\"number\">7</span>]=(C[<span class=\"number\">7</span>]+<span class=\"number\">1</span>)%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">7</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tC[<span class=\"number\">6</span>]=(C[<span class=\"number\">6</span>]+<span class=\"number\">1</span>)%<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">6</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tC[<span class=\"number\">4</span>]=(C[<span class=\"number\">4</span>]+<span class=\"number\">1</span>)%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">4</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tC[<span class=\"number\">3</span>]=(C[<span class=\"number\">3</span>]+<span class=\"number\">1</span>)%<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">3</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tC[<span class=\"number\">1</span>]=(C[<span class=\"number\">1</span>]+<span class=\"number\">1</span>)%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">1</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tC[<span class=\"number\">0</span>]=(C[<span class=\"number\">0</span>]+<span class=\"number\">1</span>)%<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">1</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tC[<span class=\"number\">0</span>]++;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t&#125;\t\t\t\t</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span>(C[<span class=\"number\">0</span>]==<span class=\"number\">2</span> &amp;&amp; C[<span class=\"number\">1</span>]==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tC[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tC[<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tnum++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(num==<span class=\"number\">9</span>) num=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(C[num<span class=\"number\">-1</span>]==<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\t\tP1=<span class=\"number\">191</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tP1=A[C[num<span class=\"number\">-1</span>]];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//计时器中断</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">enter0</span><span class=\"params\">()</span> interrupt 1</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tTH0=(<span class=\"number\">65536</span><span class=\"number\">-1650</span>)/<span class=\"number\">256</span>;</span><br><span class=\"line\">\tTL0=(<span class=\"number\">65536</span><span class=\"number\">-1650</span>)%<span class=\"number\">256</span>;</span><br><span class=\"line\">\ttt++;</span><br><span class=\"line\">\tts++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"实现效果\"><a href=\"#实现效果\" class=\"headerlink\" title=\"实现效果\"></a>实现效果</h1><p><img src=\"/posts/51-1/效果.jpg\" alt=\"时钟效果\"></p>"},{"title":"语音合成模型Fastspeech2技术报告","copyright":false,"date":"2022-04-01T07:12:36.000Z","_content":"# 语音合成模型Fastspeech2技术报告\n{% note info %}\n论文：[FastSpeech 2: Fast and High-Quality End-to-End Text to Speech](https://arxiv.org/abs/2006.04558v1)\n开源项目：[Fastspeech2 Github开源项目](https://github.com/ming024/FastSpeech2)\n合成demo：[FastSpeech 2 语音合成演示](http://www.panjiangtao.cn/fastspeech2/)\n{% endnote %}\n<!-- more -->\n## 服务器部署演示\n<video src=\"http://file.panjiangtao.cn/fastspeech2_server.mp4\" type=\"video/mp4\"  poster=\"http://pic.panjiangtao.cn/img/image-20220408160721138.png\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n\n## 1 语音质量评估\n### 1.1 主观评价\n\n　　主观评价是通过人类对语音进行打分，比如平均意见得分（Mean Opinion Score，MOS）、众包平均意见得分（CrowdMOS，CMOS）和ABX 测试。主观评价中的MOS 评测是一种较为宽泛的说法，由于给出评测分数的主体是人类，因此可以灵活测试语音的不同方面。比如在语音合成领域，主要有自然度MOS（MOS of Naturalness）和相似度MOS（MOS of Similarity）。\n　　但是人类给出的评分结果受到的干扰因素较多，谷歌对合成语音的主观评估方法进行了比较，在评估较长语音中的单个句子时，音频样本的呈现形式会显著影响参与人员给出的结果。比如仅提供单个句子而不提供上下文，与相同句子给出语境相比，被测人员给出的评分差异显著。国际电信联盟（International Telecommunication Union，ITU）将MOS 评测规范化为ITU-T P.800，其中绝对等级评分（Absolute Category Rating，ACR）应用最为广泛，ACR 的详细评估标准如下表所示。\n\n![ACR评分表](http://pic.panjiangtao.cn/img/image-20220329115941800.png)\n\n　　在使用ACR 方法对语音质量进行评价时，参与评测的人员（简称被试）对语音整体质量进行打分，分值范围为1 5 分，分数越大表示语音质量越好。MOS 大于4 时，可以认为该音质受到大部分被试的认可，音质较好；若MOS 低于3，则该语音有比较大的缺陷，大部分被试并不满意该音质。\n\n#### 缺点：\n\n　　MOS是一种主观量度，它的优点是显而易见的，但它的缺点也很多。首先，为了保证MOS的可信度足够高，一般来说需要雇佣大量的评价者进行评价，这就导致成本很高；另外，MOS的大小依赖于评价者，有的评价者很苛刻，那么她给的分数就会偏低，而有的评价者却是相反的。除此之外，MOS还会受到听语音时的环境，评价者的状态等多种因素的影响。\n\n　　下图展示了一次评价中评价者给出的MOS分数的均值和标准差的分布，我们可以看到，标准差最大达到了2，这就说明评价者在某些语音的质量上有很大的分歧。\n\n<img src=\"http://pic.panjiangtao.cn/img/v2-909d9159b4b4a7c9c43ce8dd23c23d1d_720w.jpg\" alt=\"MOS分数均值、标准差\" style=\"zoom: 67%;\" />\n\n### 1.2 客观评价\n\n#### 1.2.1 MOSNet（开源）\n\n　　下图为MOSNet的网络结构，就是LSTM、CNN以及它们的组合。注意这里模型输出两种MOS分数，一是frame-level的分数，另一个是utterance-level的分数。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329120657195.png\" alt=\"MOSNet结构图\" style=\"zoom:67%;\" />\n\n　　损失函数为：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329120853312.png\" alt=\"image-20220329120853312\" style=\"zoom:50%;\" />\n\n　　上式第一项是utterance-level的MSE，第二项是frame-level的MSE。\n\n##### 问题：\n\n　　首先不同工作所做的MOS评测所得到的数据是很难合并在一起的，因为不同MOS评测的分数分布都是不同的。所以像VCC 2018这样的大量且统一评价的情况是比较少的，因此简而言之，数据量还是不足。\n\n　　另外，如何增加模型的泛化性也是一个重要的问题，举例来说，我们在VCC 2018上训练的模型是否能够预测其它的MOS评测，比如VCC 2019的分数呢？实际上这被证明是很难的。\n\n#### 1.2.2 SESQA（未开源）\n\n　　下图为SESQA模型结构，实际上是一个multi-task模型。模型接受一个语音的输入x，然后利用神经网络生成x的隐表示z，之后通过计算各种loss来学习到好的数据表示。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329121351363.png\" alt=\"SESQA模型结构\" style=\"zoom:50%;\" />\n\n　　SESQA中包含8种loss，但是在ablation experiment中很多loss被证明是没什么用的，因此这里我将介绍最重要的几种loss，对没有介绍到的loss感兴趣的读者可以参考原论文。\n\n　　首先是MOS loss，这个loss是针对有标注的数据设计的：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329121709812.png\" alt=\"MOS loss\" style=\"zoom: 67%;\" />\n\n\n\n　　然后是pairwise ranking loss：\n\n<img src=\"http://pic.panjiangtao.cn/img/v2-ba26d4f46e9e8e542a381f77f0bc0d33_720w.png\" alt=\"pairwise ranking loss\" style=\"zoom: 67%;\" />\n\n\n\n　　这个loss中$s_i$代表原语音$x_i$的分数，而$s_i$是在原语音$x_i$中加入一些噪声之后的语音$x_i$的分数，这样从直觉上来说一定有$s_i>s_j$，这个loss会对不符合这个限制的输出进行惩罚，$\\alpha$是margin参数。\n\n　　最后是score consistency loss：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329121732291.png\" alt=\"score consistency loss\" style=\"zoom:50%;\" />\n\n这个loss中，$s_k$和$s_l$是两个类似的语音$x_k$和$x_l$的分数，因此有$s_k\\approx s_l$；相反$s_i$和$s_j$是品质明显差别的两个语音$x_i$和$x_j$的分数，因此有$|s_i-s_j|>\\beta$。loss的中间一项拓展了这两个关系，假设语音分别是语音$x_{ik}$和$x_{il}$的劣化版，且$x_{ik}$和$x_{il}$的品质类似，那么有：$s_{ik}-s_{jk}=s_{il}-s_{jl}$\n\n\n\n## 2 语音信号特征\n\n### 2.1 短时能量\n\n　　短时能量体现的是信号在不同时刻的强弱程度。设第n 帧语音信号的短时能量用𝐸𝑛 表示，则其计算公式为：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329161118385.png\" alt=\"短时能量公式\" style=\"zoom: 67%;\" />\n\n　　上式中，𝑀 为帧长，$𝑥_𝑛(𝑚)$为该帧中的样本点。\n\n### 2.2 基频和基音周期\n\n　　基音周期反映了声门相邻两次开闭之间的时间间隔，基频（fundamental frequency，F0）则是基音周期的倒数，对应着声带振动的频率，代表声音的音高，声带振动越快，基频越高。它是语音激励源的一个重要特征，比如可以通过基频区分性别。一般来说，成年男性基频在100-250Hz 左右，成年女性基频在150-350Hz 左右，女声的音高一般比男声稍高。\n\n　　人类可感知声音的频率大致在20-20000Hz 之间，人类对于基频的感知遵循对数律，也就是说，人们会感觉100Hz 到200Hz 的差距，与200Hz 到400Hz 的差距相同。因此，音高常常用基频的对数来表示。在音乐上，把相差一倍的两个基频的差距称为一个八度（octave）；把一个八度12 等分，每一份称为一个半音（semitone）；把一个半音再100 等分，每一份称为一个音分（cent）。\n\n　　基频是语音的重要特征，在包括语音合成的语音处理中有着广泛的应用，比如语音转换（Voice Conversion，VC）和语音合成中基频是一个强特征。基频的提取可以分为时域法和频域法。时域法以波形为输入，基本原理是寻找波形的最小正周期；频域法则会先对信号进行傅里叶变换，得到频谱，频谱在基频的整倍数处有尖峰，频域法的基本原理就是求出这些尖峰频率的最大公约数。但是考虑到基频并非每一帧都有，因此在提取基频前后，都需要判断有无基频，称之为清浊音判断（Unvoiced/Voiced Decision，U/V Decision）。语音的基频往往随着时间变化，在提取基频之前往往要进行分帧，逐帧提取的基频常常含有错误，其中常见的错误就是倍频错误和半频错误，也就是提取出来的基频是真实基频的两倍或者一半，因此基频提取后要进行平滑操作。常见的基频提取算法有基于信号处理时域法的 YIN1，基于信号处理频域法的 SWIPE2，基于机器学习时域法的 CREPE3和基于机器学习频域法的SPICE4。常用的基频提取工具有pyWORLD，Parselmouth，CREPE，YIN等。参见基频提取算法综述。\n\n### 2.3 音高\n\n　　音高（pitch）是由声音的基频决定的，音高和基频常常混用。可以这样认为，音高（pitch）是稀疏离散化的基频（F0）。由规律振动产生的声音一般都会有基频，比如语音中的元音和浊辅音；也有些声音没有基频，比如人类通过口腔挤压气流的清辅音。在汉语中，元音有a/e/i/o/u，浊辅音有y/w/v，其余音素比如b/p/q/x 等均为清辅音，在发音时，可以通过触摸喉咙感受和判断发音所属音素的种类。\n\n### 2.4 MFCC和语谱图\n\n　　对语音进行分析和处理时，部分信息在时域上难以分析，因此往往会提取频谱特征。在语音合成中，通常将频谱作为中间声学特征：首先将文本转换为频谱，再将频谱转换为波形；在语音识别中，则将频谱或者MFCC作为中间声学特征。语音通过预加重、分帧、加窗、傅里叶变换之后，取功率谱的幅度平方，进行梅尔滤波取对数之后，就得到了梅尔频谱（或称FilterBank/FBank），如果再进行离散余弦变换，就能够获得MFCC。语音通常是一个短时平稳信号，在进行傅里叶变换之前，一般要进行分帧，取音频的一个小片段进行短时傅里叶变换（STFT）。STFT 的结果是一个复数，包括幅度和相位信息，将该复数中的频率作为横轴，幅度作为纵轴，如图2.3所示，就组成了频谱图，将频谱图中的尖峰点连接起来，就形成了频谱包络。注意到，频谱图反映一个语音帧的频域情况，没有时间信息。因此，将每个帧对应的频谱图连接起来，以时间作为横轴，频率作为纵轴，颜色深浅表示幅度，如图2.4下面红图所示，就组成了语谱图。语谱图实际上是一个三维图，横轴时间，纵轴频率，颜色深浅表示幅度大小，一般来说，颜色越深，表示幅度值越大。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329161609642.png\" alt=\"图2.3: 频谱图\" style=\"zoom: 50%;\" />\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329161653885.png\" alt=\"图2.4: 波形和对应的语谱图\" style=\"zoom:67%;\" />\n\n\n\n## 3 数据预处理\n\n### 3.1 将中文转化为拼音\n\n　　首先准备好音频数据和对应的文字，如果文字是中文需要转化为拼音，我使用了pypinyin进行转化，每个中文汉字对应一个拼音，脚本如下，将中文字转为拼音：\n\n```python\nimport os\nimport sys\nimport numpy as np\nfrom pypinyin import pinyin, lazy_pinyin, Style\nimport re\nroot_dir = \"../train/\"\npattern = re.compile(r'(.*)\\.txt$')\nfor root, dir, files in os.walk(root_dir):\n\tfor filename in files:\n\t\t#print(filename)\n\t\toutput = pattern.match(filename)\n\t\tif output is not None:\n\t\t\tprint(root, filename)\n\t\t\ttext_file = open(root+\"/\"+filename)\n\t\t\tline = text_file.read().strip()\n\t\t\tline = line.replace(\"，\", \"\")\n\t\t\tpinyin =  lazy_pinyin(line, style=Style.TONE3, neutral_tone_with_five=True)\n\t\t\tpinyinline = ' '.join(pinyin)\n\t\t\tprint(line)\n\t\t\ttarget_text_file = open(root+\"/\"+output.group(1)+\".lab\", \"w\")\n\t\t\ttarget_text_file.write(pinyinline)\n\t\t\ttarget_text_file.close()\n```\n\n　　保证音频文件的名字和脚本的文件名仅仅后缀不同：\n\n　　例如：T0055G0002S0001.wav 和 T0055G0002S0001.lab\n\n　　其中lab文件内容：yi3 hou4 ni3 shi4 nan2 hai2 zi5 原来的中文为：“以后你是男孩子”\n\n### 3.2 MFA\n\n　　[Montreal Forced Aligner](https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner/) (MFA)，一种forced alignment工具。如果你熟悉有关工具的话，你可能会知道Prosodylab-Aligner这个forced alignment工具，而MFA正是它的升级版，拥有更好的性能。另外MFA使用了Kaldi而不是HTK，因此可以作为单独的package来使用。作者在英语数据上测试了MFA在单词和音素alignment上的表现，并和两个之前的工作进行了对比，实验结果显示MFA有更好的表现。\n\n　　Forced alignment （以下简称FA，不过请注意这个简称不常用）是一个在speech processing中常见的任务。给定一段语音和它的文本，FA需要找到每个单词或是音素对应的时间段。FA中我们一般假设文本和语音的alignment是对角线型的，也就是说如果在text中某个音素出现在另一个音素的后面，那么在语音中这个关系也是成立的，反之亦同。\n\n#### 3.2.1 MFA安装\n\n```sh\npip install montreal-forced-aligner\nmfa thirdparty download\npip install montreal-forced-aligner -U\n```\n\n#### 3.2.2 使用前准备\n\n- 语言对应的发音词典，对于我们常用的英文、中文，都有比较好的可用的词典。\n- 语音数据（`.wav`如果你没安装sox）\n- 文本数据，注意文本数据的文件名中除了扩展名之外其他的部分要和对应的语音数据一一对应。\n\n#### 3.2.3 使用\n\n```sh\nmfa model download acoustic english  #下载English acoustic model\nmfa align /path/to/dataset /path/to/lexicon.txt english /output/path  # 使用预训练模型来进行alignment：\n```\n\n　　经过MFA处理后，生成一个包含所有音频的对齐文件.TextGrid\n\n### 3.3 提取能量、音高、梅尔频谱和音素时长信息\n\n　　预处理代码中下面有 6个functions,作用如下述所示，把语音数据，对应的textgrid数据和.lab 文本数据进行整合，提取出需要的energy, pitch, mel spectrogram, duration等信息。\n\n```python\ndef __init__(self, config):\n\"\"\"加载configs中配置，按照预设路径读入数据\"\"\"\n \ndef build_from_path(self):\n\"\"\"\n主要程序，主要作用是：\n     1.加载从precess_utterance这个function里获得的信息\n     2.对信息进行normalize,\n     3.最后按照指定路径写入文件\n      （speaker.json, stats.json, train.txt, val.txt)\n\"\"\"\n \ndef process_utterance(self, speaker, basename):\n\"\"\"\n被build_from_path这个function调用\n主要作用是\n        1.通过get_alignment这个function获取textgrid files里的duration信息\n        2.计算出wav files里的pitch\n        3.通过stft（短时傅里叶变换）把声音文件转成mel频谱\n        4.计算出wav files里的energy\n        5.将获得的pitch, energy, mel，duration信息分别写入以.npy为后缀的文件\n\"\"\"\n \ndef get_alignment(self, tier):\n\"\"\"\n被process_utterance这个function调用\n主要作用是提取textgrid files里的phone,duration,start_time, end_time等信息\n\"\"\"\n \ndef remove_outlier(self, values):\ndef normalize(self, in_dir, mean, std):\n\"\"\"\n这两个function都是用来normalize data的\n\"\"\"\n```\n\n## 4 合成模型结构\n\n### 4.1 总体结构\n\n　　FastSpeech 2 的模型架构下图(a)所示，它沿用 FastSpeech 中提出的 Feed-Forward Transformer（FFT）架构，编解码器的输入首先进行位置编码，之后进入FFT 块。FFT 块主要包括多头注意力模块和位置前馈网络，位置前馈网络可以由若干层Conv1d、LayerNorm 和Dropout 组成。在音素编码器和梅尔频谱解码器中加入了一个可变信息适配器（Variance Adaptor），从而支持在 FastSpeech 2 和 2s 中引入更多语音中变化的信息，例如时长、音高、音量（频谱能量）等，来解决语音合成中的一对多映射问题（文本到语音合成中，一条文本可以对应到多条可变的语音，这些可变信息包括语音时长、音高、音量等。FastSpeech 通过知识蒸馏降低语音训练目标的变化性来缓解一对多映射问题，但也造成了训练目标的信息损失。FastSpeech 2 通过引入对应的可变信息作为解码器输入，使输入输出信息尽量匹配，来解决这个问题），最终得到的输出为梅尔频谱图，而后交给声码器生成音频。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329204107873.png\" alt=\"FastSpeech 2 和 2s 模型框架。图（b）中的 LR 表示 FastSpeech 中的序列长度适配操作，图（c）中的 LN 表示层归一化，可变信息预测器（variance predictor）包括时长、音高和能量预测器。\" style=\"zoom:67%;\" />\n\n### 4.2 FFT（feed-forward Transformer，前馈Transformer）\n\n采用了Attention机制和1D卷积，其中多头注意力结构如下图所示：\n\n<img src=\"http://pic.panjiangtao.cn/img/202111181632_987.png\" style=\"zoom:50%;\" />\n\n<img src=\"http://pic.panjiangtao.cn/img/202111181633_144.png\" style=\"zoom: 50%;\" />\n\n<img src=\"http://pic.panjiangtao.cn/img/202111181635_901.png\" style=\"zoom:50%;\" />\n\nAttention 机制实质上就是一个寻址过程，通过给定一个任务相关的查询 Query 向量 Q，通过计算与 Key 的注意力分布并附加在 Value 上，从而计算 Attention Value\n\n1. Q，K，V 三个矩阵都来自同一个输入，通过线性变换得到 Q，K，V 三个向量。\n\n2. 计算自注意力得分，计算每个单词的自注意力，和这个单词对句子中其他单词的评分，通过矩阵Q、K相乘计算\n\n3. 第二步计算的分数进行缩放，这里通过除以 根号dk ( 论文中 ![[公式]](http://pic.panjiangtao.cn/img/equation)，这可以让模型有更稳定的梯度，默认值是 64，也可以是其它值 )，将结果进行softmax 归一化。\n\n4. 最后乘以V\n\n5. 上面过程做 H 次，再把输出合并起来\n\n\n### 4.3 变量适配器（Variance Adaptor）\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220330192940582.png\" alt=\"Variance Adaptor\" style=\"zoom:50%;\" />\n\n　　在对时长、基频和能量单独建模时，所使用的网络结构实际是相似的，在论文中称这种语音属性建模网络为变量适配器（Variance Adaptor）。时长预测的输出也作为基频和能量预测的输入。最后，基频预测和能量预测的输出，以及依靠时长信息展开的编码器输入元素加起来，作为下游网络的输入。变量适配器主要是由2 层卷积和1 层线性映射层组成，每层卷积后加ReLU 激活、LayerNorm 和Dropout。\n\n#### 4.3.1 基本结构Variance Predictor\n\n　　对时长、基频和能量建模的基本结构为Variance Predictor，其代码如下所示：\n\n```python\nclass VariancePredictor(nn.Module):\n    \"\"\"Duration, Pitch and Energy Predictor\"\"\"\n    def __init__(self, model_config):\n        super(VariancePredictor, self).__init__()\n\n        self.input_size = model_config[\"transformer\"][\"encoder_hidden\"]\n        self.filter_size = model_config[\"variance_predictor\"][\"filter_size\"]\n        self.kernel = model_config[\"variance_predictor\"][\"kernel_size\"]\n        self.conv_output_size = model_config[\"variance_predictor\"][\"filter_size\"]\n        self.dropout = model_config[\"variance_predictor\"][\"dropout\"]\n\n        self.conv_layer = nn.Sequential(OrderedDict([\n                    (\"conv1d_1\",Conv(self.input_size,\n                            \t\tself.filter_size,\n                            \t\tkernel_size=self.kernel,\n                            \t\tpadding=(self.kernel - 1) // 2,),),\n                    (\"relu_1\", nn.ReLU()),\n                    (\"layer_norm_1\", nn.LayerNorm(self.filter_size)),\n                    (\"dropout_1\", nn.Dropout(self.dropout)),\n                    (\"conv1d_2\",Conv(self.filter_size,\n                            \t\tself.filter_size,\n                            \t\tkernel_size=self.kernel,\n                            \t\tpadding=1,),),\n                    (\"relu_2\", nn.ReLU()),\n                    (\"layer_norm_2\", nn.LayerNorm(self.filter_size)),\n                    (\"dropout_2\", nn.Dropout(self.dropout)),\n              ]))\n\n        self.linear_layer = nn.Linear(self.conv_output_size, 1)\n\n    def forward(self, encoder_output, mask):\n        out = self.conv_layer(encoder_output)\n        out = self.linear_layer(out)\n        out = out.squeeze(-1)\n\n        if mask is not None:\n            out = out.masked_fill(mask, 0.0)\n\n        return out\n```\n\n#### 4.3.2 Variance Adaptor实现\n\n　　利用该变量适配器对时长、基频和能量进行建模。\n\n```python\nclass VarianceAdaptor(nn.Module):\n    \"\"\"Variance Adaptor\"\"\"\n\n    def __init__(self, preprocess_config, model_config):\n        super(VarianceAdaptor, self).__init__()\n        self.duration_predictor = VariancePredictor(model_config)\n        self.length_regulator = LengthRegulator()\n        self.pitch_predictor = VariancePredictor(model_config)\n        self.energy_predictor = VariancePredictor(model_config)\n        \n        self.pitch_bins =nn.Parameter(torch.exp(torch.linspace(\n            np.log(pitch_min), np.log(pitch_max), n_bins - 1)),requires_grad=False,)\n        self.energy_bins = nn.Parameter(torch.exp(torch.linspace(\n            np.log(energy_min), np.log(energy_max), n_bins - 1)),requires_grad=False,)\n\t\tself.pitch_embedding = nn.Embedding(\n            n_bins, model_config[\"transformer\"][\"encoder_hidden\"])\n        self.energy_embedding = nn.Embedding(\n            n_bins, model_config[\"transformer\"][\"encoder_hidden\"])\n\n    def forward(self,x,src_mask,mel_mask=None,max_len=None,pitch_target=None,\n        energy_target=None,duration_target=None,p_control=1.0,e_control=1.0,d_control=1.0):\n\n        log_duration_prediction = self.duration_predictor(x, src_mask)\n\t\tif duration_target is not None:\n            x, mel_len = self.length_regulator(x, duration_target, max_len)\n            duration_rounded = duration_target\n        else:\n            duration_rounded = torch.clamp(\n                (torch.round(torch.exp(log_duration_prediction) - 1) * d_control),min=0)\n            x, mel_len = self.length_regulator(x, duration_rounded, max_len)\n            mel_mask = get_mask_from_lengths(mel_len)\n\n        pitch_prediction, pitch_embedding = self.get_pitch_embedding(\n            x, pitch_target, mel_mask, p_control)\n            x = x + pitch_embedding\n        energy_prediction, energy_embedding = self.get_energy_embedding(\n            x, energy_target, mel_mask, p_control\n            x = x + energy_embedding\n\n        return x,pitch_prediction,energy_prediction,log_duration_prediction,\n            duration_rounded,mel_len,mel_mask\n```\n\n## 5 声码器\n\n### 5.1 MelGan\n\n论文链接： [MelGAN: Generative Adversarial Networks for Conditional Waveform Synthesis](http://arxiv.org/abs/1910.06711)\n\n开源项目：[Multi-band MelGAN and Full band MelGAN](https://github.com/rishikksh20/melgan)\n\n演示demo：[MelGan声码器效果演示](http://www.panjiangtao.cn/melgan/)\n\n#### 优点\n\n- MelGAN是一种非自回归前馈卷积架构，是第一个由GAN去实现原始音频的生成，在没有额外的蒸馏和感知损失的引入下仍能产生高质量的语音合成模型。\n- MelGAN解码器可替代自回归模型，以生成原始音频。\n- MelGAN的速度明显快于其他Mel谱图转换到音频的方法，在保证音频质量没有明显下降的情况下比迄今为止最快的可用模型快10倍。\n\n模型包括两部分: Generator（生成器） 和 Discriminator（判别器）。\n\n#### 5.1.1 生成器\n\n　　输入为mel-spectrogram，输出为raw waveform. 从 mel-spectrogram到 audio的过程很显然是一个上采样的过程。\n\n　　这里的上采样是由一维反卷积(transpose1d)实现的，上采样的倍数如何确定呢？\n\n　　需要注意一下，上采样的倍数是由hop_size来决定的，为什么呢？\n\n　　需要明白一点，mel帧数 * 帧移 = 音频长度（采样点个数，可换算为音频时长，具体怎么做不用说了吧）\n\n　　因此，对于22050采样率， hopsize大小设置为256， 那么对应的mel-spectrogram需要上采样 256倍\n\n　　如果是16000采样率呢？ 使用帧长是50ms,帧移 12.5ms 那么hopsize就是200啦，所以上采样倍数就是200倍啦.\n\n　　搞清楚了这些，那么Generator Upsampling层中的上采样倍数也就好理解了，22050的采样倍数为 8 X 8 X 2 X 2 = 256\n\n##### 结构\n\n<img src=\"http://pic.panjiangtao.cn/img/20200310123249936.png\" alt=\"MelGAN生成器结构\" style=\"zoom: 50%;\" />\n\n其中残差块结构：\n\n<img src=\"http://pic.panjiangtao.cn/img/2020031012332078.png\" alt=\"MelGAN生成器残差快结构\" style=\"zoom: 33%;\" />\n\n　　经过一层Conv层后送到上采样网络块，上采样网络块一共有4个，依次为8x,8x,2x,2x，每个上采样网络块中嵌套残差块，每个残差块有三层，依次dilation为1,3,9，最后经过一层conv层得到音频输出，由于音频的channel表示为1，所以最后一层的channel设为1。\n\n##### 设计思路\n\n1. Mel频谱图的时间分辨率比原始音频低256倍，所以使用了堆叠的反卷积层进行unsample。\n\n2. 条件信息足够的情况下，在输入处增加噪声是不必要的。所以与传统GAN不同，并没有增加noise input\n\n3. 使用残差块解决梯度消散的问题，空洞卷积层的感受野随层数的增加而指数增加，能够有效地增加每个输出时间步长的感应野。\n\n4. 反卷积层的k-size和stride仔细选择决定的，可以减少artifacts的出现。\n\n5. 归一化选择Weight Norm，因为不会限制判别器的空间，也不会对激活进行归一化\n\n##### 源码\n\n```python\n#对一维卷积层进行Weight Norm\ndef WNConv1d(*args, **kwargs):\n    return weight_norm(nn.Conv1d(*args, **kwargs))\n#对一维反卷积层进行Weight Norm\ndef WNConvTranspose1d(*args, **kwargs):\n    return weight_norm(nn.ConvTranspose1d(*args, **kwargs))\n#残差块中一层的结构\nclass ResnetBlock(nn.Module):\n    def __init__(self, dim, dilation=1):\n        super().__init__()\n        #依次为两层卷积层\n        self.block = nn.Sequential(\n            nn.LeakyReLU(0.2),\n            nn.ReflectionPad1d(dilation),\n            WNConv1d(dim, dim, kernel_size=3, dilation=dilation),\n            nn.LeakyReLU(0.2),\n            WNConv1d(dim, dim, kernel_size=1),\n        )\n        self.shortcut = WNConv1d(dim, dim, kernel_size=1) \n\n    def forward(self, x):\n        return self.shortcut(x) + self.block(x) #残差连接\n#生成器\nclass Generator(nn.Module):\n    def __init__(self, input_size, ngf, n_residual_layers):\n        super().__init__()\n        ratios = [8, 8, 2, 2]\n        self.hop_length = np.prod(ratios)\n        mult = int(2 ** len(ratios))\n\t\t#第一层卷积\n        model = [\n            nn.ReflectionPad1d(3),\n            WNConv1d(input_size, mult * ngf, kernel_size=7, padding=0),\n        ]\n\n        # 上采样阶段，共4个，依次为8x,8x,2x,2x的UpSampling layer\n        for i, r in enumerate(ratios):\n            model += [\n                nn.LeakyReLU(0.2),\n                WNConvTranspose1d(\n                    mult * ngf,\n                    mult * ngf // 2,\n                    kernel_size=r * 2,\n                    stride=r,\n                    padding=r // 2 + r % 2,\n                    output_padding=r % 2,\n                ),\n            ]\n\t\t\t#加入残差块，每个残差块中有3层，dilation分别为1,3,9\n            for j in range(n_residual_layers):\n                model += [ResnetBlock(mult * ngf // 2, dilation=3 ** j)]\n\n            mult //= 2\n\t\t#最后一层卷积层\n        model += [\n            nn.LeakyReLU(0.2),\n            nn.ReflectionPad1d(3),\n            WNConv1d(ngf, 1, kernel_size=7, padding=0),\n            nn.Tanh(),\n        ]\n        self.model = nn.Sequential(*model)\n        self.apply(weights_init)\n\n    def forward(self, x):\n        return self.model(x)\n```\n\n#### 5.1.2 判别器\n\n　　论文提出了multi-scale的discriminator, 基于的假设是每个scale的discriminator可以学习到不同频率段的音频的特征。\n\n　　每个discriminator的网络结构是由前后各一层1维卷积 和 4层分组卷积构成的downsampling layer构成. discriminator输入是由ground truth的音频和gererator生成的fake音频两部分构成的。 输入维度为[B, T, 1]， 输出维度也是[B,T,1], 中间变换的只是通道数的变化， 最后一层的输出和倒数第二层卷积网络的输出被分别用来计算 featuremap 和 feature_score, 这两部分被用来计算 generator的*feature_matching_loss*(L1_loss) 和discriminator的*mse_loss*\n\n　　上面我们知道了Generator输入mel-spectrogram,生成音频audio, 这个音频可以表示为G （s）, s为mel-spectrogram. 判别器要判断生成器生成音频的真假，这里就涉及到Gan模型的原理啦，\n\n　　Generator输入mel-spectrogram生成音频(fake), Discriminator输入真(real)音频和假(fake)音频，学习一个二分类器（可以这么理解），这里使用的是mse损失来最小化real与1的差异，fake与0的差异。\n\n　　通过对抗学习，使得generator生成的音频达到判别器无法判断真假的效果(loss接近0.5)。\n\n##### 结构\n\n<img src=\"https://img-blog.csdnimg.cn/20200310123441481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTYyNzA0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"melgan判别器模型\" style=\"zoom:50%;\" />\n\n##### 损失函数：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220331174705235.png\" alt=\"melgan判别器损失函数\" style=\"zoom: 67%;\" />\n\nx表示音频，s表示mel谱图，z表示高斯噪声\n\n##### 源码\n\n```python\n#对一维卷积层进行Weight Norm\ndef WNConv1d(*args, **kwargs):\n    return weight_norm(nn.Conv1d(*args, **kwargs))\n#对一维反卷积层进行Weight Norm\ndef WNConvTranspose1d(*args, **kwargs):\n    return weight_norm(nn.ConvTranspose1d(*args, **kwargs))\n#Discriminator Block结构\nclass NLayerDiscriminator(nn.Module):\n    def __init__(self, ndf, n_layers, downsampling_factor):\n        super().__init__()\n        model = nn.ModuleDict()\n        #第一层卷积\n        model[\"layer_0\"] = nn.Sequential(\n            nn.ReflectionPad1d(7),\n            WNConv1d(1, ndf, kernel_size=15),\n            nn.LeakyReLU(0.2, True),\n        )\n        nf = ndf\n        stride = downsampling_factor\n        #4层4x Downsampling Layer\n        for n in range(1, n_layers + 1):\n            nf_prev = nf\n            nf = min(nf * stride, 1024)\n            model[\"layer_%d\" % n] = nn.Sequential(\n                WNConv1d(\n                    nf_prev,\n                    nf,\n                    kernel_size=stride * 10 + 1,\n                    stride=stride,\n                    padding=stride * 5,\n                    groups=nf_prev // 4,\n                ),\n                nn.LeakyReLU(0.2, True),\n            )\n\n        nf = min(nf * 2, 1024)\n        #第2层卷积层\n        model[\"layer_%d\" % (n_layers + 1)] = nn.Sequential(\n            WNConv1d(nf_prev, nf, kernel_size=5, stride=1, padding=2),\n            nn.LeakyReLU(0.2, True),\n        )\n        #第3层卷积层\n        model[\"layer_%d\" % (n_layers + 2)] = WNConv1d(\n            nf, 1, kernel_size=3, stride=1, padding=1\n        )\n\n        self.model = model\n    def forward(self, x):\n        results = [] #存放每层输出的feature map\n        for key, layer in self.model.items():\n            x = layer(x)\n            results.append(x)\n        return results\n#完整的判别器\nclass Discriminator(nn.Module):\n    def __init__(self, num_D, ndf, n_layers, downsampling_factor):\n        super().__init__()\n        self.model = nn.ModuleDict()\n        #3个Discriminator Block\n        for i in range(num_D):\n            self.model[f\"disc_{i}\"] = NLayerDiscriminator(\n                ndf, n_layers, downsampling_factor\n            )\n\t\t#downsample函数\n        self.downsample = nn.AvgPool1d(4, stride=2, padding=1, count_include_pad=False)\n        self.apply(weights_init)\n\n    def forward(self, x):\n        results = []\n        for key, disc in self.model.items():\n            results.append(disc(x)) #每次降频处理得到的结果依次存放到result\n            x = self.downsample(x) #对输入x进行降频处理\n        return results\n```\n\n","source":"_posts/Fastspeech2.md","raw":"---\ntitle: 语音合成模型Fastspeech2技术报告\ncopyright: false\ndate: 2022-04-01 15:12:36\ntags: TTS\ncategories:\n- TTS\n- Fastspeech2\n---\n# 语音合成模型Fastspeech2技术报告\n{% note info %}\n论文：[FastSpeech 2: Fast and High-Quality End-to-End Text to Speech](https://arxiv.org/abs/2006.04558v1)\n开源项目：[Fastspeech2 Github开源项目](https://github.com/ming024/FastSpeech2)\n合成demo：[FastSpeech 2 语音合成演示](http://www.panjiangtao.cn/fastspeech2/)\n{% endnote %}\n<!-- more -->\n## 服务器部署演示\n<video src=\"http://file.panjiangtao.cn/fastspeech2_server.mp4\" type=\"video/mp4\"  poster=\"http://pic.panjiangtao.cn/img/image-20220408160721138.png\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n\n## 1 语音质量评估\n### 1.1 主观评价\n\n　　主观评价是通过人类对语音进行打分，比如平均意见得分（Mean Opinion Score，MOS）、众包平均意见得分（CrowdMOS，CMOS）和ABX 测试。主观评价中的MOS 评测是一种较为宽泛的说法，由于给出评测分数的主体是人类，因此可以灵活测试语音的不同方面。比如在语音合成领域，主要有自然度MOS（MOS of Naturalness）和相似度MOS（MOS of Similarity）。\n　　但是人类给出的评分结果受到的干扰因素较多，谷歌对合成语音的主观评估方法进行了比较，在评估较长语音中的单个句子时，音频样本的呈现形式会显著影响参与人员给出的结果。比如仅提供单个句子而不提供上下文，与相同句子给出语境相比，被测人员给出的评分差异显著。国际电信联盟（International Telecommunication Union，ITU）将MOS 评测规范化为ITU-T P.800，其中绝对等级评分（Absolute Category Rating，ACR）应用最为广泛，ACR 的详细评估标准如下表所示。\n\n![ACR评分表](http://pic.panjiangtao.cn/img/image-20220329115941800.png)\n\n　　在使用ACR 方法对语音质量进行评价时，参与评测的人员（简称被试）对语音整体质量进行打分，分值范围为1 5 分，分数越大表示语音质量越好。MOS 大于4 时，可以认为该音质受到大部分被试的认可，音质较好；若MOS 低于3，则该语音有比较大的缺陷，大部分被试并不满意该音质。\n\n#### 缺点：\n\n　　MOS是一种主观量度，它的优点是显而易见的，但它的缺点也很多。首先，为了保证MOS的可信度足够高，一般来说需要雇佣大量的评价者进行评价，这就导致成本很高；另外，MOS的大小依赖于评价者，有的评价者很苛刻，那么她给的分数就会偏低，而有的评价者却是相反的。除此之外，MOS还会受到听语音时的环境，评价者的状态等多种因素的影响。\n\n　　下图展示了一次评价中评价者给出的MOS分数的均值和标准差的分布，我们可以看到，标准差最大达到了2，这就说明评价者在某些语音的质量上有很大的分歧。\n\n<img src=\"http://pic.panjiangtao.cn/img/v2-909d9159b4b4a7c9c43ce8dd23c23d1d_720w.jpg\" alt=\"MOS分数均值、标准差\" style=\"zoom: 67%;\" />\n\n### 1.2 客观评价\n\n#### 1.2.1 MOSNet（开源）\n\n　　下图为MOSNet的网络结构，就是LSTM、CNN以及它们的组合。注意这里模型输出两种MOS分数，一是frame-level的分数，另一个是utterance-level的分数。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329120657195.png\" alt=\"MOSNet结构图\" style=\"zoom:67%;\" />\n\n　　损失函数为：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329120853312.png\" alt=\"image-20220329120853312\" style=\"zoom:50%;\" />\n\n　　上式第一项是utterance-level的MSE，第二项是frame-level的MSE。\n\n##### 问题：\n\n　　首先不同工作所做的MOS评测所得到的数据是很难合并在一起的，因为不同MOS评测的分数分布都是不同的。所以像VCC 2018这样的大量且统一评价的情况是比较少的，因此简而言之，数据量还是不足。\n\n　　另外，如何增加模型的泛化性也是一个重要的问题，举例来说，我们在VCC 2018上训练的模型是否能够预测其它的MOS评测，比如VCC 2019的分数呢？实际上这被证明是很难的。\n\n#### 1.2.2 SESQA（未开源）\n\n　　下图为SESQA模型结构，实际上是一个multi-task模型。模型接受一个语音的输入x，然后利用神经网络生成x的隐表示z，之后通过计算各种loss来学习到好的数据表示。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329121351363.png\" alt=\"SESQA模型结构\" style=\"zoom:50%;\" />\n\n　　SESQA中包含8种loss，但是在ablation experiment中很多loss被证明是没什么用的，因此这里我将介绍最重要的几种loss，对没有介绍到的loss感兴趣的读者可以参考原论文。\n\n　　首先是MOS loss，这个loss是针对有标注的数据设计的：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329121709812.png\" alt=\"MOS loss\" style=\"zoom: 67%;\" />\n\n\n\n　　然后是pairwise ranking loss：\n\n<img src=\"http://pic.panjiangtao.cn/img/v2-ba26d4f46e9e8e542a381f77f0bc0d33_720w.png\" alt=\"pairwise ranking loss\" style=\"zoom: 67%;\" />\n\n\n\n　　这个loss中$s_i$代表原语音$x_i$的分数，而$s_i$是在原语音$x_i$中加入一些噪声之后的语音$x_i$的分数，这样从直觉上来说一定有$s_i>s_j$，这个loss会对不符合这个限制的输出进行惩罚，$\\alpha$是margin参数。\n\n　　最后是score consistency loss：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329121732291.png\" alt=\"score consistency loss\" style=\"zoom:50%;\" />\n\n这个loss中，$s_k$和$s_l$是两个类似的语音$x_k$和$x_l$的分数，因此有$s_k\\approx s_l$；相反$s_i$和$s_j$是品质明显差别的两个语音$x_i$和$x_j$的分数，因此有$|s_i-s_j|>\\beta$。loss的中间一项拓展了这两个关系，假设语音分别是语音$x_{ik}$和$x_{il}$的劣化版，且$x_{ik}$和$x_{il}$的品质类似，那么有：$s_{ik}-s_{jk}=s_{il}-s_{jl}$\n\n\n\n## 2 语音信号特征\n\n### 2.1 短时能量\n\n　　短时能量体现的是信号在不同时刻的强弱程度。设第n 帧语音信号的短时能量用𝐸𝑛 表示，则其计算公式为：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329161118385.png\" alt=\"短时能量公式\" style=\"zoom: 67%;\" />\n\n　　上式中，𝑀 为帧长，$𝑥_𝑛(𝑚)$为该帧中的样本点。\n\n### 2.2 基频和基音周期\n\n　　基音周期反映了声门相邻两次开闭之间的时间间隔，基频（fundamental frequency，F0）则是基音周期的倒数，对应着声带振动的频率，代表声音的音高，声带振动越快，基频越高。它是语音激励源的一个重要特征，比如可以通过基频区分性别。一般来说，成年男性基频在100-250Hz 左右，成年女性基频在150-350Hz 左右，女声的音高一般比男声稍高。\n\n　　人类可感知声音的频率大致在20-20000Hz 之间，人类对于基频的感知遵循对数律，也就是说，人们会感觉100Hz 到200Hz 的差距，与200Hz 到400Hz 的差距相同。因此，音高常常用基频的对数来表示。在音乐上，把相差一倍的两个基频的差距称为一个八度（octave）；把一个八度12 等分，每一份称为一个半音（semitone）；把一个半音再100 等分，每一份称为一个音分（cent）。\n\n　　基频是语音的重要特征，在包括语音合成的语音处理中有着广泛的应用，比如语音转换（Voice Conversion，VC）和语音合成中基频是一个强特征。基频的提取可以分为时域法和频域法。时域法以波形为输入，基本原理是寻找波形的最小正周期；频域法则会先对信号进行傅里叶变换，得到频谱，频谱在基频的整倍数处有尖峰，频域法的基本原理就是求出这些尖峰频率的最大公约数。但是考虑到基频并非每一帧都有，因此在提取基频前后，都需要判断有无基频，称之为清浊音判断（Unvoiced/Voiced Decision，U/V Decision）。语音的基频往往随着时间变化，在提取基频之前往往要进行分帧，逐帧提取的基频常常含有错误，其中常见的错误就是倍频错误和半频错误，也就是提取出来的基频是真实基频的两倍或者一半，因此基频提取后要进行平滑操作。常见的基频提取算法有基于信号处理时域法的 YIN1，基于信号处理频域法的 SWIPE2，基于机器学习时域法的 CREPE3和基于机器学习频域法的SPICE4。常用的基频提取工具有pyWORLD，Parselmouth，CREPE，YIN等。参见基频提取算法综述。\n\n### 2.3 音高\n\n　　音高（pitch）是由声音的基频决定的，音高和基频常常混用。可以这样认为，音高（pitch）是稀疏离散化的基频（F0）。由规律振动产生的声音一般都会有基频，比如语音中的元音和浊辅音；也有些声音没有基频，比如人类通过口腔挤压气流的清辅音。在汉语中，元音有a/e/i/o/u，浊辅音有y/w/v，其余音素比如b/p/q/x 等均为清辅音，在发音时，可以通过触摸喉咙感受和判断发音所属音素的种类。\n\n### 2.4 MFCC和语谱图\n\n　　对语音进行分析和处理时，部分信息在时域上难以分析，因此往往会提取频谱特征。在语音合成中，通常将频谱作为中间声学特征：首先将文本转换为频谱，再将频谱转换为波形；在语音识别中，则将频谱或者MFCC作为中间声学特征。语音通过预加重、分帧、加窗、傅里叶变换之后，取功率谱的幅度平方，进行梅尔滤波取对数之后，就得到了梅尔频谱（或称FilterBank/FBank），如果再进行离散余弦变换，就能够获得MFCC。语音通常是一个短时平稳信号，在进行傅里叶变换之前，一般要进行分帧，取音频的一个小片段进行短时傅里叶变换（STFT）。STFT 的结果是一个复数，包括幅度和相位信息，将该复数中的频率作为横轴，幅度作为纵轴，如图2.3所示，就组成了频谱图，将频谱图中的尖峰点连接起来，就形成了频谱包络。注意到，频谱图反映一个语音帧的频域情况，没有时间信息。因此，将每个帧对应的频谱图连接起来，以时间作为横轴，频率作为纵轴，颜色深浅表示幅度，如图2.4下面红图所示，就组成了语谱图。语谱图实际上是一个三维图，横轴时间，纵轴频率，颜色深浅表示幅度大小，一般来说，颜色越深，表示幅度值越大。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329161609642.png\" alt=\"图2.3: 频谱图\" style=\"zoom: 50%;\" />\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329161653885.png\" alt=\"图2.4: 波形和对应的语谱图\" style=\"zoom:67%;\" />\n\n\n\n## 3 数据预处理\n\n### 3.1 将中文转化为拼音\n\n　　首先准备好音频数据和对应的文字，如果文字是中文需要转化为拼音，我使用了pypinyin进行转化，每个中文汉字对应一个拼音，脚本如下，将中文字转为拼音：\n\n```python\nimport os\nimport sys\nimport numpy as np\nfrom pypinyin import pinyin, lazy_pinyin, Style\nimport re\nroot_dir = \"../train/\"\npattern = re.compile(r'(.*)\\.txt$')\nfor root, dir, files in os.walk(root_dir):\n\tfor filename in files:\n\t\t#print(filename)\n\t\toutput = pattern.match(filename)\n\t\tif output is not None:\n\t\t\tprint(root, filename)\n\t\t\ttext_file = open(root+\"/\"+filename)\n\t\t\tline = text_file.read().strip()\n\t\t\tline = line.replace(\"，\", \"\")\n\t\t\tpinyin =  lazy_pinyin(line, style=Style.TONE3, neutral_tone_with_five=True)\n\t\t\tpinyinline = ' '.join(pinyin)\n\t\t\tprint(line)\n\t\t\ttarget_text_file = open(root+\"/\"+output.group(1)+\".lab\", \"w\")\n\t\t\ttarget_text_file.write(pinyinline)\n\t\t\ttarget_text_file.close()\n```\n\n　　保证音频文件的名字和脚本的文件名仅仅后缀不同：\n\n　　例如：T0055G0002S0001.wav 和 T0055G0002S0001.lab\n\n　　其中lab文件内容：yi3 hou4 ni3 shi4 nan2 hai2 zi5 原来的中文为：“以后你是男孩子”\n\n### 3.2 MFA\n\n　　[Montreal Forced Aligner](https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner/) (MFA)，一种forced alignment工具。如果你熟悉有关工具的话，你可能会知道Prosodylab-Aligner这个forced alignment工具，而MFA正是它的升级版，拥有更好的性能。另外MFA使用了Kaldi而不是HTK，因此可以作为单独的package来使用。作者在英语数据上测试了MFA在单词和音素alignment上的表现，并和两个之前的工作进行了对比，实验结果显示MFA有更好的表现。\n\n　　Forced alignment （以下简称FA，不过请注意这个简称不常用）是一个在speech processing中常见的任务。给定一段语音和它的文本，FA需要找到每个单词或是音素对应的时间段。FA中我们一般假设文本和语音的alignment是对角线型的，也就是说如果在text中某个音素出现在另一个音素的后面，那么在语音中这个关系也是成立的，反之亦同。\n\n#### 3.2.1 MFA安装\n\n```sh\npip install montreal-forced-aligner\nmfa thirdparty download\npip install montreal-forced-aligner -U\n```\n\n#### 3.2.2 使用前准备\n\n- 语言对应的发音词典，对于我们常用的英文、中文，都有比较好的可用的词典。\n- 语音数据（`.wav`如果你没安装sox）\n- 文本数据，注意文本数据的文件名中除了扩展名之外其他的部分要和对应的语音数据一一对应。\n\n#### 3.2.3 使用\n\n```sh\nmfa model download acoustic english  #下载English acoustic model\nmfa align /path/to/dataset /path/to/lexicon.txt english /output/path  # 使用预训练模型来进行alignment：\n```\n\n　　经过MFA处理后，生成一个包含所有音频的对齐文件.TextGrid\n\n### 3.3 提取能量、音高、梅尔频谱和音素时长信息\n\n　　预处理代码中下面有 6个functions,作用如下述所示，把语音数据，对应的textgrid数据和.lab 文本数据进行整合，提取出需要的energy, pitch, mel spectrogram, duration等信息。\n\n```python\ndef __init__(self, config):\n\"\"\"加载configs中配置，按照预设路径读入数据\"\"\"\n \ndef build_from_path(self):\n\"\"\"\n主要程序，主要作用是：\n     1.加载从precess_utterance这个function里获得的信息\n     2.对信息进行normalize,\n     3.最后按照指定路径写入文件\n      （speaker.json, stats.json, train.txt, val.txt)\n\"\"\"\n \ndef process_utterance(self, speaker, basename):\n\"\"\"\n被build_from_path这个function调用\n主要作用是\n        1.通过get_alignment这个function获取textgrid files里的duration信息\n        2.计算出wav files里的pitch\n        3.通过stft（短时傅里叶变换）把声音文件转成mel频谱\n        4.计算出wav files里的energy\n        5.将获得的pitch, energy, mel，duration信息分别写入以.npy为后缀的文件\n\"\"\"\n \ndef get_alignment(self, tier):\n\"\"\"\n被process_utterance这个function调用\n主要作用是提取textgrid files里的phone,duration,start_time, end_time等信息\n\"\"\"\n \ndef remove_outlier(self, values):\ndef normalize(self, in_dir, mean, std):\n\"\"\"\n这两个function都是用来normalize data的\n\"\"\"\n```\n\n## 4 合成模型结构\n\n### 4.1 总体结构\n\n　　FastSpeech 2 的模型架构下图(a)所示，它沿用 FastSpeech 中提出的 Feed-Forward Transformer（FFT）架构，编解码器的输入首先进行位置编码，之后进入FFT 块。FFT 块主要包括多头注意力模块和位置前馈网络，位置前馈网络可以由若干层Conv1d、LayerNorm 和Dropout 组成。在音素编码器和梅尔频谱解码器中加入了一个可变信息适配器（Variance Adaptor），从而支持在 FastSpeech 2 和 2s 中引入更多语音中变化的信息，例如时长、音高、音量（频谱能量）等，来解决语音合成中的一对多映射问题（文本到语音合成中，一条文本可以对应到多条可变的语音，这些可变信息包括语音时长、音高、音量等。FastSpeech 通过知识蒸馏降低语音训练目标的变化性来缓解一对多映射问题，但也造成了训练目标的信息损失。FastSpeech 2 通过引入对应的可变信息作为解码器输入，使输入输出信息尽量匹配，来解决这个问题），最终得到的输出为梅尔频谱图，而后交给声码器生成音频。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220329204107873.png\" alt=\"FastSpeech 2 和 2s 模型框架。图（b）中的 LR 表示 FastSpeech 中的序列长度适配操作，图（c）中的 LN 表示层归一化，可变信息预测器（variance predictor）包括时长、音高和能量预测器。\" style=\"zoom:67%;\" />\n\n### 4.2 FFT（feed-forward Transformer，前馈Transformer）\n\n采用了Attention机制和1D卷积，其中多头注意力结构如下图所示：\n\n<img src=\"http://pic.panjiangtao.cn/img/202111181632_987.png\" style=\"zoom:50%;\" />\n\n<img src=\"http://pic.panjiangtao.cn/img/202111181633_144.png\" style=\"zoom: 50%;\" />\n\n<img src=\"http://pic.panjiangtao.cn/img/202111181635_901.png\" style=\"zoom:50%;\" />\n\nAttention 机制实质上就是一个寻址过程，通过给定一个任务相关的查询 Query 向量 Q，通过计算与 Key 的注意力分布并附加在 Value 上，从而计算 Attention Value\n\n1. Q，K，V 三个矩阵都来自同一个输入，通过线性变换得到 Q，K，V 三个向量。\n\n2. 计算自注意力得分，计算每个单词的自注意力，和这个单词对句子中其他单词的评分，通过矩阵Q、K相乘计算\n\n3. 第二步计算的分数进行缩放，这里通过除以 根号dk ( 论文中 ![[公式]](http://pic.panjiangtao.cn/img/equation)，这可以让模型有更稳定的梯度，默认值是 64，也可以是其它值 )，将结果进行softmax 归一化。\n\n4. 最后乘以V\n\n5. 上面过程做 H 次，再把输出合并起来\n\n\n### 4.3 变量适配器（Variance Adaptor）\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220330192940582.png\" alt=\"Variance Adaptor\" style=\"zoom:50%;\" />\n\n　　在对时长、基频和能量单独建模时，所使用的网络结构实际是相似的，在论文中称这种语音属性建模网络为变量适配器（Variance Adaptor）。时长预测的输出也作为基频和能量预测的输入。最后，基频预测和能量预测的输出，以及依靠时长信息展开的编码器输入元素加起来，作为下游网络的输入。变量适配器主要是由2 层卷积和1 层线性映射层组成，每层卷积后加ReLU 激活、LayerNorm 和Dropout。\n\n#### 4.3.1 基本结构Variance Predictor\n\n　　对时长、基频和能量建模的基本结构为Variance Predictor，其代码如下所示：\n\n```python\nclass VariancePredictor(nn.Module):\n    \"\"\"Duration, Pitch and Energy Predictor\"\"\"\n    def __init__(self, model_config):\n        super(VariancePredictor, self).__init__()\n\n        self.input_size = model_config[\"transformer\"][\"encoder_hidden\"]\n        self.filter_size = model_config[\"variance_predictor\"][\"filter_size\"]\n        self.kernel = model_config[\"variance_predictor\"][\"kernel_size\"]\n        self.conv_output_size = model_config[\"variance_predictor\"][\"filter_size\"]\n        self.dropout = model_config[\"variance_predictor\"][\"dropout\"]\n\n        self.conv_layer = nn.Sequential(OrderedDict([\n                    (\"conv1d_1\",Conv(self.input_size,\n                            \t\tself.filter_size,\n                            \t\tkernel_size=self.kernel,\n                            \t\tpadding=(self.kernel - 1) // 2,),),\n                    (\"relu_1\", nn.ReLU()),\n                    (\"layer_norm_1\", nn.LayerNorm(self.filter_size)),\n                    (\"dropout_1\", nn.Dropout(self.dropout)),\n                    (\"conv1d_2\",Conv(self.filter_size,\n                            \t\tself.filter_size,\n                            \t\tkernel_size=self.kernel,\n                            \t\tpadding=1,),),\n                    (\"relu_2\", nn.ReLU()),\n                    (\"layer_norm_2\", nn.LayerNorm(self.filter_size)),\n                    (\"dropout_2\", nn.Dropout(self.dropout)),\n              ]))\n\n        self.linear_layer = nn.Linear(self.conv_output_size, 1)\n\n    def forward(self, encoder_output, mask):\n        out = self.conv_layer(encoder_output)\n        out = self.linear_layer(out)\n        out = out.squeeze(-1)\n\n        if mask is not None:\n            out = out.masked_fill(mask, 0.0)\n\n        return out\n```\n\n#### 4.3.2 Variance Adaptor实现\n\n　　利用该变量适配器对时长、基频和能量进行建模。\n\n```python\nclass VarianceAdaptor(nn.Module):\n    \"\"\"Variance Adaptor\"\"\"\n\n    def __init__(self, preprocess_config, model_config):\n        super(VarianceAdaptor, self).__init__()\n        self.duration_predictor = VariancePredictor(model_config)\n        self.length_regulator = LengthRegulator()\n        self.pitch_predictor = VariancePredictor(model_config)\n        self.energy_predictor = VariancePredictor(model_config)\n        \n        self.pitch_bins =nn.Parameter(torch.exp(torch.linspace(\n            np.log(pitch_min), np.log(pitch_max), n_bins - 1)),requires_grad=False,)\n        self.energy_bins = nn.Parameter(torch.exp(torch.linspace(\n            np.log(energy_min), np.log(energy_max), n_bins - 1)),requires_grad=False,)\n\t\tself.pitch_embedding = nn.Embedding(\n            n_bins, model_config[\"transformer\"][\"encoder_hidden\"])\n        self.energy_embedding = nn.Embedding(\n            n_bins, model_config[\"transformer\"][\"encoder_hidden\"])\n\n    def forward(self,x,src_mask,mel_mask=None,max_len=None,pitch_target=None,\n        energy_target=None,duration_target=None,p_control=1.0,e_control=1.0,d_control=1.0):\n\n        log_duration_prediction = self.duration_predictor(x, src_mask)\n\t\tif duration_target is not None:\n            x, mel_len = self.length_regulator(x, duration_target, max_len)\n            duration_rounded = duration_target\n        else:\n            duration_rounded = torch.clamp(\n                (torch.round(torch.exp(log_duration_prediction) - 1) * d_control),min=0)\n            x, mel_len = self.length_regulator(x, duration_rounded, max_len)\n            mel_mask = get_mask_from_lengths(mel_len)\n\n        pitch_prediction, pitch_embedding = self.get_pitch_embedding(\n            x, pitch_target, mel_mask, p_control)\n            x = x + pitch_embedding\n        energy_prediction, energy_embedding = self.get_energy_embedding(\n            x, energy_target, mel_mask, p_control\n            x = x + energy_embedding\n\n        return x,pitch_prediction,energy_prediction,log_duration_prediction,\n            duration_rounded,mel_len,mel_mask\n```\n\n## 5 声码器\n\n### 5.1 MelGan\n\n论文链接： [MelGAN: Generative Adversarial Networks for Conditional Waveform Synthesis](http://arxiv.org/abs/1910.06711)\n\n开源项目：[Multi-band MelGAN and Full band MelGAN](https://github.com/rishikksh20/melgan)\n\n演示demo：[MelGan声码器效果演示](http://www.panjiangtao.cn/melgan/)\n\n#### 优点\n\n- MelGAN是一种非自回归前馈卷积架构，是第一个由GAN去实现原始音频的生成，在没有额外的蒸馏和感知损失的引入下仍能产生高质量的语音合成模型。\n- MelGAN解码器可替代自回归模型，以生成原始音频。\n- MelGAN的速度明显快于其他Mel谱图转换到音频的方法，在保证音频质量没有明显下降的情况下比迄今为止最快的可用模型快10倍。\n\n模型包括两部分: Generator（生成器） 和 Discriminator（判别器）。\n\n#### 5.1.1 生成器\n\n　　输入为mel-spectrogram，输出为raw waveform. 从 mel-spectrogram到 audio的过程很显然是一个上采样的过程。\n\n　　这里的上采样是由一维反卷积(transpose1d)实现的，上采样的倍数如何确定呢？\n\n　　需要注意一下，上采样的倍数是由hop_size来决定的，为什么呢？\n\n　　需要明白一点，mel帧数 * 帧移 = 音频长度（采样点个数，可换算为音频时长，具体怎么做不用说了吧）\n\n　　因此，对于22050采样率， hopsize大小设置为256， 那么对应的mel-spectrogram需要上采样 256倍\n\n　　如果是16000采样率呢？ 使用帧长是50ms,帧移 12.5ms 那么hopsize就是200啦，所以上采样倍数就是200倍啦.\n\n　　搞清楚了这些，那么Generator Upsampling层中的上采样倍数也就好理解了，22050的采样倍数为 8 X 8 X 2 X 2 = 256\n\n##### 结构\n\n<img src=\"http://pic.panjiangtao.cn/img/20200310123249936.png\" alt=\"MelGAN生成器结构\" style=\"zoom: 50%;\" />\n\n其中残差块结构：\n\n<img src=\"http://pic.panjiangtao.cn/img/2020031012332078.png\" alt=\"MelGAN生成器残差快结构\" style=\"zoom: 33%;\" />\n\n　　经过一层Conv层后送到上采样网络块，上采样网络块一共有4个，依次为8x,8x,2x,2x，每个上采样网络块中嵌套残差块，每个残差块有三层，依次dilation为1,3,9，最后经过一层conv层得到音频输出，由于音频的channel表示为1，所以最后一层的channel设为1。\n\n##### 设计思路\n\n1. Mel频谱图的时间分辨率比原始音频低256倍，所以使用了堆叠的反卷积层进行unsample。\n\n2. 条件信息足够的情况下，在输入处增加噪声是不必要的。所以与传统GAN不同，并没有增加noise input\n\n3. 使用残差块解决梯度消散的问题，空洞卷积层的感受野随层数的增加而指数增加，能够有效地增加每个输出时间步长的感应野。\n\n4. 反卷积层的k-size和stride仔细选择决定的，可以减少artifacts的出现。\n\n5. 归一化选择Weight Norm，因为不会限制判别器的空间，也不会对激活进行归一化\n\n##### 源码\n\n```python\n#对一维卷积层进行Weight Norm\ndef WNConv1d(*args, **kwargs):\n    return weight_norm(nn.Conv1d(*args, **kwargs))\n#对一维反卷积层进行Weight Norm\ndef WNConvTranspose1d(*args, **kwargs):\n    return weight_norm(nn.ConvTranspose1d(*args, **kwargs))\n#残差块中一层的结构\nclass ResnetBlock(nn.Module):\n    def __init__(self, dim, dilation=1):\n        super().__init__()\n        #依次为两层卷积层\n        self.block = nn.Sequential(\n            nn.LeakyReLU(0.2),\n            nn.ReflectionPad1d(dilation),\n            WNConv1d(dim, dim, kernel_size=3, dilation=dilation),\n            nn.LeakyReLU(0.2),\n            WNConv1d(dim, dim, kernel_size=1),\n        )\n        self.shortcut = WNConv1d(dim, dim, kernel_size=1) \n\n    def forward(self, x):\n        return self.shortcut(x) + self.block(x) #残差连接\n#生成器\nclass Generator(nn.Module):\n    def __init__(self, input_size, ngf, n_residual_layers):\n        super().__init__()\n        ratios = [8, 8, 2, 2]\n        self.hop_length = np.prod(ratios)\n        mult = int(2 ** len(ratios))\n\t\t#第一层卷积\n        model = [\n            nn.ReflectionPad1d(3),\n            WNConv1d(input_size, mult * ngf, kernel_size=7, padding=0),\n        ]\n\n        # 上采样阶段，共4个，依次为8x,8x,2x,2x的UpSampling layer\n        for i, r in enumerate(ratios):\n            model += [\n                nn.LeakyReLU(0.2),\n                WNConvTranspose1d(\n                    mult * ngf,\n                    mult * ngf // 2,\n                    kernel_size=r * 2,\n                    stride=r,\n                    padding=r // 2 + r % 2,\n                    output_padding=r % 2,\n                ),\n            ]\n\t\t\t#加入残差块，每个残差块中有3层，dilation分别为1,3,9\n            for j in range(n_residual_layers):\n                model += [ResnetBlock(mult * ngf // 2, dilation=3 ** j)]\n\n            mult //= 2\n\t\t#最后一层卷积层\n        model += [\n            nn.LeakyReLU(0.2),\n            nn.ReflectionPad1d(3),\n            WNConv1d(ngf, 1, kernel_size=7, padding=0),\n            nn.Tanh(),\n        ]\n        self.model = nn.Sequential(*model)\n        self.apply(weights_init)\n\n    def forward(self, x):\n        return self.model(x)\n```\n\n#### 5.1.2 判别器\n\n　　论文提出了multi-scale的discriminator, 基于的假设是每个scale的discriminator可以学习到不同频率段的音频的特征。\n\n　　每个discriminator的网络结构是由前后各一层1维卷积 和 4层分组卷积构成的downsampling layer构成. discriminator输入是由ground truth的音频和gererator生成的fake音频两部分构成的。 输入维度为[B, T, 1]， 输出维度也是[B,T,1], 中间变换的只是通道数的变化， 最后一层的输出和倒数第二层卷积网络的输出被分别用来计算 featuremap 和 feature_score, 这两部分被用来计算 generator的*feature_matching_loss*(L1_loss) 和discriminator的*mse_loss*\n\n　　上面我们知道了Generator输入mel-spectrogram,生成音频audio, 这个音频可以表示为G （s）, s为mel-spectrogram. 判别器要判断生成器生成音频的真假，这里就涉及到Gan模型的原理啦，\n\n　　Generator输入mel-spectrogram生成音频(fake), Discriminator输入真(real)音频和假(fake)音频，学习一个二分类器（可以这么理解），这里使用的是mse损失来最小化real与1的差异，fake与0的差异。\n\n　　通过对抗学习，使得generator生成的音频达到判别器无法判断真假的效果(loss接近0.5)。\n\n##### 结构\n\n<img src=\"https://img-blog.csdnimg.cn/20200310123441481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTYyNzA0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"melgan判别器模型\" style=\"zoom:50%;\" />\n\n##### 损失函数：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220331174705235.png\" alt=\"melgan判别器损失函数\" style=\"zoom: 67%;\" />\n\nx表示音频，s表示mel谱图，z表示高斯噪声\n\n##### 源码\n\n```python\n#对一维卷积层进行Weight Norm\ndef WNConv1d(*args, **kwargs):\n    return weight_norm(nn.Conv1d(*args, **kwargs))\n#对一维反卷积层进行Weight Norm\ndef WNConvTranspose1d(*args, **kwargs):\n    return weight_norm(nn.ConvTranspose1d(*args, **kwargs))\n#Discriminator Block结构\nclass NLayerDiscriminator(nn.Module):\n    def __init__(self, ndf, n_layers, downsampling_factor):\n        super().__init__()\n        model = nn.ModuleDict()\n        #第一层卷积\n        model[\"layer_0\"] = nn.Sequential(\n            nn.ReflectionPad1d(7),\n            WNConv1d(1, ndf, kernel_size=15),\n            nn.LeakyReLU(0.2, True),\n        )\n        nf = ndf\n        stride = downsampling_factor\n        #4层4x Downsampling Layer\n        for n in range(1, n_layers + 1):\n            nf_prev = nf\n            nf = min(nf * stride, 1024)\n            model[\"layer_%d\" % n] = nn.Sequential(\n                WNConv1d(\n                    nf_prev,\n                    nf,\n                    kernel_size=stride * 10 + 1,\n                    stride=stride,\n                    padding=stride * 5,\n                    groups=nf_prev // 4,\n                ),\n                nn.LeakyReLU(0.2, True),\n            )\n\n        nf = min(nf * 2, 1024)\n        #第2层卷积层\n        model[\"layer_%d\" % (n_layers + 1)] = nn.Sequential(\n            WNConv1d(nf_prev, nf, kernel_size=5, stride=1, padding=2),\n            nn.LeakyReLU(0.2, True),\n        )\n        #第3层卷积层\n        model[\"layer_%d\" % (n_layers + 2)] = WNConv1d(\n            nf, 1, kernel_size=3, stride=1, padding=1\n        )\n\n        self.model = model\n    def forward(self, x):\n        results = [] #存放每层输出的feature map\n        for key, layer in self.model.items():\n            x = layer(x)\n            results.append(x)\n        return results\n#完整的判别器\nclass Discriminator(nn.Module):\n    def __init__(self, num_D, ndf, n_layers, downsampling_factor):\n        super().__init__()\n        self.model = nn.ModuleDict()\n        #3个Discriminator Block\n        for i in range(num_D):\n            self.model[f\"disc_{i}\"] = NLayerDiscriminator(\n                ndf, n_layers, downsampling_factor\n            )\n\t\t#downsample函数\n        self.downsample = nn.AvgPool1d(4, stride=2, padding=1, count_include_pad=False)\n        self.apply(weights_init)\n\n    def forward(self, x):\n        results = []\n        for key, disc in self.model.items():\n            results.append(disc(x)) #每次降频处理得到的结果依次存放到result\n            x = self.downsample(x) #对输入x进行降频处理\n        return results\n```\n\n","slug":"Fastspeech2","published":1,"updated":"2022-04-11T03:53:21.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0fk0003c8pvecdn3bhx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"语音合成模型Fastspeech2技术报告\"><a href=\"#语音合成模型Fastspeech2技术报告\" class=\"headerlink\" title=\"语音合成模型Fastspeech2技术报告\"></a>语音合成模型Fastspeech2技术报告</h1><div class=\"note info\">\n            <p>论文：<a href=\"https://arxiv.org/abs/2006.04558v1\">FastSpeech 2: Fast and High-Quality End-to-End Text to Speech</a><br>开源项目：<a href=\"https://github.com/ming024/FastSpeech2\">Fastspeech2 Github开源项目</a><br>合成demo：<a href=\"http://www.panjiangtao.cn/fastspeech2/\">FastSpeech 2 语音合成演示</a></p>\n          </div>\n<a id=\"more\"></a>\n<h2 id=\"服务器部署演示\"><a href=\"#服务器部署演示\" class=\"headerlink\" title=\"服务器部署演示\"></a>服务器部署演示</h2><video src=\"http://file.panjiangtao.cn/fastspeech2_server.mp4\" type=\"video/mp4\" poster=\"http://pic.panjiangtao.cn/img/image-20220408160721138.png\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n\n<h2 id=\"1-语音质量评估\"><a href=\"#1-语音质量评估\" class=\"headerlink\" title=\"1 语音质量评估\"></a>1 语音质量评估</h2><h3 id=\"1-1-主观评价\"><a href=\"#1-1-主观评价\" class=\"headerlink\" title=\"1.1 主观评价\"></a>1.1 主观评价</h3><p>　　主观评价是通过人类对语音进行打分，比如平均意见得分（Mean Opinion Score，MOS）、众包平均意见得分（CrowdMOS，CMOS）和ABX 测试。主观评价中的MOS 评测是一种较为宽泛的说法，由于给出评测分数的主体是人类，因此可以灵活测试语音的不同方面。比如在语音合成领域，主要有自然度MOS（MOS of Naturalness）和相似度MOS（MOS of Similarity）。<br>　　但是人类给出的评分结果受到的干扰因素较多，谷歌对合成语音的主观评估方法进行了比较，在评估较长语音中的单个句子时，音频样本的呈现形式会显著影响参与人员给出的结果。比如仅提供单个句子而不提供上下文，与相同句子给出语境相比，被测人员给出的评分差异显著。国际电信联盟（International Telecommunication Union，ITU）将MOS 评测规范化为ITU-T P.800，其中绝对等级评分（Absolute Category Rating，ACR）应用最为广泛，ACR 的详细评估标准如下表所示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329115941800.png\" alt=\"ACR评分表\"></p>\n<p>　　在使用ACR 方法对语音质量进行评价时，参与评测的人员（简称被试）对语音整体质量进行打分，分值范围为1 5 分，分数越大表示语音质量越好。MOS 大于4 时，可以认为该音质受到大部分被试的认可，音质较好；若MOS 低于3，则该语音有比较大的缺陷，大部分被试并不满意该音质。</p>\n<h4 id=\"缺点：\"><a href=\"#缺点：\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><p>　　MOS是一种主观量度，它的优点是显而易见的，但它的缺点也很多。首先，为了保证MOS的可信度足够高，一般来说需要雇佣大量的评价者进行评价，这就导致成本很高；另外，MOS的大小依赖于评价者，有的评价者很苛刻，那么她给的分数就会偏低，而有的评价者却是相反的。除此之外，MOS还会受到听语音时的环境，评价者的状态等多种因素的影响。</p>\n<p>　　下图展示了一次评价中评价者给出的MOS分数的均值和标准差的分布，我们可以看到，标准差最大达到了2，这就说明评价者在某些语音的质量上有很大的分歧。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/v2-909d9159b4b4a7c9c43ce8dd23c23d1d_720w.jpg\" alt=\"MOS分数均值、标准差\" style=\"zoom: 67%;\"></p>\n<h3 id=\"1-2-客观评价\"><a href=\"#1-2-客观评价\" class=\"headerlink\" title=\"1.2 客观评价\"></a>1.2 客观评价</h3><h4 id=\"1-2-1-MOSNet（开源）\"><a href=\"#1-2-1-MOSNet（开源）\" class=\"headerlink\" title=\"1.2.1 MOSNet（开源）\"></a>1.2.1 MOSNet（开源）</h4><p>　　下图为MOSNet的网络结构，就是LSTM、CNN以及它们的组合。注意这里模型输出两种MOS分数，一是frame-level的分数，另一个是utterance-level的分数。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329120657195.png\" alt=\"MOSNet结构图\" style=\"zoom:67%;\"></p>\n<p>　　损失函数为：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329120853312.png\" alt=\"image-20220329120853312\" style=\"zoom:50%;\"></p>\n<p>　　上式第一项是utterance-level的MSE，第二项是frame-level的MSE。</p>\n<h5 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h5><p>　　首先不同工作所做的MOS评测所得到的数据是很难合并在一起的，因为不同MOS评测的分数分布都是不同的。所以像VCC 2018这样的大量且统一评价的情况是比较少的，因此简而言之，数据量还是不足。</p>\n<p>　　另外，如何增加模型的泛化性也是一个重要的问题，举例来说，我们在VCC 2018上训练的模型是否能够预测其它的MOS评测，比如VCC 2019的分数呢？实际上这被证明是很难的。</p>\n<h4 id=\"1-2-2-SESQA（未开源）\"><a href=\"#1-2-2-SESQA（未开源）\" class=\"headerlink\" title=\"1.2.2 SESQA（未开源）\"></a>1.2.2 SESQA（未开源）</h4><p>　　下图为SESQA模型结构，实际上是一个multi-task模型。模型接受一个语音的输入x，然后利用神经网络生成x的隐表示z，之后通过计算各种loss来学习到好的数据表示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329121351363.png\" alt=\"SESQA模型结构\" style=\"zoom:50%;\"></p>\n<p>　　SESQA中包含8种loss，但是在ablation experiment中很多loss被证明是没什么用的，因此这里我将介绍最重要的几种loss，对没有介绍到的loss感兴趣的读者可以参考原论文。</p>\n<p>　　首先是MOS loss，这个loss是针对有标注的数据设计的：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329121709812.png\" alt=\"MOS loss\" style=\"zoom: 67%;\"></p>\n<p>　　然后是pairwise ranking loss：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/v2-ba26d4f46e9e8e542a381f77f0bc0d33_720w.png\" alt=\"pairwise ranking loss\" style=\"zoom: 67%;\"></p>\n<p>　　这个loss中$s_i$代表原语音$x_i$的分数，而$s_i$是在原语音$x_i$中加入一些噪声之后的语音$x_i$的分数，这样从直觉上来说一定有$s_i&gt;s_j$，这个loss会对不符合这个限制的输出进行惩罚，$\\alpha$是margin参数。</p>\n<p>　　最后是score consistency loss：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329121732291.png\" alt=\"score consistency loss\" style=\"zoom:50%;\"></p>\n<p>这个loss中，$s_k$和$s_l$是两个类似的语音$x_k$和$x_l$的分数，因此有$s_k\\approx s_l$；相反$s_i$和$s_j$是品质明显差别的两个语音$x_i$和$x_j$的分数，因此有$|s_i-s_j|&gt;\\beta$。loss的中间一项拓展了这两个关系，假设语音分别是语音$x_{ik}$和$x_{il}$的劣化版，且$x_{ik}$和$x_{il}$的品质类似，那么有：$s_{ik}-s_{jk}=s_{il}-s_{jl}$</p>\n<h2 id=\"2-语音信号特征\"><a href=\"#2-语音信号特征\" class=\"headerlink\" title=\"2 语音信号特征\"></a>2 语音信号特征</h2><h3 id=\"2-1-短时能量\"><a href=\"#2-1-短时能量\" class=\"headerlink\" title=\"2.1 短时能量\"></a>2.1 短时能量</h3><p>　　短时能量体现的是信号在不同时刻的强弱程度。设第n 帧语音信号的短时能量用𝐸𝑛 表示，则其计算公式为：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329161118385.png\" alt=\"短时能量公式\" style=\"zoom: 67%;\"></p>\n<p>　　上式中，𝑀 为帧长，$𝑥_𝑛(𝑚)$为该帧中的样本点。</p>\n<h3 id=\"2-2-基频和基音周期\"><a href=\"#2-2-基频和基音周期\" class=\"headerlink\" title=\"2.2 基频和基音周期\"></a>2.2 基频和基音周期</h3><p>　　基音周期反映了声门相邻两次开闭之间的时间间隔，基频（fundamental frequency，F0）则是基音周期的倒数，对应着声带振动的频率，代表声音的音高，声带振动越快，基频越高。它是语音激励源的一个重要特征，比如可以通过基频区分性别。一般来说，成年男性基频在100-250Hz 左右，成年女性基频在150-350Hz 左右，女声的音高一般比男声稍高。</p>\n<p>　　人类可感知声音的频率大致在20-20000Hz 之间，人类对于基频的感知遵循对数律，也就是说，人们会感觉100Hz 到200Hz 的差距，与200Hz 到400Hz 的差距相同。因此，音高常常用基频的对数来表示。在音乐上，把相差一倍的两个基频的差距称为一个八度（octave）；把一个八度12 等分，每一份称为一个半音（semitone）；把一个半音再100 等分，每一份称为一个音分（cent）。</p>\n<p>　　基频是语音的重要特征，在包括语音合成的语音处理中有着广泛的应用，比如语音转换（Voice Conversion，VC）和语音合成中基频是一个强特征。基频的提取可以分为时域法和频域法。时域法以波形为输入，基本原理是寻找波形的最小正周期；频域法则会先对信号进行傅里叶变换，得到频谱，频谱在基频的整倍数处有尖峰，频域法的基本原理就是求出这些尖峰频率的最大公约数。但是考虑到基频并非每一帧都有，因此在提取基频前后，都需要判断有无基频，称之为清浊音判断（Unvoiced/Voiced Decision，U/V Decision）。语音的基频往往随着时间变化，在提取基频之前往往要进行分帧，逐帧提取的基频常常含有错误，其中常见的错误就是倍频错误和半频错误，也就是提取出来的基频是真实基频的两倍或者一半，因此基频提取后要进行平滑操作。常见的基频提取算法有基于信号处理时域法的 YIN1，基于信号处理频域法的 SWIPE2，基于机器学习时域法的 CREPE3和基于机器学习频域法的SPICE4。常用的基频提取工具有pyWORLD，Parselmouth，CREPE，YIN等。参见基频提取算法综述。</p>\n<h3 id=\"2-3-音高\"><a href=\"#2-3-音高\" class=\"headerlink\" title=\"2.3 音高\"></a>2.3 音高</h3><p>　　音高（pitch）是由声音的基频决定的，音高和基频常常混用。可以这样认为，音高（pitch）是稀疏离散化的基频（F0）。由规律振动产生的声音一般都会有基频，比如语音中的元音和浊辅音；也有些声音没有基频，比如人类通过口腔挤压气流的清辅音。在汉语中，元音有a/e/i/o/u，浊辅音有y/w/v，其余音素比如b/p/q/x 等均为清辅音，在发音时，可以通过触摸喉咙感受和判断发音所属音素的种类。</p>\n<h3 id=\"2-4-MFCC和语谱图\"><a href=\"#2-4-MFCC和语谱图\" class=\"headerlink\" title=\"2.4 MFCC和语谱图\"></a>2.4 MFCC和语谱图</h3><p>　　对语音进行分析和处理时，部分信息在时域上难以分析，因此往往会提取频谱特征。在语音合成中，通常将频谱作为中间声学特征：首先将文本转换为频谱，再将频谱转换为波形；在语音识别中，则将频谱或者MFCC作为中间声学特征。语音通过预加重、分帧、加窗、傅里叶变换之后，取功率谱的幅度平方，进行梅尔滤波取对数之后，就得到了梅尔频谱（或称FilterBank/FBank），如果再进行离散余弦变换，就能够获得MFCC。语音通常是一个短时平稳信号，在进行傅里叶变换之前，一般要进行分帧，取音频的一个小片段进行短时傅里叶变换（STFT）。STFT 的结果是一个复数，包括幅度和相位信息，将该复数中的频率作为横轴，幅度作为纵轴，如图2.3所示，就组成了频谱图，将频谱图中的尖峰点连接起来，就形成了频谱包络。注意到，频谱图反映一个语音帧的频域情况，没有时间信息。因此，将每个帧对应的频谱图连接起来，以时间作为横轴，频率作为纵轴，颜色深浅表示幅度，如图2.4下面红图所示，就组成了语谱图。语谱图实际上是一个三维图，横轴时间，纵轴频率，颜色深浅表示幅度大小，一般来说，颜色越深，表示幅度值越大。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329161609642.png\" alt=\"图2.3: 频谱图\" style=\"zoom: 50%;\"></p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329161653885.png\" alt=\"图2.4: 波形和对应的语谱图\" style=\"zoom:67%;\"></p>\n<h2 id=\"3-数据预处理\"><a href=\"#3-数据预处理\" class=\"headerlink\" title=\"3 数据预处理\"></a>3 数据预处理</h2><h3 id=\"3-1-将中文转化为拼音\"><a href=\"#3-1-将中文转化为拼音\" class=\"headerlink\" title=\"3.1 将中文转化为拼音\"></a>3.1 将中文转化为拼音</h3><p>　　首先准备好音频数据和对应的文字，如果文字是中文需要转化为拼音，我使用了pypinyin进行转化，每个中文汉字对应一个拼音，脚本如下，将中文字转为拼音：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> pypinyin <span class=\"keyword\">import</span> pinyin, lazy_pinyin, Style</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">root_dir = <span class=\"string\">&quot;../train/&quot;</span></span><br><span class=\"line\">pattern = re.compile(<span class=\"string\">r&#x27;(.*)\\.txt$&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> root, dir, files <span class=\"keyword\">in</span> os.walk(root_dir):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> filename <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">\t\t<span class=\"comment\">#print(filename)</span></span><br><span class=\"line\">\t\toutput = pattern.match(filename)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> output <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t\tprint(root, filename)</span><br><span class=\"line\">\t\t\ttext_file = open(root+<span class=\"string\">&quot;/&quot;</span>+filename)</span><br><span class=\"line\">\t\t\tline = text_file.read().strip()</span><br><span class=\"line\">\t\t\tline = line.replace(<span class=\"string\">&quot;，&quot;</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">\t\t\tpinyin =  lazy_pinyin(line, style=Style.TONE3, neutral_tone_with_five=<span class=\"literal\">True</span>)</span><br><span class=\"line\">\t\t\tpinyinline = <span class=\"string\">&#x27; &#x27;</span>.join(pinyin)</span><br><span class=\"line\">\t\t\tprint(line)</span><br><span class=\"line\">\t\t\ttarget_text_file = open(root+<span class=\"string\">&quot;/&quot;</span>+output.group(<span class=\"number\">1</span>)+<span class=\"string\">&quot;.lab&quot;</span>, <span class=\"string\">&quot;w&quot;</span>)</span><br><span class=\"line\">\t\t\ttarget_text_file.write(pinyinline)</span><br><span class=\"line\">\t\t\ttarget_text_file.close()</span><br></pre></td></tr></table></figure>\n<p>　　保证音频文件的名字和脚本的文件名仅仅后缀不同：</p>\n<p>　　例如：T0055G0002S0001.wav 和 T0055G0002S0001.lab</p>\n<p>　　其中lab文件内容：yi3 hou4 ni3 shi4 nan2 hai2 zi5 原来的中文为：“以后你是男孩子”</p>\n<h3 id=\"3-2-MFA\"><a href=\"#3-2-MFA\" class=\"headerlink\" title=\"3.2 MFA\"></a>3.2 MFA</h3><p>　　<a href=\"https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner/\">Montreal Forced Aligner</a> (MFA)，一种forced alignment工具。如果你熟悉有关工具的话，你可能会知道Prosodylab-Aligner这个forced alignment工具，而MFA正是它的升级版，拥有更好的性能。另外MFA使用了Kaldi而不是HTK，因此可以作为单独的package来使用。作者在英语数据上测试了MFA在单词和音素alignment上的表现，并和两个之前的工作进行了对比，实验结果显示MFA有更好的表现。</p>\n<p>　　Forced alignment （以下简称FA，不过请注意这个简称不常用）是一个在speech processing中常见的任务。给定一段语音和它的文本，FA需要找到每个单词或是音素对应的时间段。FA中我们一般假设文本和语音的alignment是对角线型的，也就是说如果在text中某个音素出现在另一个音素的后面，那么在语音中这个关系也是成立的，反之亦同。</p>\n<h4 id=\"3-2-1-MFA安装\"><a href=\"#3-2-1-MFA安装\" class=\"headerlink\" title=\"3.2.1 MFA安装\"></a>3.2.1 MFA安装</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install montreal-forced-aligner</span><br><span class=\"line\">mfa thirdparty download</span><br><span class=\"line\">pip install montreal-forced-aligner -U</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-2-使用前准备\"><a href=\"#3-2-2-使用前准备\" class=\"headerlink\" title=\"3.2.2 使用前准备\"></a>3.2.2 使用前准备</h4><ul>\n<li>语言对应的发音词典，对于我们常用的英文、中文，都有比较好的可用的词典。</li>\n<li>语音数据（<code>.wav</code>如果你没安装sox）</li>\n<li>文本数据，注意文本数据的文件名中除了扩展名之外其他的部分要和对应的语音数据一一对应。</li>\n</ul>\n<h4 id=\"3-2-3-使用\"><a href=\"#3-2-3-使用\" class=\"headerlink\" title=\"3.2.3 使用\"></a>3.2.3 使用</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mfa model download acoustic english  <span class=\"comment\">#下载English acoustic model</span></span><br><span class=\"line\">mfa align /path/to/dataset /path/to/lexicon.txt english /output/path  <span class=\"comment\"># 使用预训练模型来进行alignment：</span></span><br></pre></td></tr></table></figure>\n<p>　　经过MFA处理后，生成一个包含所有音频的对齐文件.TextGrid</p>\n<h3 id=\"3-3-提取能量、音高、梅尔频谱和音素时长信息\"><a href=\"#3-3-提取能量、音高、梅尔频谱和音素时长信息\" class=\"headerlink\" title=\"3.3 提取能量、音高、梅尔频谱和音素时长信息\"></a>3.3 提取能量、音高、梅尔频谱和音素时长信息</h3><p>　　预处理代码中下面有 6个functions,作用如下述所示，把语音数据，对应的textgrid数据和.lab 文本数据进行整合，提取出需要的energy, pitch, mel spectrogram, duration等信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, config</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;加载configs中配置，按照预设路径读入数据&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">build_from_path</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">主要程序，主要作用是：</span></span><br><span class=\"line\"><span class=\"string\">     1.加载从precess_utterance这个function里获得的信息</span></span><br><span class=\"line\"><span class=\"string\">     2.对信息进行normalize,</span></span><br><span class=\"line\"><span class=\"string\">     3.最后按照指定路径写入文件</span></span><br><span class=\"line\"><span class=\"string\">      （speaker.json, stats.json, train.txt, val.txt)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">process_utterance</span>(<span class=\"params\">self, speaker, basename</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">被build_from_path这个function调用</span></span><br><span class=\"line\"><span class=\"string\">主要作用是</span></span><br><span class=\"line\"><span class=\"string\">        1.通过get_alignment这个function获取textgrid files里的duration信息</span></span><br><span class=\"line\"><span class=\"string\">        2.计算出wav files里的pitch</span></span><br><span class=\"line\"><span class=\"string\">        3.通过stft（短时傅里叶变换）把声音文件转成mel频谱</span></span><br><span class=\"line\"><span class=\"string\">        4.计算出wav files里的energy</span></span><br><span class=\"line\"><span class=\"string\">        5.将获得的pitch, energy, mel，duration信息分别写入以.npy为后缀的文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_alignment</span>(<span class=\"params\">self, tier</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">被process_utterance这个function调用</span></span><br><span class=\"line\"><span class=\"string\">主要作用是提取textgrid files里的phone,duration,start_time, end_time等信息</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_outlier</span>(<span class=\"params\">self, values</span>):</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">normalize</span>(<span class=\"params\">self, in_dir, mean, std</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">这两个function都是用来normalize data的</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-合成模型结构\"><a href=\"#4-合成模型结构\" class=\"headerlink\" title=\"4 合成模型结构\"></a>4 合成模型结构</h2><h3 id=\"4-1-总体结构\"><a href=\"#4-1-总体结构\" class=\"headerlink\" title=\"4.1 总体结构\"></a>4.1 总体结构</h3><p>　　FastSpeech 2 的模型架构下图(a)所示，它沿用 FastSpeech 中提出的 Feed-Forward Transformer（FFT）架构，编解码器的输入首先进行位置编码，之后进入FFT 块。FFT 块主要包括多头注意力模块和位置前馈网络，位置前馈网络可以由若干层Conv1d、LayerNorm 和Dropout 组成。在音素编码器和梅尔频谱解码器中加入了一个可变信息适配器（Variance Adaptor），从而支持在 FastSpeech 2 和 2s 中引入更多语音中变化的信息，例如时长、音高、音量（频谱能量）等，来解决语音合成中的一对多映射问题（文本到语音合成中，一条文本可以对应到多条可变的语音，这些可变信息包括语音时长、音高、音量等。FastSpeech 通过知识蒸馏降低语音训练目标的变化性来缓解一对多映射问题，但也造成了训练目标的信息损失。FastSpeech 2 通过引入对应的可变信息作为解码器输入，使输入输出信息尽量匹配，来解决这个问题），最终得到的输出为梅尔频谱图，而后交给声码器生成音频。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329204107873.png\" alt=\"FastSpeech 2 和 2s 模型框架。图（b）中的 LR 表示 FastSpeech 中的序列长度适配操作，图（c）中的 LN 表示层归一化，可变信息预测器（variance predictor）包括时长、音高和能量预测器。\" style=\"zoom:67%;\"></p>\n<h3 id=\"4-2-FFT（feed-forward-Transformer，前馈Transformer）\"><a href=\"#4-2-FFT（feed-forward-Transformer，前馈Transformer）\" class=\"headerlink\" title=\"4.2 FFT（feed-forward Transformer，前馈Transformer）\"></a>4.2 FFT（feed-forward Transformer，前馈Transformer）</h3><p>采用了Attention机制和1D卷积，其中多头注意力结构如下图所示：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/202111181632_987.png\" style=\"zoom:50%;\"></p>\n<p><img src=\"http://pic.panjiangtao.cn/img/202111181633_144.png\" style=\"zoom: 50%;\"></p>\n<p><img src=\"http://pic.panjiangtao.cn/img/202111181635_901.png\" style=\"zoom:50%;\"></p>\n<p>Attention 机制实质上就是一个寻址过程，通过给定一个任务相关的查询 Query 向量 Q，通过计算与 Key 的注意力分布并附加在 Value 上，从而计算 Attention Value</p>\n<ol>\n<li><p>Q，K，V 三个矩阵都来自同一个输入，通过线性变换得到 Q，K，V 三个向量。</p>\n</li>\n<li><p>计算自注意力得分，计算每个单词的自注意力，和这个单词对句子中其他单词的评分，通过矩阵Q、K相乘计算</p>\n</li>\n<li><p>第二步计算的分数进行缩放，这里通过除以 根号dk ( 论文中 <img src=\"http://pic.panjiangtao.cn/img/equation\" alt=\"[公式]\">，这可以让模型有更稳定的梯度，默认值是 64，也可以是其它值 )，将结果进行softmax 归一化。</p>\n</li>\n<li><p>最后乘以V</p>\n</li>\n<li><p>上面过程做 H 次，再把输出合并起来</p>\n</li>\n</ol>\n<h3 id=\"4-3-变量适配器（Variance-Adaptor）\"><a href=\"#4-3-变量适配器（Variance-Adaptor）\" class=\"headerlink\" title=\"4.3 变量适配器（Variance Adaptor）\"></a>4.3 变量适配器（Variance Adaptor）</h3><p><img src=\"http://pic.panjiangtao.cn/img/image-20220330192940582.png\" alt=\"Variance Adaptor\" style=\"zoom:50%;\"></p>\n<p>　　在对时长、基频和能量单独建模时，所使用的网络结构实际是相似的，在论文中称这种语音属性建模网络为变量适配器（Variance Adaptor）。时长预测的输出也作为基频和能量预测的输入。最后，基频预测和能量预测的输出，以及依靠时长信息展开的编码器输入元素加起来，作为下游网络的输入。变量适配器主要是由2 层卷积和1 层线性映射层组成，每层卷积后加ReLU 激活、LayerNorm 和Dropout。</p>\n<h4 id=\"4-3-1-基本结构Variance-Predictor\"><a href=\"#4-3-1-基本结构Variance-Predictor\" class=\"headerlink\" title=\"4.3.1 基本结构Variance Predictor\"></a>4.3.1 基本结构Variance Predictor</h4><p>　　对时长、基频和能量建模的基本结构为Variance Predictor，其代码如下所示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VariancePredictor</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Duration, Pitch and Energy Predictor&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, model_config</span>):</span></span><br><span class=\"line\">        super(VariancePredictor, self).__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.input_size = model_config[<span class=\"string\">&quot;transformer&quot;</span>][<span class=\"string\">&quot;encoder_hidden&quot;</span>]</span><br><span class=\"line\">        self.filter_size = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;filter_size&quot;</span>]</span><br><span class=\"line\">        self.kernel = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;kernel_size&quot;</span>]</span><br><span class=\"line\">        self.conv_output_size = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;filter_size&quot;</span>]</span><br><span class=\"line\">        self.dropout = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;dropout&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        self.conv_layer = nn.Sequential(OrderedDict([</span><br><span class=\"line\">                    (<span class=\"string\">&quot;conv1d_1&quot;</span>,Conv(self.input_size,</span><br><span class=\"line\">                            \t\tself.filter_size,</span><br><span class=\"line\">                            \t\tkernel_size=self.kernel,</span><br><span class=\"line\">                            \t\tpadding=(self.kernel - <span class=\"number\">1</span>) // <span class=\"number\">2</span>,),),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;relu_1&quot;</span>, nn.ReLU()),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;layer_norm_1&quot;</span>, nn.LayerNorm(self.filter_size)),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;dropout_1&quot;</span>, nn.Dropout(self.dropout)),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;conv1d_2&quot;</span>,Conv(self.filter_size,</span><br><span class=\"line\">                            \t\tself.filter_size,</span><br><span class=\"line\">                            \t\tkernel_size=self.kernel,</span><br><span class=\"line\">                            \t\tpadding=<span class=\"number\">1</span>,),),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;relu_2&quot;</span>, nn.ReLU()),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;layer_norm_2&quot;</span>, nn.LayerNorm(self.filter_size)),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;dropout_2&quot;</span>, nn.Dropout(self.dropout)),</span><br><span class=\"line\">              ]))</span><br><span class=\"line\"></span><br><span class=\"line\">        self.linear_layer = nn.Linear(self.conv_output_size, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, encoder_output, mask</span>):</span></span><br><span class=\"line\">        out = self.conv_layer(encoder_output)</span><br><span class=\"line\">        out = self.linear_layer(out)</span><br><span class=\"line\">        out = out.squeeze(<span class=\"number\">-1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> mask <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            out = out.masked_fill(mask, <span class=\"number\">0.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> out</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-2-Variance-Adaptor实现\"><a href=\"#4-3-2-Variance-Adaptor实现\" class=\"headerlink\" title=\"4.3.2 Variance Adaptor实现\"></a>4.3.2 Variance Adaptor实现</h4><p>　　利用该变量适配器对时长、基频和能量进行建模。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VarianceAdaptor</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Variance Adaptor&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, preprocess_config, model_config</span>):</span></span><br><span class=\"line\">        super(VarianceAdaptor, self).__init__()</span><br><span class=\"line\">        self.duration_predictor = VariancePredictor(model_config)</span><br><span class=\"line\">        self.length_regulator = LengthRegulator()</span><br><span class=\"line\">        self.pitch_predictor = VariancePredictor(model_config)</span><br><span class=\"line\">        self.energy_predictor = VariancePredictor(model_config)</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.pitch_bins =nn.Parameter(torch.exp(torch.linspace(</span><br><span class=\"line\">            np.log(pitch_min), np.log(pitch_max), n_bins - <span class=\"number\">1</span>)),requires_grad=<span class=\"literal\">False</span>,)</span><br><span class=\"line\">        self.energy_bins = nn.Parameter(torch.exp(torch.linspace(</span><br><span class=\"line\">            np.log(energy_min), np.log(energy_max), n_bins - <span class=\"number\">1</span>)),requires_grad=<span class=\"literal\">False</span>,)</span><br><span class=\"line\">\t\tself.pitch_embedding = nn.Embedding(</span><br><span class=\"line\">            n_bins, model_config[<span class=\"string\">&quot;transformer&quot;</span>][<span class=\"string\">&quot;encoder_hidden&quot;</span>])</span><br><span class=\"line\">        self.energy_embedding = nn.Embedding(</span><br><span class=\"line\">            n_bins, model_config[<span class=\"string\">&quot;transformer&quot;</span>][<span class=\"string\">&quot;encoder_hidden&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self,x,src_mask,mel_mask=None,max_len=None,pitch_target=None,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">        energy_target=None,duration_target=None,p_control=<span class=\"number\">1.0</span>,e_control=<span class=\"number\">1.0</span>,d_control=<span class=\"number\">1.0</span></span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        log_duration_prediction = self.duration_predictor(x, src_mask)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> duration_target <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            x, mel_len = self.length_regulator(x, duration_target, max_len)</span><br><span class=\"line\">            duration_rounded = duration_target</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            duration_rounded = torch.clamp(</span><br><span class=\"line\">                (torch.round(torch.exp(log_duration_prediction) - <span class=\"number\">1</span>) * d_control),min=<span class=\"number\">0</span>)</span><br><span class=\"line\">            x, mel_len = self.length_regulator(x, duration_rounded, max_len)</span><br><span class=\"line\">            mel_mask = get_mask_from_lengths(mel_len)</span><br><span class=\"line\"></span><br><span class=\"line\">        pitch_prediction, pitch_embedding = self.get_pitch_embedding(</span><br><span class=\"line\">            x, pitch_target, mel_mask, p_control)</span><br><span class=\"line\">            x = x + pitch_embedding</span><br><span class=\"line\">        energy_prediction, energy_embedding = self.get_energy_embedding(</span><br><span class=\"line\">            x, energy_target, mel_mask, p_control</span><br><span class=\"line\">            x = x + energy_embedding</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> x,pitch_prediction,energy_prediction,log_duration_prediction,</span><br><span class=\"line\">            duration_rounded,mel_len,mel_mask</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-声码器\"><a href=\"#5-声码器\" class=\"headerlink\" title=\"5 声码器\"></a>5 声码器</h2><h3 id=\"5-1-MelGan\"><a href=\"#5-1-MelGan\" class=\"headerlink\" title=\"5.1 MelGan\"></a>5.1 MelGan</h3><p>论文链接： <a href=\"http://arxiv.org/abs/1910.06711\">MelGAN: Generative Adversarial Networks for Conditional Waveform Synthesis</a></p>\n<p>开源项目：<a href=\"https://github.com/rishikksh20/melgan\">Multi-band MelGAN and Full band MelGAN</a></p>\n<p>演示demo：<a href=\"http://www.panjiangtao.cn/melgan/\">MelGan声码器效果演示</a></p>\n<h4 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h4><ul>\n<li>MelGAN是一种非自回归前馈卷积架构，是第一个由GAN去实现原始音频的生成，在没有额外的蒸馏和感知损失的引入下仍能产生高质量的语音合成模型。</li>\n<li>MelGAN解码器可替代自回归模型，以生成原始音频。</li>\n<li>MelGAN的速度明显快于其他Mel谱图转换到音频的方法，在保证音频质量没有明显下降的情况下比迄今为止最快的可用模型快10倍。</li>\n</ul>\n<p>模型包括两部分: Generator（生成器） 和 Discriminator（判别器）。</p>\n<h4 id=\"5-1-1-生成器\"><a href=\"#5-1-1-生成器\" class=\"headerlink\" title=\"5.1.1 生成器\"></a>5.1.1 生成器</h4><p>　　输入为mel-spectrogram，输出为raw waveform. 从 mel-spectrogram到 audio的过程很显然是一个上采样的过程。</p>\n<p>　　这里的上采样是由一维反卷积(transpose1d)实现的，上采样的倍数如何确定呢？</p>\n<p>　　需要注意一下，上采样的倍数是由hop_size来决定的，为什么呢？</p>\n<p>　　需要明白一点，mel帧数 * 帧移 = 音频长度（采样点个数，可换算为音频时长，具体怎么做不用说了吧）</p>\n<p>　　因此，对于22050采样率， hopsize大小设置为256， 那么对应的mel-spectrogram需要上采样 256倍</p>\n<p>　　如果是16000采样率呢？ 使用帧长是50ms,帧移 12.5ms 那么hopsize就是200啦，所以上采样倍数就是200倍啦.</p>\n<p>　　搞清楚了这些，那么Generator Upsampling层中的上采样倍数也就好理解了，22050的采样倍数为 8 X 8 X 2 X 2 = 256</p>\n<h5 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h5><p><img src=\"http://pic.panjiangtao.cn/img/20200310123249936.png\" alt=\"MelGAN生成器结构\" style=\"zoom: 50%;\"></p>\n<p>其中残差块结构：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/2020031012332078.png\" alt=\"MelGAN生成器残差快结构\" style=\"zoom: 33%;\"></p>\n<p>　　经过一层Conv层后送到上采样网络块，上采样网络块一共有4个，依次为8x,8x,2x,2x，每个上采样网络块中嵌套残差块，每个残差块有三层，依次dilation为1,3,9，最后经过一层conv层得到音频输出，由于音频的channel表示为1，所以最后一层的channel设为1。</p>\n<h5 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h5><ol>\n<li><p>Mel频谱图的时间分辨率比原始音频低256倍，所以使用了堆叠的反卷积层进行unsample。</p>\n</li>\n<li><p>条件信息足够的情况下，在输入处增加噪声是不必要的。所以与传统GAN不同，并没有增加noise input</p>\n</li>\n<li><p>使用残差块解决梯度消散的问题，空洞卷积层的感受野随层数的增加而指数增加，能够有效地增加每个输出时间步长的感应野。</p>\n</li>\n<li><p>反卷积层的k-size和stride仔细选择决定的，可以减少artifacts的出现。</p>\n</li>\n<li><p>归一化选择Weight Norm，因为不会限制判别器的空间，也不会对激活进行归一化</p>\n</li>\n</ol>\n<h5 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对一维卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConv1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.Conv1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#对一维反卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConvTranspose1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.ConvTranspose1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#残差块中一层的结构</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ResnetBlock</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, dim, dilation=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        <span class=\"comment\">#依次为两层卷积层</span></span><br><span class=\"line\">        self.block = nn.Sequential(</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            nn.ReflectionPad1d(dilation),</span><br><span class=\"line\">            WNConv1d(dim, dim, kernel_size=<span class=\"number\">3</span>, dilation=dilation),</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            WNConv1d(dim, dim, kernel_size=<span class=\"number\">1</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        self.shortcut = WNConv1d(dim, dim, kernel_size=<span class=\"number\">1</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.shortcut(x) + self.block(x) <span class=\"comment\">#残差连接</span></span><br><span class=\"line\"><span class=\"comment\">#生成器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Generator</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, input_size, ngf, n_residual_layers</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        ratios = [<span class=\"number\">8</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">        self.hop_length = np.prod(ratios)</span><br><span class=\"line\">        mult = int(<span class=\"number\">2</span> ** len(ratios))</span><br><span class=\"line\">\t\t<span class=\"comment\">#第一层卷积</span></span><br><span class=\"line\">        model = [</span><br><span class=\"line\">            nn.ReflectionPad1d(<span class=\"number\">3</span>),</span><br><span class=\"line\">            WNConv1d(input_size, mult * ngf, kernel_size=<span class=\"number\">7</span>, padding=<span class=\"number\">0</span>),</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 上采样阶段，共4个，依次为8x,8x,2x,2x的UpSampling layer</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, r <span class=\"keyword\">in</span> enumerate(ratios):</span><br><span class=\"line\">            model += [</span><br><span class=\"line\">                nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">                WNConvTranspose1d(</span><br><span class=\"line\">                    mult * ngf,</span><br><span class=\"line\">                    mult * ngf // <span class=\"number\">2</span>,</span><br><span class=\"line\">                    kernel_size=r * <span class=\"number\">2</span>,</span><br><span class=\"line\">                    stride=r,</span><br><span class=\"line\">                    padding=r // <span class=\"number\">2</span> + r % <span class=\"number\">2</span>,</span><br><span class=\"line\">                    output_padding=r % <span class=\"number\">2</span>,</span><br><span class=\"line\">                ),</span><br><span class=\"line\">            ]</span><br><span class=\"line\">\t\t\t<span class=\"comment\">#加入残差块，每个残差块中有3层，dilation分别为1,3,9</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(n_residual_layers):</span><br><span class=\"line\">                model += [ResnetBlock(mult * ngf // <span class=\"number\">2</span>, dilation=<span class=\"number\">3</span> ** j)]</span><br><span class=\"line\"></span><br><span class=\"line\">            mult //= <span class=\"number\">2</span></span><br><span class=\"line\">\t\t<span class=\"comment\">#最后一层卷积层</span></span><br><span class=\"line\">        model += [</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            nn.ReflectionPad1d(<span class=\"number\">3</span>),</span><br><span class=\"line\">            WNConv1d(ngf, <span class=\"number\">1</span>, kernel_size=<span class=\"number\">7</span>, padding=<span class=\"number\">0</span>),</span><br><span class=\"line\">            nn.Tanh(),</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        self.model = nn.Sequential(*model)</span><br><span class=\"line\">        self.apply(weights_init)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.model(x)</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-1-2-判别器\"><a href=\"#5-1-2-判别器\" class=\"headerlink\" title=\"5.1.2 判别器\"></a>5.1.2 判别器</h4><p>　　论文提出了multi-scale的discriminator, 基于的假设是每个scale的discriminator可以学习到不同频率段的音频的特征。</p>\n<p>　　每个discriminator的网络结构是由前后各一层1维卷积 和 4层分组卷积构成的downsampling layer构成. discriminator输入是由ground truth的音频和gererator生成的fake音频两部分构成的。 输入维度为[B, T, 1]， 输出维度也是[B,T,1], 中间变换的只是通道数的变化， 最后一层的输出和倒数第二层卷积网络的输出被分别用来计算 featuremap 和 feature_score, 这两部分被用来计算 generator的<em>feature_matching_loss</em>(L1_loss) 和discriminator的<em>mse_loss</em></p>\n<p>　　上面我们知道了Generator输入mel-spectrogram,生成音频audio, 这个音频可以表示为G （s）, s为mel-spectrogram. 判别器要判断生成器生成音频的真假，这里就涉及到Gan模型的原理啦，</p>\n<p>　　Generator输入mel-spectrogram生成音频(fake), Discriminator输入真(real)音频和假(fake)音频，学习一个二分类器（可以这么理解），这里使用的是mse损失来最小化real与1的差异，fake与0的差异。</p>\n<p>　　通过对抗学习，使得generator生成的音频达到判别器无法判断真假的效果(loss接近0.5)。</p>\n<h5 id=\"结构-1\"><a href=\"#结构-1\" class=\"headerlink\" title=\"结构\"></a>结构</h5><p><img src=\"https://img-blog.csdnimg.cn/20200310123441481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTYyNzA0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"melgan判别器模型\" style=\"zoom:50%;\"></p>\n<h5 id=\"损失函数：\"><a href=\"#损失函数：\" class=\"headerlink\" title=\"损失函数：\"></a>损失函数：</h5><p><img src=\"http://pic.panjiangtao.cn/img/image-20220331174705235.png\" alt=\"melgan判别器损失函数\" style=\"zoom: 67%;\"></p>\n<p>x表示音频，s表示mel谱图，z表示高斯噪声</p>\n<h5 id=\"源码-1\"><a href=\"#源码-1\" class=\"headerlink\" title=\"源码\"></a>源码</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对一维卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConv1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.Conv1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#对一维反卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConvTranspose1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.ConvTranspose1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#Discriminator Block结构</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NLayerDiscriminator</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, ndf, n_layers, downsampling_factor</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        model = nn.ModuleDict()</span><br><span class=\"line\">        <span class=\"comment\">#第一层卷积</span></span><br><span class=\"line\">        model[<span class=\"string\">&quot;layer_0&quot;</span>] = nn.Sequential(</span><br><span class=\"line\">            nn.ReflectionPad1d(<span class=\"number\">7</span>),</span><br><span class=\"line\">            WNConv1d(<span class=\"number\">1</span>, ndf, kernel_size=<span class=\"number\">15</span>),</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>, <span class=\"literal\">True</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        nf = ndf</span><br><span class=\"line\">        stride = downsampling_factor</span><br><span class=\"line\">        <span class=\"comment\">#4层4x Downsampling Layer</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, n_layers + <span class=\"number\">1</span>):</span><br><span class=\"line\">            nf_prev = nf</span><br><span class=\"line\">            nf = min(nf * stride, <span class=\"number\">1024</span>)</span><br><span class=\"line\">            model[<span class=\"string\">&quot;layer_%d&quot;</span> % n] = nn.Sequential(</span><br><span class=\"line\">                WNConv1d(</span><br><span class=\"line\">                    nf_prev,</span><br><span class=\"line\">                    nf,</span><br><span class=\"line\">                    kernel_size=stride * <span class=\"number\">10</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">                    stride=stride,</span><br><span class=\"line\">                    padding=stride * <span class=\"number\">5</span>,</span><br><span class=\"line\">                    groups=nf_prev // <span class=\"number\">4</span>,</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                nn.LeakyReLU(<span class=\"number\">0.2</span>, <span class=\"literal\">True</span>),</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">        nf = min(nf * <span class=\"number\">2</span>, <span class=\"number\">1024</span>)</span><br><span class=\"line\">        <span class=\"comment\">#第2层卷积层</span></span><br><span class=\"line\">        model[<span class=\"string\">&quot;layer_%d&quot;</span> % (n_layers + <span class=\"number\">1</span>)] = nn.Sequential(</span><br><span class=\"line\">            WNConv1d(nf_prev, nf, kernel_size=<span class=\"number\">5</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">2</span>),</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>, <span class=\"literal\">True</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"comment\">#第3层卷积层</span></span><br><span class=\"line\">        model[<span class=\"string\">&quot;layer_%d&quot;</span> % (n_layers + <span class=\"number\">2</span>)] = WNConv1d(</span><br><span class=\"line\">            nf, <span class=\"number\">1</span>, kernel_size=<span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        self.model = model</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        results = [] <span class=\"comment\">#存放每层输出的feature map</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, layer <span class=\"keyword\">in</span> self.model.items():</span><br><span class=\"line\">            x = layer(x)</span><br><span class=\"line\">            results.append(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> results</span><br><span class=\"line\"><span class=\"comment\">#完整的判别器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Discriminator</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, num_D, ndf, n_layers, downsampling_factor</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        self.model = nn.ModuleDict()</span><br><span class=\"line\">        <span class=\"comment\">#3个Discriminator Block</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num_D):</span><br><span class=\"line\">            self.model[<span class=\"string\">f&quot;disc_<span class=\"subst\">&#123;i&#125;</span>&quot;</span>] = NLayerDiscriminator(</span><br><span class=\"line\">                ndf, n_layers, downsampling_factor</span><br><span class=\"line\">            )</span><br><span class=\"line\">\t\t<span class=\"comment\">#downsample函数</span></span><br><span class=\"line\">        self.downsample = nn.AvgPool1d(<span class=\"number\">4</span>, stride=<span class=\"number\">2</span>, padding=<span class=\"number\">1</span>, count_include_pad=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        self.apply(weights_init)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        results = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, disc <span class=\"keyword\">in</span> self.model.items():</span><br><span class=\"line\">            results.append(disc(x)) <span class=\"comment\">#每次降频处理得到的结果依次存放到result</span></span><br><span class=\"line\">            x = self.downsample(x) <span class=\"comment\">#对输入x进行降频处理</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> results</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":15752,"excerpt":"<h1 id=\"语音合成模型Fastspeech2技术报告\"><a href=\"#语音合成模型Fastspeech2技术报告\" class=\"headerlink\" title=\"语音合成模型Fastspeech2技术报告\"></a>语音合成模型Fastspeech2技术报告</h1><div class=\"note info\">\n            <p>论文：<a href=\"https://arxiv.org/abs/2006.04558v1\">FastSpeech 2: Fast and High-Quality End-to-End Text to Speech</a><br>开源项目：<a href=\"https://github.com/ming024/FastSpeech2\">Fastspeech2 Github开源项目</a><br>合成demo：<a href=\"http://www.panjiangtao.cn/fastspeech2/\">FastSpeech 2 语音合成演示</a></p>\n          </div>","more":"<h2 id=\"服务器部署演示\"><a href=\"#服务器部署演示\" class=\"headerlink\" title=\"服务器部署演示\"></a>服务器部署演示</h2><video src=\"http://file.panjiangtao.cn/fastspeech2_server.mp4\" type=\"video/mp4\" poster=\"http://pic.panjiangtao.cn/img/image-20220408160721138.png\" controls=\"controls\">\n    <p>你的浏览器不支持video标签.</p>\n</video>\n\n<h2 id=\"1-语音质量评估\"><a href=\"#1-语音质量评估\" class=\"headerlink\" title=\"1 语音质量评估\"></a>1 语音质量评估</h2><h3 id=\"1-1-主观评价\"><a href=\"#1-1-主观评价\" class=\"headerlink\" title=\"1.1 主观评价\"></a>1.1 主观评价</h3><p>　　主观评价是通过人类对语音进行打分，比如平均意见得分（Mean Opinion Score，MOS）、众包平均意见得分（CrowdMOS，CMOS）和ABX 测试。主观评价中的MOS 评测是一种较为宽泛的说法，由于给出评测分数的主体是人类，因此可以灵活测试语音的不同方面。比如在语音合成领域，主要有自然度MOS（MOS of Naturalness）和相似度MOS（MOS of Similarity）。<br>　　但是人类给出的评分结果受到的干扰因素较多，谷歌对合成语音的主观评估方法进行了比较，在评估较长语音中的单个句子时，音频样本的呈现形式会显著影响参与人员给出的结果。比如仅提供单个句子而不提供上下文，与相同句子给出语境相比，被测人员给出的评分差异显著。国际电信联盟（International Telecommunication Union，ITU）将MOS 评测规范化为ITU-T P.800，其中绝对等级评分（Absolute Category Rating，ACR）应用最为广泛，ACR 的详细评估标准如下表所示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329115941800.png\" alt=\"ACR评分表\"></p>\n<p>　　在使用ACR 方法对语音质量进行评价时，参与评测的人员（简称被试）对语音整体质量进行打分，分值范围为1 5 分，分数越大表示语音质量越好。MOS 大于4 时，可以认为该音质受到大部分被试的认可，音质较好；若MOS 低于3，则该语音有比较大的缺陷，大部分被试并不满意该音质。</p>\n<h4 id=\"缺点：\"><a href=\"#缺点：\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4><p>　　MOS是一种主观量度，它的优点是显而易见的，但它的缺点也很多。首先，为了保证MOS的可信度足够高，一般来说需要雇佣大量的评价者进行评价，这就导致成本很高；另外，MOS的大小依赖于评价者，有的评价者很苛刻，那么她给的分数就会偏低，而有的评价者却是相反的。除此之外，MOS还会受到听语音时的环境，评价者的状态等多种因素的影响。</p>\n<p>　　下图展示了一次评价中评价者给出的MOS分数的均值和标准差的分布，我们可以看到，标准差最大达到了2，这就说明评价者在某些语音的质量上有很大的分歧。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/v2-909d9159b4b4a7c9c43ce8dd23c23d1d_720w.jpg\" alt=\"MOS分数均值、标准差\" style=\"zoom: 67%;\"></p>\n<h3 id=\"1-2-客观评价\"><a href=\"#1-2-客观评价\" class=\"headerlink\" title=\"1.2 客观评价\"></a>1.2 客观评价</h3><h4 id=\"1-2-1-MOSNet（开源）\"><a href=\"#1-2-1-MOSNet（开源）\" class=\"headerlink\" title=\"1.2.1 MOSNet（开源）\"></a>1.2.1 MOSNet（开源）</h4><p>　　下图为MOSNet的网络结构，就是LSTM、CNN以及它们的组合。注意这里模型输出两种MOS分数，一是frame-level的分数，另一个是utterance-level的分数。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329120657195.png\" alt=\"MOSNet结构图\" style=\"zoom:67%;\"></p>\n<p>　　损失函数为：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329120853312.png\" alt=\"image-20220329120853312\" style=\"zoom:50%;\"></p>\n<p>　　上式第一项是utterance-level的MSE，第二项是frame-level的MSE。</p>\n<h5 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h5><p>　　首先不同工作所做的MOS评测所得到的数据是很难合并在一起的，因为不同MOS评测的分数分布都是不同的。所以像VCC 2018这样的大量且统一评价的情况是比较少的，因此简而言之，数据量还是不足。</p>\n<p>　　另外，如何增加模型的泛化性也是一个重要的问题，举例来说，我们在VCC 2018上训练的模型是否能够预测其它的MOS评测，比如VCC 2019的分数呢？实际上这被证明是很难的。</p>\n<h4 id=\"1-2-2-SESQA（未开源）\"><a href=\"#1-2-2-SESQA（未开源）\" class=\"headerlink\" title=\"1.2.2 SESQA（未开源）\"></a>1.2.2 SESQA（未开源）</h4><p>　　下图为SESQA模型结构，实际上是一个multi-task模型。模型接受一个语音的输入x，然后利用神经网络生成x的隐表示z，之后通过计算各种loss来学习到好的数据表示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329121351363.png\" alt=\"SESQA模型结构\" style=\"zoom:50%;\"></p>\n<p>　　SESQA中包含8种loss，但是在ablation experiment中很多loss被证明是没什么用的，因此这里我将介绍最重要的几种loss，对没有介绍到的loss感兴趣的读者可以参考原论文。</p>\n<p>　　首先是MOS loss，这个loss是针对有标注的数据设计的：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329121709812.png\" alt=\"MOS loss\" style=\"zoom: 67%;\"></p>\n<p>　　然后是pairwise ranking loss：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/v2-ba26d4f46e9e8e542a381f77f0bc0d33_720w.png\" alt=\"pairwise ranking loss\" style=\"zoom: 67%;\"></p>\n<p>　　这个loss中$s_i$代表原语音$x_i$的分数，而$s_i$是在原语音$x_i$中加入一些噪声之后的语音$x_i$的分数，这样从直觉上来说一定有$s_i&gt;s_j$，这个loss会对不符合这个限制的输出进行惩罚，$\\alpha$是margin参数。</p>\n<p>　　最后是score consistency loss：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329121732291.png\" alt=\"score consistency loss\" style=\"zoom:50%;\"></p>\n<p>这个loss中，$s_k$和$s_l$是两个类似的语音$x_k$和$x_l$的分数，因此有$s_k\\approx s_l$；相反$s_i$和$s_j$是品质明显差别的两个语音$x_i$和$x_j$的分数，因此有$|s_i-s_j|&gt;\\beta$。loss的中间一项拓展了这两个关系，假设语音分别是语音$x_{ik}$和$x_{il}$的劣化版，且$x_{ik}$和$x_{il}$的品质类似，那么有：$s_{ik}-s_{jk}=s_{il}-s_{jl}$</p>\n<h2 id=\"2-语音信号特征\"><a href=\"#2-语音信号特征\" class=\"headerlink\" title=\"2 语音信号特征\"></a>2 语音信号特征</h2><h3 id=\"2-1-短时能量\"><a href=\"#2-1-短时能量\" class=\"headerlink\" title=\"2.1 短时能量\"></a>2.1 短时能量</h3><p>　　短时能量体现的是信号在不同时刻的强弱程度。设第n 帧语音信号的短时能量用𝐸𝑛 表示，则其计算公式为：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329161118385.png\" alt=\"短时能量公式\" style=\"zoom: 67%;\"></p>\n<p>　　上式中，𝑀 为帧长，$𝑥_𝑛(𝑚)$为该帧中的样本点。</p>\n<h3 id=\"2-2-基频和基音周期\"><a href=\"#2-2-基频和基音周期\" class=\"headerlink\" title=\"2.2 基频和基音周期\"></a>2.2 基频和基音周期</h3><p>　　基音周期反映了声门相邻两次开闭之间的时间间隔，基频（fundamental frequency，F0）则是基音周期的倒数，对应着声带振动的频率，代表声音的音高，声带振动越快，基频越高。它是语音激励源的一个重要特征，比如可以通过基频区分性别。一般来说，成年男性基频在100-250Hz 左右，成年女性基频在150-350Hz 左右，女声的音高一般比男声稍高。</p>\n<p>　　人类可感知声音的频率大致在20-20000Hz 之间，人类对于基频的感知遵循对数律，也就是说，人们会感觉100Hz 到200Hz 的差距，与200Hz 到400Hz 的差距相同。因此，音高常常用基频的对数来表示。在音乐上，把相差一倍的两个基频的差距称为一个八度（octave）；把一个八度12 等分，每一份称为一个半音（semitone）；把一个半音再100 等分，每一份称为一个音分（cent）。</p>\n<p>　　基频是语音的重要特征，在包括语音合成的语音处理中有着广泛的应用，比如语音转换（Voice Conversion，VC）和语音合成中基频是一个强特征。基频的提取可以分为时域法和频域法。时域法以波形为输入，基本原理是寻找波形的最小正周期；频域法则会先对信号进行傅里叶变换，得到频谱，频谱在基频的整倍数处有尖峰，频域法的基本原理就是求出这些尖峰频率的最大公约数。但是考虑到基频并非每一帧都有，因此在提取基频前后，都需要判断有无基频，称之为清浊音判断（Unvoiced/Voiced Decision，U/V Decision）。语音的基频往往随着时间变化，在提取基频之前往往要进行分帧，逐帧提取的基频常常含有错误，其中常见的错误就是倍频错误和半频错误，也就是提取出来的基频是真实基频的两倍或者一半，因此基频提取后要进行平滑操作。常见的基频提取算法有基于信号处理时域法的 YIN1，基于信号处理频域法的 SWIPE2，基于机器学习时域法的 CREPE3和基于机器学习频域法的SPICE4。常用的基频提取工具有pyWORLD，Parselmouth，CREPE，YIN等。参见基频提取算法综述。</p>\n<h3 id=\"2-3-音高\"><a href=\"#2-3-音高\" class=\"headerlink\" title=\"2.3 音高\"></a>2.3 音高</h3><p>　　音高（pitch）是由声音的基频决定的，音高和基频常常混用。可以这样认为，音高（pitch）是稀疏离散化的基频（F0）。由规律振动产生的声音一般都会有基频，比如语音中的元音和浊辅音；也有些声音没有基频，比如人类通过口腔挤压气流的清辅音。在汉语中，元音有a/e/i/o/u，浊辅音有y/w/v，其余音素比如b/p/q/x 等均为清辅音，在发音时，可以通过触摸喉咙感受和判断发音所属音素的种类。</p>\n<h3 id=\"2-4-MFCC和语谱图\"><a href=\"#2-4-MFCC和语谱图\" class=\"headerlink\" title=\"2.4 MFCC和语谱图\"></a>2.4 MFCC和语谱图</h3><p>　　对语音进行分析和处理时，部分信息在时域上难以分析，因此往往会提取频谱特征。在语音合成中，通常将频谱作为中间声学特征：首先将文本转换为频谱，再将频谱转换为波形；在语音识别中，则将频谱或者MFCC作为中间声学特征。语音通过预加重、分帧、加窗、傅里叶变换之后，取功率谱的幅度平方，进行梅尔滤波取对数之后，就得到了梅尔频谱（或称FilterBank/FBank），如果再进行离散余弦变换，就能够获得MFCC。语音通常是一个短时平稳信号，在进行傅里叶变换之前，一般要进行分帧，取音频的一个小片段进行短时傅里叶变换（STFT）。STFT 的结果是一个复数，包括幅度和相位信息，将该复数中的频率作为横轴，幅度作为纵轴，如图2.3所示，就组成了频谱图，将频谱图中的尖峰点连接起来，就形成了频谱包络。注意到，频谱图反映一个语音帧的频域情况，没有时间信息。因此，将每个帧对应的频谱图连接起来，以时间作为横轴，频率作为纵轴，颜色深浅表示幅度，如图2.4下面红图所示，就组成了语谱图。语谱图实际上是一个三维图，横轴时间，纵轴频率，颜色深浅表示幅度大小，一般来说，颜色越深，表示幅度值越大。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329161609642.png\" alt=\"图2.3: 频谱图\" style=\"zoom: 50%;\"></p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329161653885.png\" alt=\"图2.4: 波形和对应的语谱图\" style=\"zoom:67%;\"></p>\n<h2 id=\"3-数据预处理\"><a href=\"#3-数据预处理\" class=\"headerlink\" title=\"3 数据预处理\"></a>3 数据预处理</h2><h3 id=\"3-1-将中文转化为拼音\"><a href=\"#3-1-将中文转化为拼音\" class=\"headerlink\" title=\"3.1 将中文转化为拼音\"></a>3.1 将中文转化为拼音</h3><p>　　首先准备好音频数据和对应的文字，如果文字是中文需要转化为拼音，我使用了pypinyin进行转化，每个中文汉字对应一个拼音，脚本如下，将中文字转为拼音：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> pypinyin <span class=\"keyword\">import</span> pinyin, lazy_pinyin, Style</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">root_dir = <span class=\"string\">&quot;../train/&quot;</span></span><br><span class=\"line\">pattern = re.compile(<span class=\"string\">r&#x27;(.*)\\.txt$&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> root, dir, files <span class=\"keyword\">in</span> os.walk(root_dir):</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> filename <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">\t\t<span class=\"comment\">#print(filename)</span></span><br><span class=\"line\">\t\toutput = pattern.match(filename)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> output <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t\tprint(root, filename)</span><br><span class=\"line\">\t\t\ttext_file = open(root+<span class=\"string\">&quot;/&quot;</span>+filename)</span><br><span class=\"line\">\t\t\tline = text_file.read().strip()</span><br><span class=\"line\">\t\t\tline = line.replace(<span class=\"string\">&quot;，&quot;</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">\t\t\tpinyin =  lazy_pinyin(line, style=Style.TONE3, neutral_tone_with_five=<span class=\"literal\">True</span>)</span><br><span class=\"line\">\t\t\tpinyinline = <span class=\"string\">&#x27; &#x27;</span>.join(pinyin)</span><br><span class=\"line\">\t\t\tprint(line)</span><br><span class=\"line\">\t\t\ttarget_text_file = open(root+<span class=\"string\">&quot;/&quot;</span>+output.group(<span class=\"number\">1</span>)+<span class=\"string\">&quot;.lab&quot;</span>, <span class=\"string\">&quot;w&quot;</span>)</span><br><span class=\"line\">\t\t\ttarget_text_file.write(pinyinline)</span><br><span class=\"line\">\t\t\ttarget_text_file.close()</span><br></pre></td></tr></table></figure>\n<p>　　保证音频文件的名字和脚本的文件名仅仅后缀不同：</p>\n<p>　　例如：T0055G0002S0001.wav 和 T0055G0002S0001.lab</p>\n<p>　　其中lab文件内容：yi3 hou4 ni3 shi4 nan2 hai2 zi5 原来的中文为：“以后你是男孩子”</p>\n<h3 id=\"3-2-MFA\"><a href=\"#3-2-MFA\" class=\"headerlink\" title=\"3.2 MFA\"></a>3.2 MFA</h3><p>　　<a href=\"https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner/\">Montreal Forced Aligner</a> (MFA)，一种forced alignment工具。如果你熟悉有关工具的话，你可能会知道Prosodylab-Aligner这个forced alignment工具，而MFA正是它的升级版，拥有更好的性能。另外MFA使用了Kaldi而不是HTK，因此可以作为单独的package来使用。作者在英语数据上测试了MFA在单词和音素alignment上的表现，并和两个之前的工作进行了对比，实验结果显示MFA有更好的表现。</p>\n<p>　　Forced alignment （以下简称FA，不过请注意这个简称不常用）是一个在speech processing中常见的任务。给定一段语音和它的文本，FA需要找到每个单词或是音素对应的时间段。FA中我们一般假设文本和语音的alignment是对角线型的，也就是说如果在text中某个音素出现在另一个音素的后面，那么在语音中这个关系也是成立的，反之亦同。</p>\n<h4 id=\"3-2-1-MFA安装\"><a href=\"#3-2-1-MFA安装\" class=\"headerlink\" title=\"3.2.1 MFA安装\"></a>3.2.1 MFA安装</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install montreal-forced-aligner</span><br><span class=\"line\">mfa thirdparty download</span><br><span class=\"line\">pip install montreal-forced-aligner -U</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-2-2-使用前准备\"><a href=\"#3-2-2-使用前准备\" class=\"headerlink\" title=\"3.2.2 使用前准备\"></a>3.2.2 使用前准备</h4><ul>\n<li>语言对应的发音词典，对于我们常用的英文、中文，都有比较好的可用的词典。</li>\n<li>语音数据（<code>.wav</code>如果你没安装sox）</li>\n<li>文本数据，注意文本数据的文件名中除了扩展名之外其他的部分要和对应的语音数据一一对应。</li>\n</ul>\n<h4 id=\"3-2-3-使用\"><a href=\"#3-2-3-使用\" class=\"headerlink\" title=\"3.2.3 使用\"></a>3.2.3 使用</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mfa model download acoustic english  <span class=\"comment\">#下载English acoustic model</span></span><br><span class=\"line\">mfa align /path/to/dataset /path/to/lexicon.txt english /output/path  <span class=\"comment\"># 使用预训练模型来进行alignment：</span></span><br></pre></td></tr></table></figure>\n<p>　　经过MFA处理后，生成一个包含所有音频的对齐文件.TextGrid</p>\n<h3 id=\"3-3-提取能量、音高、梅尔频谱和音素时长信息\"><a href=\"#3-3-提取能量、音高、梅尔频谱和音素时长信息\" class=\"headerlink\" title=\"3.3 提取能量、音高、梅尔频谱和音素时长信息\"></a>3.3 提取能量、音高、梅尔频谱和音素时长信息</h3><p>　　预处理代码中下面有 6个functions,作用如下述所示，把语音数据，对应的textgrid数据和.lab 文本数据进行整合，提取出需要的energy, pitch, mel spectrogram, duration等信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, config</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;加载configs中配置，按照预设路径读入数据&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">build_from_path</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">主要程序，主要作用是：</span></span><br><span class=\"line\"><span class=\"string\">     1.加载从precess_utterance这个function里获得的信息</span></span><br><span class=\"line\"><span class=\"string\">     2.对信息进行normalize,</span></span><br><span class=\"line\"><span class=\"string\">     3.最后按照指定路径写入文件</span></span><br><span class=\"line\"><span class=\"string\">      （speaker.json, stats.json, train.txt, val.txt)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">process_utterance</span>(<span class=\"params\">self, speaker, basename</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">被build_from_path这个function调用</span></span><br><span class=\"line\"><span class=\"string\">主要作用是</span></span><br><span class=\"line\"><span class=\"string\">        1.通过get_alignment这个function获取textgrid files里的duration信息</span></span><br><span class=\"line\"><span class=\"string\">        2.计算出wav files里的pitch</span></span><br><span class=\"line\"><span class=\"string\">        3.通过stft（短时傅里叶变换）把声音文件转成mel频谱</span></span><br><span class=\"line\"><span class=\"string\">        4.计算出wav files里的energy</span></span><br><span class=\"line\"><span class=\"string\">        5.将获得的pitch, energy, mel，duration信息分别写入以.npy为后缀的文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_alignment</span>(<span class=\"params\">self, tier</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">被process_utterance这个function调用</span></span><br><span class=\"line\"><span class=\"string\">主要作用是提取textgrid files里的phone,duration,start_time, end_time等信息</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_outlier</span>(<span class=\"params\">self, values</span>):</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">normalize</span>(<span class=\"params\">self, in_dir, mean, std</span>):</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">这两个function都是用来normalize data的</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-合成模型结构\"><a href=\"#4-合成模型结构\" class=\"headerlink\" title=\"4 合成模型结构\"></a>4 合成模型结构</h2><h3 id=\"4-1-总体结构\"><a href=\"#4-1-总体结构\" class=\"headerlink\" title=\"4.1 总体结构\"></a>4.1 总体结构</h3><p>　　FastSpeech 2 的模型架构下图(a)所示，它沿用 FastSpeech 中提出的 Feed-Forward Transformer（FFT）架构，编解码器的输入首先进行位置编码，之后进入FFT 块。FFT 块主要包括多头注意力模块和位置前馈网络，位置前馈网络可以由若干层Conv1d、LayerNorm 和Dropout 组成。在音素编码器和梅尔频谱解码器中加入了一个可变信息适配器（Variance Adaptor），从而支持在 FastSpeech 2 和 2s 中引入更多语音中变化的信息，例如时长、音高、音量（频谱能量）等，来解决语音合成中的一对多映射问题（文本到语音合成中，一条文本可以对应到多条可变的语音，这些可变信息包括语音时长、音高、音量等。FastSpeech 通过知识蒸馏降低语音训练目标的变化性来缓解一对多映射问题，但也造成了训练目标的信息损失。FastSpeech 2 通过引入对应的可变信息作为解码器输入，使输入输出信息尽量匹配，来解决这个问题），最终得到的输出为梅尔频谱图，而后交给声码器生成音频。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220329204107873.png\" alt=\"FastSpeech 2 和 2s 模型框架。图（b）中的 LR 表示 FastSpeech 中的序列长度适配操作，图（c）中的 LN 表示层归一化，可变信息预测器（variance predictor）包括时长、音高和能量预测器。\" style=\"zoom:67%;\"></p>\n<h3 id=\"4-2-FFT（feed-forward-Transformer，前馈Transformer）\"><a href=\"#4-2-FFT（feed-forward-Transformer，前馈Transformer）\" class=\"headerlink\" title=\"4.2 FFT（feed-forward Transformer，前馈Transformer）\"></a>4.2 FFT（feed-forward Transformer，前馈Transformer）</h3><p>采用了Attention机制和1D卷积，其中多头注意力结构如下图所示：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/202111181632_987.png\" style=\"zoom:50%;\"></p>\n<p><img src=\"http://pic.panjiangtao.cn/img/202111181633_144.png\" style=\"zoom: 50%;\"></p>\n<p><img src=\"http://pic.panjiangtao.cn/img/202111181635_901.png\" style=\"zoom:50%;\"></p>\n<p>Attention 机制实质上就是一个寻址过程，通过给定一个任务相关的查询 Query 向量 Q，通过计算与 Key 的注意力分布并附加在 Value 上，从而计算 Attention Value</p>\n<ol>\n<li><p>Q，K，V 三个矩阵都来自同一个输入，通过线性变换得到 Q，K，V 三个向量。</p>\n</li>\n<li><p>计算自注意力得分，计算每个单词的自注意力，和这个单词对句子中其他单词的评分，通过矩阵Q、K相乘计算</p>\n</li>\n<li><p>第二步计算的分数进行缩放，这里通过除以 根号dk ( 论文中 <img src=\"http://pic.panjiangtao.cn/img/equation\" alt=\"[公式]\">，这可以让模型有更稳定的梯度，默认值是 64，也可以是其它值 )，将结果进行softmax 归一化。</p>\n</li>\n<li><p>最后乘以V</p>\n</li>\n<li><p>上面过程做 H 次，再把输出合并起来</p>\n</li>\n</ol>\n<h3 id=\"4-3-变量适配器（Variance-Adaptor）\"><a href=\"#4-3-变量适配器（Variance-Adaptor）\" class=\"headerlink\" title=\"4.3 变量适配器（Variance Adaptor）\"></a>4.3 变量适配器（Variance Adaptor）</h3><p><img src=\"http://pic.panjiangtao.cn/img/image-20220330192940582.png\" alt=\"Variance Adaptor\" style=\"zoom:50%;\"></p>\n<p>　　在对时长、基频和能量单独建模时，所使用的网络结构实际是相似的，在论文中称这种语音属性建模网络为变量适配器（Variance Adaptor）。时长预测的输出也作为基频和能量预测的输入。最后，基频预测和能量预测的输出，以及依靠时长信息展开的编码器输入元素加起来，作为下游网络的输入。变量适配器主要是由2 层卷积和1 层线性映射层组成，每层卷积后加ReLU 激活、LayerNorm 和Dropout。</p>\n<h4 id=\"4-3-1-基本结构Variance-Predictor\"><a href=\"#4-3-1-基本结构Variance-Predictor\" class=\"headerlink\" title=\"4.3.1 基本结构Variance Predictor\"></a>4.3.1 基本结构Variance Predictor</h4><p>　　对时长、基频和能量建模的基本结构为Variance Predictor，其代码如下所示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VariancePredictor</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Duration, Pitch and Energy Predictor&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, model_config</span>):</span></span><br><span class=\"line\">        super(VariancePredictor, self).__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.input_size = model_config[<span class=\"string\">&quot;transformer&quot;</span>][<span class=\"string\">&quot;encoder_hidden&quot;</span>]</span><br><span class=\"line\">        self.filter_size = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;filter_size&quot;</span>]</span><br><span class=\"line\">        self.kernel = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;kernel_size&quot;</span>]</span><br><span class=\"line\">        self.conv_output_size = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;filter_size&quot;</span>]</span><br><span class=\"line\">        self.dropout = model_config[<span class=\"string\">&quot;variance_predictor&quot;</span>][<span class=\"string\">&quot;dropout&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        self.conv_layer = nn.Sequential(OrderedDict([</span><br><span class=\"line\">                    (<span class=\"string\">&quot;conv1d_1&quot;</span>,Conv(self.input_size,</span><br><span class=\"line\">                            \t\tself.filter_size,</span><br><span class=\"line\">                            \t\tkernel_size=self.kernel,</span><br><span class=\"line\">                            \t\tpadding=(self.kernel - <span class=\"number\">1</span>) // <span class=\"number\">2</span>,),),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;relu_1&quot;</span>, nn.ReLU()),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;layer_norm_1&quot;</span>, nn.LayerNorm(self.filter_size)),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;dropout_1&quot;</span>, nn.Dropout(self.dropout)),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;conv1d_2&quot;</span>,Conv(self.filter_size,</span><br><span class=\"line\">                            \t\tself.filter_size,</span><br><span class=\"line\">                            \t\tkernel_size=self.kernel,</span><br><span class=\"line\">                            \t\tpadding=<span class=\"number\">1</span>,),),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;relu_2&quot;</span>, nn.ReLU()),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;layer_norm_2&quot;</span>, nn.LayerNorm(self.filter_size)),</span><br><span class=\"line\">                    (<span class=\"string\">&quot;dropout_2&quot;</span>, nn.Dropout(self.dropout)),</span><br><span class=\"line\">              ]))</span><br><span class=\"line\"></span><br><span class=\"line\">        self.linear_layer = nn.Linear(self.conv_output_size, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, encoder_output, mask</span>):</span></span><br><span class=\"line\">        out = self.conv_layer(encoder_output)</span><br><span class=\"line\">        out = self.linear_layer(out)</span><br><span class=\"line\">        out = out.squeeze(<span class=\"number\">-1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> mask <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            out = out.masked_fill(mask, <span class=\"number\">0.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> out</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-3-2-Variance-Adaptor实现\"><a href=\"#4-3-2-Variance-Adaptor实现\" class=\"headerlink\" title=\"4.3.2 Variance Adaptor实现\"></a>4.3.2 Variance Adaptor实现</h4><p>　　利用该变量适配器对时长、基频和能量进行建模。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VarianceAdaptor</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Variance Adaptor&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, preprocess_config, model_config</span>):</span></span><br><span class=\"line\">        super(VarianceAdaptor, self).__init__()</span><br><span class=\"line\">        self.duration_predictor = VariancePredictor(model_config)</span><br><span class=\"line\">        self.length_regulator = LengthRegulator()</span><br><span class=\"line\">        self.pitch_predictor = VariancePredictor(model_config)</span><br><span class=\"line\">        self.energy_predictor = VariancePredictor(model_config)</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.pitch_bins =nn.Parameter(torch.exp(torch.linspace(</span><br><span class=\"line\">            np.log(pitch_min), np.log(pitch_max), n_bins - <span class=\"number\">1</span>)),requires_grad=<span class=\"literal\">False</span>,)</span><br><span class=\"line\">        self.energy_bins = nn.Parameter(torch.exp(torch.linspace(</span><br><span class=\"line\">            np.log(energy_min), np.log(energy_max), n_bins - <span class=\"number\">1</span>)),requires_grad=<span class=\"literal\">False</span>,)</span><br><span class=\"line\">\t\tself.pitch_embedding = nn.Embedding(</span><br><span class=\"line\">            n_bins, model_config[<span class=\"string\">&quot;transformer&quot;</span>][<span class=\"string\">&quot;encoder_hidden&quot;</span>])</span><br><span class=\"line\">        self.energy_embedding = nn.Embedding(</span><br><span class=\"line\">            n_bins, model_config[<span class=\"string\">&quot;transformer&quot;</span>][<span class=\"string\">&quot;encoder_hidden&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self,x,src_mask,mel_mask=None,max_len=None,pitch_target=None,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">        energy_target=None,duration_target=None,p_control=<span class=\"number\">1.0</span>,e_control=<span class=\"number\">1.0</span>,d_control=<span class=\"number\">1.0</span></span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        log_duration_prediction = self.duration_predictor(x, src_mask)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> duration_target <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            x, mel_len = self.length_regulator(x, duration_target, max_len)</span><br><span class=\"line\">            duration_rounded = duration_target</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            duration_rounded = torch.clamp(</span><br><span class=\"line\">                (torch.round(torch.exp(log_duration_prediction) - <span class=\"number\">1</span>) * d_control),min=<span class=\"number\">0</span>)</span><br><span class=\"line\">            x, mel_len = self.length_regulator(x, duration_rounded, max_len)</span><br><span class=\"line\">            mel_mask = get_mask_from_lengths(mel_len)</span><br><span class=\"line\"></span><br><span class=\"line\">        pitch_prediction, pitch_embedding = self.get_pitch_embedding(</span><br><span class=\"line\">            x, pitch_target, mel_mask, p_control)</span><br><span class=\"line\">            x = x + pitch_embedding</span><br><span class=\"line\">        energy_prediction, energy_embedding = self.get_energy_embedding(</span><br><span class=\"line\">            x, energy_target, mel_mask, p_control</span><br><span class=\"line\">            x = x + energy_embedding</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> x,pitch_prediction,energy_prediction,log_duration_prediction,</span><br><span class=\"line\">            duration_rounded,mel_len,mel_mask</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-声码器\"><a href=\"#5-声码器\" class=\"headerlink\" title=\"5 声码器\"></a>5 声码器</h2><h3 id=\"5-1-MelGan\"><a href=\"#5-1-MelGan\" class=\"headerlink\" title=\"5.1 MelGan\"></a>5.1 MelGan</h3><p>论文链接： <a href=\"http://arxiv.org/abs/1910.06711\">MelGAN: Generative Adversarial Networks for Conditional Waveform Synthesis</a></p>\n<p>开源项目：<a href=\"https://github.com/rishikksh20/melgan\">Multi-band MelGAN and Full band MelGAN</a></p>\n<p>演示demo：<a href=\"http://www.panjiangtao.cn/melgan/\">MelGan声码器效果演示</a></p>\n<h4 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h4><ul>\n<li>MelGAN是一种非自回归前馈卷积架构，是第一个由GAN去实现原始音频的生成，在没有额外的蒸馏和感知损失的引入下仍能产生高质量的语音合成模型。</li>\n<li>MelGAN解码器可替代自回归模型，以生成原始音频。</li>\n<li>MelGAN的速度明显快于其他Mel谱图转换到音频的方法，在保证音频质量没有明显下降的情况下比迄今为止最快的可用模型快10倍。</li>\n</ul>\n<p>模型包括两部分: Generator（生成器） 和 Discriminator（判别器）。</p>\n<h4 id=\"5-1-1-生成器\"><a href=\"#5-1-1-生成器\" class=\"headerlink\" title=\"5.1.1 生成器\"></a>5.1.1 生成器</h4><p>　　输入为mel-spectrogram，输出为raw waveform. 从 mel-spectrogram到 audio的过程很显然是一个上采样的过程。</p>\n<p>　　这里的上采样是由一维反卷积(transpose1d)实现的，上采样的倍数如何确定呢？</p>\n<p>　　需要注意一下，上采样的倍数是由hop_size来决定的，为什么呢？</p>\n<p>　　需要明白一点，mel帧数 * 帧移 = 音频长度（采样点个数，可换算为音频时长，具体怎么做不用说了吧）</p>\n<p>　　因此，对于22050采样率， hopsize大小设置为256， 那么对应的mel-spectrogram需要上采样 256倍</p>\n<p>　　如果是16000采样率呢？ 使用帧长是50ms,帧移 12.5ms 那么hopsize就是200啦，所以上采样倍数就是200倍啦.</p>\n<p>　　搞清楚了这些，那么Generator Upsampling层中的上采样倍数也就好理解了，22050的采样倍数为 8 X 8 X 2 X 2 = 256</p>\n<h5 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h5><p><img src=\"http://pic.panjiangtao.cn/img/20200310123249936.png\" alt=\"MelGAN生成器结构\" style=\"zoom: 50%;\"></p>\n<p>其中残差块结构：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/2020031012332078.png\" alt=\"MelGAN生成器残差快结构\" style=\"zoom: 33%;\"></p>\n<p>　　经过一层Conv层后送到上采样网络块，上采样网络块一共有4个，依次为8x,8x,2x,2x，每个上采样网络块中嵌套残差块，每个残差块有三层，依次dilation为1,3,9，最后经过一层conv层得到音频输出，由于音频的channel表示为1，所以最后一层的channel设为1。</p>\n<h5 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h5><ol>\n<li><p>Mel频谱图的时间分辨率比原始音频低256倍，所以使用了堆叠的反卷积层进行unsample。</p>\n</li>\n<li><p>条件信息足够的情况下，在输入处增加噪声是不必要的。所以与传统GAN不同，并没有增加noise input</p>\n</li>\n<li><p>使用残差块解决梯度消散的问题，空洞卷积层的感受野随层数的增加而指数增加，能够有效地增加每个输出时间步长的感应野。</p>\n</li>\n<li><p>反卷积层的k-size和stride仔细选择决定的，可以减少artifacts的出现。</p>\n</li>\n<li><p>归一化选择Weight Norm，因为不会限制判别器的空间，也不会对激活进行归一化</p>\n</li>\n</ol>\n<h5 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对一维卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConv1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.Conv1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#对一维反卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConvTranspose1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.ConvTranspose1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#残差块中一层的结构</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ResnetBlock</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, dim, dilation=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        <span class=\"comment\">#依次为两层卷积层</span></span><br><span class=\"line\">        self.block = nn.Sequential(</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            nn.ReflectionPad1d(dilation),</span><br><span class=\"line\">            WNConv1d(dim, dim, kernel_size=<span class=\"number\">3</span>, dilation=dilation),</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            WNConv1d(dim, dim, kernel_size=<span class=\"number\">1</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        self.shortcut = WNConv1d(dim, dim, kernel_size=<span class=\"number\">1</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.shortcut(x) + self.block(x) <span class=\"comment\">#残差连接</span></span><br><span class=\"line\"><span class=\"comment\">#生成器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Generator</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, input_size, ngf, n_residual_layers</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        ratios = [<span class=\"number\">8</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\">        self.hop_length = np.prod(ratios)</span><br><span class=\"line\">        mult = int(<span class=\"number\">2</span> ** len(ratios))</span><br><span class=\"line\">\t\t<span class=\"comment\">#第一层卷积</span></span><br><span class=\"line\">        model = [</span><br><span class=\"line\">            nn.ReflectionPad1d(<span class=\"number\">3</span>),</span><br><span class=\"line\">            WNConv1d(input_size, mult * ngf, kernel_size=<span class=\"number\">7</span>, padding=<span class=\"number\">0</span>),</span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 上采样阶段，共4个，依次为8x,8x,2x,2x的UpSampling layer</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, r <span class=\"keyword\">in</span> enumerate(ratios):</span><br><span class=\"line\">            model += [</span><br><span class=\"line\">                nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">                WNConvTranspose1d(</span><br><span class=\"line\">                    mult * ngf,</span><br><span class=\"line\">                    mult * ngf // <span class=\"number\">2</span>,</span><br><span class=\"line\">                    kernel_size=r * <span class=\"number\">2</span>,</span><br><span class=\"line\">                    stride=r,</span><br><span class=\"line\">                    padding=r // <span class=\"number\">2</span> + r % <span class=\"number\">2</span>,</span><br><span class=\"line\">                    output_padding=r % <span class=\"number\">2</span>,</span><br><span class=\"line\">                ),</span><br><span class=\"line\">            ]</span><br><span class=\"line\">\t\t\t<span class=\"comment\">#加入残差块，每个残差块中有3层，dilation分别为1,3,9</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(n_residual_layers):</span><br><span class=\"line\">                model += [ResnetBlock(mult * ngf // <span class=\"number\">2</span>, dilation=<span class=\"number\">3</span> ** j)]</span><br><span class=\"line\"></span><br><span class=\"line\">            mult //= <span class=\"number\">2</span></span><br><span class=\"line\">\t\t<span class=\"comment\">#最后一层卷积层</span></span><br><span class=\"line\">        model += [</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>),</span><br><span class=\"line\">            nn.ReflectionPad1d(<span class=\"number\">3</span>),</span><br><span class=\"line\">            WNConv1d(ngf, <span class=\"number\">1</span>, kernel_size=<span class=\"number\">7</span>, padding=<span class=\"number\">0</span>),</span><br><span class=\"line\">            nn.Tanh(),</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        self.model = nn.Sequential(*model)</span><br><span class=\"line\">        self.apply(weights_init)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.model(x)</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-1-2-判别器\"><a href=\"#5-1-2-判别器\" class=\"headerlink\" title=\"5.1.2 判别器\"></a>5.1.2 判别器</h4><p>　　论文提出了multi-scale的discriminator, 基于的假设是每个scale的discriminator可以学习到不同频率段的音频的特征。</p>\n<p>　　每个discriminator的网络结构是由前后各一层1维卷积 和 4层分组卷积构成的downsampling layer构成. discriminator输入是由ground truth的音频和gererator生成的fake音频两部分构成的。 输入维度为[B, T, 1]， 输出维度也是[B,T,1], 中间变换的只是通道数的变化， 最后一层的输出和倒数第二层卷积网络的输出被分别用来计算 featuremap 和 feature_score, 这两部分被用来计算 generator的<em>feature_matching_loss</em>(L1_loss) 和discriminator的<em>mse_loss</em></p>\n<p>　　上面我们知道了Generator输入mel-spectrogram,生成音频audio, 这个音频可以表示为G （s）, s为mel-spectrogram. 判别器要判断生成器生成音频的真假，这里就涉及到Gan模型的原理啦，</p>\n<p>　　Generator输入mel-spectrogram生成音频(fake), Discriminator输入真(real)音频和假(fake)音频，学习一个二分类器（可以这么理解），这里使用的是mse损失来最小化real与1的差异，fake与0的差异。</p>\n<p>　　通过对抗学习，使得generator生成的音频达到判别器无法判断真假的效果(loss接近0.5)。</p>\n<h5 id=\"结构-1\"><a href=\"#结构-1\" class=\"headerlink\" title=\"结构\"></a>结构</h5><p><img src=\"https://img-blog.csdnimg.cn/20200310123441481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTYyNzA0,size_16,color_FFFFFF,t_70#pic_center\" alt=\"melgan判别器模型\" style=\"zoom:50%;\"></p>\n<h5 id=\"损失函数：\"><a href=\"#损失函数：\" class=\"headerlink\" title=\"损失函数：\"></a>损失函数：</h5><p><img src=\"http://pic.panjiangtao.cn/img/image-20220331174705235.png\" alt=\"melgan判别器损失函数\" style=\"zoom: 67%;\"></p>\n<p>x表示音频，s表示mel谱图，z表示高斯噪声</p>\n<h5 id=\"源码-1\"><a href=\"#源码-1\" class=\"headerlink\" title=\"源码\"></a>源码</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#对一维卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConv1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.Conv1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#对一维反卷积层进行Weight Norm</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">WNConvTranspose1d</span>(<span class=\"params\">*args, **kwargs</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> weight_norm(nn.ConvTranspose1d(*args, **kwargs))</span><br><span class=\"line\"><span class=\"comment\">#Discriminator Block结构</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NLayerDiscriminator</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, ndf, n_layers, downsampling_factor</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        model = nn.ModuleDict()</span><br><span class=\"line\">        <span class=\"comment\">#第一层卷积</span></span><br><span class=\"line\">        model[<span class=\"string\">&quot;layer_0&quot;</span>] = nn.Sequential(</span><br><span class=\"line\">            nn.ReflectionPad1d(<span class=\"number\">7</span>),</span><br><span class=\"line\">            WNConv1d(<span class=\"number\">1</span>, ndf, kernel_size=<span class=\"number\">15</span>),</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>, <span class=\"literal\">True</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        nf = ndf</span><br><span class=\"line\">        stride = downsampling_factor</span><br><span class=\"line\">        <span class=\"comment\">#4层4x Downsampling Layer</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, n_layers + <span class=\"number\">1</span>):</span><br><span class=\"line\">            nf_prev = nf</span><br><span class=\"line\">            nf = min(nf * stride, <span class=\"number\">1024</span>)</span><br><span class=\"line\">            model[<span class=\"string\">&quot;layer_%d&quot;</span> % n] = nn.Sequential(</span><br><span class=\"line\">                WNConv1d(</span><br><span class=\"line\">                    nf_prev,</span><br><span class=\"line\">                    nf,</span><br><span class=\"line\">                    kernel_size=stride * <span class=\"number\">10</span> + <span class=\"number\">1</span>,</span><br><span class=\"line\">                    stride=stride,</span><br><span class=\"line\">                    padding=stride * <span class=\"number\">5</span>,</span><br><span class=\"line\">                    groups=nf_prev // <span class=\"number\">4</span>,</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                nn.LeakyReLU(<span class=\"number\">0.2</span>, <span class=\"literal\">True</span>),</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">        nf = min(nf * <span class=\"number\">2</span>, <span class=\"number\">1024</span>)</span><br><span class=\"line\">        <span class=\"comment\">#第2层卷积层</span></span><br><span class=\"line\">        model[<span class=\"string\">&quot;layer_%d&quot;</span> % (n_layers + <span class=\"number\">1</span>)] = nn.Sequential(</span><br><span class=\"line\">            WNConv1d(nf_prev, nf, kernel_size=<span class=\"number\">5</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">2</span>),</span><br><span class=\"line\">            nn.LeakyReLU(<span class=\"number\">0.2</span>, <span class=\"literal\">True</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"comment\">#第3层卷积层</span></span><br><span class=\"line\">        model[<span class=\"string\">&quot;layer_%d&quot;</span> % (n_layers + <span class=\"number\">2</span>)] = WNConv1d(</span><br><span class=\"line\">            nf, <span class=\"number\">1</span>, kernel_size=<span class=\"number\">3</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">1</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        self.model = model</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        results = [] <span class=\"comment\">#存放每层输出的feature map</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, layer <span class=\"keyword\">in</span> self.model.items():</span><br><span class=\"line\">            x = layer(x)</span><br><span class=\"line\">            results.append(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> results</span><br><span class=\"line\"><span class=\"comment\">#完整的判别器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Discriminator</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, num_D, ndf, n_layers, downsampling_factor</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        self.model = nn.ModuleDict()</span><br><span class=\"line\">        <span class=\"comment\">#3个Discriminator Block</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(num_D):</span><br><span class=\"line\">            self.model[<span class=\"string\">f&quot;disc_<span class=\"subst\">&#123;i&#125;</span>&quot;</span>] = NLayerDiscriminator(</span><br><span class=\"line\">                ndf, n_layers, downsampling_factor</span><br><span class=\"line\">            )</span><br><span class=\"line\">\t\t<span class=\"comment\">#downsample函数</span></span><br><span class=\"line\">        self.downsample = nn.AvgPool1d(<span class=\"number\">4</span>, stride=<span class=\"number\">2</span>, padding=<span class=\"number\">1</span>, count_include_pad=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        self.apply(weights_init)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x</span>):</span></span><br><span class=\"line\">        results = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, disc <span class=\"keyword\">in</span> self.model.items():</span><br><span class=\"line\">            results.append(disc(x)) <span class=\"comment\">#每次降频处理得到的结果依次存放到result</span></span><br><span class=\"line\">            x = self.downsample(x) <span class=\"comment\">#对输入x进行降频处理</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> results</span><br></pre></td></tr></table></figure>"},{"title":"论文笔记-Communication-Efficient Learning of Deep Networks from Decentralized Data","copyright":true,"date":"2021-10-30T02:14:02.000Z","_content":"## Communication-Efficient Learning of Deep Networks from Decentralized Data\n{% note info %}\n论文链接：[Communication-Efficient Learning of Deep Networks from Decentralized Data](https://arxiv.org/abs/1602.05629)\n{% endnote %}\n\n### 一、本文关注的问题\n\n1. 移动设备上的数据由于隐私问题、数据量大的原因无法作为模型训练集\n2. 参与优化的数据具有非独立同分布、数量不平衡、大规模、通信受限的问题\n<!-- more -->\n\n### 二、提出的方法\n\n联邦学习：将训练数据分布在移动设备上，由中央服务器协调聚合每台设备本地数据计算的更新来学习共享模型，无需直接访问原始数据。\n\n1. 通过下述方法减小通信轮数\n\n   * 增加并行性，使用更多的客户端在每个通信轮之间独立工作\n\n   * 增加了每个客户端的计算量\n\n2. 使用联邦平均算法进行优化：将每个客户端上的局部随机梯度下降 (SGD) 与执行模型平均的服务器相结合，得到FedAvg方法，以FedSGD作为基线进行对比\n\n   * 联邦优化：对于机器学习任务，我们取$ f_i(w)=l(x_i,y_i;w)$,代表模型参数w对实例$(x_i,y_i)$的预测损失，假设有K个包含不同数据的客户端，有数据点的索引集$P_k$,设$N_k=|P_k|$,则联邦平均算法适用于以下形式的任何有限和目标：\n\n     $$f(w)=\\sum_{K=1}^K{\\frac{n_k}nF_k(w)}$$            where           $F_k(w)=\\frac1{n_k}\\sum_{i\\in{P_k}}f_i(w)$\n\n   * FedAvg算法：\n\n     * 流程：对于每个客户端k，全选数据且固定学习率为$\\eta$，计算本地数据在当前模型$w_t$上的平均梯度$g_k=\\nabla{F_k(w_t)}$，中央服务器接收这些梯度且应用更新$w_{t+1}\\leftarrow w_t-\\eta\\sum_{k-1}^K\\frac{n_k}ng_k$，其中$\\sum_{k-1}^K\\frac{n_k}ng_k=\\nabla{f(w_t)}$。这等效于以下更新：$\\forall k,w_{t-1}^k\\leftarrow w_t-\\eta g_k$和$w_{t+1}\\leftarrow \\sum_{k-1}^K\\frac{n_k}n w_{t+1}^k$。每个客户端可以使用本地数据进行多次迭代更新$w_k\\leftarrow w_k−η\\nabla F_k(w_k)$后交由服务器进行加权平均。计算量由三个关键参数控制:C，每轮执行计算的客户端比例;E，每轮每个客户端通过其本地数据集的训练次数;B，用于客户端更新的本地迷你批处理大小。\n\n     * 伪代码：其中K个服务器的索引为k，B为本地批大小，E为本地训练次数，$\\eta$为学习率\n\n       -----\n\n       **Server executes**:\n       \tinitialize $w_0$\n       \t**for** each round t= 1,2, . . .**do**\n       \t\t$m←max(C·K,1)$\n       \t\t$S_t←$ (random set of $m$ clients)\n       \t\t**for** each client $k∈S_t$ **in parallel do**\n       \t\t\t$w^k_{t+1}$←ClientUpdate$(k, w_t)$\n       \t\t$w_{t+1}\\leftarrow \\sum_{k-1}^K\\frac{n_k}n w_{t+1}^k$\n\n       **ClientUpdate**$(k, w)$://Run on clientk\n       \tB ←(split $P_k$ into batches of size B)\n       \t**for** each local epoch $i$ from 1 to E**do**\n       \t\t**for** batch b∈ B do\n       \t\t\t$w←w−η\\nabla l(w;b)$\n       \treturn $w$ to server\n\n       ------\n\n### 三、取得的结果\n\n1. 图像识别中，增加并行性对减小通讯次数提升不明显，只能加速10倍以内\n2. 语言建模中，在莎士比亚合集中使用FedAvg算法增加客户端计算量对于非IID和不平衡数据具有较大的通信轮次下降，加速95倍\n3. 在CIFAR数据集中使用FedAvg算法相较于基线SGD算法只需1/99的通信轮数就可达到相同的准确率\n4. 在大规模下一词预测任务中，FedAvg算法相较于基线FedSGD算法只需1/23的通信轮数就可达到相同的准确率\n\n","source":"_posts/Federated-Learning1.md","raw":"---\ntitle: 论文笔记-Communication-Efficient Learning of Deep Networks from Decentralized Data\ncopyright: true\ndate: 2021-10-30 10:14:02\ntags: 联邦学习\ncategories:\n- 深度学习\n- 联邦学习\n---\n## Communication-Efficient Learning of Deep Networks from Decentralized Data\n{% note info %}\n论文链接：[Communication-Efficient Learning of Deep Networks from Decentralized Data](https://arxiv.org/abs/1602.05629)\n{% endnote %}\n\n### 一、本文关注的问题\n\n1. 移动设备上的数据由于隐私问题、数据量大的原因无法作为模型训练集\n2. 参与优化的数据具有非独立同分布、数量不平衡、大规模、通信受限的问题\n<!-- more -->\n\n### 二、提出的方法\n\n联邦学习：将训练数据分布在移动设备上，由中央服务器协调聚合每台设备本地数据计算的更新来学习共享模型，无需直接访问原始数据。\n\n1. 通过下述方法减小通信轮数\n\n   * 增加并行性，使用更多的客户端在每个通信轮之间独立工作\n\n   * 增加了每个客户端的计算量\n\n2. 使用联邦平均算法进行优化：将每个客户端上的局部随机梯度下降 (SGD) 与执行模型平均的服务器相结合，得到FedAvg方法，以FedSGD作为基线进行对比\n\n   * 联邦优化：对于机器学习任务，我们取$ f_i(w)=l(x_i,y_i;w)$,代表模型参数w对实例$(x_i,y_i)$的预测损失，假设有K个包含不同数据的客户端，有数据点的索引集$P_k$,设$N_k=|P_k|$,则联邦平均算法适用于以下形式的任何有限和目标：\n\n     $$f(w)=\\sum_{K=1}^K{\\frac{n_k}nF_k(w)}$$            where           $F_k(w)=\\frac1{n_k}\\sum_{i\\in{P_k}}f_i(w)$\n\n   * FedAvg算法：\n\n     * 流程：对于每个客户端k，全选数据且固定学习率为$\\eta$，计算本地数据在当前模型$w_t$上的平均梯度$g_k=\\nabla{F_k(w_t)}$，中央服务器接收这些梯度且应用更新$w_{t+1}\\leftarrow w_t-\\eta\\sum_{k-1}^K\\frac{n_k}ng_k$，其中$\\sum_{k-1}^K\\frac{n_k}ng_k=\\nabla{f(w_t)}$。这等效于以下更新：$\\forall k,w_{t-1}^k\\leftarrow w_t-\\eta g_k$和$w_{t+1}\\leftarrow \\sum_{k-1}^K\\frac{n_k}n w_{t+1}^k$。每个客户端可以使用本地数据进行多次迭代更新$w_k\\leftarrow w_k−η\\nabla F_k(w_k)$后交由服务器进行加权平均。计算量由三个关键参数控制:C，每轮执行计算的客户端比例;E，每轮每个客户端通过其本地数据集的训练次数;B，用于客户端更新的本地迷你批处理大小。\n\n     * 伪代码：其中K个服务器的索引为k，B为本地批大小，E为本地训练次数，$\\eta$为学习率\n\n       -----\n\n       **Server executes**:\n       \tinitialize $w_0$\n       \t**for** each round t= 1,2, . . .**do**\n       \t\t$m←max(C·K,1)$\n       \t\t$S_t←$ (random set of $m$ clients)\n       \t\t**for** each client $k∈S_t$ **in parallel do**\n       \t\t\t$w^k_{t+1}$←ClientUpdate$(k, w_t)$\n       \t\t$w_{t+1}\\leftarrow \\sum_{k-1}^K\\frac{n_k}n w_{t+1}^k$\n\n       **ClientUpdate**$(k, w)$://Run on clientk\n       \tB ←(split $P_k$ into batches of size B)\n       \t**for** each local epoch $i$ from 1 to E**do**\n       \t\t**for** batch b∈ B do\n       \t\t\t$w←w−η\\nabla l(w;b)$\n       \treturn $w$ to server\n\n       ------\n\n### 三、取得的结果\n\n1. 图像识别中，增加并行性对减小通讯次数提升不明显，只能加速10倍以内\n2. 语言建模中，在莎士比亚合集中使用FedAvg算法增加客户端计算量对于非IID和不平衡数据具有较大的通信轮次下降，加速95倍\n3. 在CIFAR数据集中使用FedAvg算法相较于基线SGD算法只需1/99的通信轮数就可达到相同的准确率\n4. 在大规模下一词预测任务中，FedAvg算法相较于基线FedSGD算法只需1/23的通信轮数就可达到相同的准确率\n\n","slug":"Federated-Learning1","published":1,"updated":"2021-10-30T02:35:12.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0fq0007c8pvbl44gxyg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"Communication-Efficient-Learning-of-Deep-Networks-from-Decentralized-Data\"><a href=\"#Communication-Efficient-Learning-of-Deep-Networks-from-Decentralized-Data\" class=\"headerlink\" title=\"Communication-Efficient Learning of Deep Networks from Decentralized Data\"></a>Communication-Efficient Learning of Deep Networks from Decentralized Data</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/abs/1602.05629\">Communication-Efficient Learning of Deep Networks from Decentralized Data</a></p>\n          </div>\n<h3 id=\"一、本文关注的问题\"><a href=\"#一、本文关注的问题\" class=\"headerlink\" title=\"一、本文关注的问题\"></a>一、本文关注的问题</h3><ol>\n<li>移动设备上的数据由于隐私问题、数据量大的原因无法作为模型训练集</li>\n<li>参与优化的数据具有非独立同分布、数量不平衡、大规模、通信受限的问题<a id=\"more\"></a>\n</li>\n</ol>\n<h3 id=\"二、提出的方法\"><a href=\"#二、提出的方法\" class=\"headerlink\" title=\"二、提出的方法\"></a>二、提出的方法</h3><p>联邦学习：将训练数据分布在移动设备上，由中央服务器协调聚合每台设备本地数据计算的更新来学习共享模型，无需直接访问原始数据。</p>\n<ol>\n<li><p>通过下述方法减小通信轮数</p>\n<ul>\n<li><p>增加并行性，使用更多的客户端在每个通信轮之间独立工作</p>\n</li>\n<li><p>增加了每个客户端的计算量</p>\n</li>\n</ul>\n</li>\n<li><p>使用联邦平均算法进行优化：将每个客户端上的局部随机梯度下降 (SGD) 与执行模型平均的服务器相结合，得到FedAvg方法，以FedSGD作为基线进行对比</p>\n<ul>\n<li><p>联邦优化：对于机器学习任务，我们取$ f_i(w)=l(x_i,y_i;w)$,代表模型参数w对实例$(x_i,y_i)$的预测损失，假设有K个包含不同数据的客户端，有数据点的索引集$P_k$,设$N_k=|P_k|$,则联邦平均算法适用于以下形式的任何有限和目标：</p>\n<p><script type=\"math/tex\">f(w)=\\sum_{K=1}^K{\\frac{n_k}nF_k(w)}</script>            where           $F_k(w)=\\frac1{n_k}\\sum_{i\\in{P_k}}f_i(w)$</p>\n</li>\n<li><p>FedAvg算法：</p>\n<ul>\n<li><p>流程：对于每个客户端k，全选数据且固定学习率为$\\eta$，计算本地数据在当前模型$w_t$上的平均梯度$g_k=\\nabla{F_k(w_t)}$，中央服务器接收这些梯度且应用更新$w_{t+1}\\leftarrow w_t-\\eta\\sum_{k-1}^K\\frac{n_k}ng_k$，其中$\\sum_{k-1}^K\\frac{n_k}ng_k=\\nabla{f(w_t)}$。这等效于以下更新：$\\forall k,w_{t-1}^k\\leftarrow w_t-\\eta g_k$和$w_{t+1}\\leftarrow \\sum_{k-1}^K\\frac{n_k}n w_{t+1}^k$。每个客户端可以使用本地数据进行多次迭代更新$w_k\\leftarrow w_k−η\\nabla F_k(w_k)$后交由服务器进行加权平均。计算量由三个关键参数控制:C，每轮执行计算的客户端比例;E，每轮每个客户端通过其本地数据集的训练次数;B，用于客户端更新的本地迷你批处理大小。</p>\n</li>\n<li><p>伪代码：其中K个服务器的索引为k，B为本地批大小，E为本地训练次数，$\\eta$为学习率</p>\n<hr>\n<p><strong>Server executes</strong>:</p>\n<pre><code>initialize $w_0$\n**for** each round t= 1,2, . . .**do**\n    $m←max(C·K,1)$\n    $S_t←$ (random set of $m$ clients)\n    **for** each client $k∈S_t$ **in parallel do**\n        $w^k_&#123;t+1&#125;$←ClientUpdate$(k, w_t)$\n    $w_&#123;t+1&#125;\\leftarrow \\sum_&#123;k-1&#125;^K\\frac&#123;n_k&#125;n w_&#123;t+1&#125;^k$\n</code></pre><p><strong>ClientUpdate</strong>$(k, w)$://Run on clientk</p>\n<pre><code>B ←(split $P_k$ into batches of size B)\n**for** each local epoch $i$ from 1 to E**do**\n    **for** batch b∈ B do\n        $w←w−η\\nabla l(w;b)$\nreturn $w$ to server\n</code></pre><hr>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"三、取得的结果\"><a href=\"#三、取得的结果\" class=\"headerlink\" title=\"三、取得的结果\"></a>三、取得的结果</h3><ol>\n<li>图像识别中，增加并行性对减小通讯次数提升不明显，只能加速10倍以内</li>\n<li>语言建模中，在莎士比亚合集中使用FedAvg算法增加客户端计算量对于非IID和不平衡数据具有较大的通信轮次下降，加速95倍</li>\n<li>在CIFAR数据集中使用FedAvg算法相较于基线SGD算法只需1/99的通信轮数就可达到相同的准确率</li>\n<li>在大规模下一词预测任务中，FedAvg算法相较于基线FedSGD算法只需1/23的通信轮数就可达到相同的准确率</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1746,"excerpt":"<h2 id=\"Communication-Efficient-Learning-of-Deep-Networks-from-Decentralized-Data\"><a href=\"#Communication-Efficient-Learning-of-Deep-Networks-from-Decentralized-Data\" class=\"headerlink\" title=\"Communication-Efficient Learning of Deep Networks from Decentralized Data\"></a>Communication-Efficient Learning of Deep Networks from Decentralized Data</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/abs/1602.05629\">Communication-Efficient Learning of Deep Networks from Decentralized Data</a></p>\n          </div>\n<h3 id=\"一、本文关注的问题\"><a href=\"#一、本文关注的问题\" class=\"headerlink\" title=\"一、本文关注的问题\"></a>一、本文关注的问题</h3><ol>\n<li>移动设备上的数据由于隐私问题、数据量大的原因无法作为模型训练集</li>\n<li>参与优化的数据具有非独立同分布、数量不平衡、大规模、通信受限的问题</li></ol>","more":"\n\n<h3 id=\"二、提出的方法\"><a href=\"#二、提出的方法\" class=\"headerlink\" title=\"二、提出的方法\"></a>二、提出的方法</h3><p>联邦学习：将训练数据分布在移动设备上，由中央服务器协调聚合每台设备本地数据计算的更新来学习共享模型，无需直接访问原始数据。</p>\n<ol>\n<li><p>通过下述方法减小通信轮数</p>\n<ul>\n<li><p>增加并行性，使用更多的客户端在每个通信轮之间独立工作</p>\n</li>\n<li><p>增加了每个客户端的计算量</p>\n</li>\n</ul>\n</li>\n<li><p>使用联邦平均算法进行优化：将每个客户端上的局部随机梯度下降 (SGD) 与执行模型平均的服务器相结合，得到FedAvg方法，以FedSGD作为基线进行对比</p>\n<ul>\n<li><p>联邦优化：对于机器学习任务，我们取$ f_i(w)=l(x_i,y_i;w)$,代表模型参数w对实例$(x_i,y_i)$的预测损失，假设有K个包含不同数据的客户端，有数据点的索引集$P_k$,设$N_k=|P_k|$,则联邦平均算法适用于以下形式的任何有限和目标：</p>\n<p><script type=\"math/tex\">f(w)=\\sum_{K=1}^K{\\frac{n_k}nF_k(w)}</script>            where           $F_k(w)=\\frac1{n_k}\\sum_{i\\in{P_k}}f_i(w)$</p>\n</li>\n<li><p>FedAvg算法：</p>\n<ul>\n<li><p>流程：对于每个客户端k，全选数据且固定学习率为$\\eta$，计算本地数据在当前模型$w_t$上的平均梯度$g_k=\\nabla{F_k(w_t)}$，中央服务器接收这些梯度且应用更新$w_{t+1}\\leftarrow w_t-\\eta\\sum_{k-1}^K\\frac{n_k}ng_k$，其中$\\sum_{k-1}^K\\frac{n_k}ng_k=\\nabla{f(w_t)}$。这等效于以下更新：$\\forall k,w_{t-1}^k\\leftarrow w_t-\\eta g_k$和$w_{t+1}\\leftarrow \\sum_{k-1}^K\\frac{n_k}n w_{t+1}^k$。每个客户端可以使用本地数据进行多次迭代更新$w_k\\leftarrow w_k−η\\nabla F_k(w_k)$后交由服务器进行加权平均。计算量由三个关键参数控制:C，每轮执行计算的客户端比例;E，每轮每个客户端通过其本地数据集的训练次数;B，用于客户端更新的本地迷你批处理大小。</p>\n</li>\n<li><p>伪代码：其中K个服务器的索引为k，B为本地批大小，E为本地训练次数，$\\eta$为学习率</p>\n<hr>\n<p><strong>Server executes</strong>:</p>\n<pre><code>initialize $w_0$\n**for** each round t= 1,2, . . .**do**\n    $m←max(C·K,1)$\n    $S_t←$ (random set of $m$ clients)\n    **for** each client $k∈S_t$ **in parallel do**\n        $w^k_&#123;t+1&#125;$←ClientUpdate$(k, w_t)$\n    $w_&#123;t+1&#125;\\leftarrow \\sum_&#123;k-1&#125;^K\\frac&#123;n_k&#125;n w_&#123;t+1&#125;^k$\n</code></pre><p><strong>ClientUpdate</strong>$(k, w)$://Run on clientk</p>\n<pre><code>B ←(split $P_k$ into batches of size B)\n**for** each local epoch $i$ from 1 to E**do**\n    **for** batch b∈ B do\n        $w←w−η\\nabla l(w;b)$\nreturn $w$ to server\n</code></pre><hr>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"三、取得的结果\"><a href=\"#三、取得的结果\" class=\"headerlink\" title=\"三、取得的结果\"></a>三、取得的结果</h3><ol>\n<li>图像识别中，增加并行性对减小通讯次数提升不明显，只能加速10倍以内</li>\n<li>语言建模中，在莎士比亚合集中使用FedAvg算法增加客户端计算量对于非IID和不平衡数据具有较大的通信轮次下降，加速95倍</li>\n<li>在CIFAR数据集中使用FedAvg算法相较于基线SGD算法只需1/99的通信轮数就可达到相同的准确率</li>\n<li>在大规模下一词预测任务中，FedAvg算法相较于基线FedSGD算法只需1/23的通信轮数就可达到相同的准确率</li>\n</ol>"},{"title":"论文笔记-Federated Learning： Strategies for Improving Communication Efficiency","copyright":true,"date":"2021-10-30T02:17:38.000Z","_content":"## Federated Learning: Strategies for Improving Communication Efficiency\n{% note info %}\n论文链接：[Federated Learning: Strategies for Improving Communication Efficiency](https://arxiv.org/pdf/1610.05492.pdf)\n{% endnote %}\n\n### 一、本文关注的问题\n\n在典型的联邦学习案例中，由于更新体量较大且上传速率普遍较低，客户端向中央服务器上传更新成为瓶颈，所以需要降低更新$H_t^i$的上行通信成本。\n<!-- more -->\n\n### 二、提出的方法\n\n1. 结构化更新：将每个客户端的更新$H_t^i$限制为具有预先指定的结构，分别为低秩和随机掩码。\n\n   * 低秩：将每个更新$H_t^i\\in\\R^{d_1×d_2}$强制为秩至多为k的矩阵，因此将$H_i$拆分为两个矩阵乘积$H_t^i=A_t^iB_t^i$，其中$A_t^i\\in R^{d_1×k}$，$B_t^i\\in R^{k×d_2}$。在本地训练时，为每个客户端独立随机生成$A_t^i$并看作常量，只优化$B_t^i$并上传，使通讯成本降低$\\frac{d_1}k$倍。\n   * 随机掩码：使用预定义随机稀疏规则通过每个客户端独立的随机种子将更新$H_t^i$转换为稀疏矩阵，并向服务器发送$H_t^i$的非零条目和种子。\n\n2. 草图更新：无限制地完成完整本地训练得到更新$H_t^i$，在上传服务器前对其编码以压缩格式，在服务器聚合前解码。使用下列工具进行草图绘制：\n\n   * 子采样：客户端发送更新$H_t^i$的随机子集$\\hat H_t^i$，服务器对子采样更新进行平均，得到全局更新$\\hat H_t$。这样做可以使采样更新的平均值是真实平均值的无偏估计量：$\\Bbb E [\\hat H_t] = H_t$。\n\n   * 概率量化：将更新$H_t^i$展开成一位向量（也可以是b位向量），即$h=(h_1,...,h_{d_1×d_2})=vec(H_t^i)$，设$h_{max}=max_j(h_j),h_{min}=min_j(h_j)$，h的压缩表示为$\\hat h$，公式如下：\n     $$\n     \\hat h_j=\n     \\left \\{\n     \\begin{array}{c}\n     h_{max},\\ with\\ probability \\frac{h_j-h_{min}}{h_{max-h_{min}}}\\\\\n     h_{min},\\ with\\ probability \\frac{h_{max}-h_j}{h_{max-h_{min}}}\n     \\end{array}\n     \\right.\n     $$\n     该方法在$H_t^i$不同维度上规模相近时效果最佳\n\n   * 结构化随机旋转改进量化：上述概率量化方法在max=1和min=-1且大部分值为0时误差较大，可以在量化前对h应用一次随机旋转（将h乘以随机正交矩阵）。\n\n### 三、取得的结果\n\n1. 利用CNN和人工区分数据集对CIFAR-10图像分类任务进行实验。\n   * 对比两种结构化更新方法，即低秩和随机掩码。图中显示降低更新矩阵的秩时，低秩方法通信效率提高不明显；而增加随机掩码生成的稀疏矩阵的稀疏性时，可以达到较好的降低更新的效果。\n   * 对比随机掩码和草图更新，使用草图更新可以更快地获得一个适度的准确率(85%)，但是使用随机掩码可以收敛到更高的准确率。\n   * 对比草图更新的三种形式，即子采样、概率量化和随机旋转。随机旋转可以提高算法的稳定性和性能，使用2比特量化可以获得更好的收敛效果和准确率。\n2. 使用指定草图的各种参数对Reddit帖子数据运行联邦平均算法进行下一词预测实验。\n   * 每次随机抽取50个用户的数据进行2000轮训练，子采样比例设为0.1或1。随机旋转可以提高预测准确性，且随机化的阿达玛变换与2比特量化不会损失性能。\n   * 固定训练轮数为500和2500轮，只改变单轮客户端数量，使用1比特量化，子采样率分别为1%和10%，运行联邦平均算法。可以看到，每轮客户端数量足够多时，子采样率降低对准确性下降的影响几乎可忽略。\n\n","source":"_posts/Federated-Learning2.md","raw":"---\ntitle: 论文笔记-Federated Learning： Strategies for Improving Communication Efficiency\ncopyright: true\ndate: 2021-10-30 10:17:38\ntags: 联邦学习\ncategories:\n- 深度学习\n- 联邦学习\n---\n## Federated Learning: Strategies for Improving Communication Efficiency\n{% note info %}\n论文链接：[Federated Learning: Strategies for Improving Communication Efficiency](https://arxiv.org/pdf/1610.05492.pdf)\n{% endnote %}\n\n### 一、本文关注的问题\n\n在典型的联邦学习案例中，由于更新体量较大且上传速率普遍较低，客户端向中央服务器上传更新成为瓶颈，所以需要降低更新$H_t^i$的上行通信成本。\n<!-- more -->\n\n### 二、提出的方法\n\n1. 结构化更新：将每个客户端的更新$H_t^i$限制为具有预先指定的结构，分别为低秩和随机掩码。\n\n   * 低秩：将每个更新$H_t^i\\in\\R^{d_1×d_2}$强制为秩至多为k的矩阵，因此将$H_i$拆分为两个矩阵乘积$H_t^i=A_t^iB_t^i$，其中$A_t^i\\in R^{d_1×k}$，$B_t^i\\in R^{k×d_2}$。在本地训练时，为每个客户端独立随机生成$A_t^i$并看作常量，只优化$B_t^i$并上传，使通讯成本降低$\\frac{d_1}k$倍。\n   * 随机掩码：使用预定义随机稀疏规则通过每个客户端独立的随机种子将更新$H_t^i$转换为稀疏矩阵，并向服务器发送$H_t^i$的非零条目和种子。\n\n2. 草图更新：无限制地完成完整本地训练得到更新$H_t^i$，在上传服务器前对其编码以压缩格式，在服务器聚合前解码。使用下列工具进行草图绘制：\n\n   * 子采样：客户端发送更新$H_t^i$的随机子集$\\hat H_t^i$，服务器对子采样更新进行平均，得到全局更新$\\hat H_t$。这样做可以使采样更新的平均值是真实平均值的无偏估计量：$\\Bbb E [\\hat H_t] = H_t$。\n\n   * 概率量化：将更新$H_t^i$展开成一位向量（也可以是b位向量），即$h=(h_1,...,h_{d_1×d_2})=vec(H_t^i)$，设$h_{max}=max_j(h_j),h_{min}=min_j(h_j)$，h的压缩表示为$\\hat h$，公式如下：\n     $$\n     \\hat h_j=\n     \\left \\{\n     \\begin{array}{c}\n     h_{max},\\ with\\ probability \\frac{h_j-h_{min}}{h_{max-h_{min}}}\\\\\n     h_{min},\\ with\\ probability \\frac{h_{max}-h_j}{h_{max-h_{min}}}\n     \\end{array}\n     \\right.\n     $$\n     该方法在$H_t^i$不同维度上规模相近时效果最佳\n\n   * 结构化随机旋转改进量化：上述概率量化方法在max=1和min=-1且大部分值为0时误差较大，可以在量化前对h应用一次随机旋转（将h乘以随机正交矩阵）。\n\n### 三、取得的结果\n\n1. 利用CNN和人工区分数据集对CIFAR-10图像分类任务进行实验。\n   * 对比两种结构化更新方法，即低秩和随机掩码。图中显示降低更新矩阵的秩时，低秩方法通信效率提高不明显；而增加随机掩码生成的稀疏矩阵的稀疏性时，可以达到较好的降低更新的效果。\n   * 对比随机掩码和草图更新，使用草图更新可以更快地获得一个适度的准确率(85%)，但是使用随机掩码可以收敛到更高的准确率。\n   * 对比草图更新的三种形式，即子采样、概率量化和随机旋转。随机旋转可以提高算法的稳定性和性能，使用2比特量化可以获得更好的收敛效果和准确率。\n2. 使用指定草图的各种参数对Reddit帖子数据运行联邦平均算法进行下一词预测实验。\n   * 每次随机抽取50个用户的数据进行2000轮训练，子采样比例设为0.1或1。随机旋转可以提高预测准确性，且随机化的阿达玛变换与2比特量化不会损失性能。\n   * 固定训练轮数为500和2500轮，只改变单轮客户端数量，使用1比特量化，子采样率分别为1%和10%，运行联邦平均算法。可以看到，每轮客户端数量足够多时，子采样率降低对准确性下降的影响几乎可忽略。\n\n","slug":"Federated-Learning2","published":1,"updated":"2021-10-30T02:53:40.249Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0fs0009c8pvf1p29d2e","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"Federated-Learning-Strategies-for-Improving-Communication-Efficiency\"><a href=\"#Federated-Learning-Strategies-for-Improving-Communication-Efficiency\" class=\"headerlink\" title=\"Federated Learning: Strategies for Improving Communication Efficiency\"></a>Federated Learning: Strategies for Improving Communication Efficiency</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/pdf/1610.05492.pdf\">Federated Learning: Strategies for Improving Communication Efficiency</a></p>\n          </div>\n<h3 id=\"一、本文关注的问题\"><a href=\"#一、本文关注的问题\" class=\"headerlink\" title=\"一、本文关注的问题\"></a>一、本文关注的问题</h3><p>在典型的联邦学习案例中，由于更新体量较大且上传速率普遍较低，客户端向中央服务器上传更新成为瓶颈，所以需要降低更新$H_t^i$的上行通信成本。<br><a id=\"more\"></a></p>\n<h3 id=\"二、提出的方法\"><a href=\"#二、提出的方法\" class=\"headerlink\" title=\"二、提出的方法\"></a>二、提出的方法</h3><ol>\n<li><p>结构化更新：将每个客户端的更新$H_t^i$限制为具有预先指定的结构，分别为低秩和随机掩码。</p>\n<ul>\n<li>低秩：将每个更新$H_t^i\\in\\R^{d_1×d_2}$强制为秩至多为k的矩阵，因此将$H_i$拆分为两个矩阵乘积$H_t^i=A_t^iB_t^i$，其中$A_t^i\\in R^{d_1×k}$，$B_t^i\\in R^{k×d_2}$。在本地训练时，为每个客户端独立随机生成$A_t^i$并看作常量，只优化$B_t^i$并上传，使通讯成本降低$\\frac{d_1}k$倍。</li>\n<li>随机掩码：使用预定义随机稀疏规则通过每个客户端独立的随机种子将更新$H_t^i$转换为稀疏矩阵，并向服务器发送$H_t^i$的非零条目和种子。</li>\n</ul>\n</li>\n<li><p>草图更新：无限制地完成完整本地训练得到更新$H_t^i$，在上传服务器前对其编码以压缩格式，在服务器聚合前解码。使用下列工具进行草图绘制：</p>\n<ul>\n<li><p>子采样：客户端发送更新$H_t^i$的随机子集$\\hat H_t^i$，服务器对子采样更新进行平均，得到全局更新$\\hat H_t$。这样做可以使采样更新的平均值是真实平均值的无偏估计量：$\\Bbb E [\\hat H_t] = H_t$。</p>\n</li>\n<li><p>概率量化：将更新$H_t^i$展开成一位向量（也可以是b位向量），即$h=(h_1,…,h_{d_1×d_2})=vec(H_t^i)$，设$h_{max}=max_j(h_j),h_{min}=min_j(h_j)$，h的压缩表示为$\\hat h$，公式如下：</p>\n<script type=\"math/tex; mode=display\">\n\\hat h_j=\n\\left \\{\n\\begin{array}{c}\nh_{max},\\ with\\ probability \\frac{h_j-h_{min}}{h_{max-h_{min}}}\\\\\nh_{min},\\ with\\ probability \\frac{h_{max}-h_j}{h_{max-h_{min}}}\n\\end{array}\n\\right.</script><p>该方法在$H_t^i$不同维度上规模相近时效果最佳</p>\n</li>\n<li><p>结构化随机旋转改进量化：上述概率量化方法在max=1和min=-1且大部分值为0时误差较大，可以在量化前对h应用一次随机旋转（将h乘以随机正交矩阵）。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"三、取得的结果\"><a href=\"#三、取得的结果\" class=\"headerlink\" title=\"三、取得的结果\"></a>三、取得的结果</h3><ol>\n<li>利用CNN和人工区分数据集对CIFAR-10图像分类任务进行实验。<ul>\n<li>对比两种结构化更新方法，即低秩和随机掩码。图中显示降低更新矩阵的秩时，低秩方法通信效率提高不明显；而增加随机掩码生成的稀疏矩阵的稀疏性时，可以达到较好的降低更新的效果。</li>\n<li>对比随机掩码和草图更新，使用草图更新可以更快地获得一个适度的准确率(85%)，但是使用随机掩码可以收敛到更高的准确率。</li>\n<li>对比草图更新的三种形式，即子采样、概率量化和随机旋转。随机旋转可以提高算法的稳定性和性能，使用2比特量化可以获得更好的收敛效果和准确率。</li>\n</ul>\n</li>\n<li>使用指定草图的各种参数对Reddit帖子数据运行联邦平均算法进行下一词预测实验。<ul>\n<li>每次随机抽取50个用户的数据进行2000轮训练，子采样比例设为0.1或1。随机旋转可以提高预测准确性，且随机化的阿达玛变换与2比特量化不会损失性能。</li>\n<li>固定训练轮数为500和2500轮，只改变单轮客户端数量，使用1比特量化，子采样率分别为1%和10%，运行联邦平均算法。可以看到，每轮客户端数量足够多时，子采样率降低对准确性下降的影响几乎可忽略。</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1568,"excerpt":"<h2 id=\"Federated-Learning-Strategies-for-Improving-Communication-Efficiency\"><a href=\"#Federated-Learning-Strategies-for-Improving-Communication-Efficiency\" class=\"headerlink\" title=\"Federated Learning: Strategies for Improving Communication Efficiency\"></a>Federated Learning: Strategies for Improving Communication Efficiency</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/pdf/1610.05492.pdf\">Federated Learning: Strategies for Improving Communication Efficiency</a></p>\n          </div>\n<h3 id=\"一、本文关注的问题\"><a href=\"#一、本文关注的问题\" class=\"headerlink\" title=\"一、本文关注的问题\"></a>一、本文关注的问题</h3><p>在典型的联邦学习案例中，由于更新体量较大且上传速率普遍较低，客户端向中央服务器上传更新成为瓶颈，所以需要降低更新$H_t^i$的上行通信成本。<br></p>","more":"<p></p>\n<h3 id=\"二、提出的方法\"><a href=\"#二、提出的方法\" class=\"headerlink\" title=\"二、提出的方法\"></a>二、提出的方法</h3><ol>\n<li><p>结构化更新：将每个客户端的更新$H_t^i$限制为具有预先指定的结构，分别为低秩和随机掩码。</p>\n<ul>\n<li>低秩：将每个更新$H_t^i\\in\\R^{d_1×d_2}$强制为秩至多为k的矩阵，因此将$H_i$拆分为两个矩阵乘积$H_t^i=A_t^iB_t^i$，其中$A_t^i\\in R^{d_1×k}$，$B_t^i\\in R^{k×d_2}$。在本地训练时，为每个客户端独立随机生成$A_t^i$并看作常量，只优化$B_t^i$并上传，使通讯成本降低$\\frac{d_1}k$倍。</li>\n<li>随机掩码：使用预定义随机稀疏规则通过每个客户端独立的随机种子将更新$H_t^i$转换为稀疏矩阵，并向服务器发送$H_t^i$的非零条目和种子。</li>\n</ul>\n</li>\n<li><p>草图更新：无限制地完成完整本地训练得到更新$H_t^i$，在上传服务器前对其编码以压缩格式，在服务器聚合前解码。使用下列工具进行草图绘制：</p>\n<ul>\n<li><p>子采样：客户端发送更新$H_t^i$的随机子集$\\hat H_t^i$，服务器对子采样更新进行平均，得到全局更新$\\hat H_t$。这样做可以使采样更新的平均值是真实平均值的无偏估计量：$\\Bbb E [\\hat H_t] = H_t$。</p>\n</li>\n<li><p>概率量化：将更新$H_t^i$展开成一位向量（也可以是b位向量），即$h=(h_1,…,h_{d_1×d_2})=vec(H_t^i)$，设$h_{max}=max_j(h_j),h_{min}=min_j(h_j)$，h的压缩表示为$\\hat h$，公式如下：</p>\n<script type=\"math/tex; mode=display\">\n\\hat h_j=\n\\left \\{\n\\begin{array}{c}\nh_{max},\\ with\\ probability \\frac{h_j-h_{min}}{h_{max-h_{min}}}\\\\\nh_{min},\\ with\\ probability \\frac{h_{max}-h_j}{h_{max-h_{min}}}\n\\end{array}\n\\right.</script><p>该方法在$H_t^i$不同维度上规模相近时效果最佳</p>\n</li>\n<li><p>结构化随机旋转改进量化：上述概率量化方法在max=1和min=-1且大部分值为0时误差较大，可以在量化前对h应用一次随机旋转（将h乘以随机正交矩阵）。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"三、取得的结果\"><a href=\"#三、取得的结果\" class=\"headerlink\" title=\"三、取得的结果\"></a>三、取得的结果</h3><ol>\n<li>利用CNN和人工区分数据集对CIFAR-10图像分类任务进行实验。<ul>\n<li>对比两种结构化更新方法，即低秩和随机掩码。图中显示降低更新矩阵的秩时，低秩方法通信效率提高不明显；而增加随机掩码生成的稀疏矩阵的稀疏性时，可以达到较好的降低更新的效果。</li>\n<li>对比随机掩码和草图更新，使用草图更新可以更快地获得一个适度的准确率(85%)，但是使用随机掩码可以收敛到更高的准确率。</li>\n<li>对比草图更新的三种形式，即子采样、概率量化和随机旋转。随机旋转可以提高算法的稳定性和性能，使用2比特量化可以获得更好的收敛效果和准确率。</li>\n</ul>\n</li>\n<li>使用指定草图的各种参数对Reddit帖子数据运行联邦平均算法进行下一词预测实验。<ul>\n<li>每次随机抽取50个用户的数据进行2000轮训练，子采样比例设为0.1或1。随机旋转可以提高预测准确性，且随机化的阿达玛变换与2比特量化不会损失性能。</li>\n<li>固定训练轮数为500和2500轮，只改变单轮客户端数量，使用1比特量化，子采样率分别为1%和10%，运行联邦平均算法。可以看到，每轮客户端数量足够多时，子采样率降低对准确性下降的影响几乎可忽略。</li>\n</ul>\n</li>\n</ol>"},{"title":"51单片机的串口通信","date":"2020-11-25T05:16:02.000Z","_content":"{% note info %}\n原文链接：[单片机 串口编程之串口通信仿真实验](https://blog.csdn.net/nanfeibuyi/article/details/84024606)\n{% endnote %}\n## 单片机的串口相关的寄存器\n* **串口控制寄存器SCON：(Serial CONtrol)**\n* **串行数据寄存器SBUF：(Serial data BUFfer)**\n* **电源管理寄存器PCON：(Power CONtrol)**\n<!-- more -->\n\n## 串口控制寄存器SCON\n* 　　**用来对串口进行控制，其寄存器地址为0x98，支持位寻址。**\n* 　　**一般来说单片机的寄存器的个数在制作好就已经确定了，MCS-51单片机有一些寄存器是8位的(可以存放8位数据)，有一些是16位的，这些寄存器有点像全局变量(寄存器名-变量名)，它们分配了固定的地址空间，我们可以对这个寄存器变量进行赋值或读取值。比如我们禁止串口中断，那么我们可以设置相应的值，当系统处理串口相关的任务时，读取到这个我们设置的值时，直到我们要禁止串口中断，那么系统就不会相应串口中断。串口控制寄存器SCON的地址为0x98，我们可以直接对SCON这个\"变量\"进行赋值，支持位寻址意思是：SCON一共有8位，每1位代表的意思都有不同，可以直接单独对某一位进行设置，有一些寄存器是不可以位寻址的。**\n\n| SCON控制寄存器 |      |      |      |      |      |      |      |      |\n| :------------: | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n|     位编号     | D7   | D6   | D5   | D4   | D3   | D2   | D1   | D0   |\n|     位名称     | SM0  | SM1  | SM2  | REN  | TB8  | RB8  | TI   | RI   |\n|     位地址     | 9FH  | 9EH  | 9DH  | 9CH  | 9BH  | 9AH  | 99H  | 98H  |\n\n \n\n| SM0，SM1串行口工作方式控制位 |      |          |                   |                          |\n| :--------------: | ---- | -------- | ----------------- | ------------------------ |\n|         SM0      | SM1  | 工作方式 | 功能              | 波特率                   |\n|         0        | 0    | 方式0    | 8位同步移位寄存器 | 晶振频率/12              |\n|         0        | 1    | 方式1    | 10位UART          | 可变                     |\n|         1        | 0    | 方式2    | 11位UART          | 晶振频率/64或晶振频率/32 |\n|         1        | 1    | 方式3    | 11位UART          | 可变                     |\n\n \n\n| SM2  | 多机通信控制位    | 当该位置1为多机通信，多机通信仅在方式2、方式3有效。          |\n| ---- | ------------------- | ------------------------------------------------------ |\n| REN  | 接收允许位        | 为1允许接收，为0禁止接收                                     |\n| TB8  | 待发送的第9位数据 | 同来存放工作方式2，工作方式3模式下等待发送的第9位数据        |\n| RB8  | 收到的第9位数据   | 同来存放工作方式2，工作方式3模式下接收到的第9位数据，在方式1下为接收到的停止位，工作当时0不使用该位。 |\n| TI   | 发送中断标志位    | 发送完成标志位，当SBUF中的数据发送完成后由硬件置1，并且当单片机硬件中断被使能之后触发中断事件，该位必须由软件清零，并且该位被清零之后才能进行下一个字节数据的发送。 |\n| RI   | 接收中断标志位    | 接受完成标志位，当SBUF收到一个字节的数据后由硬件系统置1，并且当单片机硬件中断被使能之后触发串行中断事件，该位必须由软件清零，并且只有该位被清零之后才能够进行下一字节数据的接收。 |\n\n ## 串行数据寄存器SBUF\n\n* 　　**用于存放串行通信中发送和接收的相关数据。其寄存器地址是0x99。**\n\n* 　　**SBUF由发送缓冲寄存器和接收缓冲寄存器组成，这两个寄存器占用同一个寄存器地址。其中发送缓冲寄存器只写，接收寄存器只读。**\n\n* 　　**发送数据：当将一个数据写入SBUF后，单片机立即根据选择的工作方式和波特率将写入的字节数据进行相应的处理然后从TXD(P3.1)引脚串行发送出去，发送完成之后置位相应寄存器的标志位，只有相应的标志位被清除之后才能进行下一次的数据发送。**\n\n* 　　**接收数据：当RXD(P3.0)引脚根据工作方式和波特率接收到一个完整的数据字节后单片机将该数据字节放入接收缓冲寄存器中，并置位相应的标志位。接收缓冲寄存器是双字节的，这样就可以在单片机读取接收缓冲寄存器的数据时同时进行下一个字节的数据接收。不会发生前后两个字节的数据冲突(数据覆盖)。**\n\n## 电源管理寄存器PCON\n\n​      **可以控制串口波特率加倍。**\n\n| **PCON电源管理寄存器** |      |       |      |      |      |      |      |      |\n| ---------------------- | ---- | ----- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 位编号                 | D7   | D6    | D5   | D4   | D3   | D2   | D1   | D0   |\n| 位符号                 | SMOD | SMOD0 | LVDF | POF  | GF1  | GF0  | PD   | IDL  |\n\n   **SMOD：该位与串口通信有关。**\n\n   **SMOD=0; 串口方式1，2，3时，波特率正常。**\n\n   **SMOD=1; 串口方式1，2，3时，波特率加倍。**\n\n## 串口的工作方式\n\n　　 **MCS-51单片机的串口一共4种工作方式。其中工作方式0为同步通信方式，其余3种为异步通信。**\n\n* **工作方式0：外部引脚TXD（P3.0）为数据的输出输入端，外部引脚TXD（P3.1）提供数据的同步脉冲。**\n\n　　**因此工作在方式0进行串口通信不需要考虑波特率。**\n\n* **工作方式1：使用定时器作为波特率发生器。**\n\n  **波特率的计算** \n\n![img](https://img-blog.csdnimg.cn/2018111315393093.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70)\n\n| **常见的波特率对应的初始值** |            |       |             |       |       |        |\n| ---------------------------- | ---------- | ----- | ----------- | ----- | ----- | ------ |\n| 波特率/工作频率              | 11.0592MHz | 12MHz | 14.74456MHz | 16MHz | 20MHz | SMOD值 |\n| 150（b/s）                   | 0x40       | 0x30  | 0x00        |       |       | 0      |\n| 300（b/s）                   | 0xA0       | 0x98  | 0x80        | 0x75  | 0x52  | 0      |\n| 600（b/s）                   | 0xD0       | 0xCC  | 0xC0        | 0xBB  | 0xA9  | 0      |\n| 1200（b/s）                  | 0xF8       | 0xE6  | 0xE0        | 0xDE  | 0xD5  | 0      |\n| 2400（b/s）                  | 0xF4       | 0xF3  | 0xF0        | 0xEF  | 0xEA  | 0      |\n| 4800（b/s）                  |            | 0xF3  | 0xEF        | 0xEF  |       | 1      |\n| 4800（b/s）                  | 0xFA       |       | 0xF8        |       | 0xF5  | 0      |\n| 9600（b/s）                  | 0xFD       |       | 0xFC        |       |       | 0      |\n| 9600（b/s）                  |            |       |             |       | 0xF5  | 1      |\n| 19200（b/s）                 | 0xFD       |       | 0xFC        |       |       | 1      |\n\n* **工作方式2：**\n\n​                                   ![img](https://img-blog.csdnimg.cn/2018111316174940.png)\n\n* **工作方式3：波特率计算方式与工作方式1相同。**\n\n   \n\n## 波特率\n\n* **波特率是指数据信号对载波的调制速率，它用单位时间内载波调制状态改变的次数来表示。**\n\n* **在信息传输通道中，携带数据信息的信号单元叫码元，每秒钟通过信道传输的码元数称为码元传输速率，简称波特率。**\n\n* **通信双方约定一致的波特率以便正确的接收数据。(数据发送前可能进行了调制，波特率不同，调制参数不同）**\n\n* **如果收发双方的波特率不一样，那么调制与解调的参数不一样，就很有可能读取不到正确的数据，从而解读为乱码。**\n\n* **通常串口工作方式1使用定时器作为波特率发生器。**\n\n## 串口中断\n\n　　**使能串口中断：打开总中断-中断控制寄存器IE的EA位置1，打开串口中断中断控制寄存器IE的ES位置1**\n\n| **中断控制寄存器IE（Interrupt Enable）** |           |            |           |            |            |        |        |            |\n| -------------------------------------------- | --------- | ---------- | --------- | ---------- | ---------- | ------ | ------ | ---------- |\n| 位序号                                       | D0        | D1         | D2        | D3         | D4         | D5     | D6     | D7         |\n| 说明                                         | 外部中断0 | 定时/计数0 | 外部中断1 | 定时/计数1 | 串行口中断 | 保留位 | 保留位 | 全局中断位 |\n| 位符号                                       | EX0       | ET0        | EX1       | ET1        | ES         | --     | --     | EA         |\n| 位地址                                       | A8H       | A9H        | AAH       | ABH        | ACH        | --     | --     | AFH        |\n\n| EX0  | 外部中断0允许位 | EX0=1，允许外部中断0中断；EX0=0，禁止外部中断0中断。 |\n| ---- | :-------------: | ---------------------------------------------------- |\n|ET0|T0溢出中断允许位|\tET0=1，允许T0中断；ET0=0，禁止T0中断。|\n|EX1|\t外部中断1允许位|\tEX1=1，允许外部中断1中断；EX1=0，禁止外部中断1中断。|\n|ET1\t|T1溢出中断允许位|\tET1=1，允许T1中断；ET1=0，禁止T1中断。|\n|ES\t|串行中断允许位(Enable Serial)|ES=1，允许串行口中断；ES=0，禁止串行口中断。|\n|EA\t|中断总允许位(Enable All)|EA=1，CPU开放中断；EA=0，CPU禁止所有的中断请求。总允许EA好比一个总开关。|\n\n　　**使能串口中断之后，接收到数据(RI置1)/完成发送(TI置1)，RI/TI被置1就会触发串口中断事件，然后执行中断处理函数。**\n\n　　**中断处理函数编写格式：**       \n\n```cpp\nvoid 函数名(void) interrupt 4 using 工作寄存器组编号\n{\n    //要执行的动作\n}\n```\n\n   　　**4的含义： 一共5个中断编号为0~4，串口中断的编号为4**\n\n　　   **using 寄存器组编号：一共4组工作寄存器组，编号为0~3，如果不写默认为工作寄存器组0。**\n\n## 初始化串口为模式1过程。\n\n###  SCON设置\n\n| 位名称 | SM0         | SM1          | SM2          | REN                 | TB8                | RB8                | TI   | RI   |\n| ------ | ----------- | ------------ | ------------ | ------------------- | ------------------ | ------------------ | ---- | ---- |\n| 设置值 | 0           | 1            | 0            | 1                   | 0                  | 0                  | 0    | 0    |\n| 含义   | 工作在方式1 | 波特率不加倍 | 允许接收数据 | 工作方式1不设置该位 | 初始为未发送完数据 | 初始为为接收到数据 |      |      |\n\n   SCON = 0x01010000 = 0x50  \n\n###  PCON设置\n\n\n| 位编号           | D7   | D6    | D5   | D4   | D3   | D2   | D1   | D0   |\n| ---------------- | ---- | ----- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 位符号           | SMOD | SMOD0 | LVDF | POF  | GF1  | GF0  | PD   | IDL  |\n| 默认波特率不加倍 | 0    | 0     | 0    | 0    | 0    | 0    | 0    | 0    |\n| 波特率加倍       | 1    | 0     | 0    | 0    | 0    | 0    | 0    | 0    |\n\n   PCON = 0x00 （SMOD=0，波特率不加倍）\n\n   PCON = 0x80 （SMOD=1，波特率加倍）\n\n### 定时器设置\n\n* 工作方式设置：\n\n![img](https://img-blog.csdnimg.cn/20181113174059940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70)\n\n| MI，M0定时器模式选择 |      |          |                                   |\n| -------------------- | ---- | -------- | --------------------------------- |\n| M1                   | M0   | 工作方式 | 功能说明                          |\n| 0                    | 0    | 方式0    | 13位定时器/计数器                 |\n| 0                    | 1    | 方式1    | 16位定时器/计数器                 |\n| 1                    | 0    | 方式2    | 自动重载8位定时器/计数器          |\n| 1                    | 1    | 方式3    | T0分为2个8位独立计数器，T1无方式3 |\n\n* 开启定时器1：将控制寄存器TCON的TR1置1\n\n* 设置定时器1的初值：TH1数据寄存器装载初值的高8位，TL1数据寄存器装载初值的低8位。\n\n* 定时器用作波特率发生器时，使用上面的波特率计算公式得到初始值，或直接查看**常见的波特率对应的初始值。**\n\n​      **TH1 = 0xFD；// 11.0592MHz的工作频率，9600的波特率 对应的初始值。** \n\n###  **打开总中断 EA = 1; 打开串口中断 ES = 1；**","source":"_posts/51-2.md","raw":"---\ntitle: 51单片机的串口通信\ndate: 2020-11-25 13:16:02\ntags:\n- 51单片机\n- 开源硬件\ncategories:\n- 硬件\n- 51单片机\n---\n{% note info %}\n原文链接：[单片机 串口编程之串口通信仿真实验](https://blog.csdn.net/nanfeibuyi/article/details/84024606)\n{% endnote %}\n## 单片机的串口相关的寄存器\n* **串口控制寄存器SCON：(Serial CONtrol)**\n* **串行数据寄存器SBUF：(Serial data BUFfer)**\n* **电源管理寄存器PCON：(Power CONtrol)**\n<!-- more -->\n\n## 串口控制寄存器SCON\n* 　　**用来对串口进行控制，其寄存器地址为0x98，支持位寻址。**\n* 　　**一般来说单片机的寄存器的个数在制作好就已经确定了，MCS-51单片机有一些寄存器是8位的(可以存放8位数据)，有一些是16位的，这些寄存器有点像全局变量(寄存器名-变量名)，它们分配了固定的地址空间，我们可以对这个寄存器变量进行赋值或读取值。比如我们禁止串口中断，那么我们可以设置相应的值，当系统处理串口相关的任务时，读取到这个我们设置的值时，直到我们要禁止串口中断，那么系统就不会相应串口中断。串口控制寄存器SCON的地址为0x98，我们可以直接对SCON这个\"变量\"进行赋值，支持位寻址意思是：SCON一共有8位，每1位代表的意思都有不同，可以直接单独对某一位进行设置，有一些寄存器是不可以位寻址的。**\n\n| SCON控制寄存器 |      |      |      |      |      |      |      |      |\n| :------------: | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n|     位编号     | D7   | D6   | D5   | D4   | D3   | D2   | D1   | D0   |\n|     位名称     | SM0  | SM1  | SM2  | REN  | TB8  | RB8  | TI   | RI   |\n|     位地址     | 9FH  | 9EH  | 9DH  | 9CH  | 9BH  | 9AH  | 99H  | 98H  |\n\n \n\n| SM0，SM1串行口工作方式控制位 |      |          |                   |                          |\n| :--------------: | ---- | -------- | ----------------- | ------------------------ |\n|         SM0      | SM1  | 工作方式 | 功能              | 波特率                   |\n|         0        | 0    | 方式0    | 8位同步移位寄存器 | 晶振频率/12              |\n|         0        | 1    | 方式1    | 10位UART          | 可变                     |\n|         1        | 0    | 方式2    | 11位UART          | 晶振频率/64或晶振频率/32 |\n|         1        | 1    | 方式3    | 11位UART          | 可变                     |\n\n \n\n| SM2  | 多机通信控制位    | 当该位置1为多机通信，多机通信仅在方式2、方式3有效。          |\n| ---- | ------------------- | ------------------------------------------------------ |\n| REN  | 接收允许位        | 为1允许接收，为0禁止接收                                     |\n| TB8  | 待发送的第9位数据 | 同来存放工作方式2，工作方式3模式下等待发送的第9位数据        |\n| RB8  | 收到的第9位数据   | 同来存放工作方式2，工作方式3模式下接收到的第9位数据，在方式1下为接收到的停止位，工作当时0不使用该位。 |\n| TI   | 发送中断标志位    | 发送完成标志位，当SBUF中的数据发送完成后由硬件置1，并且当单片机硬件中断被使能之后触发中断事件，该位必须由软件清零，并且该位被清零之后才能进行下一个字节数据的发送。 |\n| RI   | 接收中断标志位    | 接受完成标志位，当SBUF收到一个字节的数据后由硬件系统置1，并且当单片机硬件中断被使能之后触发串行中断事件，该位必须由软件清零，并且只有该位被清零之后才能够进行下一字节数据的接收。 |\n\n ## 串行数据寄存器SBUF\n\n* 　　**用于存放串行通信中发送和接收的相关数据。其寄存器地址是0x99。**\n\n* 　　**SBUF由发送缓冲寄存器和接收缓冲寄存器组成，这两个寄存器占用同一个寄存器地址。其中发送缓冲寄存器只写，接收寄存器只读。**\n\n* 　　**发送数据：当将一个数据写入SBUF后，单片机立即根据选择的工作方式和波特率将写入的字节数据进行相应的处理然后从TXD(P3.1)引脚串行发送出去，发送完成之后置位相应寄存器的标志位，只有相应的标志位被清除之后才能进行下一次的数据发送。**\n\n* 　　**接收数据：当RXD(P3.0)引脚根据工作方式和波特率接收到一个完整的数据字节后单片机将该数据字节放入接收缓冲寄存器中，并置位相应的标志位。接收缓冲寄存器是双字节的，这样就可以在单片机读取接收缓冲寄存器的数据时同时进行下一个字节的数据接收。不会发生前后两个字节的数据冲突(数据覆盖)。**\n\n## 电源管理寄存器PCON\n\n​      **可以控制串口波特率加倍。**\n\n| **PCON电源管理寄存器** |      |       |      |      |      |      |      |      |\n| ---------------------- | ---- | ----- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 位编号                 | D7   | D6    | D5   | D4   | D3   | D2   | D1   | D0   |\n| 位符号                 | SMOD | SMOD0 | LVDF | POF  | GF1  | GF0  | PD   | IDL  |\n\n   **SMOD：该位与串口通信有关。**\n\n   **SMOD=0; 串口方式1，2，3时，波特率正常。**\n\n   **SMOD=1; 串口方式1，2，3时，波特率加倍。**\n\n## 串口的工作方式\n\n　　 **MCS-51单片机的串口一共4种工作方式。其中工作方式0为同步通信方式，其余3种为异步通信。**\n\n* **工作方式0：外部引脚TXD（P3.0）为数据的输出输入端，外部引脚TXD（P3.1）提供数据的同步脉冲。**\n\n　　**因此工作在方式0进行串口通信不需要考虑波特率。**\n\n* **工作方式1：使用定时器作为波特率发生器。**\n\n  **波特率的计算** \n\n![img](https://img-blog.csdnimg.cn/2018111315393093.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70)\n\n| **常见的波特率对应的初始值** |            |       |             |       |       |        |\n| ---------------------------- | ---------- | ----- | ----------- | ----- | ----- | ------ |\n| 波特率/工作频率              | 11.0592MHz | 12MHz | 14.74456MHz | 16MHz | 20MHz | SMOD值 |\n| 150（b/s）                   | 0x40       | 0x30  | 0x00        |       |       | 0      |\n| 300（b/s）                   | 0xA0       | 0x98  | 0x80        | 0x75  | 0x52  | 0      |\n| 600（b/s）                   | 0xD0       | 0xCC  | 0xC0        | 0xBB  | 0xA9  | 0      |\n| 1200（b/s）                  | 0xF8       | 0xE6  | 0xE0        | 0xDE  | 0xD5  | 0      |\n| 2400（b/s）                  | 0xF4       | 0xF3  | 0xF0        | 0xEF  | 0xEA  | 0      |\n| 4800（b/s）                  |            | 0xF3  | 0xEF        | 0xEF  |       | 1      |\n| 4800（b/s）                  | 0xFA       |       | 0xF8        |       | 0xF5  | 0      |\n| 9600（b/s）                  | 0xFD       |       | 0xFC        |       |       | 0      |\n| 9600（b/s）                  |            |       |             |       | 0xF5  | 1      |\n| 19200（b/s）                 | 0xFD       |       | 0xFC        |       |       | 1      |\n\n* **工作方式2：**\n\n​                                   ![img](https://img-blog.csdnimg.cn/2018111316174940.png)\n\n* **工作方式3：波特率计算方式与工作方式1相同。**\n\n   \n\n## 波特率\n\n* **波特率是指数据信号对载波的调制速率，它用单位时间内载波调制状态改变的次数来表示。**\n\n* **在信息传输通道中，携带数据信息的信号单元叫码元，每秒钟通过信道传输的码元数称为码元传输速率，简称波特率。**\n\n* **通信双方约定一致的波特率以便正确的接收数据。(数据发送前可能进行了调制，波特率不同，调制参数不同）**\n\n* **如果收发双方的波特率不一样，那么调制与解调的参数不一样，就很有可能读取不到正确的数据，从而解读为乱码。**\n\n* **通常串口工作方式1使用定时器作为波特率发生器。**\n\n## 串口中断\n\n　　**使能串口中断：打开总中断-中断控制寄存器IE的EA位置1，打开串口中断中断控制寄存器IE的ES位置1**\n\n| **中断控制寄存器IE（Interrupt Enable）** |           |            |           |            |            |        |        |            |\n| -------------------------------------------- | --------- | ---------- | --------- | ---------- | ---------- | ------ | ------ | ---------- |\n| 位序号                                       | D0        | D1         | D2        | D3         | D4         | D5     | D6     | D7         |\n| 说明                                         | 外部中断0 | 定时/计数0 | 外部中断1 | 定时/计数1 | 串行口中断 | 保留位 | 保留位 | 全局中断位 |\n| 位符号                                       | EX0       | ET0        | EX1       | ET1        | ES         | --     | --     | EA         |\n| 位地址                                       | A8H       | A9H        | AAH       | ABH        | ACH        | --     | --     | AFH        |\n\n| EX0  | 外部中断0允许位 | EX0=1，允许外部中断0中断；EX0=0，禁止外部中断0中断。 |\n| ---- | :-------------: | ---------------------------------------------------- |\n|ET0|T0溢出中断允许位|\tET0=1，允许T0中断；ET0=0，禁止T0中断。|\n|EX1|\t外部中断1允许位|\tEX1=1，允许外部中断1中断；EX1=0，禁止外部中断1中断。|\n|ET1\t|T1溢出中断允许位|\tET1=1，允许T1中断；ET1=0，禁止T1中断。|\n|ES\t|串行中断允许位(Enable Serial)|ES=1，允许串行口中断；ES=0，禁止串行口中断。|\n|EA\t|中断总允许位(Enable All)|EA=1，CPU开放中断；EA=0，CPU禁止所有的中断请求。总允许EA好比一个总开关。|\n\n　　**使能串口中断之后，接收到数据(RI置1)/完成发送(TI置1)，RI/TI被置1就会触发串口中断事件，然后执行中断处理函数。**\n\n　　**中断处理函数编写格式：**       \n\n```cpp\nvoid 函数名(void) interrupt 4 using 工作寄存器组编号\n{\n    //要执行的动作\n}\n```\n\n   　　**4的含义： 一共5个中断编号为0~4，串口中断的编号为4**\n\n　　   **using 寄存器组编号：一共4组工作寄存器组，编号为0~3，如果不写默认为工作寄存器组0。**\n\n## 初始化串口为模式1过程。\n\n###  SCON设置\n\n| 位名称 | SM0         | SM1          | SM2          | REN                 | TB8                | RB8                | TI   | RI   |\n| ------ | ----------- | ------------ | ------------ | ------------------- | ------------------ | ------------------ | ---- | ---- |\n| 设置值 | 0           | 1            | 0            | 1                   | 0                  | 0                  | 0    | 0    |\n| 含义   | 工作在方式1 | 波特率不加倍 | 允许接收数据 | 工作方式1不设置该位 | 初始为未发送完数据 | 初始为为接收到数据 |      |      |\n\n   SCON = 0x01010000 = 0x50  \n\n###  PCON设置\n\n\n| 位编号           | D7   | D6    | D5   | D4   | D3   | D2   | D1   | D0   |\n| ---------------- | ---- | ----- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 位符号           | SMOD | SMOD0 | LVDF | POF  | GF1  | GF0  | PD   | IDL  |\n| 默认波特率不加倍 | 0    | 0     | 0    | 0    | 0    | 0    | 0    | 0    |\n| 波特率加倍       | 1    | 0     | 0    | 0    | 0    | 0    | 0    | 0    |\n\n   PCON = 0x00 （SMOD=0，波特率不加倍）\n\n   PCON = 0x80 （SMOD=1，波特率加倍）\n\n### 定时器设置\n\n* 工作方式设置：\n\n![img](https://img-blog.csdnimg.cn/20181113174059940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70)\n\n| MI，M0定时器模式选择 |      |          |                                   |\n| -------------------- | ---- | -------- | --------------------------------- |\n| M1                   | M0   | 工作方式 | 功能说明                          |\n| 0                    | 0    | 方式0    | 13位定时器/计数器                 |\n| 0                    | 1    | 方式1    | 16位定时器/计数器                 |\n| 1                    | 0    | 方式2    | 自动重载8位定时器/计数器          |\n| 1                    | 1    | 方式3    | T0分为2个8位独立计数器，T1无方式3 |\n\n* 开启定时器1：将控制寄存器TCON的TR1置1\n\n* 设置定时器1的初值：TH1数据寄存器装载初值的高8位，TL1数据寄存器装载初值的低8位。\n\n* 定时器用作波特率发生器时，使用上面的波特率计算公式得到初始值，或直接查看**常见的波特率对应的初始值。**\n\n​      **TH1 = 0xFD；// 11.0592MHz的工作频率，9600的波特率 对应的初始值。** \n\n###  **打开总中断 EA = 1; 打开串口中断 ES = 1；**","slug":"51-2","published":1,"updated":"2020-11-25T06:03:05.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0fu000bc8pv4s7lco4c","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>原文链接：<a href=\"https://blog.csdn.net/nanfeibuyi/article/details/84024606\">单片机 串口编程之串口通信仿真实验</a></p>\n          </div>\n<h2 id=\"单片机的串口相关的寄存器\"><a href=\"#单片机的串口相关的寄存器\" class=\"headerlink\" title=\"单片机的串口相关的寄存器\"></a>单片机的串口相关的寄存器</h2><ul>\n<li><strong>串口控制寄存器SCON：(Serial CONtrol)</strong></li>\n<li><strong>串行数据寄存器SBUF：(Serial data BUFfer)</strong></li>\n<li><strong>电源管理寄存器PCON：(Power CONtrol)</strong><a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"串口控制寄存器SCON\"><a href=\"#串口控制寄存器SCON\" class=\"headerlink\" title=\"串口控制寄存器SCON\"></a>串口控制寄存器SCON</h2><ul>\n<li>　　<strong>用来对串口进行控制，其寄存器地址为0x98，支持位寻址。</strong></li>\n<li>　　<strong>一般来说单片机的寄存器的个数在制作好就已经确定了，MCS-51单片机有一些寄存器是8位的(可以存放8位数据)，有一些是16位的，这些寄存器有点像全局变量(寄存器名-变量名)，它们分配了固定的地址空间，我们可以对这个寄存器变量进行赋值或读取值。比如我们禁止串口中断，那么我们可以设置相应的值，当系统处理串口相关的任务时，读取到这个我们设置的值时，直到我们要禁止串口中断，那么系统就不会相应串口中断。串口控制寄存器SCON的地址为0x98，我们可以直接对SCON这个”变量”进行赋值，支持位寻址意思是：SCON一共有8位，每1位代表的意思都有不同，可以直接单独对某一位进行设置，有一些寄存器是不可以位寻址的。</strong></li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">SCON控制寄存器</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">位编号</td>\n<td>D7</td>\n<td>D6</td>\n<td>D5</td>\n<td>D4</td>\n<td>D3</td>\n<td>D2</td>\n<td>D1</td>\n<td>D0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">位名称</td>\n<td>SM0</td>\n<td>SM1</td>\n<td>SM2</td>\n<td>REN</td>\n<td>TB8</td>\n<td>RB8</td>\n<td>TI</td>\n<td>RI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">位地址</td>\n<td>9FH</td>\n<td>9EH</td>\n<td>9DH</td>\n<td>9CH</td>\n<td>9BH</td>\n<td>9AH</td>\n<td>99H</td>\n<td>98H</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">SM0，SM1串行口工作方式控制位</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">SM0</td>\n<td>SM1</td>\n<td>工作方式</td>\n<td>功能</td>\n<td>波特率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td>方式0</td>\n<td>8位同步移位寄存器</td>\n<td>晶振频率/12</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>方式1</td>\n<td>10位UART</td>\n<td>可变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td>0</td>\n<td>方式2</td>\n<td>11位UART</td>\n<td>晶振频率/64或晶振频率/32</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td>1</td>\n<td>方式3</td>\n<td>11位UART</td>\n<td>可变</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>SM2</th>\n<th>多机通信控制位</th>\n<th>当该位置1为多机通信，多机通信仅在方式2、方式3有效。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>REN</td>\n<td>接收允许位</td>\n<td>为1允许接收，为0禁止接收</td>\n</tr>\n<tr>\n<td>TB8</td>\n<td>待发送的第9位数据</td>\n<td>同来存放工作方式2，工作方式3模式下等待发送的第9位数据</td>\n</tr>\n<tr>\n<td>RB8</td>\n<td>收到的第9位数据</td>\n<td>同来存放工作方式2，工作方式3模式下接收到的第9位数据，在方式1下为接收到的停止位，工作当时0不使用该位。</td>\n</tr>\n<tr>\n<td>TI</td>\n<td>发送中断标志位</td>\n<td>发送完成标志位，当SBUF中的数据发送完成后由硬件置1，并且当单片机硬件中断被使能之后触发中断事件，该位必须由软件清零，并且该位被清零之后才能进行下一个字节数据的发送。</td>\n</tr>\n<tr>\n<td>RI</td>\n<td>接收中断标志位</td>\n<td>接受完成标志位，当SBUF收到一个字节的数据后由硬件系统置1，并且当单片机硬件中断被使能之后触发串行中断事件，该位必须由软件清零，并且只有该位被清零之后才能够进行下一字节数据的接收。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"串行数据寄存器SBUF\"><a href=\"#串行数据寄存器SBUF\" class=\"headerlink\" title=\"串行数据寄存器SBUF\"></a>串行数据寄存器SBUF</h2><ul>\n<li><p>　　<strong>用于存放串行通信中发送和接收的相关数据。其寄存器地址是0x99。</strong></p>\n</li>\n<li><p>　　<strong>SBUF由发送缓冲寄存器和接收缓冲寄存器组成，这两个寄存器占用同一个寄存器地址。其中发送缓冲寄存器只写，接收寄存器只读。</strong></p>\n</li>\n<li><p>　　<strong>发送数据：当将一个数据写入SBUF后，单片机立即根据选择的工作方式和波特率将写入的字节数据进行相应的处理然后从TXD(P3.1)引脚串行发送出去，发送完成之后置位相应寄存器的标志位，只有相应的标志位被清除之后才能进行下一次的数据发送。</strong></p>\n</li>\n<li><p>　　<strong>接收数据：当RXD(P3.0)引脚根据工作方式和波特率接收到一个完整的数据字节后单片机将该数据字节放入接收缓冲寄存器中，并置位相应的标志位。接收缓冲寄存器是双字节的，这样就可以在单片机读取接收缓冲寄存器的数据时同时进行下一个字节的数据接收。不会发生前后两个字节的数据冲突(数据覆盖)。</strong></p>\n</li>\n</ul>\n<h2 id=\"电源管理寄存器PCON\"><a href=\"#电源管理寄存器PCON\" class=\"headerlink\" title=\"电源管理寄存器PCON\"></a>电源管理寄存器PCON</h2><p>​      <strong>可以控制串口波特率加倍。</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>PCON电源管理寄存器</strong></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>位编号</td>\n<td>D7</td>\n<td>D6</td>\n<td>D5</td>\n<td>D4</td>\n<td>D3</td>\n<td>D2</td>\n<td>D1</td>\n<td>D0</td>\n</tr>\n<tr>\n<td>位符号</td>\n<td>SMOD</td>\n<td>SMOD0</td>\n<td>LVDF</td>\n<td>POF</td>\n<td>GF1</td>\n<td>GF0</td>\n<td>PD</td>\n<td>IDL</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>   <strong>SMOD：该位与串口通信有关。</strong></p>\n<p>   <strong>SMOD=0; 串口方式1，2，3时，波特率正常。</strong></p>\n<p>   <strong>SMOD=1; 串口方式1，2，3时，波特率加倍。</strong></p>\n<h2 id=\"串口的工作方式\"><a href=\"#串口的工作方式\" class=\"headerlink\" title=\"串口的工作方式\"></a>串口的工作方式</h2><p>　　 <strong>MCS-51单片机的串口一共4种工作方式。其中工作方式0为同步通信方式，其余3种为异步通信。</strong></p>\n<ul>\n<li><strong>工作方式0：外部引脚TXD（P3.0）为数据的输出输入端，外部引脚TXD（P3.1）提供数据的同步脉冲。</strong></li>\n</ul>\n<p>　　<strong>因此工作在方式0进行串口通信不需要考虑波特率。</strong></p>\n<ul>\n<li><p><strong>工作方式1：使用定时器作为波特率发生器。</strong></p>\n<p><strong>波特率的计算</strong> </p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/2018111315393093.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>常见的波特率对应的初始值</strong></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>波特率/工作频率</td>\n<td>11.0592MHz</td>\n<td>12MHz</td>\n<td>14.74456MHz</td>\n<td>16MHz</td>\n<td>20MHz</td>\n<td>SMOD值</td>\n</tr>\n<tr>\n<td>150（b/s）</td>\n<td>0x40</td>\n<td>0x30</td>\n<td>0x00</td>\n<td></td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>300（b/s）</td>\n<td>0xA0</td>\n<td>0x98</td>\n<td>0x80</td>\n<td>0x75</td>\n<td>0x52</td>\n<td>0</td>\n</tr>\n<tr>\n<td>600（b/s）</td>\n<td>0xD0</td>\n<td>0xCC</td>\n<td>0xC0</td>\n<td>0xBB</td>\n<td>0xA9</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1200（b/s）</td>\n<td>0xF8</td>\n<td>0xE6</td>\n<td>0xE0</td>\n<td>0xDE</td>\n<td>0xD5</td>\n<td>0</td>\n</tr>\n<tr>\n<td>2400（b/s）</td>\n<td>0xF4</td>\n<td>0xF3</td>\n<td>0xF0</td>\n<td>0xEF</td>\n<td>0xEA</td>\n<td>0</td>\n</tr>\n<tr>\n<td>4800（b/s）</td>\n<td></td>\n<td>0xF3</td>\n<td>0xEF</td>\n<td>0xEF</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>4800（b/s）</td>\n<td>0xFA</td>\n<td></td>\n<td>0xF8</td>\n<td></td>\n<td>0xF5</td>\n<td>0</td>\n</tr>\n<tr>\n<td>9600（b/s）</td>\n<td>0xFD</td>\n<td></td>\n<td>0xFC</td>\n<td></td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>9600（b/s）</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>0xF5</td>\n<td>1</td>\n</tr>\n<tr>\n<td>19200（b/s）</td>\n<td>0xFD</td>\n<td></td>\n<td>0xFC</td>\n<td></td>\n<td></td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><strong>工作方式2：</strong></li>\n</ul>\n<p>​                                   <img src=\"https://img-blog.csdnimg.cn/2018111316174940.png\" alt=\"img\"></p>\n<ul>\n<li><strong>工作方式3：波特率计算方式与工作方式1相同。</strong></li>\n</ul>\n<h2 id=\"波特率\"><a href=\"#波特率\" class=\"headerlink\" title=\"波特率\"></a>波特率</h2><ul>\n<li><p><strong>波特率是指数据信号对载波的调制速率，它用单位时间内载波调制状态改变的次数来表示。</strong></p>\n</li>\n<li><p><strong>在信息传输通道中，携带数据信息的信号单元叫码元，每秒钟通过信道传输的码元数称为码元传输速率，简称波特率。</strong></p>\n</li>\n<li><p><strong>通信双方约定一致的波特率以便正确的接收数据。(数据发送前可能进行了调制，波特率不同，调制参数不同）</strong></p>\n</li>\n<li><p><strong>如果收发双方的波特率不一样，那么调制与解调的参数不一样，就很有可能读取不到正确的数据，从而解读为乱码。</strong></p>\n</li>\n<li><p><strong>通常串口工作方式1使用定时器作为波特率发生器。</strong></p>\n</li>\n</ul>\n<h2 id=\"串口中断\"><a href=\"#串口中断\" class=\"headerlink\" title=\"串口中断\"></a>串口中断</h2><p>　　<strong>使能串口中断：打开总中断-中断控制寄存器IE的EA位置1，打开串口中断中断控制寄存器IE的ES位置1</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>中断控制寄存器IE（Interrupt Enable）</strong></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>位序号</td>\n<td>D0</td>\n<td>D1</td>\n<td>D2</td>\n<td>D3</td>\n<td>D4</td>\n<td>D5</td>\n<td>D6</td>\n<td>D7</td>\n</tr>\n<tr>\n<td>说明</td>\n<td>外部中断0</td>\n<td>定时/计数0</td>\n<td>外部中断1</td>\n<td>定时/计数1</td>\n<td>串行口中断</td>\n<td>保留位</td>\n<td>保留位</td>\n<td>全局中断位</td>\n</tr>\n<tr>\n<td>位符号</td>\n<td>EX0</td>\n<td>ET0</td>\n<td>EX1</td>\n<td>ET1</td>\n<td>ES</td>\n<td>—</td>\n<td>—</td>\n<td>EA</td>\n</tr>\n<tr>\n<td>位地址</td>\n<td>A8H</td>\n<td>A9H</td>\n<td>AAH</td>\n<td>ABH</td>\n<td>ACH</td>\n<td>—</td>\n<td>—</td>\n<td>AFH</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>EX0</th>\n<th style=\"text-align:center\">外部中断0允许位</th>\n<th>EX0=1，允许外部中断0中断；EX0=0，禁止外部中断0中断。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ET0</td>\n<td style=\"text-align:center\">T0溢出中断允许位</td>\n<td>ET0=1，允许T0中断；ET0=0，禁止T0中断。</td>\n</tr>\n<tr>\n<td>EX1</td>\n<td style=\"text-align:center\">外部中断1允许位</td>\n<td>EX1=1，允许外部中断1中断；EX1=0，禁止外部中断1中断。</td>\n</tr>\n<tr>\n<td>ET1</td>\n<td style=\"text-align:center\">T1溢出中断允许位</td>\n<td>ET1=1，允许T1中断；ET1=0，禁止T1中断。</td>\n</tr>\n<tr>\n<td>ES</td>\n<td style=\"text-align:center\">串行中断允许位(Enable Serial)</td>\n<td>ES=1，允许串行口中断；ES=0，禁止串行口中断。</td>\n</tr>\n<tr>\n<td>EA</td>\n<td style=\"text-align:center\">中断总允许位(Enable All)</td>\n<td>EA=1，CPU开放中断；EA=0，CPU禁止所有的中断请求。总允许EA好比一个总开关。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>　　<strong>使能串口中断之后，接收到数据(RI置1)/完成发送(TI置1)，RI/TI被置1就会触发串口中断事件，然后执行中断处理函数。</strong></p>\n<p>　　<strong>中断处理函数编写格式：</strong>       </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> 函数名(<span class=\"keyword\">void</span>) interrupt <span class=\"number\">4</span> <span class=\"keyword\">using</span> 工作寄存器组编号</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//要执行的动作</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>   　　<strong>4的含义： 一共5个中断编号为0~4，串口中断的编号为4</strong></p>\n<p>　　   <strong>using 寄存器组编号：一共4组工作寄存器组，编号为0~3，如果不写默认为工作寄存器组0。</strong></p>\n<h2 id=\"初始化串口为模式1过程。\"><a href=\"#初始化串口为模式1过程。\" class=\"headerlink\" title=\"初始化串口为模式1过程。\"></a>初始化串口为模式1过程。</h2><h3 id=\"SCON设置\"><a href=\"#SCON设置\" class=\"headerlink\" title=\"SCON设置\"></a>SCON设置</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>位名称</th>\n<th>SM0</th>\n<th>SM1</th>\n<th>SM2</th>\n<th>REN</th>\n<th>TB8</th>\n<th>RB8</th>\n<th>TI</th>\n<th>RI</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>设置值</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>含义</td>\n<td>工作在方式1</td>\n<td>波特率不加倍</td>\n<td>允许接收数据</td>\n<td>工作方式1不设置该位</td>\n<td>初始为未发送完数据</td>\n<td>初始为为接收到数据</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>   SCON = 0x01010000 = 0x50  </p>\n<h3 id=\"PCON设置\"><a href=\"#PCON设置\" class=\"headerlink\" title=\"PCON设置\"></a>PCON设置</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>位编号</th>\n<th>D7</th>\n<th>D6</th>\n<th>D5</th>\n<th>D4</th>\n<th>D3</th>\n<th>D2</th>\n<th>D1</th>\n<th>D0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>位符号</td>\n<td>SMOD</td>\n<td>SMOD0</td>\n<td>LVDF</td>\n<td>POF</td>\n<td>GF1</td>\n<td>GF0</td>\n<td>PD</td>\n<td>IDL</td>\n</tr>\n<tr>\n<td>默认波特率不加倍</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>波特率加倍</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>   PCON = 0x00 （SMOD=0，波特率不加倍）</p>\n<p>   PCON = 0x80 （SMOD=1，波特率加倍）</p>\n<h3 id=\"定时器设置\"><a href=\"#定时器设置\" class=\"headerlink\" title=\"定时器设置\"></a>定时器设置</h3><ul>\n<li>工作方式设置：</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20181113174059940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>MI，M0定时器模式选择</th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>M1</td>\n<td>M0</td>\n<td>工作方式</td>\n<td>功能说明</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>方式0</td>\n<td>13位定时器/计数器</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>方式1</td>\n<td>16位定时器/计数器</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>方式2</td>\n<td>自动重载8位定时器/计数器</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>方式3</td>\n<td>T0分为2个8位独立计数器，T1无方式3</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><p>开启定时器1：将控制寄存器TCON的TR1置1</p>\n</li>\n<li><p>设置定时器1的初值：TH1数据寄存器装载初值的高8位，TL1数据寄存器装载初值的低8位。</p>\n</li>\n<li><p>定时器用作波特率发生器时，使用上面的波特率计算公式得到初始值，或直接查看<strong>常见的波特率对应的初始值。</strong></p>\n</li>\n</ul>\n<p>​      <strong>TH1 = 0xFD；// 11.0592MHz的工作频率，9600的波特率 对应的初始值。</strong> </p>\n<h3 id=\"打开总中断-EA-1-打开串口中断-ES-1；\"><a href=\"#打开总中断-EA-1-打开串口中断-ES-1；\" class=\"headerlink\" title=\"打开总中断 EA = 1; 打开串口中断 ES = 1；\"></a><strong>打开总中断 EA = 1; 打开串口中断 ES = 1；</strong></h3>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":3409,"excerpt":"<div class=\"note info\">\n            <p>原文链接：<a href=\"https://blog.csdn.net/nanfeibuyi/article/details/84024606\">单片机 串口编程之串口通信仿真实验</a></p>\n          </div>\n<h2 id=\"单片机的串口相关的寄存器\"><a href=\"#单片机的串口相关的寄存器\" class=\"headerlink\" title=\"单片机的串口相关的寄存器\"></a>单片机的串口相关的寄存器</h2><ul>\n<li><strong>串口控制寄存器SCON：(Serial CONtrol)</strong></li>\n<li><strong>串行数据寄存器SBUF：(Serial data BUFfer)</strong></li>\n<li><strong>电源管理寄存器PCON：(Power CONtrol)</strong></li></ul>","more":"\n\n<h2 id=\"串口控制寄存器SCON\"><a href=\"#串口控制寄存器SCON\" class=\"headerlink\" title=\"串口控制寄存器SCON\"></a>串口控制寄存器SCON</h2><ul>\n<li>　　<strong>用来对串口进行控制，其寄存器地址为0x98，支持位寻址。</strong></li>\n<li>　　<strong>一般来说单片机的寄存器的个数在制作好就已经确定了，MCS-51单片机有一些寄存器是8位的(可以存放8位数据)，有一些是16位的，这些寄存器有点像全局变量(寄存器名-变量名)，它们分配了固定的地址空间，我们可以对这个寄存器变量进行赋值或读取值。比如我们禁止串口中断，那么我们可以设置相应的值，当系统处理串口相关的任务时，读取到这个我们设置的值时，直到我们要禁止串口中断，那么系统就不会相应串口中断。串口控制寄存器SCON的地址为0x98，我们可以直接对SCON这个”变量”进行赋值，支持位寻址意思是：SCON一共有8位，每1位代表的意思都有不同，可以直接单独对某一位进行设置，有一些寄存器是不可以位寻址的。</strong></li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">SCON控制寄存器</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">位编号</td>\n<td>D7</td>\n<td>D6</td>\n<td>D5</td>\n<td>D4</td>\n<td>D3</td>\n<td>D2</td>\n<td>D1</td>\n<td>D0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">位名称</td>\n<td>SM0</td>\n<td>SM1</td>\n<td>SM2</td>\n<td>REN</td>\n<td>TB8</td>\n<td>RB8</td>\n<td>TI</td>\n<td>RI</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">位地址</td>\n<td>9FH</td>\n<td>9EH</td>\n<td>9DH</td>\n<td>9CH</td>\n<td>9BH</td>\n<td>9AH</td>\n<td>99H</td>\n<td>98H</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">SM0，SM1串行口工作方式控制位</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">SM0</td>\n<td>SM1</td>\n<td>工作方式</td>\n<td>功能</td>\n<td>波特率</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>0</td>\n<td>方式0</td>\n<td>8位同步移位寄存器</td>\n<td>晶振频率/12</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>1</td>\n<td>方式1</td>\n<td>10位UART</td>\n<td>可变</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td>0</td>\n<td>方式2</td>\n<td>11位UART</td>\n<td>晶振频率/64或晶振频率/32</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td>1</td>\n<td>方式3</td>\n<td>11位UART</td>\n<td>可变</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>SM2</th>\n<th>多机通信控制位</th>\n<th>当该位置1为多机通信，多机通信仅在方式2、方式3有效。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>REN</td>\n<td>接收允许位</td>\n<td>为1允许接收，为0禁止接收</td>\n</tr>\n<tr>\n<td>TB8</td>\n<td>待发送的第9位数据</td>\n<td>同来存放工作方式2，工作方式3模式下等待发送的第9位数据</td>\n</tr>\n<tr>\n<td>RB8</td>\n<td>收到的第9位数据</td>\n<td>同来存放工作方式2，工作方式3模式下接收到的第9位数据，在方式1下为接收到的停止位，工作当时0不使用该位。</td>\n</tr>\n<tr>\n<td>TI</td>\n<td>发送中断标志位</td>\n<td>发送完成标志位，当SBUF中的数据发送完成后由硬件置1，并且当单片机硬件中断被使能之后触发中断事件，该位必须由软件清零，并且该位被清零之后才能进行下一个字节数据的发送。</td>\n</tr>\n<tr>\n<td>RI</td>\n<td>接收中断标志位</td>\n<td>接受完成标志位，当SBUF收到一个字节的数据后由硬件系统置1，并且当单片机硬件中断被使能之后触发串行中断事件，该位必须由软件清零，并且只有该位被清零之后才能够进行下一字节数据的接收。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"串行数据寄存器SBUF\"><a href=\"#串行数据寄存器SBUF\" class=\"headerlink\" title=\"串行数据寄存器SBUF\"></a>串行数据寄存器SBUF</h2><ul>\n<li><p>　　<strong>用于存放串行通信中发送和接收的相关数据。其寄存器地址是0x99。</strong></p>\n</li>\n<li><p>　　<strong>SBUF由发送缓冲寄存器和接收缓冲寄存器组成，这两个寄存器占用同一个寄存器地址。其中发送缓冲寄存器只写，接收寄存器只读。</strong></p>\n</li>\n<li><p>　　<strong>发送数据：当将一个数据写入SBUF后，单片机立即根据选择的工作方式和波特率将写入的字节数据进行相应的处理然后从TXD(P3.1)引脚串行发送出去，发送完成之后置位相应寄存器的标志位，只有相应的标志位被清除之后才能进行下一次的数据发送。</strong></p>\n</li>\n<li><p>　　<strong>接收数据：当RXD(P3.0)引脚根据工作方式和波特率接收到一个完整的数据字节后单片机将该数据字节放入接收缓冲寄存器中，并置位相应的标志位。接收缓冲寄存器是双字节的，这样就可以在单片机读取接收缓冲寄存器的数据时同时进行下一个字节的数据接收。不会发生前后两个字节的数据冲突(数据覆盖)。</strong></p>\n</li>\n</ul>\n<h2 id=\"电源管理寄存器PCON\"><a href=\"#电源管理寄存器PCON\" class=\"headerlink\" title=\"电源管理寄存器PCON\"></a>电源管理寄存器PCON</h2><p>​      <strong>可以控制串口波特率加倍。</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>PCON电源管理寄存器</strong></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>位编号</td>\n<td>D7</td>\n<td>D6</td>\n<td>D5</td>\n<td>D4</td>\n<td>D3</td>\n<td>D2</td>\n<td>D1</td>\n<td>D0</td>\n</tr>\n<tr>\n<td>位符号</td>\n<td>SMOD</td>\n<td>SMOD0</td>\n<td>LVDF</td>\n<td>POF</td>\n<td>GF1</td>\n<td>GF0</td>\n<td>PD</td>\n<td>IDL</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>   <strong>SMOD：该位与串口通信有关。</strong></p>\n<p>   <strong>SMOD=0; 串口方式1，2，3时，波特率正常。</strong></p>\n<p>   <strong>SMOD=1; 串口方式1，2，3时，波特率加倍。</strong></p>\n<h2 id=\"串口的工作方式\"><a href=\"#串口的工作方式\" class=\"headerlink\" title=\"串口的工作方式\"></a>串口的工作方式</h2><p>　　 <strong>MCS-51单片机的串口一共4种工作方式。其中工作方式0为同步通信方式，其余3种为异步通信。</strong></p>\n<ul>\n<li><strong>工作方式0：外部引脚TXD（P3.0）为数据的输出输入端，外部引脚TXD（P3.1）提供数据的同步脉冲。</strong></li>\n</ul>\n<p>　　<strong>因此工作在方式0进行串口通信不需要考虑波特率。</strong></p>\n<ul>\n<li><p><strong>工作方式1：使用定时器作为波特率发生器。</strong></p>\n<p><strong>波特率的计算</strong> </p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/2018111315393093.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>常见的波特率对应的初始值</strong></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>波特率/工作频率</td>\n<td>11.0592MHz</td>\n<td>12MHz</td>\n<td>14.74456MHz</td>\n<td>16MHz</td>\n<td>20MHz</td>\n<td>SMOD值</td>\n</tr>\n<tr>\n<td>150（b/s）</td>\n<td>0x40</td>\n<td>0x30</td>\n<td>0x00</td>\n<td></td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>300（b/s）</td>\n<td>0xA0</td>\n<td>0x98</td>\n<td>0x80</td>\n<td>0x75</td>\n<td>0x52</td>\n<td>0</td>\n</tr>\n<tr>\n<td>600（b/s）</td>\n<td>0xD0</td>\n<td>0xCC</td>\n<td>0xC0</td>\n<td>0xBB</td>\n<td>0xA9</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1200（b/s）</td>\n<td>0xF8</td>\n<td>0xE6</td>\n<td>0xE0</td>\n<td>0xDE</td>\n<td>0xD5</td>\n<td>0</td>\n</tr>\n<tr>\n<td>2400（b/s）</td>\n<td>0xF4</td>\n<td>0xF3</td>\n<td>0xF0</td>\n<td>0xEF</td>\n<td>0xEA</td>\n<td>0</td>\n</tr>\n<tr>\n<td>4800（b/s）</td>\n<td></td>\n<td>0xF3</td>\n<td>0xEF</td>\n<td>0xEF</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>4800（b/s）</td>\n<td>0xFA</td>\n<td></td>\n<td>0xF8</td>\n<td></td>\n<td>0xF5</td>\n<td>0</td>\n</tr>\n<tr>\n<td>9600（b/s）</td>\n<td>0xFD</td>\n<td></td>\n<td>0xFC</td>\n<td></td>\n<td></td>\n<td>0</td>\n</tr>\n<tr>\n<td>9600（b/s）</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>0xF5</td>\n<td>1</td>\n</tr>\n<tr>\n<td>19200（b/s）</td>\n<td>0xFD</td>\n<td></td>\n<td>0xFC</td>\n<td></td>\n<td></td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><strong>工作方式2：</strong></li>\n</ul>\n<p>​                                   <img src=\"https://img-blog.csdnimg.cn/2018111316174940.png\" alt=\"img\"></p>\n<ul>\n<li><strong>工作方式3：波特率计算方式与工作方式1相同。</strong></li>\n</ul>\n<h2 id=\"波特率\"><a href=\"#波特率\" class=\"headerlink\" title=\"波特率\"></a>波特率</h2><ul>\n<li><p><strong>波特率是指数据信号对载波的调制速率，它用单位时间内载波调制状态改变的次数来表示。</strong></p>\n</li>\n<li><p><strong>在信息传输通道中，携带数据信息的信号单元叫码元，每秒钟通过信道传输的码元数称为码元传输速率，简称波特率。</strong></p>\n</li>\n<li><p><strong>通信双方约定一致的波特率以便正确的接收数据。(数据发送前可能进行了调制，波特率不同，调制参数不同）</strong></p>\n</li>\n<li><p><strong>如果收发双方的波特率不一样，那么调制与解调的参数不一样，就很有可能读取不到正确的数据，从而解读为乱码。</strong></p>\n</li>\n<li><p><strong>通常串口工作方式1使用定时器作为波特率发生器。</strong></p>\n</li>\n</ul>\n<h2 id=\"串口中断\"><a href=\"#串口中断\" class=\"headerlink\" title=\"串口中断\"></a>串口中断</h2><p>　　<strong>使能串口中断：打开总中断-中断控制寄存器IE的EA位置1，打开串口中断中断控制寄存器IE的ES位置1</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th><strong>中断控制寄存器IE（Interrupt Enable）</strong></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>位序号</td>\n<td>D0</td>\n<td>D1</td>\n<td>D2</td>\n<td>D3</td>\n<td>D4</td>\n<td>D5</td>\n<td>D6</td>\n<td>D7</td>\n</tr>\n<tr>\n<td>说明</td>\n<td>外部中断0</td>\n<td>定时/计数0</td>\n<td>外部中断1</td>\n<td>定时/计数1</td>\n<td>串行口中断</td>\n<td>保留位</td>\n<td>保留位</td>\n<td>全局中断位</td>\n</tr>\n<tr>\n<td>位符号</td>\n<td>EX0</td>\n<td>ET0</td>\n<td>EX1</td>\n<td>ET1</td>\n<td>ES</td>\n<td>—</td>\n<td>—</td>\n<td>EA</td>\n</tr>\n<tr>\n<td>位地址</td>\n<td>A8H</td>\n<td>A9H</td>\n<td>AAH</td>\n<td>ABH</td>\n<td>ACH</td>\n<td>—</td>\n<td>—</td>\n<td>AFH</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>EX0</th>\n<th style=\"text-align:center\">外部中断0允许位</th>\n<th>EX0=1，允许外部中断0中断；EX0=0，禁止外部中断0中断。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ET0</td>\n<td style=\"text-align:center\">T0溢出中断允许位</td>\n<td>ET0=1，允许T0中断；ET0=0，禁止T0中断。</td>\n</tr>\n<tr>\n<td>EX1</td>\n<td style=\"text-align:center\">外部中断1允许位</td>\n<td>EX1=1，允许外部中断1中断；EX1=0，禁止外部中断1中断。</td>\n</tr>\n<tr>\n<td>ET1</td>\n<td style=\"text-align:center\">T1溢出中断允许位</td>\n<td>ET1=1，允许T1中断；ET1=0，禁止T1中断。</td>\n</tr>\n<tr>\n<td>ES</td>\n<td style=\"text-align:center\">串行中断允许位(Enable Serial)</td>\n<td>ES=1，允许串行口中断；ES=0，禁止串行口中断。</td>\n</tr>\n<tr>\n<td>EA</td>\n<td style=\"text-align:center\">中断总允许位(Enable All)</td>\n<td>EA=1，CPU开放中断；EA=0，CPU禁止所有的中断请求。总允许EA好比一个总开关。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>　　<strong>使能串口中断之后，接收到数据(RI置1)/完成发送(TI置1)，RI/TI被置1就会触发串口中断事件，然后执行中断处理函数。</strong></p>\n<p>　　<strong>中断处理函数编写格式：</strong>       </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> 函数名(<span class=\"keyword\">void</span>) interrupt <span class=\"number\">4</span> <span class=\"keyword\">using</span> 工作寄存器组编号</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//要执行的动作</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>   　　<strong>4的含义： 一共5个中断编号为0~4，串口中断的编号为4</strong></p>\n<p>　　   <strong>using 寄存器组编号：一共4组工作寄存器组，编号为0~3，如果不写默认为工作寄存器组0。</strong></p>\n<h2 id=\"初始化串口为模式1过程。\"><a href=\"#初始化串口为模式1过程。\" class=\"headerlink\" title=\"初始化串口为模式1过程。\"></a>初始化串口为模式1过程。</h2><h3 id=\"SCON设置\"><a href=\"#SCON设置\" class=\"headerlink\" title=\"SCON设置\"></a>SCON设置</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>位名称</th>\n<th>SM0</th>\n<th>SM1</th>\n<th>SM2</th>\n<th>REN</th>\n<th>TB8</th>\n<th>RB8</th>\n<th>TI</th>\n<th>RI</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>设置值</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>含义</td>\n<td>工作在方式1</td>\n<td>波特率不加倍</td>\n<td>允许接收数据</td>\n<td>工作方式1不设置该位</td>\n<td>初始为未发送完数据</td>\n<td>初始为为接收到数据</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>   SCON = 0x01010000 = 0x50  </p>\n<h3 id=\"PCON设置\"><a href=\"#PCON设置\" class=\"headerlink\" title=\"PCON设置\"></a>PCON设置</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>位编号</th>\n<th>D7</th>\n<th>D6</th>\n<th>D5</th>\n<th>D4</th>\n<th>D3</th>\n<th>D2</th>\n<th>D1</th>\n<th>D0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>位符号</td>\n<td>SMOD</td>\n<td>SMOD0</td>\n<td>LVDF</td>\n<td>POF</td>\n<td>GF1</td>\n<td>GF0</td>\n<td>PD</td>\n<td>IDL</td>\n</tr>\n<tr>\n<td>默认波特率不加倍</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>波特率加倍</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>   PCON = 0x00 （SMOD=0，波特率不加倍）</p>\n<p>   PCON = 0x80 （SMOD=1，波特率加倍）</p>\n<h3 id=\"定时器设置\"><a href=\"#定时器设置\" class=\"headerlink\" title=\"定时器设置\"></a>定时器设置</h3><ul>\n<li>工作方式设置：</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20181113174059940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbmZlaWJ1eWk=,size_16,color_FFFFFF,t_70\" alt=\"img\"></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>MI，M0定时器模式选择</th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>M1</td>\n<td>M0</td>\n<td>工作方式</td>\n<td>功能说明</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>方式0</td>\n<td>13位定时器/计数器</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>方式1</td>\n<td>16位定时器/计数器</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>方式2</td>\n<td>自动重载8位定时器/计数器</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>方式3</td>\n<td>T0分为2个8位独立计数器，T1无方式3</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><p>开启定时器1：将控制寄存器TCON的TR1置1</p>\n</li>\n<li><p>设置定时器1的初值：TH1数据寄存器装载初值的高8位，TL1数据寄存器装载初值的低8位。</p>\n</li>\n<li><p>定时器用作波特率发生器时，使用上面的波特率计算公式得到初始值，或直接查看<strong>常见的波特率对应的初始值。</strong></p>\n</li>\n</ul>\n<p>​      <strong>TH1 = 0xFD；// 11.0592MHz的工作频率，9600的波特率 对应的初始值。</strong> </p>\n<h3 id=\"打开总中断-EA-1-打开串口中断-ES-1；\"><a href=\"#打开总中断-EA-1-打开串口中断-ES-1；\" class=\"headerlink\" title=\"打开总中断 EA = 1; 打开串口中断 ES = 1；\"></a><strong>打开总中断 EA = 1; 打开串口中断 ES = 1；</strong></h3>"},{"title":"论文笔记-Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification","copyright":true,"date":"2021-10-30T02:17:38.000Z","_content":"## Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification\n{% note info %}\n论文链接：[Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification](https://arxiv.org/pdf/1909.06335.pdf)\n{% endnote %}\n\n### 一、本文关注的问题\n\n非同分布的数据对联邦学习模型的准确性可能有较大影响，需要对其进行优化。\n<!-- more -->\n\n### 二、提出的方法\n\n1. 合成非同分布客户端数据：由一个向量**q**将所有数据参数化为N个类，(其中$q_i\\ge0$,$i\\in[1,N]$ 且 $||\\mathtt q||_1=1$)。从狄利克雷分布中得到**q**~Dir($\\alpha$**p**)，其中**p**表示N个类上的先验类分布，$\\alpha>0$是控制客户端数据同一性的参数。$\\alpha \\to \\infty$时所有客户端的类分布相同；$\\alpha \\to 0$时，每个客户端只有一个随机类的样本。随机生成30个客户端，N为10，给定不同的$\\alpha$值对**q**进行采样，得到下图分布情况。\n\n   ![生成数据](http://pic.panjiangtao.cn/202110301020_281.jpg)\n\n2. FedAvgM算法：联邦平均算法中，通过$w\\leftarrow w-\\Delta w$更新梯度，其中$\\Delta w=\\sum_{k-1}^K\\frac{n_k}n\\Delta w_k$，$\\Delta w_k$是第k个客户端的梯度更新。将动量加入算法以抑制震荡，改为计算$v\\leftarrow \\beta v+\\Delta w$，其中$\\beta \\in \\{0,0.7,0.9,0.97,0.99,0.997\\}$，模型更新变为$w\\leftarrow w-v$。称该算法为基于服务器动量的联邦平均算法。\n\n### 三、取得的结果\n\n1. $\\alpha$较小时其变化对模型准确度影响较大，报告比例C和同步频率对性能影响不大。$\\alpha$较小时，训练错误的波动性更大，且很难收敛。\n2. C和$\\alpha$较小时训练对超参数更敏感。\n3. $\\alpha$较小时，使用基于动量的联邦平均算法使得模型准确性具有显著提高。\n4. 定义有效学习率$\\eta_{eff}=\\eta/(1-\\beta)$，报告比例C较大时$\\eta_{eff}$的可选范围更大，降低学习率$\\eta$提高动量$\\beta$以降低$\\eta_{eff}$可以防止客户端更新偏离。\n\n","source":"_posts/Federated-Learning3.md","raw":"---\ntitle: 论文笔记-Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification\ncopyright: true\ndate: 2021-10-30 10:17:38\ntags: 联邦学习\ncategories:\n- 深度学习\n- 联邦学习\n---\n## Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification\n{% note info %}\n论文链接：[Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification](https://arxiv.org/pdf/1909.06335.pdf)\n{% endnote %}\n\n### 一、本文关注的问题\n\n非同分布的数据对联邦学习模型的准确性可能有较大影响，需要对其进行优化。\n<!-- more -->\n\n### 二、提出的方法\n\n1. 合成非同分布客户端数据：由一个向量**q**将所有数据参数化为N个类，(其中$q_i\\ge0$,$i\\in[1,N]$ 且 $||\\mathtt q||_1=1$)。从狄利克雷分布中得到**q**~Dir($\\alpha$**p**)，其中**p**表示N个类上的先验类分布，$\\alpha>0$是控制客户端数据同一性的参数。$\\alpha \\to \\infty$时所有客户端的类分布相同；$\\alpha \\to 0$时，每个客户端只有一个随机类的样本。随机生成30个客户端，N为10，给定不同的$\\alpha$值对**q**进行采样，得到下图分布情况。\n\n   ![生成数据](http://pic.panjiangtao.cn/202110301020_281.jpg)\n\n2. FedAvgM算法：联邦平均算法中，通过$w\\leftarrow w-\\Delta w$更新梯度，其中$\\Delta w=\\sum_{k-1}^K\\frac{n_k}n\\Delta w_k$，$\\Delta w_k$是第k个客户端的梯度更新。将动量加入算法以抑制震荡，改为计算$v\\leftarrow \\beta v+\\Delta w$，其中$\\beta \\in \\{0,0.7,0.9,0.97,0.99,0.997\\}$，模型更新变为$w\\leftarrow w-v$。称该算法为基于服务器动量的联邦平均算法。\n\n### 三、取得的结果\n\n1. $\\alpha$较小时其变化对模型准确度影响较大，报告比例C和同步频率对性能影响不大。$\\alpha$较小时，训练错误的波动性更大，且很难收敛。\n2. C和$\\alpha$较小时训练对超参数更敏感。\n3. $\\alpha$较小时，使用基于动量的联邦平均算法使得模型准确性具有显著提高。\n4. 定义有效学习率$\\eta_{eff}=\\eta/(1-\\beta)$，报告比例C较大时$\\eta_{eff}$的可选范围更大，降低学习率$\\eta$提高动量$\\beta$以降低$\\eta_{eff}$可以防止客户端更新偏离。\n\n","slug":"Federated-Learning3","published":1,"updated":"2021-10-30T02:35:13.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0fw000fc8pv274t1xhn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"Measuring-the-Effects-of-Non-Identical-Data-Distribution-for-Federated-Visual-Classification\"><a href=\"#Measuring-the-Effects-of-Non-Identical-Data-Distribution-for-Federated-Visual-Classification\" class=\"headerlink\" title=\"Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification\"></a>Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/pdf/1909.06335.pdf\">Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification</a></p>\n          </div>\n<h3 id=\"一、本文关注的问题\"><a href=\"#一、本文关注的问题\" class=\"headerlink\" title=\"一、本文关注的问题\"></a>一、本文关注的问题</h3><p>非同分布的数据对联邦学习模型的准确性可能有较大影响，需要对其进行优化。<br><a id=\"more\"></a></p>\n<h3 id=\"二、提出的方法\"><a href=\"#二、提出的方法\" class=\"headerlink\" title=\"二、提出的方法\"></a>二、提出的方法</h3><ol>\n<li><p>合成非同分布客户端数据：由一个向量<strong>q</strong>将所有数据参数化为N个类，(其中$q_i\\ge0$,$i\\in[1,N]$ 且 $||\\mathtt q||_1=1$)。从狄利克雷分布中得到<strong>q</strong>~Dir($\\alpha$<strong>p</strong>)，其中<strong>p</strong>表示N个类上的先验类分布，$\\alpha&gt;0$是控制客户端数据同一性的参数。$\\alpha \\to \\infty$时所有客户端的类分布相同；$\\alpha \\to 0$时，每个客户端只有一个随机类的样本。随机生成30个客户端，N为10，给定不同的$\\alpha$值对<strong>q</strong>进行采样，得到下图分布情况。</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110301020_281.jpg\" alt=\"生成数据\"></p>\n</li>\n<li><p>FedAvgM算法：联邦平均算法中，通过$w\\leftarrow w-\\Delta w$更新梯度，其中$\\Delta w=\\sum_{k-1}^K\\frac{n_k}n\\Delta w_k$，$\\Delta w_k$是第k个客户端的梯度更新。将动量加入算法以抑制震荡，改为计算$v\\leftarrow \\beta v+\\Delta w$，其中$\\beta \\in \\{0,0.7,0.9,0.97,0.99,0.997\\}$，模型更新变为$w\\leftarrow w-v$。称该算法为基于服务器动量的联邦平均算法。</p>\n</li>\n</ol>\n<h3 id=\"三、取得的结果\"><a href=\"#三、取得的结果\" class=\"headerlink\" title=\"三、取得的结果\"></a>三、取得的结果</h3><ol>\n<li>$\\alpha$较小时其变化对模型准确度影响较大，报告比例C和同步频率对性能影响不大。$\\alpha$较小时，训练错误的波动性更大，且很难收敛。</li>\n<li>C和$\\alpha$较小时训练对超参数更敏感。</li>\n<li>$\\alpha$较小时，使用基于动量的联邦平均算法使得模型准确性具有显著提高。</li>\n<li>定义有效学习率$\\eta_{eff}=\\eta/(1-\\beta)$，报告比例C较大时$\\eta_{eff}$的可选范围更大，降低学习率$\\eta$提高动量$\\beta$以降低$\\eta_{eff}$可以防止客户端更新偏离。</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":972,"excerpt":"<h2 id=\"Measuring-the-Effects-of-Non-Identical-Data-Distribution-for-Federated-Visual-Classification\"><a href=\"#Measuring-the-Effects-of-Non-Identical-Data-Distribution-for-Federated-Visual-Classification\" class=\"headerlink\" title=\"Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification\"></a>Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/pdf/1909.06335.pdf\">Measuring the Effects of Non-Identical Data Distribution for Federated Visual Classification</a></p>\n          </div>\n<h3 id=\"一、本文关注的问题\"><a href=\"#一、本文关注的问题\" class=\"headerlink\" title=\"一、本文关注的问题\"></a>一、本文关注的问题</h3><p>非同分布的数据对联邦学习模型的准确性可能有较大影响，需要对其进行优化。<br></p>","more":"<p></p>\n<h3 id=\"二、提出的方法\"><a href=\"#二、提出的方法\" class=\"headerlink\" title=\"二、提出的方法\"></a>二、提出的方法</h3><ol>\n<li><p>合成非同分布客户端数据：由一个向量<strong>q</strong>将所有数据参数化为N个类，(其中$q_i\\ge0$,$i\\in[1,N]$ 且 $||\\mathtt q||_1=1$)。从狄利克雷分布中得到<strong>q</strong>~Dir($\\alpha$<strong>p</strong>)，其中<strong>p</strong>表示N个类上的先验类分布，$\\alpha&gt;0$是控制客户端数据同一性的参数。$\\alpha \\to \\infty$时所有客户端的类分布相同；$\\alpha \\to 0$时，每个客户端只有一个随机类的样本。随机生成30个客户端，N为10，给定不同的$\\alpha$值对<strong>q</strong>进行采样，得到下图分布情况。</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110301020_281.jpg\" alt=\"生成数据\"></p>\n</li>\n<li><p>FedAvgM算法：联邦平均算法中，通过$w\\leftarrow w-\\Delta w$更新梯度，其中$\\Delta w=\\sum_{k-1}^K\\frac{n_k}n\\Delta w_k$，$\\Delta w_k$是第k个客户端的梯度更新。将动量加入算法以抑制震荡，改为计算$v\\leftarrow \\beta v+\\Delta w$，其中$\\beta \\in \\{0,0.7,0.9,0.97,0.99,0.997\\}$，模型更新变为$w\\leftarrow w-v$。称该算法为基于服务器动量的联邦平均算法。</p>\n</li>\n</ol>\n<h3 id=\"三、取得的结果\"><a href=\"#三、取得的结果\" class=\"headerlink\" title=\"三、取得的结果\"></a>三、取得的结果</h3><ol>\n<li>$\\alpha$较小时其变化对模型准确度影响较大，报告比例C和同步频率对性能影响不大。$\\alpha$较小时，训练错误的波动性更大，且很难收敛。</li>\n<li>C和$\\alpha$较小时训练对超参数更敏感。</li>\n<li>$\\alpha$较小时，使用基于动量的联邦平均算法使得模型准确性具有显著提高。</li>\n<li>定义有效学习率$\\eta_{eff}=\\eta/(1-\\beta)$，报告比例C较大时$\\eta_{eff}$的可选范围更大，降低学习率$\\eta$提高动量$\\beta$以降低$\\eta_{eff}$可以防止客户端更新偏离。</li>\n</ol>"},{"title":"Socket多人聊天室","date":"2020-09-17T09:57:31.000Z","_content":"> 作者：潘江涛\n> [项目源码](https://github.com/MofasJang/Socket-chatroom)\n\n### 一. 项目简介\n\n　　使用java作为开发语言开发一款基于socket技术的多人聊天应用，该程序由服务端和客户端两个界面组成，其中客户端由聊天用户使用，发送聊天消息并接受服务端和其他客户端的消息；服务端由管理员使用，接受客户端的socket连接，转发各客户端发送的消息，也能够向客户端发送消息，并将所有消息存入数据库中，在界面上实时更新聊天记录。\n\n<!-- more -->\n\n\n### 二. 项目技术栈\n\n#### 1. java中Socket的使用\n#### 2. 多线程接口Runnable的使用\n#### 3. SQL语言及JDBC的使用\n#### 4. swing窗体程序的建立\n\n\n\n### 三. 项目参考资料\n\n#### 1. [java中的Socket的使用](https://blog.csdn.net/a78270528/article/details/80318571)\n\n#### 2. [java 多线程之 implements Runnable](https://blog.csdn.net/qq_38428623/article/details/85868358)\n\n#### 3. [使用JAVA编程实现多人聊天室](https://blog.csdn.net/qq_29606255/article/details/78679815)\n#### 4. [Eclipse搭建Java Swing可视化开发环境](https://blog.csdn.net/renwudao24/article/details/51864323)\n#### 5. [Java MySQL 连接](https://www.runoob.com/java/java-mysql-connect.html)\n\n\n\n### 四. 项目文件结构\n\n#### * socketchat     \t\t\t (package)\n  * client.java\t\t\t(客户端的socket连接，消息接收和发送)\n  * clientapp.java \t(客户端界面，显示其他客户端和服务端的消息)\n  * server.java\t\t  (服务端的连接客户端socket，消息接收和转发)\n  * serverapp.java\t(服务端界面，显示所有客户端的消息和所有聊天记录)\n  * sqltext.java\t\t  (连接数据库，存入和读取聊天记录)\n\n\n\n### 五. 项目代码描述\n\n#### 1. server.java 服务器转发线程\n\n```java\npublic class server implements Runnable {// 服务端\n    static List<Socket> socketList=new ArrayList<Socket>(); //多个socket实现多人聊天\n    static Socket socket = null;\n    static ServerSocket serverSocket = null;\n    static JTextArea textArea1=null;\n\tstatic String buffer=\"\";\n    public server() {  // 构造方法\n        try {\n            serverSocket = new ServerSocket(9999);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n    public static void main(String[] args) {\n    \tserverapp.WinMain();\n//        Scanner input = new Scanner(System.in);\n        System.out.println(\"************服务端*************\");\n        try {\n\t\t\tThread.sleep(200);\n\t\t\tsqltest.insert(\"服务器\",\"已上线\");\n\t\t\ttextArea1.append(\"*********************服务端*********************\\n\");\n\t\t} catch (InterruptedException e1) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te1.printStackTrace();\n\t\t}\n        server t = new server();\n        int count = 0;\n        while (true) {   //循环等待客户端连接       \n            try {\n                socket = serverSocket.accept();\n                count++;\n                System.out.println(\"第\" + count + \"个客户已连接\");\n                textArea1.append(\"第\" + count + \"个客户已连接\\n\");\n                socketList.add(socket);\n            } catch (IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            //开启转发线程和发消息线程\n            Print p = new Print(socket);\n            Thread read = new Thread(t);\n            Thread print = new Thread(p);\n            read.start();\n            print.start();\n        }\n    }\n    public static void setwin(JTextArea area1) {//将服务器界面的消息打印框赋值到server类中\n    \ttextArea1=area1;\n    }\n    \n    @Override\n    public void run() {\t\t// 重写run方法\n    \tSocket current = null;  \n        try {\n            Thread.sleep(1000);\n            BufferedReader in = new BufferedReader(new InputStreamReader(socket\n                    .getInputStream()));\n            current=socket;\n            while (true) {\n                //将接收的字符串保存到数据库中\n                String jieshou = in.readLine();\n                System.out.println(jieshou);\n                textArea1.append(jieshou+\"\\n\");\n                String[] neirong=jieshou.split(\":\");\n                String buf1=neirong[0],buf2;;\n                if(neirong.length==1) { \t\n                \tbuf2=\" \";}\n                else {\n                \tbuf2=neirong[1];\n                }\n                sqltest.insert(buf1, buf2);\n                //将消息转发给所有用户\n                for (int i = 0; i < socketList.size(); i++) {\n                    Socket socket=socketList.get(i);\n                    PrintWriter out = new PrintWriter(socket.getOutputStream());\n                    if (socket!=current) {\n                        out.println(jieshou);\n                    }else{\n                        out.println(\"(你)\"+jieshou);\n                    }\n                    out.flush();\n                }\n            }\n        } catch (Exception e) {\n        \tsocketList.remove(current);\n        \tPrint.socketList.remove(current);\n    \t\ttextArea1.append(\"用户已下线\"+\"\\n\");\n            e.printStackTrace();\n        } \n    }\n}\n```\n\n#### 2. server.java 服务器发送消息线程\n\n```java\nclass Print implements Runnable {\n    static List<Socket> socketList=new ArrayList<Socket>();\n    Scanner input = new Scanner(System.in);\n    public Print(Socket s) {// 构造方法\n        try {\n            socketList.add(s);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    @Override\n    public void run() {\n        try {\n            Thread.sleep(1000);\n            while (true) {\n            \twhile(server.buffer==\"\") {  //如没有消息需要发送，则循环等待\n            \t\ttry {\n        \t\t\t\tThread.sleep(1000);\n        \t\t\t} catch (InterruptedException e) {\n        \t\t\t\t// TODO Auto-generated catch block\n        \t\t\t\te.printStackTrace();\n        \t\t\t}\n            \t}\n            \tString msg = server.buffer.replaceAll(\"(\\r\\n|\\r|\\n|\\n\\r)\", \"\");\n            \tSystem.out.println(\"客户端数量：\"+socketList.size());\n                //向所有客户端发送服务器消息\n\t            for (int i = 0; i < socketList.size(); i++) {\n\t                Socket socket=socketList.get(i);\n\t                PrintWriter out = new PrintWriter(socket.getOutputStream());\n\t                out.println(\"服务器：\"+msg);\n\t                out.flush();\n\t            }\n\t            System.out.println(\"服务器：\"+msg);\n                server.textArea1.append(\"服务器：\"+msg+\"\\n\");\n                sqltest.insert(\"服务器\", msg);\n\t            server.buffer=\"\";\n            }\n        } catch (Exception e) {\n            // TODO: handle exception\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n#### 3. client.java 客户端连接socket、发送消息线程\n\n```java\npublic class client implements Runnable {// 客户端\n    static Socket socket = null;\n    static Scanner input = new Scanner(System.in);\n    static String name=null;\n    static JTextArea textArea=null;\n\tprotected static String buffer=\"\";\n    public static void main(String[] args) {\n    \tclientapp.WinMain();\n    \twhile(buffer==\"\") { //等待客户输入名字\n    \t\ttry {\n\t\t\t\tThread.sleep(1000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n    \t}\n    \tname=buffer.replaceAll(\"(\\r\\n|\\r|\\n|\\n\\r)\", \"\");\n    \tSystem.out.println(\"************客户端:\"+client.name+\"*************\");\n    \ttextArea.append(\"**************************客户端:\"+client.name+\"***************************\\n\");\n    \tbuffer=\"\";\n        try {//连接服务器socket\n            socket = new Socket(\"127.0.0.1\", 9999);\n            PrintWriter out = new PrintWriter(socket.getOutputStream());\n            out.println(name+\":我已上线\");\n            out.flush();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        //开启发送、接收消息线程\n        client t = new client();\n        Read r = new Read(socket);\n        Thread print = new Thread(t);\n        Thread read = new Thread(r);\n        print.start();\n        read.start();\n    }\n    public static void setwin(JTextArea a1) {//将客户端界面的消息打印框赋值到client类中\n    \ttextArea=a1;\n    }\n    @Override\n    public void run() {\n    \tPrintWriter out = null;\n        try {\n            Thread.sleep(1000);         \n            out = new PrintWriter(socket.getOutputStream());\n            \n            while (true) {//等待用户输入消息\n            \twhile(buffer==\"\") {\n            \t\ttry {\n        \t\t\t\tThread.sleep(1000);\n        \t\t\t} catch (InterruptedException e) {\n        \t\t\t\t// TODO Auto-generated catch block\n        \t\t\t\te.printStackTrace();\n        \t\t\t}\n            \t}\n                //发送消息\n        \t\tString msg = buffer.replaceAll(\"(\\r\\n|\\r|\\n|\\n\\r)\", \"\");\n        \t\tout.println(name+\":\"+msg);\n        \t\tout.flush();\n        \t\tbuffer=\"\";\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            try {//用户下线，向服务器发送下线消息，关闭socket\n            \tout.println(name+\":已下线\");\n        \t\tout.flush();\n        \t\tThread.sleep(1000);\n                socket.close();\n            } catch (IOException | InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n#### 4. client.java 客户端接收消息线程\n\n```java\nclass Read implements Runnable {\n    Socket socket = null;\n    public Read(Socket socket) {\n        this.socket = socket;\n    }\n    @Override\n    public void run() {\n        try {\n            Thread.sleep(1000);\n            BufferedReader in = new BufferedReader(new InputStreamReader(socket\n                    .getInputStream()));\n            while (true) {\t//接收到消息，打印在界面上\n            \tString text=in.readLine() ;\n            \tclient.textArea.append(text+\"\\n\");\n            \tSystem.out.println(text);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n#### 5. sqltext.java 连接数据库\n\n```java\npublic class sqltest {  //连接数据库\n\n\tstatic final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\";  \n    static final String DB_URL = \"jdbc:mysql://localhost:3306/chatroom?useUnicode=true&characterEncoding=UTF-8\";\n    \n    static final String USER = \"root\";\n    static final String PASS = \"1234\";\n    static JTextArea textArea=null;\n    \n\tpublic static void insert(String buf1,String buf2) {\n\t\t// TODO Auto-generated method stub\n\t\tConnection conn = null;\n        Statement stmt = null;\n        SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");//设置日期格式\n        String curtime=df.format(new Date());// new Date()为获取当前系统时间\n        try{\n            // 注册 JDBC 驱动\n            Class.forName(JDBC_DRIVER);\n        \n            // 打开链接\n            conn = DriverManager.getConnection(DB_URL,USER,PASS);\n            \n            // 执行查询\n            stmt = conn.createStatement();\n            String sql1;\n            //将聊天人的名字、聊天内容和时间记入数据库\n            sql1 = \"insert into record (name,buf,time) values (\\'\"+buf1+\"\\', \\'\"+buf2+\"\\',\\'\"+curtime+\"\\')\";\n            stmt.executeUpdate(sql1);\n            String sql2;\n            //查询数据库中所有聊天记录\n            sql2 = \"SELECT id,name, buf,time FROM record\";\n            ResultSet rs = stmt.executeQuery(sql2);\n            textArea.setText(\"\");\n            \n            // 展开结果集数据库\n            while(rs.next()){\n                // 通过字段检索\n                String name  = rs.getString(\"name\");\n                String buf = rs.getString(\"buf\");\n                String time = rs.getString(\"time\");\n                \n                textArea.append(time+\"\\n\"+name+\" : \"+buf+\"\\n\");\n            }\n            // 完成后关闭\n            rs.close();\n            stmt.close();\n            conn.close();\n        }catch(SQLException se){\n            // 处理 JDBC 错误\n            se.printStackTrace();\n        }catch(Exception e){\n            // 处理 Class.forName 错误\n            e.printStackTrace();\n        }finally{\n            // 关闭资源\n            try{\n                if(stmt!=null) stmt.close();\n            }catch(SQLException se2){\n            }// 什么都不做\n            try{\n                if(conn!=null) conn.close();\n            }catch(SQLException se){\n                se.printStackTrace();\n            }\n        }\n\t}\n\t\n\tpublic static void setwin(JTextArea area) {\n    \ttextArea=area;\n    }\n\n}\n```\n\n#### 6. serverapp.java , clientapp.java 客户端和服务器界面主要由AWT/SWING可视化插件生成界面代码\n\n### 六. 项目成果截图\n\n#### 1. 服务器初始化，调出所有聊天记录\n\n![](服务端初始.jpg)\n\n#### 2. 客户端初始化，需要输入名字\n\n![](客户端初始.jpg)\n\n#### 3. 客户上线\n\n![](客户上线.jpg)\n\n#### 4. 客户和服务器分别发送消息\n\n![](发送消息.jpg)\n\n#### 5. 客户端下线\n\n![](客户端下线.jpg)\n\n","source":"_posts/Socket-chatroom.md","raw":"---\ntitle: Socket多人聊天室\ndate: 2020-09-17 17:57:31\ntags:\n- Java\n- Socket\ncategories:\n- backend\n- java\n---\n> 作者：潘江涛\n> [项目源码](https://github.com/MofasJang/Socket-chatroom)\n\n### 一. 项目简介\n\n　　使用java作为开发语言开发一款基于socket技术的多人聊天应用，该程序由服务端和客户端两个界面组成，其中客户端由聊天用户使用，发送聊天消息并接受服务端和其他客户端的消息；服务端由管理员使用，接受客户端的socket连接，转发各客户端发送的消息，也能够向客户端发送消息，并将所有消息存入数据库中，在界面上实时更新聊天记录。\n\n<!-- more -->\n\n\n### 二. 项目技术栈\n\n#### 1. java中Socket的使用\n#### 2. 多线程接口Runnable的使用\n#### 3. SQL语言及JDBC的使用\n#### 4. swing窗体程序的建立\n\n\n\n### 三. 项目参考资料\n\n#### 1. [java中的Socket的使用](https://blog.csdn.net/a78270528/article/details/80318571)\n\n#### 2. [java 多线程之 implements Runnable](https://blog.csdn.net/qq_38428623/article/details/85868358)\n\n#### 3. [使用JAVA编程实现多人聊天室](https://blog.csdn.net/qq_29606255/article/details/78679815)\n#### 4. [Eclipse搭建Java Swing可视化开发环境](https://blog.csdn.net/renwudao24/article/details/51864323)\n#### 5. [Java MySQL 连接](https://www.runoob.com/java/java-mysql-connect.html)\n\n\n\n### 四. 项目文件结构\n\n#### * socketchat     \t\t\t (package)\n  * client.java\t\t\t(客户端的socket连接，消息接收和发送)\n  * clientapp.java \t(客户端界面，显示其他客户端和服务端的消息)\n  * server.java\t\t  (服务端的连接客户端socket，消息接收和转发)\n  * serverapp.java\t(服务端界面，显示所有客户端的消息和所有聊天记录)\n  * sqltext.java\t\t  (连接数据库，存入和读取聊天记录)\n\n\n\n### 五. 项目代码描述\n\n#### 1. server.java 服务器转发线程\n\n```java\npublic class server implements Runnable {// 服务端\n    static List<Socket> socketList=new ArrayList<Socket>(); //多个socket实现多人聊天\n    static Socket socket = null;\n    static ServerSocket serverSocket = null;\n    static JTextArea textArea1=null;\n\tstatic String buffer=\"\";\n    public server() {  // 构造方法\n        try {\n            serverSocket = new ServerSocket(9999);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n    public static void main(String[] args) {\n    \tserverapp.WinMain();\n//        Scanner input = new Scanner(System.in);\n        System.out.println(\"************服务端*************\");\n        try {\n\t\t\tThread.sleep(200);\n\t\t\tsqltest.insert(\"服务器\",\"已上线\");\n\t\t\ttextArea1.append(\"*********************服务端*********************\\n\");\n\t\t} catch (InterruptedException e1) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te1.printStackTrace();\n\t\t}\n        server t = new server();\n        int count = 0;\n        while (true) {   //循环等待客户端连接       \n            try {\n                socket = serverSocket.accept();\n                count++;\n                System.out.println(\"第\" + count + \"个客户已连接\");\n                textArea1.append(\"第\" + count + \"个客户已连接\\n\");\n                socketList.add(socket);\n            } catch (IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            //开启转发线程和发消息线程\n            Print p = new Print(socket);\n            Thread read = new Thread(t);\n            Thread print = new Thread(p);\n            read.start();\n            print.start();\n        }\n    }\n    public static void setwin(JTextArea area1) {//将服务器界面的消息打印框赋值到server类中\n    \ttextArea1=area1;\n    }\n    \n    @Override\n    public void run() {\t\t// 重写run方法\n    \tSocket current = null;  \n        try {\n            Thread.sleep(1000);\n            BufferedReader in = new BufferedReader(new InputStreamReader(socket\n                    .getInputStream()));\n            current=socket;\n            while (true) {\n                //将接收的字符串保存到数据库中\n                String jieshou = in.readLine();\n                System.out.println(jieshou);\n                textArea1.append(jieshou+\"\\n\");\n                String[] neirong=jieshou.split(\":\");\n                String buf1=neirong[0],buf2;;\n                if(neirong.length==1) { \t\n                \tbuf2=\" \";}\n                else {\n                \tbuf2=neirong[1];\n                }\n                sqltest.insert(buf1, buf2);\n                //将消息转发给所有用户\n                for (int i = 0; i < socketList.size(); i++) {\n                    Socket socket=socketList.get(i);\n                    PrintWriter out = new PrintWriter(socket.getOutputStream());\n                    if (socket!=current) {\n                        out.println(jieshou);\n                    }else{\n                        out.println(\"(你)\"+jieshou);\n                    }\n                    out.flush();\n                }\n            }\n        } catch (Exception e) {\n        \tsocketList.remove(current);\n        \tPrint.socketList.remove(current);\n    \t\ttextArea1.append(\"用户已下线\"+\"\\n\");\n            e.printStackTrace();\n        } \n    }\n}\n```\n\n#### 2. server.java 服务器发送消息线程\n\n```java\nclass Print implements Runnable {\n    static List<Socket> socketList=new ArrayList<Socket>();\n    Scanner input = new Scanner(System.in);\n    public Print(Socket s) {// 构造方法\n        try {\n            socketList.add(s);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    @Override\n    public void run() {\n        try {\n            Thread.sleep(1000);\n            while (true) {\n            \twhile(server.buffer==\"\") {  //如没有消息需要发送，则循环等待\n            \t\ttry {\n        \t\t\t\tThread.sleep(1000);\n        \t\t\t} catch (InterruptedException e) {\n        \t\t\t\t// TODO Auto-generated catch block\n        \t\t\t\te.printStackTrace();\n        \t\t\t}\n            \t}\n            \tString msg = server.buffer.replaceAll(\"(\\r\\n|\\r|\\n|\\n\\r)\", \"\");\n            \tSystem.out.println(\"客户端数量：\"+socketList.size());\n                //向所有客户端发送服务器消息\n\t            for (int i = 0; i < socketList.size(); i++) {\n\t                Socket socket=socketList.get(i);\n\t                PrintWriter out = new PrintWriter(socket.getOutputStream());\n\t                out.println(\"服务器：\"+msg);\n\t                out.flush();\n\t            }\n\t            System.out.println(\"服务器：\"+msg);\n                server.textArea1.append(\"服务器：\"+msg+\"\\n\");\n                sqltest.insert(\"服务器\", msg);\n\t            server.buffer=\"\";\n            }\n        } catch (Exception e) {\n            // TODO: handle exception\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n#### 3. client.java 客户端连接socket、发送消息线程\n\n```java\npublic class client implements Runnable {// 客户端\n    static Socket socket = null;\n    static Scanner input = new Scanner(System.in);\n    static String name=null;\n    static JTextArea textArea=null;\n\tprotected static String buffer=\"\";\n    public static void main(String[] args) {\n    \tclientapp.WinMain();\n    \twhile(buffer==\"\") { //等待客户输入名字\n    \t\ttry {\n\t\t\t\tThread.sleep(1000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n    \t}\n    \tname=buffer.replaceAll(\"(\\r\\n|\\r|\\n|\\n\\r)\", \"\");\n    \tSystem.out.println(\"************客户端:\"+client.name+\"*************\");\n    \ttextArea.append(\"**************************客户端:\"+client.name+\"***************************\\n\");\n    \tbuffer=\"\";\n        try {//连接服务器socket\n            socket = new Socket(\"127.0.0.1\", 9999);\n            PrintWriter out = new PrintWriter(socket.getOutputStream());\n            out.println(name+\":我已上线\");\n            out.flush();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        //开启发送、接收消息线程\n        client t = new client();\n        Read r = new Read(socket);\n        Thread print = new Thread(t);\n        Thread read = new Thread(r);\n        print.start();\n        read.start();\n    }\n    public static void setwin(JTextArea a1) {//将客户端界面的消息打印框赋值到client类中\n    \ttextArea=a1;\n    }\n    @Override\n    public void run() {\n    \tPrintWriter out = null;\n        try {\n            Thread.sleep(1000);         \n            out = new PrintWriter(socket.getOutputStream());\n            \n            while (true) {//等待用户输入消息\n            \twhile(buffer==\"\") {\n            \t\ttry {\n        \t\t\t\tThread.sleep(1000);\n        \t\t\t} catch (InterruptedException e) {\n        \t\t\t\t// TODO Auto-generated catch block\n        \t\t\t\te.printStackTrace();\n        \t\t\t}\n            \t}\n                //发送消息\n        \t\tString msg = buffer.replaceAll(\"(\\r\\n|\\r|\\n|\\n\\r)\", \"\");\n        \t\tout.println(name+\":\"+msg);\n        \t\tout.flush();\n        \t\tbuffer=\"\";\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            try {//用户下线，向服务器发送下线消息，关闭socket\n            \tout.println(name+\":已下线\");\n        \t\tout.flush();\n        \t\tThread.sleep(1000);\n                socket.close();\n            } catch (IOException | InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n#### 4. client.java 客户端接收消息线程\n\n```java\nclass Read implements Runnable {\n    Socket socket = null;\n    public Read(Socket socket) {\n        this.socket = socket;\n    }\n    @Override\n    public void run() {\n        try {\n            Thread.sleep(1000);\n            BufferedReader in = new BufferedReader(new InputStreamReader(socket\n                    .getInputStream()));\n            while (true) {\t//接收到消息，打印在界面上\n            \tString text=in.readLine() ;\n            \tclient.textArea.append(text+\"\\n\");\n            \tSystem.out.println(text);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n#### 5. sqltext.java 连接数据库\n\n```java\npublic class sqltest {  //连接数据库\n\n\tstatic final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\";  \n    static final String DB_URL = \"jdbc:mysql://localhost:3306/chatroom?useUnicode=true&characterEncoding=UTF-8\";\n    \n    static final String USER = \"root\";\n    static final String PASS = \"1234\";\n    static JTextArea textArea=null;\n    \n\tpublic static void insert(String buf1,String buf2) {\n\t\t// TODO Auto-generated method stub\n\t\tConnection conn = null;\n        Statement stmt = null;\n        SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");//设置日期格式\n        String curtime=df.format(new Date());// new Date()为获取当前系统时间\n        try{\n            // 注册 JDBC 驱动\n            Class.forName(JDBC_DRIVER);\n        \n            // 打开链接\n            conn = DriverManager.getConnection(DB_URL,USER,PASS);\n            \n            // 执行查询\n            stmt = conn.createStatement();\n            String sql1;\n            //将聊天人的名字、聊天内容和时间记入数据库\n            sql1 = \"insert into record (name,buf,time) values (\\'\"+buf1+\"\\', \\'\"+buf2+\"\\',\\'\"+curtime+\"\\')\";\n            stmt.executeUpdate(sql1);\n            String sql2;\n            //查询数据库中所有聊天记录\n            sql2 = \"SELECT id,name, buf,time FROM record\";\n            ResultSet rs = stmt.executeQuery(sql2);\n            textArea.setText(\"\");\n            \n            // 展开结果集数据库\n            while(rs.next()){\n                // 通过字段检索\n                String name  = rs.getString(\"name\");\n                String buf = rs.getString(\"buf\");\n                String time = rs.getString(\"time\");\n                \n                textArea.append(time+\"\\n\"+name+\" : \"+buf+\"\\n\");\n            }\n            // 完成后关闭\n            rs.close();\n            stmt.close();\n            conn.close();\n        }catch(SQLException se){\n            // 处理 JDBC 错误\n            se.printStackTrace();\n        }catch(Exception e){\n            // 处理 Class.forName 错误\n            e.printStackTrace();\n        }finally{\n            // 关闭资源\n            try{\n                if(stmt!=null) stmt.close();\n            }catch(SQLException se2){\n            }// 什么都不做\n            try{\n                if(conn!=null) conn.close();\n            }catch(SQLException se){\n                se.printStackTrace();\n            }\n        }\n\t}\n\t\n\tpublic static void setwin(JTextArea area) {\n    \ttextArea=area;\n    }\n\n}\n```\n\n#### 6. serverapp.java , clientapp.java 客户端和服务器界面主要由AWT/SWING可视化插件生成界面代码\n\n### 六. 项目成果截图\n\n#### 1. 服务器初始化，调出所有聊天记录\n\n![](服务端初始.jpg)\n\n#### 2. 客户端初始化，需要输入名字\n\n![](客户端初始.jpg)\n\n#### 3. 客户上线\n\n![](客户上线.jpg)\n\n#### 4. 客户和服务器分别发送消息\n\n![](发送消息.jpg)\n\n#### 5. 客户端下线\n\n![](客户端下线.jpg)\n\n","slug":"Socket-chatroom","published":1,"updated":"2021-10-28T06:44:12.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0fy000hc8pvcn5u42yb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p>作者：潘江涛<br><a href=\"https://github.com/MofasJang/Socket-chatroom\">项目源码</a></p>\n</blockquote>\n<h3 id=\"一-项目简介\"><a href=\"#一-项目简介\" class=\"headerlink\" title=\"一. 项目简介\"></a>一. 项目简介</h3><p>　　使用java作为开发语言开发一款基于socket技术的多人聊天应用，该程序由服务端和客户端两个界面组成，其中客户端由聊天用户使用，发送聊天消息并接受服务端和其他客户端的消息；服务端由管理员使用，接受客户端的socket连接，转发各客户端发送的消息，也能够向客户端发送消息，并将所有消息存入数据库中，在界面上实时更新聊天记录。</p>\n<a id=\"more\"></a>\n<h3 id=\"二-项目技术栈\"><a href=\"#二-项目技术栈\" class=\"headerlink\" title=\"二. 项目技术栈\"></a>二. 项目技术栈</h3><h4 id=\"1-java中Socket的使用\"><a href=\"#1-java中Socket的使用\" class=\"headerlink\" title=\"1. java中Socket的使用\"></a>1. java中Socket的使用</h4><h4 id=\"2-多线程接口Runnable的使用\"><a href=\"#2-多线程接口Runnable的使用\" class=\"headerlink\" title=\"2. 多线程接口Runnable的使用\"></a>2. 多线程接口Runnable的使用</h4><h4 id=\"3-SQL语言及JDBC的使用\"><a href=\"#3-SQL语言及JDBC的使用\" class=\"headerlink\" title=\"3. SQL语言及JDBC的使用\"></a>3. SQL语言及JDBC的使用</h4><h4 id=\"4-swing窗体程序的建立\"><a href=\"#4-swing窗体程序的建立\" class=\"headerlink\" title=\"4. swing窗体程序的建立\"></a>4. swing窗体程序的建立</h4><h3 id=\"三-项目参考资料\"><a href=\"#三-项目参考资料\" class=\"headerlink\" title=\"三. 项目参考资料\"></a>三. 项目参考资料</h3><h4 id=\"1-java中的Socket的使用\"><a href=\"#1-java中的Socket的使用\" class=\"headerlink\" title=\"1. java中的Socket的使用\"></a>1. <a href=\"https://blog.csdn.net/a78270528/article/details/80318571\">java中的Socket的使用</a></h4><h4 id=\"2-java-多线程之-implements-Runnable\"><a href=\"#2-java-多线程之-implements-Runnable\" class=\"headerlink\" title=\"2. java 多线程之 implements Runnable\"></a>2. <a href=\"https://blog.csdn.net/qq_38428623/article/details/85868358\">java 多线程之 implements Runnable</a></h4><h4 id=\"3-使用JAVA编程实现多人聊天室\"><a href=\"#3-使用JAVA编程实现多人聊天室\" class=\"headerlink\" title=\"3. 使用JAVA编程实现多人聊天室\"></a>3. <a href=\"https://blog.csdn.net/qq_29606255/article/details/78679815\">使用JAVA编程实现多人聊天室</a></h4><h4 id=\"4-Eclipse搭建Java-Swing可视化开发环境\"><a href=\"#4-Eclipse搭建Java-Swing可视化开发环境\" class=\"headerlink\" title=\"4. Eclipse搭建Java Swing可视化开发环境\"></a>4. <a href=\"https://blog.csdn.net/renwudao24/article/details/51864323\">Eclipse搭建Java Swing可视化开发环境</a></h4><h4 id=\"5-Java-MySQL-连接\"><a href=\"#5-Java-MySQL-连接\" class=\"headerlink\" title=\"5. Java MySQL 连接\"></a>5. <a href=\"https://www.runoob.com/java/java-mysql-connect.html\">Java MySQL 连接</a></h4><h3 id=\"四-项目文件结构\"><a href=\"#四-项目文件结构\" class=\"headerlink\" title=\"四. 项目文件结构\"></a>四. 项目文件结构</h3><h4 id=\"socketchat-package\"><a href=\"#socketchat-package\" class=\"headerlink\" title=\"* socketchat                  (package)\"></a>* socketchat                  (package)</h4><ul>\n<li>client.java            (客户端的socket连接，消息接收和发送)</li>\n<li>clientapp.java     (客户端界面，显示其他客户端和服务端的消息)</li>\n<li>server.java          (服务端的连接客户端socket，消息接收和转发)</li>\n<li>serverapp.java    (服务端界面，显示所有客户端的消息和所有聊天记录)</li>\n<li>sqltext.java          (连接数据库，存入和读取聊天记录)</li>\n</ul>\n<h3 id=\"五-项目代码描述\"><a href=\"#五-项目代码描述\" class=\"headerlink\" title=\"五. 项目代码描述\"></a>五. 项目代码描述</h3><h4 id=\"1-server-java-服务器转发线程\"><a href=\"#1-server-java-服务器转发线程\" class=\"headerlink\" title=\"1. server.java 服务器转发线程\"></a>1. server.java 服务器转发线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">server</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;<span class=\"comment\">// 服务端</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> List&lt;Socket&gt; socketList=<span class=\"keyword\">new</span> ArrayList&lt;Socket&gt;(); <span class=\"comment\">//多个socket实现多人聊天</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> ServerSocket serverSocket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> JTextArea textArea1=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> String buffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">server</span><span class=\"params\">()</span> </span>&#123;  <span class=\"comment\">// 构造方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            serverSocket = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9999</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    \tserverapp.WinMain();</span><br><span class=\"line\"><span class=\"comment\">//        Scanner input = new Scanner(System.in);</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;************服务端*************&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t\t\tsqltest.insert(<span class=\"string\">&quot;服务器&quot;</span>,<span class=\"string\">&quot;已上线&quot;</span>);</span><br><span class=\"line\">\t\t\ttextArea1.append(<span class=\"string\">&quot;*********************服务端*********************\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e1) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\t\te1.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        server t = <span class=\"keyword\">new</span> server();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;   <span class=\"comment\">//循环等待客户端连接       </span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                socket = serverSocket.accept();</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;第&quot;</span> + count + <span class=\"string\">&quot;个客户已连接&quot;</span>);</span><br><span class=\"line\">                textArea1.append(<span class=\"string\">&quot;第&quot;</span> + count + <span class=\"string\">&quot;个客户已连接\\n&quot;</span>);</span><br><span class=\"line\">                socketList.add(socket);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//开启转发线程和发消息线程</span></span><br><span class=\"line\">            Print p = <span class=\"keyword\">new</span> Print(socket);</span><br><span class=\"line\">            Thread read = <span class=\"keyword\">new</span> Thread(t);</span><br><span class=\"line\">            Thread print = <span class=\"keyword\">new</span> Thread(p);</span><br><span class=\"line\">            read.start();</span><br><span class=\"line\">            print.start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setwin</span><span class=\"params\">(JTextArea area1)</span> </span>&#123;<span class=\"comment\">//将服务器界面的消息打印框赋值到server类中</span></span><br><span class=\"line\">    \ttextArea1=area1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;\t\t<span class=\"comment\">// 重写run方法</span></span><br><span class=\"line\">    \tSocket current = <span class=\"keyword\">null</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">            BufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket</span><br><span class=\"line\">                    .getInputStream()));</span><br><span class=\"line\">            current=socket;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//将接收的字符串保存到数据库中</span></span><br><span class=\"line\">                String jieshou = in.readLine();</span><br><span class=\"line\">                System.out.println(jieshou);</span><br><span class=\"line\">                textArea1.append(jieshou+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">                String[] neirong=jieshou.split(<span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">                String buf1=neirong[<span class=\"number\">0</span>],buf2;;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(neirong.length==<span class=\"number\">1</span>) &#123; \t</span><br><span class=\"line\">                \tbuf2=<span class=\"string\">&quot; &quot;</span>;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                \tbuf2=neirong[<span class=\"number\">1</span>];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sqltest.insert(buf1, buf2);</span><br><span class=\"line\">                <span class=\"comment\">//将消息转发给所有用户</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; socketList.size(); i++) &#123;</span><br><span class=\"line\">                    Socket socket=socketList.get(i);</span><br><span class=\"line\">                    PrintWriter out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (socket!=current) &#123;</span><br><span class=\"line\">                        out.println(jieshou);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        out.println(<span class=\"string\">&quot;(你)&quot;</span>+jieshou);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    out.flush();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        \tsocketList.remove(current);</span><br><span class=\"line\">        \tPrint.socketList.remove(current);</span><br><span class=\"line\">    \t\ttextArea1.append(<span class=\"string\">&quot;用户已下线&quot;</span>+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-server-java-服务器发送消息线程\"><a href=\"#2-server-java-服务器发送消息线程\" class=\"headerlink\" title=\"2. server.java 服务器发送消息线程\"></a>2. server.java 服务器发送消息线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Print</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> List&lt;Socket&gt; socketList=<span class=\"keyword\">new</span> ArrayList&lt;Socket&gt;();</span><br><span class=\"line\">    Scanner input = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Print</span><span class=\"params\">(Socket s)</span> </span>&#123;<span class=\"comment\">// 构造方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socketList.add(s);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            \t<span class=\"keyword\">while</span>(server.buffer==<span class=\"string\">&quot;&quot;</span>) &#123;  <span class=\"comment\">//如没有消息需要发送，则循环等待</span></span><br><span class=\"line\">            \t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        \t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        \t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        \t\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        \t\t\t\te.printStackTrace();</span><br><span class=\"line\">        \t\t\t&#125;</span><br><span class=\"line\">            \t&#125;</span><br><span class=\"line\">            \tString msg = server.buffer.replaceAll(<span class=\"string\">&quot;(\\r\\n|\\r|\\n|\\n\\r)&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            \tSystem.out.println(<span class=\"string\">&quot;客户端数量：&quot;</span>+socketList.size());</span><br><span class=\"line\">                <span class=\"comment\">//向所有客户端发送服务器消息</span></span><br><span class=\"line\">\t            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; socketList.size(); i++) &#123;</span><br><span class=\"line\">\t                Socket socket=socketList.get(i);</span><br><span class=\"line\">\t                PrintWriter out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">\t                out.println(<span class=\"string\">&quot;服务器：&quot;</span>+msg);</span><br><span class=\"line\">\t                out.flush();</span><br><span class=\"line\">\t            &#125;</span><br><span class=\"line\">\t            System.out.println(<span class=\"string\">&quot;服务器：&quot;</span>+msg);</span><br><span class=\"line\">                server.textArea1.append(<span class=\"string\">&quot;服务器：&quot;</span>+msg+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">                sqltest.insert(<span class=\"string\">&quot;服务器&quot;</span>, msg);</span><br><span class=\"line\">\t            server.buffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">TODO:</span> handle exception</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-client-java-客户端连接socket、发送消息线程\"><a href=\"#3-client-java-客户端连接socket、发送消息线程\" class=\"headerlink\" title=\"3. client.java 客户端连接socket、发送消息线程\"></a>3. client.java 客户端连接socket、发送消息线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">client</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;<span class=\"comment\">// 客户端</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Scanner input = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">static</span> String name=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> JTextArea textArea=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> String buffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    \tclientapp.WinMain();</span><br><span class=\"line\">    \t<span class=\"keyword\">while</span>(buffer==<span class=\"string\">&quot;&quot;</span>) &#123; <span class=\"comment\">//等待客户输入名字</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \tname=buffer.replaceAll(<span class=\"string\">&quot;(\\r\\n|\\r|\\n|\\n\\r)&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    \tSystem.out.println(<span class=\"string\">&quot;************客户端:&quot;</span>+client.name+<span class=\"string\">&quot;*************&quot;</span>);</span><br><span class=\"line\">    \ttextArea.append(<span class=\"string\">&quot;**************************客户端:&quot;</span>+client.name+<span class=\"string\">&quot;***************************\\n&quot;</span>);</span><br><span class=\"line\">    \tbuffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;<span class=\"comment\">//连接服务器socket</span></span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">9999</span>);</span><br><span class=\"line\">            PrintWriter out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">            out.println(name+<span class=\"string\">&quot;:我已上线&quot;</span>);</span><br><span class=\"line\">            out.flush();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//开启发送、接收消息线程</span></span><br><span class=\"line\">        client t = <span class=\"keyword\">new</span> client();</span><br><span class=\"line\">        Read r = <span class=\"keyword\">new</span> Read(socket);</span><br><span class=\"line\">        Thread print = <span class=\"keyword\">new</span> Thread(t);</span><br><span class=\"line\">        Thread read = <span class=\"keyword\">new</span> Thread(r);</span><br><span class=\"line\">        print.start();</span><br><span class=\"line\">        read.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setwin</span><span class=\"params\">(JTextArea a1)</span> </span>&#123;<span class=\"comment\">//将客户端界面的消息打印框赋值到client类中</span></span><br><span class=\"line\">    \ttextArea=a1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    \tPrintWriter out = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);         </span><br><span class=\"line\">            out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;<span class=\"comment\">//等待用户输入消息</span></span><br><span class=\"line\">            \t<span class=\"keyword\">while</span>(buffer==<span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            \t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        \t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        \t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        \t\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        \t\t\t\te.printStackTrace();</span><br><span class=\"line\">        \t\t\t&#125;</span><br><span class=\"line\">            \t&#125;</span><br><span class=\"line\">                <span class=\"comment\">//发送消息</span></span><br><span class=\"line\">        \t\tString msg = buffer.replaceAll(<span class=\"string\">&quot;(\\r\\n|\\r|\\n|\\n\\r)&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        \t\tout.println(name+<span class=\"string\">&quot;:&quot;</span>+msg);</span><br><span class=\"line\">        \t\tout.flush();</span><br><span class=\"line\">        \t\tbuffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;<span class=\"comment\">//用户下线，向服务器发送下线消息，关闭socket</span></span><br><span class=\"line\">            \tout.println(name+<span class=\"string\">&quot;:已下线&quot;</span>);</span><br><span class=\"line\">        \t\tout.flush();</span><br><span class=\"line\">        \t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                socket.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException | InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-client-java-客户端接收消息线程\"><a href=\"#4-client-java-客户端接收消息线程\" class=\"headerlink\" title=\"4. client.java 客户端接收消息线程\"></a>4. client.java 客户端接收消息线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Read</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Read</span><span class=\"params\">(Socket socket)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.socket = socket;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">            BufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket</span><br><span class=\"line\">                    .getInputStream()));</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;\t<span class=\"comment\">//接收到消息，打印在界面上</span></span><br><span class=\"line\">            \tString text=in.readLine() ;</span><br><span class=\"line\">            \tclient.textArea.append(text+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            \tSystem.out.println(text);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-sqltext-java-连接数据库\"><a href=\"#5-sqltext-java-连接数据库\" class=\"headerlink\" title=\"5. sqltext.java 连接数据库\"></a>5. sqltext.java 连接数据库</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">sqltest</span> </span>&#123;  <span class=\"comment\">//连接数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String JDBC_DRIVER = <span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DB_URL = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/chatroom?useUnicode=true&amp;characterEncoding=UTF-8&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String USER = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PASS = <span class=\"string\">&quot;1234&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> JTextArea textArea=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(String buf1,String buf2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tConnection conn = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Statement stmt = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        SimpleDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<span class=\"comment\">//设置日期格式</span></span><br><span class=\"line\">        String curtime=df.format(<span class=\"keyword\">new</span> Date());<span class=\"comment\">// new Date()为获取当前系统时间</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 注册 JDBC 驱动</span></span><br><span class=\"line\">            Class.forName(JDBC_DRIVER);</span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"comment\">// 打开链接</span></span><br><span class=\"line\">            conn = DriverManager.getConnection(DB_URL,USER,PASS);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 执行查询</span></span><br><span class=\"line\">            stmt = conn.createStatement();</span><br><span class=\"line\">            String sql1;</span><br><span class=\"line\">            <span class=\"comment\">//将聊天人的名字、聊天内容和时间记入数据库</span></span><br><span class=\"line\">            sql1 = <span class=\"string\">&quot;insert into record (name,buf,time) values (\\&#x27;&quot;</span>+buf1+<span class=\"string\">&quot;\\&#x27;, \\&#x27;&quot;</span>+buf2+<span class=\"string\">&quot;\\&#x27;,\\&#x27;&quot;</span>+curtime+<span class=\"string\">&quot;\\&#x27;)&quot;</span>;</span><br><span class=\"line\">            stmt.executeUpdate(sql1);</span><br><span class=\"line\">            String sql2;</span><br><span class=\"line\">            <span class=\"comment\">//查询数据库中所有聊天记录</span></span><br><span class=\"line\">            sql2 = <span class=\"string\">&quot;SELECT id,name, buf,time FROM record&quot;</span>;</span><br><span class=\"line\">            ResultSet rs = stmt.executeQuery(sql2);</span><br><span class=\"line\">            textArea.setText(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 展开结果集数据库</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(rs.next())&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 通过字段检索</span></span><br><span class=\"line\">                String name  = rs.getString(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">                String buf = rs.getString(<span class=\"string\">&quot;buf&quot;</span>);</span><br><span class=\"line\">                String time = rs.getString(<span class=\"string\">&quot;time&quot;</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                textArea.append(time+<span class=\"string\">&quot;\\n&quot;</span>+name+<span class=\"string\">&quot; : &quot;</span>+buf+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 完成后关闭</span></span><br><span class=\"line\">            rs.close();</span><br><span class=\"line\">            stmt.close();</span><br><span class=\"line\">            conn.close();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(SQLException se)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理 JDBC 错误</span></span><br><span class=\"line\">            se.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理 Class.forName 错误</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(stmt!=<span class=\"keyword\">null</span>) stmt.close();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">catch</span>(SQLException se2)&#123;</span><br><span class=\"line\">            &#125;<span class=\"comment\">// 什么都不做</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">catch</span>(SQLException se)&#123;</span><br><span class=\"line\">                se.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setwin</span><span class=\"params\">(JTextArea area)</span> </span>&#123;</span><br><span class=\"line\">    \ttextArea=area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-serverapp-java-clientapp-java-客户端和服务器界面主要由AWT-SWING可视化插件生成界面代码\"><a href=\"#6-serverapp-java-clientapp-java-客户端和服务器界面主要由AWT-SWING可视化插件生成界面代码\" class=\"headerlink\" title=\"6. serverapp.java , clientapp.java 客户端和服务器界面主要由AWT/SWING可视化插件生成界面代码\"></a>6. serverapp.java , clientapp.java 客户端和服务器界面主要由AWT/SWING可视化插件生成界面代码</h4><h3 id=\"六-项目成果截图\"><a href=\"#六-项目成果截图\" class=\"headerlink\" title=\"六. 项目成果截图\"></a>六. 项目成果截图</h3><h4 id=\"1-服务器初始化，调出所有聊天记录\"><a href=\"#1-服务器初始化，调出所有聊天记录\" class=\"headerlink\" title=\"1. 服务器初始化，调出所有聊天记录\"></a>1. 服务器初始化，调出所有聊天记录</h4><p><img src=\"/posts/Socket-chatroom/服务端初始.jpg\" alt></p>\n<h4 id=\"2-客户端初始化，需要输入名字\"><a href=\"#2-客户端初始化，需要输入名字\" class=\"headerlink\" title=\"2. 客户端初始化，需要输入名字\"></a>2. 客户端初始化，需要输入名字</h4><p><img src=\"/posts/Socket-chatroom/客户端初始.jpg\" alt></p>\n<h4 id=\"3-客户上线\"><a href=\"#3-客户上线\" class=\"headerlink\" title=\"3. 客户上线\"></a>3. 客户上线</h4><p><img src=\"/posts/Socket-chatroom/客户上线.jpg\" alt></p>\n<h4 id=\"4-客户和服务器分别发送消息\"><a href=\"#4-客户和服务器分别发送消息\" class=\"headerlink\" title=\"4. 客户和服务器分别发送消息\"></a>4. 客户和服务器分别发送消息</h4><p><img src=\"/posts/Socket-chatroom/发送消息.jpg\" alt></p>\n<h4 id=\"5-客户端下线\"><a href=\"#5-客户端下线\" class=\"headerlink\" title=\"5. 客户端下线\"></a>5. 客户端下线</h4><p><img src=\"/posts/Socket-chatroom/客户端下线.jpg\" alt></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":8897,"excerpt":"<blockquote>\n<p>作者：潘江涛<br><a href=\"https://github.com/MofasJang/Socket-chatroom\">项目源码</a></p>\n</blockquote>\n<h3 id=\"一-项目简介\"><a href=\"#一-项目简介\" class=\"headerlink\" title=\"一. 项目简介\"></a>一. 项目简介</h3><p>　　使用java作为开发语言开发一款基于socket技术的多人聊天应用，该程序由服务端和客户端两个界面组成，其中客户端由聊天用户使用，发送聊天消息并接受服务端和其他客户端的消息；服务端由管理员使用，接受客户端的socket连接，转发各客户端发送的消息，也能够向客户端发送消息，并将所有消息存入数据库中，在界面上实时更新聊天记录。</p>","more":"<h3 id=\"二-项目技术栈\"><a href=\"#二-项目技术栈\" class=\"headerlink\" title=\"二. 项目技术栈\"></a>二. 项目技术栈</h3><h4 id=\"1-java中Socket的使用\"><a href=\"#1-java中Socket的使用\" class=\"headerlink\" title=\"1. java中Socket的使用\"></a>1. java中Socket的使用</h4><h4 id=\"2-多线程接口Runnable的使用\"><a href=\"#2-多线程接口Runnable的使用\" class=\"headerlink\" title=\"2. 多线程接口Runnable的使用\"></a>2. 多线程接口Runnable的使用</h4><h4 id=\"3-SQL语言及JDBC的使用\"><a href=\"#3-SQL语言及JDBC的使用\" class=\"headerlink\" title=\"3. SQL语言及JDBC的使用\"></a>3. SQL语言及JDBC的使用</h4><h4 id=\"4-swing窗体程序的建立\"><a href=\"#4-swing窗体程序的建立\" class=\"headerlink\" title=\"4. swing窗体程序的建立\"></a>4. swing窗体程序的建立</h4><h3 id=\"三-项目参考资料\"><a href=\"#三-项目参考资料\" class=\"headerlink\" title=\"三. 项目参考资料\"></a>三. 项目参考资料</h3><h4 id=\"1-java中的Socket的使用\"><a href=\"#1-java中的Socket的使用\" class=\"headerlink\" title=\"1. java中的Socket的使用\"></a>1. <a href=\"https://blog.csdn.net/a78270528/article/details/80318571\">java中的Socket的使用</a></h4><h4 id=\"2-java-多线程之-implements-Runnable\"><a href=\"#2-java-多线程之-implements-Runnable\" class=\"headerlink\" title=\"2. java 多线程之 implements Runnable\"></a>2. <a href=\"https://blog.csdn.net/qq_38428623/article/details/85868358\">java 多线程之 implements Runnable</a></h4><h4 id=\"3-使用JAVA编程实现多人聊天室\"><a href=\"#3-使用JAVA编程实现多人聊天室\" class=\"headerlink\" title=\"3. 使用JAVA编程实现多人聊天室\"></a>3. <a href=\"https://blog.csdn.net/qq_29606255/article/details/78679815\">使用JAVA编程实现多人聊天室</a></h4><h4 id=\"4-Eclipse搭建Java-Swing可视化开发环境\"><a href=\"#4-Eclipse搭建Java-Swing可视化开发环境\" class=\"headerlink\" title=\"4. Eclipse搭建Java Swing可视化开发环境\"></a>4. <a href=\"https://blog.csdn.net/renwudao24/article/details/51864323\">Eclipse搭建Java Swing可视化开发环境</a></h4><h4 id=\"5-Java-MySQL-连接\"><a href=\"#5-Java-MySQL-连接\" class=\"headerlink\" title=\"5. Java MySQL 连接\"></a>5. <a href=\"https://www.runoob.com/java/java-mysql-connect.html\">Java MySQL 连接</a></h4><h3 id=\"四-项目文件结构\"><a href=\"#四-项目文件结构\" class=\"headerlink\" title=\"四. 项目文件结构\"></a>四. 项目文件结构</h3><h4 id=\"socketchat-package\"><a href=\"#socketchat-package\" class=\"headerlink\" title=\"* socketchat                  (package)\"></a>* socketchat                  (package)</h4><ul>\n<li>client.java            (客户端的socket连接，消息接收和发送)</li>\n<li>clientapp.java     (客户端界面，显示其他客户端和服务端的消息)</li>\n<li>server.java          (服务端的连接客户端socket，消息接收和转发)</li>\n<li>serverapp.java    (服务端界面，显示所有客户端的消息和所有聊天记录)</li>\n<li>sqltext.java          (连接数据库，存入和读取聊天记录)</li>\n</ul>\n<h3 id=\"五-项目代码描述\"><a href=\"#五-项目代码描述\" class=\"headerlink\" title=\"五. 项目代码描述\"></a>五. 项目代码描述</h3><h4 id=\"1-server-java-服务器转发线程\"><a href=\"#1-server-java-服务器转发线程\" class=\"headerlink\" title=\"1. server.java 服务器转发线程\"></a>1. server.java 服务器转发线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">server</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;<span class=\"comment\">// 服务端</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> List&lt;Socket&gt; socketList=<span class=\"keyword\">new</span> ArrayList&lt;Socket&gt;(); <span class=\"comment\">//多个socket实现多人聊天</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> ServerSocket serverSocket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> JTextArea textArea1=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> String buffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">server</span><span class=\"params\">()</span> </span>&#123;  <span class=\"comment\">// 构造方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            serverSocket = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9999</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    \tserverapp.WinMain();</span><br><span class=\"line\"><span class=\"comment\">//        Scanner input = new Scanner(System.in);</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;************服务端*************&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t\t\tsqltest.insert(<span class=\"string\">&quot;服务器&quot;</span>,<span class=\"string\">&quot;已上线&quot;</span>);</span><br><span class=\"line\">\t\t\ttextArea1.append(<span class=\"string\">&quot;*********************服务端*********************\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e1) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\t\te1.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        server t = <span class=\"keyword\">new</span> server();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;   <span class=\"comment\">//循环等待客户端连接       </span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                socket = serverSocket.accept();</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;第&quot;</span> + count + <span class=\"string\">&quot;个客户已连接&quot;</span>);</span><br><span class=\"line\">                textArea1.append(<span class=\"string\">&quot;第&quot;</span> + count + <span class=\"string\">&quot;个客户已连接\\n&quot;</span>);</span><br><span class=\"line\">                socketList.add(socket);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//开启转发线程和发消息线程</span></span><br><span class=\"line\">            Print p = <span class=\"keyword\">new</span> Print(socket);</span><br><span class=\"line\">            Thread read = <span class=\"keyword\">new</span> Thread(t);</span><br><span class=\"line\">            Thread print = <span class=\"keyword\">new</span> Thread(p);</span><br><span class=\"line\">            read.start();</span><br><span class=\"line\">            print.start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setwin</span><span class=\"params\">(JTextArea area1)</span> </span>&#123;<span class=\"comment\">//将服务器界面的消息打印框赋值到server类中</span></span><br><span class=\"line\">    \ttextArea1=area1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;\t\t<span class=\"comment\">// 重写run方法</span></span><br><span class=\"line\">    \tSocket current = <span class=\"keyword\">null</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">            BufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket</span><br><span class=\"line\">                    .getInputStream()));</span><br><span class=\"line\">            current=socket;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//将接收的字符串保存到数据库中</span></span><br><span class=\"line\">                String jieshou = in.readLine();</span><br><span class=\"line\">                System.out.println(jieshou);</span><br><span class=\"line\">                textArea1.append(jieshou+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">                String[] neirong=jieshou.split(<span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">                String buf1=neirong[<span class=\"number\">0</span>],buf2;;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(neirong.length==<span class=\"number\">1</span>) &#123; \t</span><br><span class=\"line\">                \tbuf2=<span class=\"string\">&quot; &quot;</span>;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                \tbuf2=neirong[<span class=\"number\">1</span>];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sqltest.insert(buf1, buf2);</span><br><span class=\"line\">                <span class=\"comment\">//将消息转发给所有用户</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; socketList.size(); i++) &#123;</span><br><span class=\"line\">                    Socket socket=socketList.get(i);</span><br><span class=\"line\">                    PrintWriter out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (socket!=current) &#123;</span><br><span class=\"line\">                        out.println(jieshou);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        out.println(<span class=\"string\">&quot;(你)&quot;</span>+jieshou);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    out.flush();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        \tsocketList.remove(current);</span><br><span class=\"line\">        \tPrint.socketList.remove(current);</span><br><span class=\"line\">    \t\ttextArea1.append(<span class=\"string\">&quot;用户已下线&quot;</span>+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-server-java-服务器发送消息线程\"><a href=\"#2-server-java-服务器发送消息线程\" class=\"headerlink\" title=\"2. server.java 服务器发送消息线程\"></a>2. server.java 服务器发送消息线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Print</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> List&lt;Socket&gt; socketList=<span class=\"keyword\">new</span> ArrayList&lt;Socket&gt;();</span><br><span class=\"line\">    Scanner input = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Print</span><span class=\"params\">(Socket s)</span> </span>&#123;<span class=\"comment\">// 构造方法</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            socketList.add(s);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            \t<span class=\"keyword\">while</span>(server.buffer==<span class=\"string\">&quot;&quot;</span>) &#123;  <span class=\"comment\">//如没有消息需要发送，则循环等待</span></span><br><span class=\"line\">            \t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        \t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        \t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        \t\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        \t\t\t\te.printStackTrace();</span><br><span class=\"line\">        \t\t\t&#125;</span><br><span class=\"line\">            \t&#125;</span><br><span class=\"line\">            \tString msg = server.buffer.replaceAll(<span class=\"string\">&quot;(\\r\\n|\\r|\\n|\\n\\r)&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            \tSystem.out.println(<span class=\"string\">&quot;客户端数量：&quot;</span>+socketList.size());</span><br><span class=\"line\">                <span class=\"comment\">//向所有客户端发送服务器消息</span></span><br><span class=\"line\">\t            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; socketList.size(); i++) &#123;</span><br><span class=\"line\">\t                Socket socket=socketList.get(i);</span><br><span class=\"line\">\t                PrintWriter out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">\t                out.println(<span class=\"string\">&quot;服务器：&quot;</span>+msg);</span><br><span class=\"line\">\t                out.flush();</span><br><span class=\"line\">\t            &#125;</span><br><span class=\"line\">\t            System.out.println(<span class=\"string\">&quot;服务器：&quot;</span>+msg);</span><br><span class=\"line\">                server.textArea1.append(<span class=\"string\">&quot;服务器：&quot;</span>+msg+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">                sqltest.insert(<span class=\"string\">&quot;服务器&quot;</span>, msg);</span><br><span class=\"line\">\t            server.buffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">TODO:</span> handle exception</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-client-java-客户端连接socket、发送消息线程\"><a href=\"#3-client-java-客户端连接socket、发送消息线程\" class=\"headerlink\" title=\"3. client.java 客户端连接socket、发送消息线程\"></a>3. client.java 客户端连接socket、发送消息线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">client</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;<span class=\"comment\">// 客户端</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Scanner input = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">static</span> String name=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> JTextArea textArea=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> String buffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    \tclientapp.WinMain();</span><br><span class=\"line\">    \t<span class=\"keyword\">while</span>(buffer==<span class=\"string\">&quot;&quot;</span>) &#123; <span class=\"comment\">//等待客户输入名字</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \tname=buffer.replaceAll(<span class=\"string\">&quot;(\\r\\n|\\r|\\n|\\n\\r)&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    \tSystem.out.println(<span class=\"string\">&quot;************客户端:&quot;</span>+client.name+<span class=\"string\">&quot;*************&quot;</span>);</span><br><span class=\"line\">    \ttextArea.append(<span class=\"string\">&quot;**************************客户端:&quot;</span>+client.name+<span class=\"string\">&quot;***************************\\n&quot;</span>);</span><br><span class=\"line\">    \tbuffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;<span class=\"comment\">//连接服务器socket</span></span><br><span class=\"line\">            socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"number\">9999</span>);</span><br><span class=\"line\">            PrintWriter out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">            out.println(name+<span class=\"string\">&quot;:我已上线&quot;</span>);</span><br><span class=\"line\">            out.flush();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//开启发送、接收消息线程</span></span><br><span class=\"line\">        client t = <span class=\"keyword\">new</span> client();</span><br><span class=\"line\">        Read r = <span class=\"keyword\">new</span> Read(socket);</span><br><span class=\"line\">        Thread print = <span class=\"keyword\">new</span> Thread(t);</span><br><span class=\"line\">        Thread read = <span class=\"keyword\">new</span> Thread(r);</span><br><span class=\"line\">        print.start();</span><br><span class=\"line\">        read.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setwin</span><span class=\"params\">(JTextArea a1)</span> </span>&#123;<span class=\"comment\">//将客户端界面的消息打印框赋值到client类中</span></span><br><span class=\"line\">    \ttextArea=a1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    \tPrintWriter out = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);         </span><br><span class=\"line\">            out = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream());</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;<span class=\"comment\">//等待用户输入消息</span></span><br><span class=\"line\">            \t<span class=\"keyword\">while</span>(buffer==<span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            \t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        \t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        \t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        \t\t\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        \t\t\t\te.printStackTrace();</span><br><span class=\"line\">        \t\t\t&#125;</span><br><span class=\"line\">            \t&#125;</span><br><span class=\"line\">                <span class=\"comment\">//发送消息</span></span><br><span class=\"line\">        \t\tString msg = buffer.replaceAll(<span class=\"string\">&quot;(\\r\\n|\\r|\\n|\\n\\r)&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        \t\tout.println(name+<span class=\"string\">&quot;:&quot;</span>+msg);</span><br><span class=\"line\">        \t\tout.flush();</span><br><span class=\"line\">        \t\tbuffer=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;<span class=\"comment\">//用户下线，向服务器发送下线消息，关闭socket</span></span><br><span class=\"line\">            \tout.println(name+<span class=\"string\">&quot;:已下线&quot;</span>);</span><br><span class=\"line\">        \t\tout.flush();</span><br><span class=\"line\">        \t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                socket.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException | InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-client-java-客户端接收消息线程\"><a href=\"#4-client-java-客户端接收消息线程\" class=\"headerlink\" title=\"4. client.java 客户端接收消息线程\"></a>4. client.java 客户端接收消息线程</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Read</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    Socket socket = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Read</span><span class=\"params\">(Socket socket)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.socket = socket;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">            BufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket</span><br><span class=\"line\">                    .getInputStream()));</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;\t<span class=\"comment\">//接收到消息，打印在界面上</span></span><br><span class=\"line\">            \tString text=in.readLine() ;</span><br><span class=\"line\">            \tclient.textArea.append(text+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            \tSystem.out.println(text);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-sqltext-java-连接数据库\"><a href=\"#5-sqltext-java-连接数据库\" class=\"headerlink\" title=\"5. sqltext.java 连接数据库\"></a>5. sqltext.java 连接数据库</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">sqltest</span> </span>&#123;  <span class=\"comment\">//连接数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String JDBC_DRIVER = <span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DB_URL = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/chatroom?useUnicode=true&amp;characterEncoding=UTF-8&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String USER = <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PASS = <span class=\"string\">&quot;1234&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> JTextArea textArea=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(String buf1,String buf2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tConnection conn = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Statement stmt = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        SimpleDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<span class=\"comment\">//设置日期格式</span></span><br><span class=\"line\">        String curtime=df.format(<span class=\"keyword\">new</span> Date());<span class=\"comment\">// new Date()为获取当前系统时间</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 注册 JDBC 驱动</span></span><br><span class=\"line\">            Class.forName(JDBC_DRIVER);</span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"comment\">// 打开链接</span></span><br><span class=\"line\">            conn = DriverManager.getConnection(DB_URL,USER,PASS);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 执行查询</span></span><br><span class=\"line\">            stmt = conn.createStatement();</span><br><span class=\"line\">            String sql1;</span><br><span class=\"line\">            <span class=\"comment\">//将聊天人的名字、聊天内容和时间记入数据库</span></span><br><span class=\"line\">            sql1 = <span class=\"string\">&quot;insert into record (name,buf,time) values (\\&#x27;&quot;</span>+buf1+<span class=\"string\">&quot;\\&#x27;, \\&#x27;&quot;</span>+buf2+<span class=\"string\">&quot;\\&#x27;,\\&#x27;&quot;</span>+curtime+<span class=\"string\">&quot;\\&#x27;)&quot;</span>;</span><br><span class=\"line\">            stmt.executeUpdate(sql1);</span><br><span class=\"line\">            String sql2;</span><br><span class=\"line\">            <span class=\"comment\">//查询数据库中所有聊天记录</span></span><br><span class=\"line\">            sql2 = <span class=\"string\">&quot;SELECT id,name, buf,time FROM record&quot;</span>;</span><br><span class=\"line\">            ResultSet rs = stmt.executeQuery(sql2);</span><br><span class=\"line\">            textArea.setText(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 展开结果集数据库</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(rs.next())&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 通过字段检索</span></span><br><span class=\"line\">                String name  = rs.getString(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">                String buf = rs.getString(<span class=\"string\">&quot;buf&quot;</span>);</span><br><span class=\"line\">                String time = rs.getString(<span class=\"string\">&quot;time&quot;</span>);</span><br><span class=\"line\">                </span><br><span class=\"line\">                textArea.append(time+<span class=\"string\">&quot;\\n&quot;</span>+name+<span class=\"string\">&quot; : &quot;</span>+buf+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 完成后关闭</span></span><br><span class=\"line\">            rs.close();</span><br><span class=\"line\">            stmt.close();</span><br><span class=\"line\">            conn.close();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(SQLException se)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理 JDBC 错误</span></span><br><span class=\"line\">            se.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理 Class.forName 错误</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 关闭资源</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(stmt!=<span class=\"keyword\">null</span>) stmt.close();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">catch</span>(SQLException se2)&#123;</span><br><span class=\"line\">            &#125;<span class=\"comment\">// 什么都不做</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(conn!=<span class=\"keyword\">null</span>) conn.close();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">catch</span>(SQLException se)&#123;</span><br><span class=\"line\">                se.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setwin</span><span class=\"params\">(JTextArea area)</span> </span>&#123;</span><br><span class=\"line\">    \ttextArea=area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-serverapp-java-clientapp-java-客户端和服务器界面主要由AWT-SWING可视化插件生成界面代码\"><a href=\"#6-serverapp-java-clientapp-java-客户端和服务器界面主要由AWT-SWING可视化插件生成界面代码\" class=\"headerlink\" title=\"6. serverapp.java , clientapp.java 客户端和服务器界面主要由AWT/SWING可视化插件生成界面代码\"></a>6. serverapp.java , clientapp.java 客户端和服务器界面主要由AWT/SWING可视化插件生成界面代码</h4><h3 id=\"六-项目成果截图\"><a href=\"#六-项目成果截图\" class=\"headerlink\" title=\"六. 项目成果截图\"></a>六. 项目成果截图</h3><h4 id=\"1-服务器初始化，调出所有聊天记录\"><a href=\"#1-服务器初始化，调出所有聊天记录\" class=\"headerlink\" title=\"1. 服务器初始化，调出所有聊天记录\"></a>1. 服务器初始化，调出所有聊天记录</h4><p><img src=\"/posts/Socket-chatroom/服务端初始.jpg\" alt></p>\n<h4 id=\"2-客户端初始化，需要输入名字\"><a href=\"#2-客户端初始化，需要输入名字\" class=\"headerlink\" title=\"2. 客户端初始化，需要输入名字\"></a>2. 客户端初始化，需要输入名字</h4><p><img src=\"/posts/Socket-chatroom/客户端初始.jpg\" alt></p>\n<h4 id=\"3-客户上线\"><a href=\"#3-客户上线\" class=\"headerlink\" title=\"3. 客户上线\"></a>3. 客户上线</h4><p><img src=\"/posts/Socket-chatroom/客户上线.jpg\" alt></p>\n<h4 id=\"4-客户和服务器分别发送消息\"><a href=\"#4-客户和服务器分别发送消息\" class=\"headerlink\" title=\"4. 客户和服务器分别发送消息\"></a>4. 客户和服务器分别发送消息</h4><p><img src=\"/posts/Socket-chatroom/发送消息.jpg\" alt></p>\n<h4 id=\"5-客户端下线\"><a href=\"#5-客户端下线\" class=\"headerlink\" title=\"5. 客户端下线\"></a>5. 客户端下线</h4><p><img src=\"/posts/Socket-chatroom/客户端下线.jpg\" alt></p>"},{"title":"Vue（1）","copyright":false,"date":"2022-09-10T05:41:43.000Z","_content":"{% note info %}\nb站教程视频：[Vue实战](https://www.bilibili.com/video/BV1Zy4y1K7SH?p=138&spm_id_from=pageDriver&vd_source=1379429d9fdc59cc6f51bb675c08e3ba)\n学习笔记：[Vue学习笔记](https://www.yuque.com/cessstudy/kak11d/hfeef2)\n{% endnote %}\n<!-- more -->\n# 构建Vue项目\n## vue cli构建\n###　全局安装@vue/cli。\n```sh\nnpm install -g @vue/cli\n```\n### 切换到你要创建项目的目录，然后使用命令创建项目\n```sh\nvue create xxxx\n```\n### 启动项目\n```sh\nnpm run serve\n```\n{% note %}\n如出现下载缓慢请配置 npm 淘宝镜像：`npm config set registry\nhttps://registry.npm.taobao.org`\n{% endnote %}\n\n## Vite构建\n### 创建工程\n```sh\nnpm init vite-app <project name>\n```\n### 进入工程目录\n```sh\ncd <project name>\n```\n### 安装依赖\n```sh\nnpm install\n```\n### 运行\n```sh\nnpm run dev\n```\n\n# setup使用\n　　定义数据、函数并返回\n```js\nsetup(){\n    let name=\"pjt\"\n    let age=23\n\n    function sayhello(){\n      alert(`我叫${name},我${age}岁了`)\n    }\n\n    return{\n      name,\n      age,\n      sayhello\n    }\n    // return ()=> h('h1','pjt')\n  }\n```\n\n# ref和reactive方法\n```js\nimport { ref,reactive } from 'vue'\n\nexport default {\n  name: 'App',\n  setup(){\n    let name=ref(\"潘江涛\") //使用ref方法将普通数据变为响应式\n    let age=ref(23)\n    let job=reactive({ //使用reactive方法将数组、对象、函数类型数据变为响应式\n      type : '学生',\n      salary: 1000\n    })\n    \n\n    function changeinfo(){\n      age.value = age.value+1 //取出ref数据，需要.value\n      job.type = '社会人',\n      job.salary = job.salary +10000 //取出reactive数据，不需要.value\n    }\n\n    return{\n      name,\n      age,\n      job,\n      changeinfo\n    }\n  }  \n}\n```\n\n# computed方法\n　　fullname属性将根据firstname和lastname来计算\n```js\nperson.fullname=computed({\n  get(){\n    return person.firstname+person.lastname\n  },\n  set(value){\n    person.firstname=value[0]\n    person.lastname=value.slice(1)\n  }\n  \n})\n```\n\n# 监视函数watch和watchEffect\n　　watch只能监视浅层数据，不能监视对象或数组内部数据的变化，而watchEffect能监视所有定义的变量\n```js\nwatch(()=>person.firstname,(newvalue,oldvalue)=>{\n  console.log('姓变了',newvalue,oldvalue)\n})\n\nwatchEffect(()=>{\n  const a=person.firstname\n  console.log(\"person.firstname数据发生变化\")\n})\n```\n\n# hooks\n　　将模块化js代码封装为hook组件，使用时直接import使用,且定义hook函数时使用下述代码包裹\n```js\nexport default function (){\n}\n```\n\n# 动画效果\n## 进场/退场效果\n1. template中使用<transition>标签包裹动画内容\n2. style中使用v-enter-active，v-leave-active类描述进场、退场动画\n```css\n<style>\n    .v-enter-active{\n        animation: pjt 3s;\n    }\n    .v-leave-active{\n        animation: pjt 3s reverse;\n    }\n    @keyframes pjt {\n        from{\n            transform: translateX(-2000px);\n        }\n        to{\n            transform: translateX(0px);\n        }\n    }\n</style>\n```\n　　或者使用过渡效果\n```js\n<style scoped>\n  h1{\n      background-color: orange;\n  }\n  .v-enter-active,.v-leavactive{ //动画效果\n      transition: 0.5s linear;\n  } \n  .v-enter,.v-enter-to,{ //进入的起点、退出的终点\n      transform: translateX(-100%); \n  }\n  .v-enter-to.v-leave{ //进入的终点、退出的起点\n      transform: translateX(0);\n  }\n</style>>\n```\n{% note %}\n* 如出现多个不同动画效果，可给<transition>标记不同的class名，动画类名也改为classname-enter-active和classname-leave-active\n* 包含多个框体可以使用<transition-group>标签包裹\n{% endnote %}\n\n## 集成第三方库\n　　`<script>`标签中引入第三方库\n```js\nimport 'animate.css'\n```\n　　`<transition>`标签加上属性`name`及操作属性\n```js\n  <transition-group \n    name=\"animate__animated animate__bounce\" \n    enter-active-class=\"animate__rubberBand\"\n    leave-active-class=\"animate__backOutUp\"\n    appear\n  >\n```","source":"_posts/Vue-1-create.md","raw":"---\ntitle: Vue（1）\ncopyright: false\ndate: 2022-09-10 13:41:43\ntags: \n- Vue\ncategories: \n- frontend\n- Vue\n---\n{% note info %}\nb站教程视频：[Vue实战](https://www.bilibili.com/video/BV1Zy4y1K7SH?p=138&spm_id_from=pageDriver&vd_source=1379429d9fdc59cc6f51bb675c08e3ba)\n学习笔记：[Vue学习笔记](https://www.yuque.com/cessstudy/kak11d/hfeef2)\n{% endnote %}\n<!-- more -->\n# 构建Vue项目\n## vue cli构建\n###　全局安装@vue/cli。\n```sh\nnpm install -g @vue/cli\n```\n### 切换到你要创建项目的目录，然后使用命令创建项目\n```sh\nvue create xxxx\n```\n### 启动项目\n```sh\nnpm run serve\n```\n{% note %}\n如出现下载缓慢请配置 npm 淘宝镜像：`npm config set registry\nhttps://registry.npm.taobao.org`\n{% endnote %}\n\n## Vite构建\n### 创建工程\n```sh\nnpm init vite-app <project name>\n```\n### 进入工程目录\n```sh\ncd <project name>\n```\n### 安装依赖\n```sh\nnpm install\n```\n### 运行\n```sh\nnpm run dev\n```\n\n# setup使用\n　　定义数据、函数并返回\n```js\nsetup(){\n    let name=\"pjt\"\n    let age=23\n\n    function sayhello(){\n      alert(`我叫${name},我${age}岁了`)\n    }\n\n    return{\n      name,\n      age,\n      sayhello\n    }\n    // return ()=> h('h1','pjt')\n  }\n```\n\n# ref和reactive方法\n```js\nimport { ref,reactive } from 'vue'\n\nexport default {\n  name: 'App',\n  setup(){\n    let name=ref(\"潘江涛\") //使用ref方法将普通数据变为响应式\n    let age=ref(23)\n    let job=reactive({ //使用reactive方法将数组、对象、函数类型数据变为响应式\n      type : '学生',\n      salary: 1000\n    })\n    \n\n    function changeinfo(){\n      age.value = age.value+1 //取出ref数据，需要.value\n      job.type = '社会人',\n      job.salary = job.salary +10000 //取出reactive数据，不需要.value\n    }\n\n    return{\n      name,\n      age,\n      job,\n      changeinfo\n    }\n  }  \n}\n```\n\n# computed方法\n　　fullname属性将根据firstname和lastname来计算\n```js\nperson.fullname=computed({\n  get(){\n    return person.firstname+person.lastname\n  },\n  set(value){\n    person.firstname=value[0]\n    person.lastname=value.slice(1)\n  }\n  \n})\n```\n\n# 监视函数watch和watchEffect\n　　watch只能监视浅层数据，不能监视对象或数组内部数据的变化，而watchEffect能监视所有定义的变量\n```js\nwatch(()=>person.firstname,(newvalue,oldvalue)=>{\n  console.log('姓变了',newvalue,oldvalue)\n})\n\nwatchEffect(()=>{\n  const a=person.firstname\n  console.log(\"person.firstname数据发生变化\")\n})\n```\n\n# hooks\n　　将模块化js代码封装为hook组件，使用时直接import使用,且定义hook函数时使用下述代码包裹\n```js\nexport default function (){\n}\n```\n\n# 动画效果\n## 进场/退场效果\n1. template中使用<transition>标签包裹动画内容\n2. style中使用v-enter-active，v-leave-active类描述进场、退场动画\n```css\n<style>\n    .v-enter-active{\n        animation: pjt 3s;\n    }\n    .v-leave-active{\n        animation: pjt 3s reverse;\n    }\n    @keyframes pjt {\n        from{\n            transform: translateX(-2000px);\n        }\n        to{\n            transform: translateX(0px);\n        }\n    }\n</style>\n```\n　　或者使用过渡效果\n```js\n<style scoped>\n  h1{\n      background-color: orange;\n  }\n  .v-enter-active,.v-leavactive{ //动画效果\n      transition: 0.5s linear;\n  } \n  .v-enter,.v-enter-to,{ //进入的起点、退出的终点\n      transform: translateX(-100%); \n  }\n  .v-enter-to.v-leave{ //进入的终点、退出的起点\n      transform: translateX(0);\n  }\n</style>>\n```\n{% note %}\n* 如出现多个不同动画效果，可给<transition>标记不同的class名，动画类名也改为classname-enter-active和classname-leave-active\n* 包含多个框体可以使用<transition-group>标签包裹\n{% endnote %}\n\n## 集成第三方库\n　　`<script>`标签中引入第三方库\n```js\nimport 'animate.css'\n```\n　　`<transition>`标签加上属性`name`及操作属性\n```js\n  <transition-group \n    name=\"animate__animated animate__bounce\" \n    enter-active-class=\"animate__rubberBand\"\n    leave-active-class=\"animate__backOutUp\"\n    appear\n  >\n```","slug":"Vue-1-create","published":1,"updated":"2022-09-19T07:41:00.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0g1000lc8pv6mbe81b0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>b站教程视频：<a href=\"https://www.bilibili.com/video/BV1Zy4y1K7SH?p=138&amp;spm_id_from=pageDriver&amp;vd_source=1379429d9fdc59cc6f51bb675c08e3ba\">Vue实战</a><br>学习笔记：<a href=\"https://www.yuque.com/cessstudy/kak11d/hfeef2\">Vue学习笔记</a></p>\n          </div>\n<a id=\"more\"></a>\n<h1 id=\"构建Vue项目\"><a href=\"#构建Vue项目\" class=\"headerlink\" title=\"构建Vue项目\"></a>构建Vue项目</h1><h2 id=\"vue-cli构建\"><a href=\"#vue-cli构建\" class=\"headerlink\" title=\"vue cli构建\"></a>vue cli构建</h2><h3 id=\"全局安装-vue-cli。\"><a href=\"#全局安装-vue-cli。\" class=\"headerlink\" title=\"　全局安装@vue/cli。\"></a>　全局安装@vue/cli。</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"切换到你要创建项目的目录，然后使用命令创建项目\"><a href=\"#切换到你要创建项目的目录，然后使用命令创建项目\" class=\"headerlink\" title=\"切换到你要创建项目的目录，然后使用命令创建项目\"></a>切换到你要创建项目的目录，然后使用命令创建项目</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create xxxx</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n<div class=\"note \">\n            <p>如出现下载缓慢请配置 npm 淘宝镜像：<code>npm config set registryhttps://registry.npm.taobao.org</code></p>\n          </div>\n<h2 id=\"Vite构建\"><a href=\"#Vite构建\" class=\"headerlink\" title=\"Vite构建\"></a>Vite构建</h2><h3 id=\"创建工程\"><a href=\"#创建工程\" class=\"headerlink\" title=\"创建工程\"></a>创建工程</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init vite-app &lt;project name&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入工程目录\"><a href=\"#进入工程目录\" class=\"headerlink\" title=\"进入工程目录\"></a>进入工程目录</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &lt;project name&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<h1 id=\"setup使用\"><a href=\"#setup使用\" class=\"headerlink\" title=\"setup使用\"></a>setup使用</h1><p>　　定义数据、函数并返回<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setup()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name=<span class=\"string\">&quot;pjt&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> age=<span class=\"number\">23</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayhello</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      alert(<span class=\"string\">`我叫<span class=\"subst\">$&#123;name&#125;</span>,我<span class=\"subst\">$&#123;age&#125;</span>岁了`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">      name,</span><br><span class=\"line\">      age,</span><br><span class=\"line\">      sayhello</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// return ()=&gt; h(&#x27;h1&#x27;,&#x27;pjt&#x27;)</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"ref和reactive方法\"><a href=\"#ref和reactive方法\" class=\"headerlink\" title=\"ref和reactive方法\"></a>ref和reactive方法</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref,reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">&#x27;App&#x27;</span>,</span><br><span class=\"line\">  setup()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name=ref(<span class=\"string\">&quot;潘江涛&quot;</span>) <span class=\"comment\">//使用ref方法将普通数据变为响应式</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> age=ref(<span class=\"number\">23</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> job=reactive(&#123; <span class=\"comment\">//使用reactive方法将数组、对象、函数类型数据变为响应式</span></span><br><span class=\"line\">      type : <span class=\"string\">&#x27;学生&#x27;</span>,</span><br><span class=\"line\">      salary: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeinfo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      age.value = age.value+<span class=\"number\">1</span> <span class=\"comment\">//取出ref数据，需要.value</span></span><br><span class=\"line\">      job.type = <span class=\"string\">&#x27;社会人&#x27;</span>,</span><br><span class=\"line\">      job.salary = job.salary +<span class=\"number\">10000</span> <span class=\"comment\">//取出reactive数据，不需要.value</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">      name,</span><br><span class=\"line\">      age,</span><br><span class=\"line\">      job,</span><br><span class=\"line\">      changeinfo</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"computed方法\"><a href=\"#computed方法\" class=\"headerlink\" title=\"computed方法\"></a>computed方法</h1><p>　　fullname属性将根据firstname和lastname来计算<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">person.fullname=computed(&#123;</span><br><span class=\"line\">  get()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> person.firstname+person.lastname</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  set(value)&#123;</span><br><span class=\"line\">    person.firstname=value[<span class=\"number\">0</span>]</span><br><span class=\"line\">    person.lastname=value.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"监视函数watch和watchEffect\"><a href=\"#监视函数watch和watchEffect\" class=\"headerlink\" title=\"监视函数watch和watchEffect\"></a>监视函数watch和watchEffect</h1><p>　　watch只能监视浅层数据，不能监视对象或数组内部数据的变化，而watchEffect能监视所有定义的变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch(<span class=\"function\">()=&gt;</span>person.firstname,<span class=\"function\">(<span class=\"params\">newvalue,oldvalue</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;姓变了&#x27;</span>,newvalue,oldvalue)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">watchEffect(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> a=person.firstname</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;person.firstname数据发生变化&quot;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"hooks\"><a href=\"#hooks\" class=\"headerlink\" title=\"hooks\"></a>hooks</h1><p>　　将模块化js代码封装为hook组件，使用时直接import使用,且定义hook函数时使用下述代码包裹<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"动画效果\"><a href=\"#动画效果\" class=\"headerlink\" title=\"动画效果\"></a>动画效果</h1><h2 id=\"进场-退场效果\"><a href=\"#进场-退场效果\" class=\"headerlink\" title=\"进场/退场效果\"></a>进场/退场效果</h2><ol>\n<li>template中使用<transition>标签包裹动画内容</transition></li>\n<li>style中使用v-enter-active，v-leave-active类描述进场、退场动画<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.v-enter-active</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">animation</span>: pjt <span class=\"number\">3s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.v-leave-active</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">animation</span>: pjt <span class=\"number\">3s</span> reverse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@keyframes</span> pjt &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">2000px</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0px</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n　　或者使用过渡效果<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">  h1&#123;</span><br><span class=\"line\">      background-color: orange;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .v-enter-active,.v-leavactive&#123; <span class=\"comment\">//动画效果</span></span><br><span class=\"line\">      transition: <span class=\"number\">0.5</span>s linear;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  .v-enter,.v-enter-to,&#123; <span class=\"comment\">//进入的起点、退出的终点</span></span><br><span class=\"line\">      transform: translateX(<span class=\"number\">-100</span>%); </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .v-enter-to.v-leave&#123; <span class=\"comment\">//进入的终点、退出的起点</span></span><br><span class=\"line\">      transform: translateX(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;&gt;</span><br></pre></td></tr></table></figure>\n<div class=\"note \">\n            <ul><li>如出现多个不同动画效果，可给<transition>标记不同的class名，动画类名也改为classname-enter-active和classname-leave-active</transition></li><li>包含多个框体可以使用<transition-group>标签包裹</transition-group></li></ul>\n          </div>\n</li>\n</ol>\n<h2 id=\"集成第三方库\"><a href=\"#集成第三方库\" class=\"headerlink\" title=\"集成第三方库\"></a>集成第三方库</h2><p>　　<code>&lt;script&gt;</code>标签中引入第三方库<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;animate.css&#x27;</span></span><br></pre></td></tr></table></figure><br>　　<code>&lt;transition&gt;</code>标签加上属性<code>name</code>及操作属性<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;transition-group </span><br><span class=\"line\">  name=<span class=\"string\">&quot;animate__animated animate__bounce&quot;</span> </span><br><span class=\"line\">  enter-active-<span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;animate__rubberBand&quot;</span></span><br><span class=\"line\">  leave-active-<span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;animate__backOutUp&quot;</span></span><br><span class=\"line\">  appear</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2686,"excerpt":"<div class=\"note info\">\n            <p>b站教程视频：<a href=\"https://www.bilibili.com/video/BV1Zy4y1K7SH?p=138&amp;spm_id_from=pageDriver&amp;vd_source=1379429d9fdc59cc6f51bb675c08e3ba\">Vue实战</a><br>学习笔记：<a href=\"https://www.yuque.com/cessstudy/kak11d/hfeef2\">Vue学习笔记</a></p>\n          </div>","more":"<h1 id=\"构建Vue项目\"><a href=\"#构建Vue项目\" class=\"headerlink\" title=\"构建Vue项目\"></a>构建Vue项目</h1><h2 id=\"vue-cli构建\"><a href=\"#vue-cli构建\" class=\"headerlink\" title=\"vue cli构建\"></a>vue cli构建</h2><h3 id=\"全局安装-vue-cli。\"><a href=\"#全局安装-vue-cli。\" class=\"headerlink\" title=\"　全局安装@vue/cli。\"></a>　全局安装@vue/cli。</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"切换到你要创建项目的目录，然后使用命令创建项目\"><a href=\"#切换到你要创建项目的目录，然后使用命令创建项目\" class=\"headerlink\" title=\"切换到你要创建项目的目录，然后使用命令创建项目\"></a>切换到你要创建项目的目录，然后使用命令创建项目</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create xxxx</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n<div class=\"note \">\n            <p>如出现下载缓慢请配置 npm 淘宝镜像：<code>npm config set registryhttps://registry.npm.taobao.org</code></p>\n          </div>\n<h2 id=\"Vite构建\"><a href=\"#Vite构建\" class=\"headerlink\" title=\"Vite构建\"></a>Vite构建</h2><h3 id=\"创建工程\"><a href=\"#创建工程\" class=\"headerlink\" title=\"创建工程\"></a>创建工程</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init vite-app &lt;project name&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入工程目录\"><a href=\"#进入工程目录\" class=\"headerlink\" title=\"进入工程目录\"></a>进入工程目录</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &lt;project name&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<h1 id=\"setup使用\"><a href=\"#setup使用\" class=\"headerlink\" title=\"setup使用\"></a>setup使用</h1><p>　　定义数据、函数并返回<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setup()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name=<span class=\"string\">&quot;pjt&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> age=<span class=\"number\">23</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayhello</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      alert(<span class=\"string\">`我叫<span class=\"subst\">$&#123;name&#125;</span>,我<span class=\"subst\">$&#123;age&#125;</span>岁了`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">      name,</span><br><span class=\"line\">      age,</span><br><span class=\"line\">      sayhello</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// return ()=&gt; h(&#x27;h1&#x27;,&#x27;pjt&#x27;)</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"ref和reactive方法\"><a href=\"#ref和reactive方法\" class=\"headerlink\" title=\"ref和reactive方法\"></a>ref和reactive方法</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref,reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">&#x27;App&#x27;</span>,</span><br><span class=\"line\">  setup()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> name=ref(<span class=\"string\">&quot;潘江涛&quot;</span>) <span class=\"comment\">//使用ref方法将普通数据变为响应式</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> age=ref(<span class=\"number\">23</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> job=reactive(&#123; <span class=\"comment\">//使用reactive方法将数组、对象、函数类型数据变为响应式</span></span><br><span class=\"line\">      type : <span class=\"string\">&#x27;学生&#x27;</span>,</span><br><span class=\"line\">      salary: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeinfo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      age.value = age.value+<span class=\"number\">1</span> <span class=\"comment\">//取出ref数据，需要.value</span></span><br><span class=\"line\">      job.type = <span class=\"string\">&#x27;社会人&#x27;</span>,</span><br><span class=\"line\">      job.salary = job.salary +<span class=\"number\">10000</span> <span class=\"comment\">//取出reactive数据，不需要.value</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">      name,</span><br><span class=\"line\">      age,</span><br><span class=\"line\">      job,</span><br><span class=\"line\">      changeinfo</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"computed方法\"><a href=\"#computed方法\" class=\"headerlink\" title=\"computed方法\"></a>computed方法</h1><p>　　fullname属性将根据firstname和lastname来计算<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">person.fullname=computed(&#123;</span><br><span class=\"line\">  get()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> person.firstname+person.lastname</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  set(value)&#123;</span><br><span class=\"line\">    person.firstname=value[<span class=\"number\">0</span>]</span><br><span class=\"line\">    person.lastname=value.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"监视函数watch和watchEffect\"><a href=\"#监视函数watch和watchEffect\" class=\"headerlink\" title=\"监视函数watch和watchEffect\"></a>监视函数watch和watchEffect</h1><p>　　watch只能监视浅层数据，不能监视对象或数组内部数据的变化，而watchEffect能监视所有定义的变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch(<span class=\"function\">()=&gt;</span>person.firstname,<span class=\"function\">(<span class=\"params\">newvalue,oldvalue</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;姓变了&#x27;</span>,newvalue,oldvalue)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">watchEffect(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> a=person.firstname</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;person.firstname数据发生变化&quot;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"hooks\"><a href=\"#hooks\" class=\"headerlink\" title=\"hooks\"></a>hooks</h1><p>　　将模块化js代码封装为hook组件，使用时直接import使用,且定义hook函数时使用下述代码包裹<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"动画效果\"><a href=\"#动画效果\" class=\"headerlink\" title=\"动画效果\"></a>动画效果</h1><h2 id=\"进场-退场效果\"><a href=\"#进场-退场效果\" class=\"headerlink\" title=\"进场/退场效果\"></a>进场/退场效果</h2><ol>\n<li>template中使用<transition>标签包裹动画内容</transition></li>\n<li>style中使用v-enter-active，v-leave-active类描述进场、退场动画<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">style</span>&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.v-enter-active</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">animation</span>: pjt <span class=\"number\">3s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.v-leave-active</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">animation</span>: pjt <span class=\"number\">3s</span> reverse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@keyframes</span> pjt &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">2000px</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0px</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n　　或者使用过渡效果<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">  h1&#123;</span><br><span class=\"line\">      background-color: orange;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .v-enter-active,.v-leavactive&#123; <span class=\"comment\">//动画效果</span></span><br><span class=\"line\">      transition: <span class=\"number\">0.5</span>s linear;</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  .v-enter,.v-enter-to,&#123; <span class=\"comment\">//进入的起点、退出的终点</span></span><br><span class=\"line\">      transform: translateX(<span class=\"number\">-100</span>%); </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .v-enter-to.v-leave&#123; <span class=\"comment\">//进入的终点、退出的起点</span></span><br><span class=\"line\">      transform: translateX(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/style&gt;&gt;</span><br></pre></td></tr></table></figure>\n<div class=\"note \">\n            <ul><li>如出现多个不同动画效果，可给<transition>标记不同的class名，动画类名也改为classname-enter-active和classname-leave-active</transition></li><li>包含多个框体可以使用<transition-group>标签包裹</transition-group></li></ul>\n          </div>\n</li>\n</ol>\n<h2 id=\"集成第三方库\"><a href=\"#集成第三方库\" class=\"headerlink\" title=\"集成第三方库\"></a>集成第三方库</h2><p>　　<code>&lt;script&gt;</code>标签中引入第三方库<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;animate.css&#x27;</span></span><br></pre></td></tr></table></figure><br>　　<code>&lt;transition&gt;</code>标签加上属性<code>name</code>及操作属性<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;transition-group </span><br><span class=\"line\">  name=<span class=\"string\">&quot;animate__animated animate__bounce&quot;</span> </span><br><span class=\"line\">  enter-active-<span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;animate__rubberBand&quot;</span></span><br><span class=\"line\">  leave-active-<span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;animate__backOutUp&quot;</span></span><br><span class=\"line\">  appear</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure></p>"},{"title":"多说话人自适应合成","copyright":true,"date":"2022-05-05T11:58:13.000Z","_content":"## 多说话人自适应合成\n\n　　本文介绍了三篇自适应多说话人语音合成论文及代码分析。\n<!-- more -->\n### 1. [Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis](https://arxiv.org/pdf/1806.04558)\n{% note info %}\ngithub源码:[Real-Time-Voice-Cloning](https://github.com/CorentinJ/Real-Time-Voice-Cloning)\ndemo演示:[SV2TTS 说话人音色语音合成演示](http://www.panjiangtao.cn/SV2TTS/)\n{% endnote %}\n\n#### 1.1 论文内容\n\n　　在tacotron2中加入d-vector向量进行个性化指定说话人语音合成\n\n　　d-vector：将指定说话人的一句语音输入一个DNN网络，获取其最后一个隐藏层的输出，用在说话人识别领域\n\n##### 推理过程：\n\n①选择编码器将语音的文本内容进行编码。得到一个向量。\n\n②将目标人的音色（声音）进行编码或者处理成向量。\n\n③将上面的两种向量在某一种维度上进行拼接得到更长的向量（一般为2倍的长度）在通过解码器进行解码成一个语音信息（并不是最终的），之后经过相应的处理得到真正的语音。整个过程就是模型的推理过程。\n\n#### 1.2 模型结构\n\n![SV2TTS模型](http://pic.panjiangtao.cn/img/image-20220419204452965.png)\n\n##### 1.2.1 说话人编码器网络(提取说话人特征)\n\n　　使用独立的噪声语音数据集进行说话人验证任务的训练，从来自目标说话人几秒钟的参考语音中生成固定维度的**嵌入向量**(说话人语音特征)，该向量称为d-vector\n\n　　训练TTS时使用说话人编码器的预训练模型。\n\n　　模型结构如下，使用一个多层LSTM、线性层和ReLU层。\n\n```python\nclass SpeakerEncoder(nn.Module):\n    def __init__(self, device, loss_device):\n        super().__init__()\n        self.loss_device = loss_device\n        \n        # Network defition\n        self.lstm = nn.LSTM(input_size=mel_n_channels,\n                            hidden_size=model_hidden_size, \n                            num_layers=model_num_layers, \n                            batch_first=True).to(device)\n        self.linear = nn.Linear(in_features=model_hidden_size, \n                                out_features=model_embedding_size).to(device)\n        self.relu = torch.nn.ReLU().to(device)\n        \n        # Cosine similarity scaling (with fixed initial parameter values)\n        self.similarity_weight = nn.Parameter(torch.tensor([10.])).to(loss_device)\n        self.similarity_bias = nn.Parameter(torch.tensor([-5.])).to(loss_device)\n\n        # Loss\n        self.loss_fn = nn.CrossEntropyLoss().to(loss_device)\n        \n    def do_gradient_ops(self):\n        # Gradient scale\n        self.similarity_weight.grad *= 0.01\n        self.similarity_bias.grad *= 0.01\n            \n        # Gradient clipping\n        clip_grad_norm_(self.parameters(), 3, norm_type=2)\n    \n    def forward(self, utterances, hidden_init=None):\n        \"\"\"\n        Computes the embeddings of a batch of utterance spectrograms.\n        \n        :param utterances: batch of mel-scale filterbanks of same duration as a tensor of shape \n        (batch_size, n_frames, n_channels) \n        :param hidden_init: initial hidden state of the LSTM as a tensor of shape (num_layers, \n        batch_size, hidden_size). Will default to a tensor of zeros if None.\n        :return: the embeddings as a tensor of shape (batch_size, embedding_size)\n        \"\"\"\n        # Pass the input through the LSTM layers and retrieve all outputs, the final hidden state\n        # and the final cell state.\n        out, (hidden, cell) = self.lstm(utterances, hidden_init)\n        \n        # We take only the hidden state of the last layer\n        embeds_raw = self.relu(self.linear(hidden[-1]))\n        \n        # L2-normalize it\n        embeds = embeds_raw / (torch.norm(embeds_raw, dim=1, keepdim=True) + 1e-5)        \n\n        return embeds\n```\n\n\n\n##### d-vector聚类效果\n\n　　预训练模型的聚类效果如下，使用TIMIT数据集进行训练，可能是训练数据较少，效果较差。\n\n<img src=\"http://pic.panjiangtao.cn/img/D-vector说话人聚类.png\" alt=\"D-vector说话人聚类\" style=\"zoom:67%;\" />\n\n##### 1.2.2 基于Tacotron 2的序列到序列合成网络\n\n　　只需将说话人嵌入向量传递到注意力层，就可以在不同的说话人之间汇聚。其基于说话者嵌入从文本生成mel谱图；\n\n　　文本编码后加入说话人嵌入向量代码：\n\n```python\nclass Encoder(nn.Module):\n    def __init__(self, embed_dims, num_chars, encoder_dims, K, num_highways, dropout):\n        super().__init__()\n        prenet_dims = (encoder_dims, encoder_dims)\n        cbhg_channels = encoder_dims\n        self.embedding = nn.Embedding(num_chars, embed_dims)\n        self.pre_net = PreNet(embed_dims, fc1_dims=prenet_dims[0], fc2_dims=prenet_dims[1],\n                              dropout=dropout)\n        #PreNet表示的是两个全连接层\n        self.cbhg = CBHG(K=K, in_channels=cbhg_channels, channels=cbhg_channels,\n                         proj_channels=[cbhg_channels, cbhg_channels],\n                         num_highways=num_highways)\n    def forward(self, x, speaker_embedding=None):\n        x = self.embedding(x)\n        x = self.pre_net(x)\n        x.transpose_(1, 2)\n        x = self.cbhg(x)\n        if speaker_embedding is not None:\n            # 加入说话人嵌入向量\n            x = self.add_speaker_embedding(x, speaker_embedding)\n        return x\n    \n        def add_speaker_embedding(self, x, speaker_embedding):\n        # SV2TTS的主要贡献\n        # The input x is the encoder output and is a 3D tensor with size (batch_size, num_chars, tts_embed_dims)\n        # When training, speaker_embedding is also a 2D tensor with size (batch_size, speaker_embedding_size)\n        #     (for inference, speaker_embedding is a 1D tensor with size (speaker_embedding_size))\n        # This concats the speaker embedding for each char in the encoder output\n \n        # Save the dimensions as human-readable names\n        batch_size = x.size()[0]\n        num_chars = x.size()[1]\n \n        if speaker_embedding.dim() == 1:\n            idx = 0\n        else:\n            idx = 1\n \n        # Start by making a copy of each speaker embedding to match the input text length\n        # The output of this has size (batch_size, num_chars * speaker_embedding_size)\n        speaker_embedding_size = speaker_embedding.size()[idx]\n        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)\n \n        # Reshape it and transpose\n        e = e.reshape(batch_size, speaker_embedding_size, num_chars)\n        e = e.transpose(1, 2)\n \n        # Concatenate the tiled speaker embedding with the encoder output\n        x = torch.cat((x, e), 2)\n        return x\n```\n\n\n\n##### 1.2.3 自回归声码器waveNet\n\n　　声码器网络，其将mel频谱图转换成时域波形。\n\n### 2. [ECAPA-TDNN for Multi-speaker Text-to-speech Synthesis](https://arxiv.org/pdf/2203.10473)\n\n#### 2.1 论文内容\n\n　　在FastSpeech2中加入ECAPA-TDNN(进化版x-vector)进行个性化训练\n\n#### 2.2 模型结构\n\n![ECAPA-TTS模型结构](http://pic.panjiangtao.cn/img/image-20220419204836223.png)\n\n##### 2.2.1 多说话人编码—ECAPA网络\n\n　　使用[ECAPA模型](https://arxiv.org/pdf/2005.07143)进行说话人嵌入生成，模型聚类效果如下，使用VoxCeleb2数据集进行训练，取得很好的效果。\n\n![ecapa说话人聚类](http://pic.panjiangtao.cn/img/ecapa说话人聚类.png)\n\n　　模型结构：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220422133618465.png\" alt=\" ECAPA-TDNN结构\" style=\"zoom: 50%;\" />\n\n模型框架代码：\n\n```python\nclass ECAPA_TDNN(torch.nn.Module):\n    def __init__(self,input_size,device=\"cpu\",lin_neurons=192,activation=torch.nn.ReLU,\n                 channels=[512, 512, 512, 512, 1536],kernel_sizes=[5, 3, 3, 3,1],\n                 dilations=[1, 2, 3, 4, 1],attention_channels=128,res2net_scale=8,\n                 se_channels=128,global_context=True,groups=[1, 1, 1, 1, 1],\n    ):\n        super().__init__()\n        assert len(channels) == len(kernel_sizes)\n        assert len(channels) == len(dilations)\n        self.channels = channels\n        self.blocks = nn.ModuleList()\n        # The initial TDNN layer\n        self.blocks.append(TDNNBlock(input_size,channels[0],kernel_sizes[0],\n                                     dilations[0],activation,groups[0],))\n        # SE-Res2Net layers\n        for i in range(1, len(channels) - 1):\n            self.blocks.append(SERes2NetBlock(channels[i - 1],channels[i],\n                    res2net_scale=res2net_scale,se_channels=se_channels,\n                    kernel_size=kernel_sizes[i],dilation=dilations[i],\n                    activation=activation,groups=groups[i],))\n\n        # Multi-layer feature aggregation\n        self.mfa = TDNNBlock(channels[-1],channels[-1],kernel_sizes[-1],dilations[-1],\n            activation,groups=groups[-1],)\n\n        # Attentive Statistical Pooling\n        self.asp = AttentiveStatisticsPooling(channels[-1],\n            attention_channels=attention_channels,global_context=global_context,)\n        self.asp_bn = BatchNorm1d(input_size=channels[-1] * 2)\n\n        # Final linear transformation\n        self.fc = Conv1d(in_channels=channels[-1] * 2,out_channels=lin_neurons,\n            kernel_size=1,)\n\n    def forward(self, x, lengths=None):\n        \"\"\"Returns the embedding vector.\n        Arguments\n        ---------\n        x : torch.Tensor\n            Tensor of shape (batch, time, channel).\n        \"\"\"\n        # Minimize transpose for efficiency\n        x = x.transpose(1, 2)\n\n        xl = []\n        for layer in self.blocks:\n            try:\n                x = layer(x, lengths=lengths)\n            except TypeError:\n                x = layer(x)\n            xl.append(x)\n\n        # Multi-layer feature aggregation\n        x = torch.cat(xl[1:], dim=1)\n        x = self.mfa(x)\n\n        # Attentive Statistical Pooling\n        x = self.asp(x, lengths=lengths)\n        x = self.asp_bn(x)\n\n        # Final linear transformation\n        x = self.fc(x)\n\n        x = x.transpose(1, 2)\n        return x\n```\n\n\n\n其中，SE-Res2Block的结构为：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220422134136052.png\" alt=\"SE-Res2Block\" style=\"zoom: 50%;\" />\n\n##### 2.2.2 在Fastspeech2中加入说话人嵌入向量\n\n　　将说话人嵌入向量在音素编码后与其进行叠加，再输入方差适配器中。\n\n```python\nclass FastSpeech2(nn.Module):\t\t\n    def __init__(self, preprocess_config, model_config):\n      \t\"\"\"\n      \t\"\"\"\n        self.speaker_emb = SpeakerEmbedding(model_config)\n    def forward()\n    \t\"\"\"\n    \t\"\"\"\n    \tif self.speaker_emb is not None:\n            spker_embed=self.speaker_emb(spker_embed)\n            # speaker_classifier_output_1 = self.speaker_classifier_1(spker_embed)\n            output=output+self.add_speaker_embedding(output,spker_embed)\n    def add_speaker_embedding(self, x, speaker_embedding):\n        # 将speaker_embedding处理后与x相同维度\n        batch_size = x.size()[0]\n        num_chars = x.size()[1]\n\n        if speaker_embedding.dim() == 1:\n            idx = 0\n        else:\n            idx = 1\n        speaker_embedding_size = speaker_embedding.size()[idx]\n        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)\n\n        e = e.reshape(batch_size, speaker_embedding_size, num_chars)\n        e = e.transpose(1, 2)\n\n        return e\n\nclass SpeakerEmbedding(nn.Module):\n    def __init__(self, model_config):\n        super(SpeakerEmbedding, self).__init__()\n        assert model_config[\"multi_speaker\"] == True\n        self.hidden_size = model_config[\"speaker_embedding\"][\"embedding_model\"][\"lin_neurons\"]\n        self.embedding_size = model_config[\"speaker_embedding\"][\"embedding_size\"]\n        self.speaker_emb = nn.Linear(self.hidden_size,self.embedding_size)     \n        self.norm=nn.LayerNorm(self.embedding_size)\n\n    def forward(self, spker_embeds):\n        speaker_emb = self.speaker_emb(spker_embeds)\n        speaker_emb = self.norm(speaker_emb)\n        return speaker_emb\n```\n\n#### 2.3 模型训练效果\n\n　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220427171316769.png\" alt=\"Fastspeech-ECAPA训练效果\" style=\"zoom:50%;\" />\n\n　　缺点：对**未可见的说话人**来说个性化合成的效果较差。\n\n### 3.Meta-TTS: Meta-Learning for Few-Shot Speaker Adaptive Text-to-Speech\n{% note info %}\n论文地址：[Meta-TTS](https://arxiv.org/pdf/2111.04040)\n代码仓库：[Meta-TTS](https://github.com/SungFeng-Huang/Meta-TTS/)\n{% endnote %}\n\n#### 3.1 论文内容\n\n　　本文将**元学习**（meta-learning）技术应用到说话人自适应方法当中。提出Model Agnostic Meta-Learning （MAML）算法来训练多说话人TTS模型，使得模型可以找到一个合适的元初始状态（meta-initialization）以便其快速地适应到任意少样本说话人。因此，我们可以将使用元学习算法训练好的TTS模型**对unseen speaker进行高效的适应**。\n\n#### 3.2 模型结构\n\n##### 3.2.1 基于d-vector的Fastspeech2\n\n　　本文在Fastspeech2模型的基础上加入d-vector说话人嵌入，将该嵌入分别在音素编码后、梅尔频谱解码前加入到数据中，如下图所示。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505191349282.png\" alt=\"多说话人嵌入Fastspeech2模型结构\" style=\"zoom:50%;\" />\n\n　　修改后的模型代码如下所示：\n\n```python\nclass Fastspeech2(nn.module):\n    def forward(self,batch):\n    \toutput = self.encoder(texts, src_masks)\n        if self.speaker_emb is not None:\n            output = output + self.speaker_emb(spker_embed).unsqueeze(1).expand(\n                -1, max_src_len, -1)\n            \n        (output,p_predictions,e_predictions,log_d_predictions,d_rounded,mel_lens,mel_masks) = \t\t\t       \t\t\tself.variance_adaptor(output,src_masks,mel_masks,max_mel_len,p_targets,\\\n            e_targets,d_targets,p_control,e_control,d_control)\n        \n        if self.speaker_emb is not None:\n            output = output + self.speaker_emb(spker_embed).unsqueeze(1).expand(\n                -1, max(mel_lens), -1)\n            \n        output, mel_masks = self.decoder(output, mel_masks)\n        output = self.mel_linear(output)\n        postnet_output = self.postnet(output) + output\n```\n\n##### 3.2.2 模型训练过程\n\n　　本文研究对象为K-shot语音克隆任务，我们需要从多说话人语音合成数据库中构建一系列的meta-tasks。每一个meta-task的support set和query set均包含相同说话人的K个样本和Q个样本。在训练阶段，我们设置K=Q，在模型推理阶段，我们设置Q=1。\n\n　　为了生成meta-task，我们先从语音合成数据中采用一个说话人，之后针对该说话人随机选择2K个语音样本，其中K个分配到support set，另外K个分配到query set。\n\n　　在使用MAML算法训练多说话人FastSpeech2模型时，在内循环自适应阶段，文本编码器的参数保持固定不变，只微调说话人嵌入、变量适配器和解码器的参数。meta-training训练流程如下图所示。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505194827685.png\" alt=\"meta-TTS训练流\" style=\"zoom:50%;\" />\n\n##### 3.2.3 基于元学习的模型训练\n\n　　为了加速说话人自适应方法的训练，我们提出了基于meta-learning的说话人自适应训练方法。Model-Agnostic Meta-Learning （MAML）算法是一个经典的meta-learning算法，其目的是为快速自适应找到合适的参数初始化状态。MAML包含两层优化循环操作：外循环（outer loop）和内循环（inner loop）。外循环目的是找到一个元初始化状态（meta-initialization），之后内循环可以在此基础上基于少量样本快速适应到新任务中。\n\n<img src=\"http://pic.panjiangtao.cn/img/640\" alt=\"元学习过程\" style=\"zoom:67%;\" />\n\n　　假定我们将要在一个K-shot回归下游任务上评价模型效果，MAML会基于训练数据生成一系列K-shot回归训练任务，其中每个任务被称作一个适用于元学习的“meta-task”。每个任务包含一个含有K个样本的supprt set，以及一个含有Q个样本的query set。每个任务的学习目标都是基于support set学习任务相关的模型参数（内循环，inner loop）。MAML的目标就是学习meta-initialization参数，每个meta-task都可以基于该参数得到表现不错的任务自适应参数（外循环，outer loop）。这一优化过程称为“meta-update”。\n\n#### 3.3 模型效果\n\n##### 3.3.1 训练损失效果\n\n　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示，由于加入两段说话人嵌入，因此损失波动较大：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505192410237.png\" alt=\"训练效果\" style=\"zoom:40%;\" />\n\n##### 3.3.2 模型合成效果\n\n　　模型训练2000步至2000000步后，合成后的mel频谱图变化如下两张图所示\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505193143278.png\" alt=\"step-2000\" style=\"zoom: 50%;\" /><img src=\"http://pic.panjiangtao.cn/img/image-20220505193056377.png\" alt=\"step-2000000\" style=\"zoom:56%;\" />\n\n\n\n","source":"_posts/TTS-adapitve-TTS.md","raw":"---\ntitle: 多说话人自适应合成\ncopyright: True\ndate: 2022-05-05 19:58:13\ntags: TTS\ncategories:\n- TTS\n- Adaptive TTS\n---\n## 多说话人自适应合成\n\n　　本文介绍了三篇自适应多说话人语音合成论文及代码分析。\n<!-- more -->\n### 1. [Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis](https://arxiv.org/pdf/1806.04558)\n{% note info %}\ngithub源码:[Real-Time-Voice-Cloning](https://github.com/CorentinJ/Real-Time-Voice-Cloning)\ndemo演示:[SV2TTS 说话人音色语音合成演示](http://www.panjiangtao.cn/SV2TTS/)\n{% endnote %}\n\n#### 1.1 论文内容\n\n　　在tacotron2中加入d-vector向量进行个性化指定说话人语音合成\n\n　　d-vector：将指定说话人的一句语音输入一个DNN网络，获取其最后一个隐藏层的输出，用在说话人识别领域\n\n##### 推理过程：\n\n①选择编码器将语音的文本内容进行编码。得到一个向量。\n\n②将目标人的音色（声音）进行编码或者处理成向量。\n\n③将上面的两种向量在某一种维度上进行拼接得到更长的向量（一般为2倍的长度）在通过解码器进行解码成一个语音信息（并不是最终的），之后经过相应的处理得到真正的语音。整个过程就是模型的推理过程。\n\n#### 1.2 模型结构\n\n![SV2TTS模型](http://pic.panjiangtao.cn/img/image-20220419204452965.png)\n\n##### 1.2.1 说话人编码器网络(提取说话人特征)\n\n　　使用独立的噪声语音数据集进行说话人验证任务的训练，从来自目标说话人几秒钟的参考语音中生成固定维度的**嵌入向量**(说话人语音特征)，该向量称为d-vector\n\n　　训练TTS时使用说话人编码器的预训练模型。\n\n　　模型结构如下，使用一个多层LSTM、线性层和ReLU层。\n\n```python\nclass SpeakerEncoder(nn.Module):\n    def __init__(self, device, loss_device):\n        super().__init__()\n        self.loss_device = loss_device\n        \n        # Network defition\n        self.lstm = nn.LSTM(input_size=mel_n_channels,\n                            hidden_size=model_hidden_size, \n                            num_layers=model_num_layers, \n                            batch_first=True).to(device)\n        self.linear = nn.Linear(in_features=model_hidden_size, \n                                out_features=model_embedding_size).to(device)\n        self.relu = torch.nn.ReLU().to(device)\n        \n        # Cosine similarity scaling (with fixed initial parameter values)\n        self.similarity_weight = nn.Parameter(torch.tensor([10.])).to(loss_device)\n        self.similarity_bias = nn.Parameter(torch.tensor([-5.])).to(loss_device)\n\n        # Loss\n        self.loss_fn = nn.CrossEntropyLoss().to(loss_device)\n        \n    def do_gradient_ops(self):\n        # Gradient scale\n        self.similarity_weight.grad *= 0.01\n        self.similarity_bias.grad *= 0.01\n            \n        # Gradient clipping\n        clip_grad_norm_(self.parameters(), 3, norm_type=2)\n    \n    def forward(self, utterances, hidden_init=None):\n        \"\"\"\n        Computes the embeddings of a batch of utterance spectrograms.\n        \n        :param utterances: batch of mel-scale filterbanks of same duration as a tensor of shape \n        (batch_size, n_frames, n_channels) \n        :param hidden_init: initial hidden state of the LSTM as a tensor of shape (num_layers, \n        batch_size, hidden_size). Will default to a tensor of zeros if None.\n        :return: the embeddings as a tensor of shape (batch_size, embedding_size)\n        \"\"\"\n        # Pass the input through the LSTM layers and retrieve all outputs, the final hidden state\n        # and the final cell state.\n        out, (hidden, cell) = self.lstm(utterances, hidden_init)\n        \n        # We take only the hidden state of the last layer\n        embeds_raw = self.relu(self.linear(hidden[-1]))\n        \n        # L2-normalize it\n        embeds = embeds_raw / (torch.norm(embeds_raw, dim=1, keepdim=True) + 1e-5)        \n\n        return embeds\n```\n\n\n\n##### d-vector聚类效果\n\n　　预训练模型的聚类效果如下，使用TIMIT数据集进行训练，可能是训练数据较少，效果较差。\n\n<img src=\"http://pic.panjiangtao.cn/img/D-vector说话人聚类.png\" alt=\"D-vector说话人聚类\" style=\"zoom:67%;\" />\n\n##### 1.2.2 基于Tacotron 2的序列到序列合成网络\n\n　　只需将说话人嵌入向量传递到注意力层，就可以在不同的说话人之间汇聚。其基于说话者嵌入从文本生成mel谱图；\n\n　　文本编码后加入说话人嵌入向量代码：\n\n```python\nclass Encoder(nn.Module):\n    def __init__(self, embed_dims, num_chars, encoder_dims, K, num_highways, dropout):\n        super().__init__()\n        prenet_dims = (encoder_dims, encoder_dims)\n        cbhg_channels = encoder_dims\n        self.embedding = nn.Embedding(num_chars, embed_dims)\n        self.pre_net = PreNet(embed_dims, fc1_dims=prenet_dims[0], fc2_dims=prenet_dims[1],\n                              dropout=dropout)\n        #PreNet表示的是两个全连接层\n        self.cbhg = CBHG(K=K, in_channels=cbhg_channels, channels=cbhg_channels,\n                         proj_channels=[cbhg_channels, cbhg_channels],\n                         num_highways=num_highways)\n    def forward(self, x, speaker_embedding=None):\n        x = self.embedding(x)\n        x = self.pre_net(x)\n        x.transpose_(1, 2)\n        x = self.cbhg(x)\n        if speaker_embedding is not None:\n            # 加入说话人嵌入向量\n            x = self.add_speaker_embedding(x, speaker_embedding)\n        return x\n    \n        def add_speaker_embedding(self, x, speaker_embedding):\n        # SV2TTS的主要贡献\n        # The input x is the encoder output and is a 3D tensor with size (batch_size, num_chars, tts_embed_dims)\n        # When training, speaker_embedding is also a 2D tensor with size (batch_size, speaker_embedding_size)\n        #     (for inference, speaker_embedding is a 1D tensor with size (speaker_embedding_size))\n        # This concats the speaker embedding for each char in the encoder output\n \n        # Save the dimensions as human-readable names\n        batch_size = x.size()[0]\n        num_chars = x.size()[1]\n \n        if speaker_embedding.dim() == 1:\n            idx = 0\n        else:\n            idx = 1\n \n        # Start by making a copy of each speaker embedding to match the input text length\n        # The output of this has size (batch_size, num_chars * speaker_embedding_size)\n        speaker_embedding_size = speaker_embedding.size()[idx]\n        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)\n \n        # Reshape it and transpose\n        e = e.reshape(batch_size, speaker_embedding_size, num_chars)\n        e = e.transpose(1, 2)\n \n        # Concatenate the tiled speaker embedding with the encoder output\n        x = torch.cat((x, e), 2)\n        return x\n```\n\n\n\n##### 1.2.3 自回归声码器waveNet\n\n　　声码器网络，其将mel频谱图转换成时域波形。\n\n### 2. [ECAPA-TDNN for Multi-speaker Text-to-speech Synthesis](https://arxiv.org/pdf/2203.10473)\n\n#### 2.1 论文内容\n\n　　在FastSpeech2中加入ECAPA-TDNN(进化版x-vector)进行个性化训练\n\n#### 2.2 模型结构\n\n![ECAPA-TTS模型结构](http://pic.panjiangtao.cn/img/image-20220419204836223.png)\n\n##### 2.2.1 多说话人编码—ECAPA网络\n\n　　使用[ECAPA模型](https://arxiv.org/pdf/2005.07143)进行说话人嵌入生成，模型聚类效果如下，使用VoxCeleb2数据集进行训练，取得很好的效果。\n\n![ecapa说话人聚类](http://pic.panjiangtao.cn/img/ecapa说话人聚类.png)\n\n　　模型结构：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220422133618465.png\" alt=\" ECAPA-TDNN结构\" style=\"zoom: 50%;\" />\n\n模型框架代码：\n\n```python\nclass ECAPA_TDNN(torch.nn.Module):\n    def __init__(self,input_size,device=\"cpu\",lin_neurons=192,activation=torch.nn.ReLU,\n                 channels=[512, 512, 512, 512, 1536],kernel_sizes=[5, 3, 3, 3,1],\n                 dilations=[1, 2, 3, 4, 1],attention_channels=128,res2net_scale=8,\n                 se_channels=128,global_context=True,groups=[1, 1, 1, 1, 1],\n    ):\n        super().__init__()\n        assert len(channels) == len(kernel_sizes)\n        assert len(channels) == len(dilations)\n        self.channels = channels\n        self.blocks = nn.ModuleList()\n        # The initial TDNN layer\n        self.blocks.append(TDNNBlock(input_size,channels[0],kernel_sizes[0],\n                                     dilations[0],activation,groups[0],))\n        # SE-Res2Net layers\n        for i in range(1, len(channels) - 1):\n            self.blocks.append(SERes2NetBlock(channels[i - 1],channels[i],\n                    res2net_scale=res2net_scale,se_channels=se_channels,\n                    kernel_size=kernel_sizes[i],dilation=dilations[i],\n                    activation=activation,groups=groups[i],))\n\n        # Multi-layer feature aggregation\n        self.mfa = TDNNBlock(channels[-1],channels[-1],kernel_sizes[-1],dilations[-1],\n            activation,groups=groups[-1],)\n\n        # Attentive Statistical Pooling\n        self.asp = AttentiveStatisticsPooling(channels[-1],\n            attention_channels=attention_channels,global_context=global_context,)\n        self.asp_bn = BatchNorm1d(input_size=channels[-1] * 2)\n\n        # Final linear transformation\n        self.fc = Conv1d(in_channels=channels[-1] * 2,out_channels=lin_neurons,\n            kernel_size=1,)\n\n    def forward(self, x, lengths=None):\n        \"\"\"Returns the embedding vector.\n        Arguments\n        ---------\n        x : torch.Tensor\n            Tensor of shape (batch, time, channel).\n        \"\"\"\n        # Minimize transpose for efficiency\n        x = x.transpose(1, 2)\n\n        xl = []\n        for layer in self.blocks:\n            try:\n                x = layer(x, lengths=lengths)\n            except TypeError:\n                x = layer(x)\n            xl.append(x)\n\n        # Multi-layer feature aggregation\n        x = torch.cat(xl[1:], dim=1)\n        x = self.mfa(x)\n\n        # Attentive Statistical Pooling\n        x = self.asp(x, lengths=lengths)\n        x = self.asp_bn(x)\n\n        # Final linear transformation\n        x = self.fc(x)\n\n        x = x.transpose(1, 2)\n        return x\n```\n\n\n\n其中，SE-Res2Block的结构为：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220422134136052.png\" alt=\"SE-Res2Block\" style=\"zoom: 50%;\" />\n\n##### 2.2.2 在Fastspeech2中加入说话人嵌入向量\n\n　　将说话人嵌入向量在音素编码后与其进行叠加，再输入方差适配器中。\n\n```python\nclass FastSpeech2(nn.Module):\t\t\n    def __init__(self, preprocess_config, model_config):\n      \t\"\"\"\n      \t\"\"\"\n        self.speaker_emb = SpeakerEmbedding(model_config)\n    def forward()\n    \t\"\"\"\n    \t\"\"\"\n    \tif self.speaker_emb is not None:\n            spker_embed=self.speaker_emb(spker_embed)\n            # speaker_classifier_output_1 = self.speaker_classifier_1(spker_embed)\n            output=output+self.add_speaker_embedding(output,spker_embed)\n    def add_speaker_embedding(self, x, speaker_embedding):\n        # 将speaker_embedding处理后与x相同维度\n        batch_size = x.size()[0]\n        num_chars = x.size()[1]\n\n        if speaker_embedding.dim() == 1:\n            idx = 0\n        else:\n            idx = 1\n        speaker_embedding_size = speaker_embedding.size()[idx]\n        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)\n\n        e = e.reshape(batch_size, speaker_embedding_size, num_chars)\n        e = e.transpose(1, 2)\n\n        return e\n\nclass SpeakerEmbedding(nn.Module):\n    def __init__(self, model_config):\n        super(SpeakerEmbedding, self).__init__()\n        assert model_config[\"multi_speaker\"] == True\n        self.hidden_size = model_config[\"speaker_embedding\"][\"embedding_model\"][\"lin_neurons\"]\n        self.embedding_size = model_config[\"speaker_embedding\"][\"embedding_size\"]\n        self.speaker_emb = nn.Linear(self.hidden_size,self.embedding_size)     \n        self.norm=nn.LayerNorm(self.embedding_size)\n\n    def forward(self, spker_embeds):\n        speaker_emb = self.speaker_emb(spker_embeds)\n        speaker_emb = self.norm(speaker_emb)\n        return speaker_emb\n```\n\n#### 2.3 模型训练效果\n\n　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220427171316769.png\" alt=\"Fastspeech-ECAPA训练效果\" style=\"zoom:50%;\" />\n\n　　缺点：对**未可见的说话人**来说个性化合成的效果较差。\n\n### 3.Meta-TTS: Meta-Learning for Few-Shot Speaker Adaptive Text-to-Speech\n{% note info %}\n论文地址：[Meta-TTS](https://arxiv.org/pdf/2111.04040)\n代码仓库：[Meta-TTS](https://github.com/SungFeng-Huang/Meta-TTS/)\n{% endnote %}\n\n#### 3.1 论文内容\n\n　　本文将**元学习**（meta-learning）技术应用到说话人自适应方法当中。提出Model Agnostic Meta-Learning （MAML）算法来训练多说话人TTS模型，使得模型可以找到一个合适的元初始状态（meta-initialization）以便其快速地适应到任意少样本说话人。因此，我们可以将使用元学习算法训练好的TTS模型**对unseen speaker进行高效的适应**。\n\n#### 3.2 模型结构\n\n##### 3.2.1 基于d-vector的Fastspeech2\n\n　　本文在Fastspeech2模型的基础上加入d-vector说话人嵌入，将该嵌入分别在音素编码后、梅尔频谱解码前加入到数据中，如下图所示。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505191349282.png\" alt=\"多说话人嵌入Fastspeech2模型结构\" style=\"zoom:50%;\" />\n\n　　修改后的模型代码如下所示：\n\n```python\nclass Fastspeech2(nn.module):\n    def forward(self,batch):\n    \toutput = self.encoder(texts, src_masks)\n        if self.speaker_emb is not None:\n            output = output + self.speaker_emb(spker_embed).unsqueeze(1).expand(\n                -1, max_src_len, -1)\n            \n        (output,p_predictions,e_predictions,log_d_predictions,d_rounded,mel_lens,mel_masks) = \t\t\t       \t\t\tself.variance_adaptor(output,src_masks,mel_masks,max_mel_len,p_targets,\\\n            e_targets,d_targets,p_control,e_control,d_control)\n        \n        if self.speaker_emb is not None:\n            output = output + self.speaker_emb(spker_embed).unsqueeze(1).expand(\n                -1, max(mel_lens), -1)\n            \n        output, mel_masks = self.decoder(output, mel_masks)\n        output = self.mel_linear(output)\n        postnet_output = self.postnet(output) + output\n```\n\n##### 3.2.2 模型训练过程\n\n　　本文研究对象为K-shot语音克隆任务，我们需要从多说话人语音合成数据库中构建一系列的meta-tasks。每一个meta-task的support set和query set均包含相同说话人的K个样本和Q个样本。在训练阶段，我们设置K=Q，在模型推理阶段，我们设置Q=1。\n\n　　为了生成meta-task，我们先从语音合成数据中采用一个说话人，之后针对该说话人随机选择2K个语音样本，其中K个分配到support set，另外K个分配到query set。\n\n　　在使用MAML算法训练多说话人FastSpeech2模型时，在内循环自适应阶段，文本编码器的参数保持固定不变，只微调说话人嵌入、变量适配器和解码器的参数。meta-training训练流程如下图所示。\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505194827685.png\" alt=\"meta-TTS训练流\" style=\"zoom:50%;\" />\n\n##### 3.2.3 基于元学习的模型训练\n\n　　为了加速说话人自适应方法的训练，我们提出了基于meta-learning的说话人自适应训练方法。Model-Agnostic Meta-Learning （MAML）算法是一个经典的meta-learning算法，其目的是为快速自适应找到合适的参数初始化状态。MAML包含两层优化循环操作：外循环（outer loop）和内循环（inner loop）。外循环目的是找到一个元初始化状态（meta-initialization），之后内循环可以在此基础上基于少量样本快速适应到新任务中。\n\n<img src=\"http://pic.panjiangtao.cn/img/640\" alt=\"元学习过程\" style=\"zoom:67%;\" />\n\n　　假定我们将要在一个K-shot回归下游任务上评价模型效果，MAML会基于训练数据生成一系列K-shot回归训练任务，其中每个任务被称作一个适用于元学习的“meta-task”。每个任务包含一个含有K个样本的supprt set，以及一个含有Q个样本的query set。每个任务的学习目标都是基于support set学习任务相关的模型参数（内循环，inner loop）。MAML的目标就是学习meta-initialization参数，每个meta-task都可以基于该参数得到表现不错的任务自适应参数（外循环，outer loop）。这一优化过程称为“meta-update”。\n\n#### 3.3 模型效果\n\n##### 3.3.1 训练损失效果\n\n　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示，由于加入两段说话人嵌入，因此损失波动较大：\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505192410237.png\" alt=\"训练效果\" style=\"zoom:40%;\" />\n\n##### 3.3.2 模型合成效果\n\n　　模型训练2000步至2000000步后，合成后的mel频谱图变化如下两张图所示\n\n<img src=\"http://pic.panjiangtao.cn/img/image-20220505193143278.png\" alt=\"step-2000\" style=\"zoom: 50%;\" /><img src=\"http://pic.panjiangtao.cn/img/image-20220505193056377.png\" alt=\"step-2000000\" style=\"zoom:56%;\" />\n\n\n\n","slug":"TTS-adapitve-TTS","published":1,"updated":"2022-05-05T12:03:01.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0g2000oc8pv0mnq27um","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"多说话人自适应合成\"><a href=\"#多说话人自适应合成\" class=\"headerlink\" title=\"多说话人自适应合成\"></a>多说话人自适应合成</h2><p>　　本文介绍了三篇自适应多说话人语音合成论文及代码分析。<br><a id=\"more\"></a></p>\n<h3 id=\"1-Transfer-Learning-from-Speaker-Verification-to-Multispeaker-Text-To-Speech-Synthesis\"><a href=\"#1-Transfer-Learning-from-Speaker-Verification-to-Multispeaker-Text-To-Speech-Synthesis\" class=\"headerlink\" title=\"1. Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis\"></a>1. <a href=\"https://arxiv.org/pdf/1806.04558\">Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis</a></h3><div class=\"note info\">\n            <p>github源码:<a href=\"https://github.com/CorentinJ/Real-Time-Voice-Cloning\">Real-Time-Voice-Cloning</a><br>demo演示:<a href=\"http://www.panjiangtao.cn/SV2TTS/\">SV2TTS 说话人音色语音合成演示</a></p>\n          </div>\n<h4 id=\"1-1-论文内容\"><a href=\"#1-1-论文内容\" class=\"headerlink\" title=\"1.1 论文内容\"></a>1.1 论文内容</h4><p>　　在tacotron2中加入d-vector向量进行个性化指定说话人语音合成</p>\n<p>　　d-vector：将指定说话人的一句语音输入一个DNN网络，获取其最后一个隐藏层的输出，用在说话人识别领域</p>\n<h5 id=\"推理过程：\"><a href=\"#推理过程：\" class=\"headerlink\" title=\"推理过程：\"></a>推理过程：</h5><p>①选择编码器将语音的文本内容进行编码。得到一个向量。</p>\n<p>②将目标人的音色（声音）进行编码或者处理成向量。</p>\n<p>③将上面的两种向量在某一种维度上进行拼接得到更长的向量（一般为2倍的长度）在通过解码器进行解码成一个语音信息（并不是最终的），之后经过相应的处理得到真正的语音。整个过程就是模型的推理过程。</p>\n<h4 id=\"1-2-模型结构\"><a href=\"#1-2-模型结构\" class=\"headerlink\" title=\"1.2 模型结构\"></a>1.2 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/img/image-20220419204452965.png\" alt=\"SV2TTS模型\"></p>\n<h5 id=\"1-2-1-说话人编码器网络-提取说话人特征\"><a href=\"#1-2-1-说话人编码器网络-提取说话人特征\" class=\"headerlink\" title=\"1.2.1 说话人编码器网络(提取说话人特征)\"></a>1.2.1 说话人编码器网络(提取说话人特征)</h5><p>　　使用独立的噪声语音数据集进行说话人验证任务的训练，从来自目标说话人几秒钟的参考语音中生成固定维度的<strong>嵌入向量</strong>(说话人语音特征)，该向量称为d-vector</p>\n<p>　　训练TTS时使用说话人编码器的预训练模型。</p>\n<p>　　模型结构如下，使用一个多层LSTM、线性层和ReLU层。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpeakerEncoder</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, device, loss_device</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        self.loss_device = loss_device</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Network defition</span></span><br><span class=\"line\">        self.lstm = nn.LSTM(input_size=mel_n_channels,</span><br><span class=\"line\">                            hidden_size=model_hidden_size, </span><br><span class=\"line\">                            num_layers=model_num_layers, </span><br><span class=\"line\">                            batch_first=<span class=\"literal\">True</span>).to(device)</span><br><span class=\"line\">        self.linear = nn.Linear(in_features=model_hidden_size, </span><br><span class=\"line\">                                out_features=model_embedding_size).to(device)</span><br><span class=\"line\">        self.relu = torch.nn.ReLU().to(device)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Cosine similarity scaling (with fixed initial parameter values)</span></span><br><span class=\"line\">        self.similarity_weight = nn.Parameter(torch.tensor([<span class=\"number\">10.</span>])).to(loss_device)</span><br><span class=\"line\">        self.similarity_bias = nn.Parameter(torch.tensor([<span class=\"number\">-5.</span>])).to(loss_device)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Loss</span></span><br><span class=\"line\">        self.loss_fn = nn.CrossEntropyLoss().to(loss_device)</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_gradient_ops</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># Gradient scale</span></span><br><span class=\"line\">        self.similarity_weight.grad *= <span class=\"number\">0.01</span></span><br><span class=\"line\">        self.similarity_bias.grad *= <span class=\"number\">0.01</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"comment\"># Gradient clipping</span></span><br><span class=\"line\">        clip_grad_norm_(self.parameters(), <span class=\"number\">3</span>, norm_type=<span class=\"number\">2</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, utterances, hidden_init=None</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        Computes the embeddings of a batch of utterance spectrograms.</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">        :param utterances: batch of mel-scale filterbanks of same duration as a tensor of shape </span></span><br><span class=\"line\"><span class=\"string\">        (batch_size, n_frames, n_channels) </span></span><br><span class=\"line\"><span class=\"string\">        :param hidden_init: initial hidden state of the LSTM as a tensor of shape (num_layers, </span></span><br><span class=\"line\"><span class=\"string\">        batch_size, hidden_size). Will default to a tensor of zeros if None.</span></span><br><span class=\"line\"><span class=\"string\">        :return: the embeddings as a tensor of shape (batch_size, embedding_size)</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># Pass the input through the LSTM layers and retrieve all outputs, the final hidden state</span></span><br><span class=\"line\">        <span class=\"comment\"># and the final cell state.</span></span><br><span class=\"line\">        out, (hidden, cell) = self.lstm(utterances, hidden_init)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># We take only the hidden state of the last layer</span></span><br><span class=\"line\">        embeds_raw = self.relu(self.linear(hidden[<span class=\"number\">-1</span>]))</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># L2-normalize it</span></span><br><span class=\"line\">        embeds = embeds_raw / (torch.norm(embeds_raw, dim=<span class=\"number\">1</span>, keepdim=<span class=\"literal\">True</span>) + <span class=\"number\">1e-5</span>)        </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> embeds</span><br></pre></td></tr></table></figure>\n<h5 id=\"d-vector聚类效果\"><a href=\"#d-vector聚类效果\" class=\"headerlink\" title=\"d-vector聚类效果\"></a>d-vector聚类效果</h5><p>　　预训练模型的聚类效果如下，使用TIMIT数据集进行训练，可能是训练数据较少，效果较差。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/D-vector说话人聚类.png\" alt=\"D-vector说话人聚类\" style=\"zoom:67%;\"></p>\n<h5 id=\"1-2-2-基于Tacotron-2的序列到序列合成网络\"><a href=\"#1-2-2-基于Tacotron-2的序列到序列合成网络\" class=\"headerlink\" title=\"1.2.2 基于Tacotron 2的序列到序列合成网络\"></a>1.2.2 基于Tacotron 2的序列到序列合成网络</h5><p>　　只需将说话人嵌入向量传递到注意力层，就可以在不同的说话人之间汇聚。其基于说话者嵌入从文本生成mel谱图；</p>\n<p>　　文本编码后加入说话人嵌入向量代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Encoder</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, embed_dims, num_chars, encoder_dims, K, num_highways, dropout</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        prenet_dims = (encoder_dims, encoder_dims)</span><br><span class=\"line\">        cbhg_channels = encoder_dims</span><br><span class=\"line\">        self.embedding = nn.Embedding(num_chars, embed_dims)</span><br><span class=\"line\">        self.pre_net = PreNet(embed_dims, fc1_dims=prenet_dims[<span class=\"number\">0</span>], fc2_dims=prenet_dims[<span class=\"number\">1</span>],</span><br><span class=\"line\">                              dropout=dropout)</span><br><span class=\"line\">        <span class=\"comment\">#PreNet表示的是两个全连接层</span></span><br><span class=\"line\">        self.cbhg = CBHG(K=K, in_channels=cbhg_channels, channels=cbhg_channels,</span><br><span class=\"line\">                         proj_channels=[cbhg_channels, cbhg_channels],</span><br><span class=\"line\">                         num_highways=num_highways)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x, speaker_embedding=None</span>):</span></span><br><span class=\"line\">        x = self.embedding(x)</span><br><span class=\"line\">        x = self.pre_net(x)</span><br><span class=\"line\">        x.transpose_(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        x = self.cbhg(x)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> speaker_embedding <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 加入说话人嵌入向量</span></span><br><span class=\"line\">            x = self.add_speaker_embedding(x, speaker_embedding)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add_speaker_embedding</span>(<span class=\"params\">self, x, speaker_embedding</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># SV2TTS的主要贡献</span></span><br><span class=\"line\">        <span class=\"comment\"># The input x is the encoder output and is a 3D tensor with size (batch_size, num_chars, tts_embed_dims)</span></span><br><span class=\"line\">        <span class=\"comment\"># When training, speaker_embedding is also a 2D tensor with size (batch_size, speaker_embedding_size)</span></span><br><span class=\"line\">        <span class=\"comment\">#     (for inference, speaker_embedding is a 1D tensor with size (speaker_embedding_size))</span></span><br><span class=\"line\">        <span class=\"comment\"># This concats the speaker embedding for each char in the encoder output</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Save the dimensions as human-readable names</span></span><br><span class=\"line\">        batch_size = x.size()[<span class=\"number\">0</span>]</span><br><span class=\"line\">        num_chars = x.size()[<span class=\"number\">1</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span> speaker_embedding.dim() == <span class=\"number\">1</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Start by making a copy of each speaker embedding to match the input text length</span></span><br><span class=\"line\">        <span class=\"comment\"># The output of this has size (batch_size, num_chars * speaker_embedding_size)</span></span><br><span class=\"line\">        speaker_embedding_size = speaker_embedding.size()[idx]</span><br><span class=\"line\">        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Reshape it and transpose</span></span><br><span class=\"line\">        e = e.reshape(batch_size, speaker_embedding_size, num_chars)</span><br><span class=\"line\">        e = e.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Concatenate the tiled speaker embedding with the encoder output</span></span><br><span class=\"line\">        x = torch.cat((x, e), <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-2-3-自回归声码器waveNet\"><a href=\"#1-2-3-自回归声码器waveNet\" class=\"headerlink\" title=\"1.2.3 自回归声码器waveNet\"></a>1.2.3 自回归声码器waveNet</h5><p>　　声码器网络，其将mel频谱图转换成时域波形。</p>\n<h3 id=\"2-ECAPA-TDNN-for-Multi-speaker-Text-to-speech-Synthesis\"><a href=\"#2-ECAPA-TDNN-for-Multi-speaker-Text-to-speech-Synthesis\" class=\"headerlink\" title=\"2. ECAPA-TDNN for Multi-speaker Text-to-speech Synthesis\"></a>2. <a href=\"https://arxiv.org/pdf/2203.10473\">ECAPA-TDNN for Multi-speaker Text-to-speech Synthesis</a></h3><h4 id=\"2-1-论文内容\"><a href=\"#2-1-论文内容\" class=\"headerlink\" title=\"2.1 论文内容\"></a>2.1 论文内容</h4><p>　　在FastSpeech2中加入ECAPA-TDNN(进化版x-vector)进行个性化训练</p>\n<h4 id=\"2-2-模型结构\"><a href=\"#2-2-模型结构\" class=\"headerlink\" title=\"2.2 模型结构\"></a>2.2 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/img/image-20220419204836223.png\" alt=\"ECAPA-TTS模型结构\"></p>\n<h5 id=\"2-2-1-多说话人编码—ECAPA网络\"><a href=\"#2-2-1-多说话人编码—ECAPA网络\" class=\"headerlink\" title=\"2.2.1 多说话人编码—ECAPA网络\"></a>2.2.1 多说话人编码—ECAPA网络</h5><p>　　使用<a href=\"https://arxiv.org/pdf/2005.07143\">ECAPA模型</a>进行说话人嵌入生成，模型聚类效果如下，使用VoxCeleb2数据集进行训练，取得很好的效果。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/ecapa说话人聚类.png\" alt=\"ecapa说话人聚类\"></p>\n<p>　　模型结构：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220422133618465.png\" alt=\" ECAPA-TDNN结构\" style=\"zoom: 50%;\"></p>\n<p>模型框架代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ECAPA_TDNN</span>(<span class=\"params\">torch.nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self,input_size,device=<span class=\"string\">&quot;cpu&quot;</span>,lin_neurons=<span class=\"number\">192</span>,activation=torch.nn.ReLU,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                 channels=[<span class=\"number\">512</span>, <span class=\"number\">512</span>, <span class=\"number\">512</span>, <span class=\"number\">512</span>, <span class=\"number\">1536</span>],kernel_sizes=[<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>,<span class=\"number\">1</span>],</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                 dilations=[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>],attention_channels=<span class=\"number\">128</span>,res2net_scale=<span class=\"number\">8</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                 se_channels=<span class=\"number\">128</span>,global_context=True,groups=[<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    </span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        <span class=\"keyword\">assert</span> len(channels) == len(kernel_sizes)</span><br><span class=\"line\">        <span class=\"keyword\">assert</span> len(channels) == len(dilations)</span><br><span class=\"line\">        self.channels = channels</span><br><span class=\"line\">        self.blocks = nn.ModuleList()</span><br><span class=\"line\">        <span class=\"comment\"># The initial TDNN layer</span></span><br><span class=\"line\">        self.blocks.append(TDNNBlock(input_size,channels[<span class=\"number\">0</span>],kernel_sizes[<span class=\"number\">0</span>],</span><br><span class=\"line\">                                     dilations[<span class=\"number\">0</span>],activation,groups[<span class=\"number\">0</span>],))</span><br><span class=\"line\">        <span class=\"comment\"># SE-Res2Net layers</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(channels) - <span class=\"number\">1</span>):</span><br><span class=\"line\">            self.blocks.append(SERes2NetBlock(channels[i - <span class=\"number\">1</span>],channels[i],</span><br><span class=\"line\">                    res2net_scale=res2net_scale,se_channels=se_channels,</span><br><span class=\"line\">                    kernel_size=kernel_sizes[i],dilation=dilations[i],</span><br><span class=\"line\">                    activation=activation,groups=groups[i],))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Multi-layer feature aggregation</span></span><br><span class=\"line\">        self.mfa = TDNNBlock(channels[<span class=\"number\">-1</span>],channels[<span class=\"number\">-1</span>],kernel_sizes[<span class=\"number\">-1</span>],dilations[<span class=\"number\">-1</span>],</span><br><span class=\"line\">            activation,groups=groups[<span class=\"number\">-1</span>],)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Attentive Statistical Pooling</span></span><br><span class=\"line\">        self.asp = AttentiveStatisticsPooling(channels[<span class=\"number\">-1</span>],</span><br><span class=\"line\">            attention_channels=attention_channels,global_context=global_context,)</span><br><span class=\"line\">        self.asp_bn = BatchNorm1d(input_size=channels[<span class=\"number\">-1</span>] * <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Final linear transformation</span></span><br><span class=\"line\">        self.fc = Conv1d(in_channels=channels[<span class=\"number\">-1</span>] * <span class=\"number\">2</span>,out_channels=lin_neurons,</span><br><span class=\"line\">            kernel_size=<span class=\"number\">1</span>,)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x, lengths=None</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Returns the embedding vector.</span></span><br><span class=\"line\"><span class=\"string\">        Arguments</span></span><br><span class=\"line\"><span class=\"string\">        ---------</span></span><br><span class=\"line\"><span class=\"string\">        x : torch.Tensor</span></span><br><span class=\"line\"><span class=\"string\">            Tensor of shape (batch, time, channel).</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># Minimize transpose for efficiency</span></span><br><span class=\"line\">        x = x.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        xl = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> layer <span class=\"keyword\">in</span> self.blocks:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                x = layer(x, lengths=lengths)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> TypeError:</span><br><span class=\"line\">                x = layer(x)</span><br><span class=\"line\">            xl.append(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Multi-layer feature aggregation</span></span><br><span class=\"line\">        x = torch.cat(xl[<span class=\"number\">1</span>:], dim=<span class=\"number\">1</span>)</span><br><span class=\"line\">        x = self.mfa(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Attentive Statistical Pooling</span></span><br><span class=\"line\">        x = self.asp(x, lengths=lengths)</span><br><span class=\"line\">        x = self.asp_bn(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Final linear transformation</span></span><br><span class=\"line\">        x = self.fc(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        x = x.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br></pre></td></tr></table></figure>\n<p>其中，SE-Res2Block的结构为：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220422134136052.png\" alt=\"SE-Res2Block\" style=\"zoom: 50%;\"></p>\n<h5 id=\"2-2-2-在Fastspeech2中加入说话人嵌入向量\"><a href=\"#2-2-2-在Fastspeech2中加入说话人嵌入向量\" class=\"headerlink\" title=\"2.2.2 在Fastspeech2中加入说话人嵌入向量\"></a>2.2.2 在Fastspeech2中加入说话人嵌入向量</h5><p>　　将说话人嵌入向量在音素编码后与其进行叠加，再输入方差适配器中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FastSpeech2</span>(<span class=\"params\">nn.Module</span>):</span>\t\t</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, preprocess_config, model_config</span>):</span></span><br><span class=\"line\">      \t<span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">      \t&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.speaker_emb = SpeakerEmbedding(model_config)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>()</span></span><br><span class=\"line\"><span class=\"function\">    \t&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"function\">    \t&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"function\">    \t<span class=\"title\">if</span> <span class=\"title\">self</span>.<span class=\"title\">speaker_emb</span> <span class=\"title\">is</span> <span class=\"title\">not</span> <span class=\"title\">None</span>:</span></span><br><span class=\"line\">            spker_embed=self.speaker_emb(spker_embed)</span><br><span class=\"line\">            <span class=\"comment\"># speaker_classifier_output_1 = self.speaker_classifier_1(spker_embed)</span></span><br><span class=\"line\">            output=output+self.add_speaker_embedding(output,spker_embed)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add_speaker_embedding</span>(<span class=\"params\">self, x, speaker_embedding</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 将speaker_embedding处理后与x相同维度</span></span><br><span class=\"line\">        batch_size = x.size()[<span class=\"number\">0</span>]</span><br><span class=\"line\">        num_chars = x.size()[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> speaker_embedding.dim() == <span class=\"number\">1</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">1</span></span><br><span class=\"line\">        speaker_embedding_size = speaker_embedding.size()[idx]</span><br><span class=\"line\">        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)</span><br><span class=\"line\"></span><br><span class=\"line\">        e = e.reshape(batch_size, speaker_embedding_size, num_chars)</span><br><span class=\"line\">        e = e.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpeakerEmbedding</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, model_config</span>):</span></span><br><span class=\"line\">        super(SpeakerEmbedding, self).__init__()</span><br><span class=\"line\">        <span class=\"keyword\">assert</span> model_config[<span class=\"string\">&quot;multi_speaker&quot;</span>] == <span class=\"literal\">True</span></span><br><span class=\"line\">        self.hidden_size = model_config[<span class=\"string\">&quot;speaker_embedding&quot;</span>][<span class=\"string\">&quot;embedding_model&quot;</span>][<span class=\"string\">&quot;lin_neurons&quot;</span>]</span><br><span class=\"line\">        self.embedding_size = model_config[<span class=\"string\">&quot;speaker_embedding&quot;</span>][<span class=\"string\">&quot;embedding_size&quot;</span>]</span><br><span class=\"line\">        self.speaker_emb = nn.Linear(self.hidden_size,self.embedding_size)     </span><br><span class=\"line\">        self.norm=nn.LayerNorm(self.embedding_size)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, spker_embeds</span>):</span></span><br><span class=\"line\">        speaker_emb = self.speaker_emb(spker_embeds)</span><br><span class=\"line\">        speaker_emb = self.norm(speaker_emb)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> speaker_emb</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-模型训练效果\"><a href=\"#2-3-模型训练效果\" class=\"headerlink\" title=\"2.3 模型训练效果\"></a>2.3 模型训练效果</h4><p>　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220427171316769.png\" alt=\"Fastspeech-ECAPA训练效果\" style=\"zoom:50%;\"></p>\n<p>　　缺点：对<strong>未可见的说话人</strong>来说个性化合成的效果较差。</p>\n<h3 id=\"3-Meta-TTS-Meta-Learning-for-Few-Shot-Speaker-Adaptive-Text-to-Speech\"><a href=\"#3-Meta-TTS-Meta-Learning-for-Few-Shot-Speaker-Adaptive-Text-to-Speech\" class=\"headerlink\" title=\"3.Meta-TTS: Meta-Learning for Few-Shot Speaker Adaptive Text-to-Speech\"></a>3.Meta-TTS: Meta-Learning for Few-Shot Speaker Adaptive Text-to-Speech</h3><div class=\"note info\">\n            <p>论文地址：<a href=\"https://arxiv.org/pdf/2111.04040\">Meta-TTS</a><br>代码仓库：<a href=\"https://github.com/SungFeng-Huang/Meta-TTS/\">Meta-TTS</a></p>\n          </div>\n<h4 id=\"3-1-论文内容\"><a href=\"#3-1-论文内容\" class=\"headerlink\" title=\"3.1 论文内容\"></a>3.1 论文内容</h4><p>　　本文将<strong>元学习</strong>（meta-learning）技术应用到说话人自适应方法当中。提出Model Agnostic Meta-Learning （MAML）算法来训练多说话人TTS模型，使得模型可以找到一个合适的元初始状态（meta-initialization）以便其快速地适应到任意少样本说话人。因此，我们可以将使用元学习算法训练好的TTS模型<strong>对unseen speaker进行高效的适应</strong>。</p>\n<h4 id=\"3-2-模型结构\"><a href=\"#3-2-模型结构\" class=\"headerlink\" title=\"3.2 模型结构\"></a>3.2 模型结构</h4><h5 id=\"3-2-1-基于d-vector的Fastspeech2\"><a href=\"#3-2-1-基于d-vector的Fastspeech2\" class=\"headerlink\" title=\"3.2.1 基于d-vector的Fastspeech2\"></a>3.2.1 基于d-vector的Fastspeech2</h5><p>　　本文在Fastspeech2模型的基础上加入d-vector说话人嵌入，将该嵌入分别在音素编码后、梅尔频谱解码前加入到数据中，如下图所示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505191349282.png\" alt=\"多说话人嵌入Fastspeech2模型结构\" style=\"zoom:50%;\"></p>\n<p>　　修改后的模型代码如下所示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fastspeech2</span>(<span class=\"params\">nn.module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self,batch</span>):</span></span><br><span class=\"line\">    \toutput = self.encoder(texts, src_masks)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.speaker_emb <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            output = output + self.speaker_emb(spker_embed).unsqueeze(<span class=\"number\">1</span>).expand(</span><br><span class=\"line\">                <span class=\"number\">-1</span>, max_src_len, <span class=\"number\">-1</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\">        (output,p_predictions,e_predictions,log_d_predictions,d_rounded,mel_lens,mel_masks) = \t\t\t       \t\t\tself.variance_adaptor(output,src_masks,mel_masks,max_mel_len,p_targets,\\</span><br><span class=\"line\">            e_targets,d_targets,p_control,e_control,d_control)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.speaker_emb <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            output = output + self.speaker_emb(spker_embed).unsqueeze(<span class=\"number\">1</span>).expand(</span><br><span class=\"line\">                <span class=\"number\">-1</span>, max(mel_lens), <span class=\"number\">-1</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\">        output, mel_masks = self.decoder(output, mel_masks)</span><br><span class=\"line\">        output = self.mel_linear(output)</span><br><span class=\"line\">        postnet_output = self.postnet(output) + output</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-2-2-模型训练过程\"><a href=\"#3-2-2-模型训练过程\" class=\"headerlink\" title=\"3.2.2 模型训练过程\"></a>3.2.2 模型训练过程</h5><p>　　本文研究对象为K-shot语音克隆任务，我们需要从多说话人语音合成数据库中构建一系列的meta-tasks。每一个meta-task的support set和query set均包含相同说话人的K个样本和Q个样本。在训练阶段，我们设置K=Q，在模型推理阶段，我们设置Q=1。</p>\n<p>　　为了生成meta-task，我们先从语音合成数据中采用一个说话人，之后针对该说话人随机选择2K个语音样本，其中K个分配到support set，另外K个分配到query set。</p>\n<p>　　在使用MAML算法训练多说话人FastSpeech2模型时，在内循环自适应阶段，文本编码器的参数保持固定不变，只微调说话人嵌入、变量适配器和解码器的参数。meta-training训练流程如下图所示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505194827685.png\" alt=\"meta-TTS训练流\" style=\"zoom:50%;\"></p>\n<h5 id=\"3-2-3-基于元学习的模型训练\"><a href=\"#3-2-3-基于元学习的模型训练\" class=\"headerlink\" title=\"3.2.3 基于元学习的模型训练\"></a>3.2.3 基于元学习的模型训练</h5><p>　　为了加速说话人自适应方法的训练，我们提出了基于meta-learning的说话人自适应训练方法。Model-Agnostic Meta-Learning （MAML）算法是一个经典的meta-learning算法，其目的是为快速自适应找到合适的参数初始化状态。MAML包含两层优化循环操作：外循环（outer loop）和内循环（inner loop）。外循环目的是找到一个元初始化状态（meta-initialization），之后内循环可以在此基础上基于少量样本快速适应到新任务中。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/640\" alt=\"元学习过程\" style=\"zoom:67%;\"></p>\n<p>　　假定我们将要在一个K-shot回归下游任务上评价模型效果，MAML会基于训练数据生成一系列K-shot回归训练任务，其中每个任务被称作一个适用于元学习的“meta-task”。每个任务包含一个含有K个样本的supprt set，以及一个含有Q个样本的query set。每个任务的学习目标都是基于support set学习任务相关的模型参数（内循环，inner loop）。MAML的目标就是学习meta-initialization参数，每个meta-task都可以基于该参数得到表现不错的任务自适应参数（外循环，outer loop）。这一优化过程称为“meta-update”。</p>\n<h4 id=\"3-3-模型效果\"><a href=\"#3-3-模型效果\" class=\"headerlink\" title=\"3.3 模型效果\"></a>3.3 模型效果</h4><h5 id=\"3-3-1-训练损失效果\"><a href=\"#3-3-1-训练损失效果\" class=\"headerlink\" title=\"3.3.1 训练损失效果\"></a>3.3.1 训练损失效果</h5><p>　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示，由于加入两段说话人嵌入，因此损失波动较大：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505192410237.png\" alt=\"训练效果\" style=\"zoom:40%;\"></p>\n<h5 id=\"3-3-2-模型合成效果\"><a href=\"#3-3-2-模型合成效果\" class=\"headerlink\" title=\"3.3.2 模型合成效果\"></a>3.3.2 模型合成效果</h5><p>　　模型训练2000步至2000000步后，合成后的mel频谱图变化如下两张图所示</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505193143278.png\" alt=\"step-2000\" style=\"zoom: 50%;\"><img src=\"http://pic.panjiangtao.cn/img/image-20220505193056377.png\" alt=\"step-2000000\" style=\"zoom:56%;\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":9816,"excerpt":"<h2 id=\"多说话人自适应合成\"><a href=\"#多说话人自适应合成\" class=\"headerlink\" title=\"多说话人自适应合成\"></a>多说话人自适应合成</h2><p>　　本文介绍了三篇自适应多说话人语音合成论文及代码分析。<br></p>","more":"<p></p>\n<h3 id=\"1-Transfer-Learning-from-Speaker-Verification-to-Multispeaker-Text-To-Speech-Synthesis\"><a href=\"#1-Transfer-Learning-from-Speaker-Verification-to-Multispeaker-Text-To-Speech-Synthesis\" class=\"headerlink\" title=\"1. Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis\"></a>1. <a href=\"https://arxiv.org/pdf/1806.04558\">Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis</a></h3><div class=\"note info\">\n            <p>github源码:<a href=\"https://github.com/CorentinJ/Real-Time-Voice-Cloning\">Real-Time-Voice-Cloning</a><br>demo演示:<a href=\"http://www.panjiangtao.cn/SV2TTS/\">SV2TTS 说话人音色语音合成演示</a></p>\n          </div>\n<h4 id=\"1-1-论文内容\"><a href=\"#1-1-论文内容\" class=\"headerlink\" title=\"1.1 论文内容\"></a>1.1 论文内容</h4><p>　　在tacotron2中加入d-vector向量进行个性化指定说话人语音合成</p>\n<p>　　d-vector：将指定说话人的一句语音输入一个DNN网络，获取其最后一个隐藏层的输出，用在说话人识别领域</p>\n<h5 id=\"推理过程：\"><a href=\"#推理过程：\" class=\"headerlink\" title=\"推理过程：\"></a>推理过程：</h5><p>①选择编码器将语音的文本内容进行编码。得到一个向量。</p>\n<p>②将目标人的音色（声音）进行编码或者处理成向量。</p>\n<p>③将上面的两种向量在某一种维度上进行拼接得到更长的向量（一般为2倍的长度）在通过解码器进行解码成一个语音信息（并不是最终的），之后经过相应的处理得到真正的语音。整个过程就是模型的推理过程。</p>\n<h4 id=\"1-2-模型结构\"><a href=\"#1-2-模型结构\" class=\"headerlink\" title=\"1.2 模型结构\"></a>1.2 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/img/image-20220419204452965.png\" alt=\"SV2TTS模型\"></p>\n<h5 id=\"1-2-1-说话人编码器网络-提取说话人特征\"><a href=\"#1-2-1-说话人编码器网络-提取说话人特征\" class=\"headerlink\" title=\"1.2.1 说话人编码器网络(提取说话人特征)\"></a>1.2.1 说话人编码器网络(提取说话人特征)</h5><p>　　使用独立的噪声语音数据集进行说话人验证任务的训练，从来自目标说话人几秒钟的参考语音中生成固定维度的<strong>嵌入向量</strong>(说话人语音特征)，该向量称为d-vector</p>\n<p>　　训练TTS时使用说话人编码器的预训练模型。</p>\n<p>　　模型结构如下，使用一个多层LSTM、线性层和ReLU层。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpeakerEncoder</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, device, loss_device</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        self.loss_device = loss_device</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Network defition</span></span><br><span class=\"line\">        self.lstm = nn.LSTM(input_size=mel_n_channels,</span><br><span class=\"line\">                            hidden_size=model_hidden_size, </span><br><span class=\"line\">                            num_layers=model_num_layers, </span><br><span class=\"line\">                            batch_first=<span class=\"literal\">True</span>).to(device)</span><br><span class=\"line\">        self.linear = nn.Linear(in_features=model_hidden_size, </span><br><span class=\"line\">                                out_features=model_embedding_size).to(device)</span><br><span class=\"line\">        self.relu = torch.nn.ReLU().to(device)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Cosine similarity scaling (with fixed initial parameter values)</span></span><br><span class=\"line\">        self.similarity_weight = nn.Parameter(torch.tensor([<span class=\"number\">10.</span>])).to(loss_device)</span><br><span class=\"line\">        self.similarity_bias = nn.Parameter(torch.tensor([<span class=\"number\">-5.</span>])).to(loss_device)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Loss</span></span><br><span class=\"line\">        self.loss_fn = nn.CrossEntropyLoss().to(loss_device)</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_gradient_ops</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># Gradient scale</span></span><br><span class=\"line\">        self.similarity_weight.grad *= <span class=\"number\">0.01</span></span><br><span class=\"line\">        self.similarity_bias.grad *= <span class=\"number\">0.01</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"comment\"># Gradient clipping</span></span><br><span class=\"line\">        clip_grad_norm_(self.parameters(), <span class=\"number\">3</span>, norm_type=<span class=\"number\">2</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, utterances, hidden_init=None</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        Computes the embeddings of a batch of utterance spectrograms.</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">        :param utterances: batch of mel-scale filterbanks of same duration as a tensor of shape </span></span><br><span class=\"line\"><span class=\"string\">        (batch_size, n_frames, n_channels) </span></span><br><span class=\"line\"><span class=\"string\">        :param hidden_init: initial hidden state of the LSTM as a tensor of shape (num_layers, </span></span><br><span class=\"line\"><span class=\"string\">        batch_size, hidden_size). Will default to a tensor of zeros if None.</span></span><br><span class=\"line\"><span class=\"string\">        :return: the embeddings as a tensor of shape (batch_size, embedding_size)</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># Pass the input through the LSTM layers and retrieve all outputs, the final hidden state</span></span><br><span class=\"line\">        <span class=\"comment\"># and the final cell state.</span></span><br><span class=\"line\">        out, (hidden, cell) = self.lstm(utterances, hidden_init)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># We take only the hidden state of the last layer</span></span><br><span class=\"line\">        embeds_raw = self.relu(self.linear(hidden[<span class=\"number\">-1</span>]))</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># L2-normalize it</span></span><br><span class=\"line\">        embeds = embeds_raw / (torch.norm(embeds_raw, dim=<span class=\"number\">1</span>, keepdim=<span class=\"literal\">True</span>) + <span class=\"number\">1e-5</span>)        </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> embeds</span><br></pre></td></tr></table></figure>\n<h5 id=\"d-vector聚类效果\"><a href=\"#d-vector聚类效果\" class=\"headerlink\" title=\"d-vector聚类效果\"></a>d-vector聚类效果</h5><p>　　预训练模型的聚类效果如下，使用TIMIT数据集进行训练，可能是训练数据较少，效果较差。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/D-vector说话人聚类.png\" alt=\"D-vector说话人聚类\" style=\"zoom:67%;\"></p>\n<h5 id=\"1-2-2-基于Tacotron-2的序列到序列合成网络\"><a href=\"#1-2-2-基于Tacotron-2的序列到序列合成网络\" class=\"headerlink\" title=\"1.2.2 基于Tacotron 2的序列到序列合成网络\"></a>1.2.2 基于Tacotron 2的序列到序列合成网络</h5><p>　　只需将说话人嵌入向量传递到注意力层，就可以在不同的说话人之间汇聚。其基于说话者嵌入从文本生成mel谱图；</p>\n<p>　　文本编码后加入说话人嵌入向量代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Encoder</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, embed_dims, num_chars, encoder_dims, K, num_highways, dropout</span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        prenet_dims = (encoder_dims, encoder_dims)</span><br><span class=\"line\">        cbhg_channels = encoder_dims</span><br><span class=\"line\">        self.embedding = nn.Embedding(num_chars, embed_dims)</span><br><span class=\"line\">        self.pre_net = PreNet(embed_dims, fc1_dims=prenet_dims[<span class=\"number\">0</span>], fc2_dims=prenet_dims[<span class=\"number\">1</span>],</span><br><span class=\"line\">                              dropout=dropout)</span><br><span class=\"line\">        <span class=\"comment\">#PreNet表示的是两个全连接层</span></span><br><span class=\"line\">        self.cbhg = CBHG(K=K, in_channels=cbhg_channels, channels=cbhg_channels,</span><br><span class=\"line\">                         proj_channels=[cbhg_channels, cbhg_channels],</span><br><span class=\"line\">                         num_highways=num_highways)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x, speaker_embedding=None</span>):</span></span><br><span class=\"line\">        x = self.embedding(x)</span><br><span class=\"line\">        x = self.pre_net(x)</span><br><span class=\"line\">        x.transpose_(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        x = self.cbhg(x)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> speaker_embedding <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 加入说话人嵌入向量</span></span><br><span class=\"line\">            x = self.add_speaker_embedding(x, speaker_embedding)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add_speaker_embedding</span>(<span class=\"params\">self, x, speaker_embedding</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># SV2TTS的主要贡献</span></span><br><span class=\"line\">        <span class=\"comment\"># The input x is the encoder output and is a 3D tensor with size (batch_size, num_chars, tts_embed_dims)</span></span><br><span class=\"line\">        <span class=\"comment\"># When training, speaker_embedding is also a 2D tensor with size (batch_size, speaker_embedding_size)</span></span><br><span class=\"line\">        <span class=\"comment\">#     (for inference, speaker_embedding is a 1D tensor with size (speaker_embedding_size))</span></span><br><span class=\"line\">        <span class=\"comment\"># This concats the speaker embedding for each char in the encoder output</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Save the dimensions as human-readable names</span></span><br><span class=\"line\">        batch_size = x.size()[<span class=\"number\">0</span>]</span><br><span class=\"line\">        num_chars = x.size()[<span class=\"number\">1</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span> speaker_embedding.dim() == <span class=\"number\">1</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Start by making a copy of each speaker embedding to match the input text length</span></span><br><span class=\"line\">        <span class=\"comment\"># The output of this has size (batch_size, num_chars * speaker_embedding_size)</span></span><br><span class=\"line\">        speaker_embedding_size = speaker_embedding.size()[idx]</span><br><span class=\"line\">        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Reshape it and transpose</span></span><br><span class=\"line\">        e = e.reshape(batch_size, speaker_embedding_size, num_chars)</span><br><span class=\"line\">        e = e.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Concatenate the tiled speaker embedding with the encoder output</span></span><br><span class=\"line\">        x = torch.cat((x, e), <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-2-3-自回归声码器waveNet\"><a href=\"#1-2-3-自回归声码器waveNet\" class=\"headerlink\" title=\"1.2.3 自回归声码器waveNet\"></a>1.2.3 自回归声码器waveNet</h5><p>　　声码器网络，其将mel频谱图转换成时域波形。</p>\n<h3 id=\"2-ECAPA-TDNN-for-Multi-speaker-Text-to-speech-Synthesis\"><a href=\"#2-ECAPA-TDNN-for-Multi-speaker-Text-to-speech-Synthesis\" class=\"headerlink\" title=\"2. ECAPA-TDNN for Multi-speaker Text-to-speech Synthesis\"></a>2. <a href=\"https://arxiv.org/pdf/2203.10473\">ECAPA-TDNN for Multi-speaker Text-to-speech Synthesis</a></h3><h4 id=\"2-1-论文内容\"><a href=\"#2-1-论文内容\" class=\"headerlink\" title=\"2.1 论文内容\"></a>2.1 论文内容</h4><p>　　在FastSpeech2中加入ECAPA-TDNN(进化版x-vector)进行个性化训练</p>\n<h4 id=\"2-2-模型结构\"><a href=\"#2-2-模型结构\" class=\"headerlink\" title=\"2.2 模型结构\"></a>2.2 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/img/image-20220419204836223.png\" alt=\"ECAPA-TTS模型结构\"></p>\n<h5 id=\"2-2-1-多说话人编码—ECAPA网络\"><a href=\"#2-2-1-多说话人编码—ECAPA网络\" class=\"headerlink\" title=\"2.2.1 多说话人编码—ECAPA网络\"></a>2.2.1 多说话人编码—ECAPA网络</h5><p>　　使用<a href=\"https://arxiv.org/pdf/2005.07143\">ECAPA模型</a>进行说话人嵌入生成，模型聚类效果如下，使用VoxCeleb2数据集进行训练，取得很好的效果。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/ecapa说话人聚类.png\" alt=\"ecapa说话人聚类\"></p>\n<p>　　模型结构：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220422133618465.png\" alt=\" ECAPA-TDNN结构\" style=\"zoom: 50%;\"></p>\n<p>模型框架代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ECAPA_TDNN</span>(<span class=\"params\">torch.nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self,input_size,device=<span class=\"string\">&quot;cpu&quot;</span>,lin_neurons=<span class=\"number\">192</span>,activation=torch.nn.ReLU,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                 channels=[<span class=\"number\">512</span>, <span class=\"number\">512</span>, <span class=\"number\">512</span>, <span class=\"number\">512</span>, <span class=\"number\">1536</span>],kernel_sizes=[<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>,<span class=\"number\">1</span>],</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                 dilations=[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>],attention_channels=<span class=\"number\">128</span>,res2net_scale=<span class=\"number\">8</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                 se_channels=<span class=\"number\">128</span>,global_context=True,groups=[<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    </span>):</span></span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        <span class=\"keyword\">assert</span> len(channels) == len(kernel_sizes)</span><br><span class=\"line\">        <span class=\"keyword\">assert</span> len(channels) == len(dilations)</span><br><span class=\"line\">        self.channels = channels</span><br><span class=\"line\">        self.blocks = nn.ModuleList()</span><br><span class=\"line\">        <span class=\"comment\"># The initial TDNN layer</span></span><br><span class=\"line\">        self.blocks.append(TDNNBlock(input_size,channels[<span class=\"number\">0</span>],kernel_sizes[<span class=\"number\">0</span>],</span><br><span class=\"line\">                                     dilations[<span class=\"number\">0</span>],activation,groups[<span class=\"number\">0</span>],))</span><br><span class=\"line\">        <span class=\"comment\"># SE-Res2Net layers</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(channels) - <span class=\"number\">1</span>):</span><br><span class=\"line\">            self.blocks.append(SERes2NetBlock(channels[i - <span class=\"number\">1</span>],channels[i],</span><br><span class=\"line\">                    res2net_scale=res2net_scale,se_channels=se_channels,</span><br><span class=\"line\">                    kernel_size=kernel_sizes[i],dilation=dilations[i],</span><br><span class=\"line\">                    activation=activation,groups=groups[i],))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Multi-layer feature aggregation</span></span><br><span class=\"line\">        self.mfa = TDNNBlock(channels[<span class=\"number\">-1</span>],channels[<span class=\"number\">-1</span>],kernel_sizes[<span class=\"number\">-1</span>],dilations[<span class=\"number\">-1</span>],</span><br><span class=\"line\">            activation,groups=groups[<span class=\"number\">-1</span>],)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Attentive Statistical Pooling</span></span><br><span class=\"line\">        self.asp = AttentiveStatisticsPooling(channels[<span class=\"number\">-1</span>],</span><br><span class=\"line\">            attention_channels=attention_channels,global_context=global_context,)</span><br><span class=\"line\">        self.asp_bn = BatchNorm1d(input_size=channels[<span class=\"number\">-1</span>] * <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Final linear transformation</span></span><br><span class=\"line\">        self.fc = Conv1d(in_channels=channels[<span class=\"number\">-1</span>] * <span class=\"number\">2</span>,out_channels=lin_neurons,</span><br><span class=\"line\">            kernel_size=<span class=\"number\">1</span>,)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, x, lengths=None</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Returns the embedding vector.</span></span><br><span class=\"line\"><span class=\"string\">        Arguments</span></span><br><span class=\"line\"><span class=\"string\">        ---------</span></span><br><span class=\"line\"><span class=\"string\">        x : torch.Tensor</span></span><br><span class=\"line\"><span class=\"string\">            Tensor of shape (batch, time, channel).</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># Minimize transpose for efficiency</span></span><br><span class=\"line\">        x = x.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        xl = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> layer <span class=\"keyword\">in</span> self.blocks:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                x = layer(x, lengths=lengths)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> TypeError:</span><br><span class=\"line\">                x = layer(x)</span><br><span class=\"line\">            xl.append(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Multi-layer feature aggregation</span></span><br><span class=\"line\">        x = torch.cat(xl[<span class=\"number\">1</span>:], dim=<span class=\"number\">1</span>)</span><br><span class=\"line\">        x = self.mfa(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Attentive Statistical Pooling</span></span><br><span class=\"line\">        x = self.asp(x, lengths=lengths)</span><br><span class=\"line\">        x = self.asp_bn(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Final linear transformation</span></span><br><span class=\"line\">        x = self.fc(x)</span><br><span class=\"line\"></span><br><span class=\"line\">        x = x.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br></pre></td></tr></table></figure>\n<p>其中，SE-Res2Block的结构为：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220422134136052.png\" alt=\"SE-Res2Block\" style=\"zoom: 50%;\"></p>\n<h5 id=\"2-2-2-在Fastspeech2中加入说话人嵌入向量\"><a href=\"#2-2-2-在Fastspeech2中加入说话人嵌入向量\" class=\"headerlink\" title=\"2.2.2 在Fastspeech2中加入说话人嵌入向量\"></a>2.2.2 在Fastspeech2中加入说话人嵌入向量</h5><p>　　将说话人嵌入向量在音素编码后与其进行叠加，再输入方差适配器中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FastSpeech2</span>(<span class=\"params\">nn.Module</span>):</span>\t\t</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, preprocess_config, model_config</span>):</span></span><br><span class=\"line\">      \t<span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">      \t&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.speaker_emb = SpeakerEmbedding(model_config)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>()</span></span><br><span class=\"line\"><span class=\"function\">    \t&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"function\">    \t&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"function\">    \t<span class=\"title\">if</span> <span class=\"title\">self</span>.<span class=\"title\">speaker_emb</span> <span class=\"title\">is</span> <span class=\"title\">not</span> <span class=\"title\">None</span>:</span></span><br><span class=\"line\">            spker_embed=self.speaker_emb(spker_embed)</span><br><span class=\"line\">            <span class=\"comment\"># speaker_classifier_output_1 = self.speaker_classifier_1(spker_embed)</span></span><br><span class=\"line\">            output=output+self.add_speaker_embedding(output,spker_embed)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add_speaker_embedding</span>(<span class=\"params\">self, x, speaker_embedding</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 将speaker_embedding处理后与x相同维度</span></span><br><span class=\"line\">        batch_size = x.size()[<span class=\"number\">0</span>]</span><br><span class=\"line\">        num_chars = x.size()[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> speaker_embedding.dim() == <span class=\"number\">1</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            idx = <span class=\"number\">1</span></span><br><span class=\"line\">        speaker_embedding_size = speaker_embedding.size()[idx]</span><br><span class=\"line\">        e = speaker_embedding.repeat_interleave(num_chars, dim=idx)</span><br><span class=\"line\"></span><br><span class=\"line\">        e = e.reshape(batch_size, speaker_embedding_size, num_chars)</span><br><span class=\"line\">        e = e.transpose(<span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpeakerEmbedding</span>(<span class=\"params\">nn.Module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, model_config</span>):</span></span><br><span class=\"line\">        super(SpeakerEmbedding, self).__init__()</span><br><span class=\"line\">        <span class=\"keyword\">assert</span> model_config[<span class=\"string\">&quot;multi_speaker&quot;</span>] == <span class=\"literal\">True</span></span><br><span class=\"line\">        self.hidden_size = model_config[<span class=\"string\">&quot;speaker_embedding&quot;</span>][<span class=\"string\">&quot;embedding_model&quot;</span>][<span class=\"string\">&quot;lin_neurons&quot;</span>]</span><br><span class=\"line\">        self.embedding_size = model_config[<span class=\"string\">&quot;speaker_embedding&quot;</span>][<span class=\"string\">&quot;embedding_size&quot;</span>]</span><br><span class=\"line\">        self.speaker_emb = nn.Linear(self.hidden_size,self.embedding_size)     </span><br><span class=\"line\">        self.norm=nn.LayerNorm(self.embedding_size)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self, spker_embeds</span>):</span></span><br><span class=\"line\">        speaker_emb = self.speaker_emb(spker_embeds)</span><br><span class=\"line\">        speaker_emb = self.norm(speaker_emb)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> speaker_emb</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-模型训练效果\"><a href=\"#2-3-模型训练效果\" class=\"headerlink\" title=\"2.3 模型训练效果\"></a>2.3 模型训练效果</h4><p>　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220427171316769.png\" alt=\"Fastspeech-ECAPA训练效果\" style=\"zoom:50%;\"></p>\n<p>　　缺点：对<strong>未可见的说话人</strong>来说个性化合成的效果较差。</p>\n<h3 id=\"3-Meta-TTS-Meta-Learning-for-Few-Shot-Speaker-Adaptive-Text-to-Speech\"><a href=\"#3-Meta-TTS-Meta-Learning-for-Few-Shot-Speaker-Adaptive-Text-to-Speech\" class=\"headerlink\" title=\"3.Meta-TTS: Meta-Learning for Few-Shot Speaker Adaptive Text-to-Speech\"></a>3.Meta-TTS: Meta-Learning for Few-Shot Speaker Adaptive Text-to-Speech</h3><div class=\"note info\">\n            <p>论文地址：<a href=\"https://arxiv.org/pdf/2111.04040\">Meta-TTS</a><br>代码仓库：<a href=\"https://github.com/SungFeng-Huang/Meta-TTS/\">Meta-TTS</a></p>\n          </div>\n<h4 id=\"3-1-论文内容\"><a href=\"#3-1-论文内容\" class=\"headerlink\" title=\"3.1 论文内容\"></a>3.1 论文内容</h4><p>　　本文将<strong>元学习</strong>（meta-learning）技术应用到说话人自适应方法当中。提出Model Agnostic Meta-Learning （MAML）算法来训练多说话人TTS模型，使得模型可以找到一个合适的元初始状态（meta-initialization）以便其快速地适应到任意少样本说话人。因此，我们可以将使用元学习算法训练好的TTS模型<strong>对unseen speaker进行高效的适应</strong>。</p>\n<h4 id=\"3-2-模型结构\"><a href=\"#3-2-模型结构\" class=\"headerlink\" title=\"3.2 模型结构\"></a>3.2 模型结构</h4><h5 id=\"3-2-1-基于d-vector的Fastspeech2\"><a href=\"#3-2-1-基于d-vector的Fastspeech2\" class=\"headerlink\" title=\"3.2.1 基于d-vector的Fastspeech2\"></a>3.2.1 基于d-vector的Fastspeech2</h5><p>　　本文在Fastspeech2模型的基础上加入d-vector说话人嵌入，将该嵌入分别在音素编码后、梅尔频谱解码前加入到数据中，如下图所示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505191349282.png\" alt=\"多说话人嵌入Fastspeech2模型结构\" style=\"zoom:50%;\"></p>\n<p>　　修改后的模型代码如下所示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fastspeech2</span>(<span class=\"params\">nn.module</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span>(<span class=\"params\">self,batch</span>):</span></span><br><span class=\"line\">    \toutput = self.encoder(texts, src_masks)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.speaker_emb <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            output = output + self.speaker_emb(spker_embed).unsqueeze(<span class=\"number\">1</span>).expand(</span><br><span class=\"line\">                <span class=\"number\">-1</span>, max_src_len, <span class=\"number\">-1</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\">        (output,p_predictions,e_predictions,log_d_predictions,d_rounded,mel_lens,mel_masks) = \t\t\t       \t\t\tself.variance_adaptor(output,src_masks,mel_masks,max_mel_len,p_targets,\\</span><br><span class=\"line\">            e_targets,d_targets,p_control,e_control,d_control)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.speaker_emb <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            output = output + self.speaker_emb(spker_embed).unsqueeze(<span class=\"number\">1</span>).expand(</span><br><span class=\"line\">                <span class=\"number\">-1</span>, max(mel_lens), <span class=\"number\">-1</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\">        output, mel_masks = self.decoder(output, mel_masks)</span><br><span class=\"line\">        output = self.mel_linear(output)</span><br><span class=\"line\">        postnet_output = self.postnet(output) + output</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-2-2-模型训练过程\"><a href=\"#3-2-2-模型训练过程\" class=\"headerlink\" title=\"3.2.2 模型训练过程\"></a>3.2.2 模型训练过程</h5><p>　　本文研究对象为K-shot语音克隆任务，我们需要从多说话人语音合成数据库中构建一系列的meta-tasks。每一个meta-task的support set和query set均包含相同说话人的K个样本和Q个样本。在训练阶段，我们设置K=Q，在模型推理阶段，我们设置Q=1。</p>\n<p>　　为了生成meta-task，我们先从语音合成数据中采用一个说话人，之后针对该说话人随机选择2K个语音样本，其中K个分配到support set，另外K个分配到query set。</p>\n<p>　　在使用MAML算法训练多说话人FastSpeech2模型时，在内循环自适应阶段，文本编码器的参数保持固定不变，只微调说话人嵌入、变量适配器和解码器的参数。meta-training训练流程如下图所示。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505194827685.png\" alt=\"meta-TTS训练流\" style=\"zoom:50%;\"></p>\n<h5 id=\"3-2-3-基于元学习的模型训练\"><a href=\"#3-2-3-基于元学习的模型训练\" class=\"headerlink\" title=\"3.2.3 基于元学习的模型训练\"></a>3.2.3 基于元学习的模型训练</h5><p>　　为了加速说话人自适应方法的训练，我们提出了基于meta-learning的说话人自适应训练方法。Model-Agnostic Meta-Learning （MAML）算法是一个经典的meta-learning算法，其目的是为快速自适应找到合适的参数初始化状态。MAML包含两层优化循环操作：外循环（outer loop）和内循环（inner loop）。外循环目的是找到一个元初始化状态（meta-initialization），之后内循环可以在此基础上基于少量样本快速适应到新任务中。</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/640\" alt=\"元学习过程\" style=\"zoom:67%;\"></p>\n<p>　　假定我们将要在一个K-shot回归下游任务上评价模型效果，MAML会基于训练数据生成一系列K-shot回归训练任务，其中每个任务被称作一个适用于元学习的“meta-task”。每个任务包含一个含有K个样本的supprt set，以及一个含有Q个样本的query set。每个任务的学习目标都是基于support set学习任务相关的模型参数（内循环，inner loop）。MAML的目标就是学习meta-initialization参数，每个meta-task都可以基于该参数得到表现不错的任务自适应参数（外循环，outer loop）。这一优化过程称为“meta-update”。</p>\n<h4 id=\"3-3-模型效果\"><a href=\"#3-3-模型效果\" class=\"headerlink\" title=\"3.3 模型效果\"></a>3.3 模型效果</h4><h5 id=\"3-3-1-训练损失效果\"><a href=\"#3-3-1-训练损失效果\" class=\"headerlink\" title=\"3.3.1 训练损失效果\"></a>3.3.1 训练损失效果</h5><p>　　加入预训练说话人嵌入模型后，模型整体训练效果如下图所示，由于加入两段说话人嵌入，因此损失波动较大：</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505192410237.png\" alt=\"训练效果\" style=\"zoom:40%;\"></p>\n<h5 id=\"3-3-2-模型合成效果\"><a href=\"#3-3-2-模型合成效果\" class=\"headerlink\" title=\"3.3.2 模型合成效果\"></a>3.3.2 模型合成效果</h5><p>　　模型训练2000步至2000000步后，合成后的mel频谱图变化如下两张图所示</p>\n<p><img src=\"http://pic.panjiangtao.cn/img/image-20220505193143278.png\" alt=\"step-2000\" style=\"zoom: 50%;\"><img src=\"http://pic.panjiangtao.cn/img/image-20220505193056377.png\" alt=\"step-2000000\" style=\"zoom:56%;\"></p>"},{"title":"AWS服务的注册和创建主机","date":"2021-02-09T05:06:20.000Z","_content":"{% note info %}\n参考文章：[注册aws账号创建ec2免费套餐](https://blog.csdn.net/jjihuang/article/details/80777306),[AWS使用教程](https://www.cnblogs.com/ccw869476711/p/11535812.html)\n{% endnote %}\n# 一、注册aws账号\n* 进入[aws注册页面](（https://portal.aws.amazon.com/billing/signup）)\n* 填写email、密码、用户名等信息，绑定信用卡(我暂无支持aws的信用卡)\n* 完成注册\n<!-- more -->\n\n# 二、开通EC2套餐\n## 1. 访问[AWS主页](https://aws.amazon.com/)，登录后找到AWS管理控制台\n![AWS管理控制](主页.png)\n\n## 2. 在控制台页面点击**服务->计算->EC2**\n![选择服务](服务.png)\n\n## 3. 跳转到资源页面先选择区域再点击**启动实例**\n![启动实例](启动.png)\n\n## 4. 选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\n![选择AMI](ami.png)\n\n## 5. 实例类型默认，直接**下一步：配置实例详细信息**\n![选择实例类型](实例.png)\n\n## 6. 填写详细信息，大都默认\n![详细信息](详细.png)\n\n## 7. 添加存储，大小改为30G\n![存储大小](30g.png)\n\n## 8. 添加标签直接**下一步**\n![添加标签](标签.png)\n\n## 9. 安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步**审核启动**\n![安全组配置](安全组.png)\n\n## 10. 审核启动，确定没错后点击**启动**\n![审核启动](审核.png)\n\n## 11. 创建密钥，填写名称后下载密钥对（一定要保存好），点击**启动实例**\n![创建密钥](密钥.png)\n\n## 12. 实例正在启动\n![启动状态](状态.png)\n\n## 13. 启动完成，查看实例\n![查看实例](查看.png)\n","source":"_posts/aws-1register.md","raw":"---\ntitle: AWS服务的注册和创建主机\ndate: 2021-02-09 13:06:20\ntags:\n- 云服务\n- AWS\n- 亚马逊\ncategories:\n- 云服务\n- AWS\n---\n{% note info %}\n参考文章：[注册aws账号创建ec2免费套餐](https://blog.csdn.net/jjihuang/article/details/80777306),[AWS使用教程](https://www.cnblogs.com/ccw869476711/p/11535812.html)\n{% endnote %}\n# 一、注册aws账号\n* 进入[aws注册页面](（https://portal.aws.amazon.com/billing/signup）)\n* 填写email、密码、用户名等信息，绑定信用卡(我暂无支持aws的信用卡)\n* 完成注册\n<!-- more -->\n\n# 二、开通EC2套餐\n## 1. 访问[AWS主页](https://aws.amazon.com/)，登录后找到AWS管理控制台\n![AWS管理控制](主页.png)\n\n## 2. 在控制台页面点击**服务->计算->EC2**\n![选择服务](服务.png)\n\n## 3. 跳转到资源页面先选择区域再点击**启动实例**\n![启动实例](启动.png)\n\n## 4. 选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\n![选择AMI](ami.png)\n\n## 5. 实例类型默认，直接**下一步：配置实例详细信息**\n![选择实例类型](实例.png)\n\n## 6. 填写详细信息，大都默认\n![详细信息](详细.png)\n\n## 7. 添加存储，大小改为30G\n![存储大小](30g.png)\n\n## 8. 添加标签直接**下一步**\n![添加标签](标签.png)\n\n## 9. 安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步**审核启动**\n![安全组配置](安全组.png)\n\n## 10. 审核启动，确定没错后点击**启动**\n![审核启动](审核.png)\n\n## 11. 创建密钥，填写名称后下载密钥对（一定要保存好），点击**启动实例**\n![创建密钥](密钥.png)\n\n## 12. 实例正在启动\n![启动状态](状态.png)\n\n## 13. 启动完成，查看实例\n![查看实例](查看.png)\n","slug":"aws-1register","published":1,"updated":"2021-02-09T08:21:27.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0g4000sc8pva7hdf8lf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>参考文章：<a href=\"https://blog.csdn.net/jjihuang/article/details/80777306\">注册aws账号创建ec2免费套餐</a>,<a href=\"https://www.cnblogs.com/ccw869476711/p/11535812.html\">AWS使用教程</a></p>\n          </div>\n<h1 id=\"一、注册aws账号\"><a href=\"#一、注册aws账号\" class=\"headerlink\" title=\"一、注册aws账号\"></a>一、注册aws账号</h1><ul>\n<li>进入<a href=\"（https://portal.aws.amazon.com/billing/signup）\">aws注册页面</a></li>\n<li>填写email、密码、用户名等信息，绑定信用卡(我暂无支持aws的信用卡)</li>\n<li>完成注册<a id=\"more\"></a>\n</li>\n</ul>\n<h1 id=\"二、开通EC2套餐\"><a href=\"#二、开通EC2套餐\" class=\"headerlink\" title=\"二、开通EC2套餐\"></a>二、开通EC2套餐</h1><h2 id=\"1-访问AWS主页，登录后找到AWS管理控制台\"><a href=\"#1-访问AWS主页，登录后找到AWS管理控制台\" class=\"headerlink\" title=\"1. 访问AWS主页，登录后找到AWS管理控制台\"></a>1. 访问<a href=\"https://aws.amazon.com/\">AWS主页</a>，登录后找到AWS管理控制台</h2><p><img src=\"/posts/aws-1register/主页.png\" alt=\"AWS管理控制\"></p>\n<h2 id=\"2-在控制台页面点击服务-gt-计算-gt-EC2\"><a href=\"#2-在控制台页面点击服务-gt-计算-gt-EC2\" class=\"headerlink\" title=\"2. 在控制台页面点击服务-&gt;计算-&gt;EC2\"></a>2. 在控制台页面点击<strong>服务-&gt;计算-&gt;EC2</strong></h2><p><img src=\"/posts/aws-1register/服务.png\" alt=\"选择服务\"></p>\n<h2 id=\"3-跳转到资源页面先选择区域再点击启动实例\"><a href=\"#3-跳转到资源页面先选择区域再点击启动实例\" class=\"headerlink\" title=\"3. 跳转到资源页面先选择区域再点击启动实例\"></a>3. 跳转到资源页面先选择区域再点击<strong>启动实例</strong></h2><p><img src=\"/posts/aws-1register/启动.png\" alt=\"启动实例\"></p>\n<h2 id=\"4-选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\"><a href=\"#4-选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\" class=\"headerlink\" title=\"4. 选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\"></a>4. 选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）</h2><p><img src=\"/posts/aws-1register/ami.png\" alt=\"选择AMI\"></p>\n<h2 id=\"5-实例类型默认，直接下一步：配置实例详细信息\"><a href=\"#5-实例类型默认，直接下一步：配置实例详细信息\" class=\"headerlink\" title=\"5. 实例类型默认，直接下一步：配置实例详细信息\"></a>5. 实例类型默认，直接<strong>下一步：配置实例详细信息</strong></h2><p><img src=\"/posts/aws-1register/实例.png\" alt=\"选择实例类型\"></p>\n<h2 id=\"6-填写详细信息，大都默认\"><a href=\"#6-填写详细信息，大都默认\" class=\"headerlink\" title=\"6. 填写详细信息，大都默认\"></a>6. 填写详细信息，大都默认</h2><p><img src=\"/posts/aws-1register/详细.png\" alt=\"详细信息\"></p>\n<h2 id=\"7-添加存储，大小改为30G\"><a href=\"#7-添加存储，大小改为30G\" class=\"headerlink\" title=\"7. 添加存储，大小改为30G\"></a>7. 添加存储，大小改为30G</h2><p><img src=\"/posts/aws-1register/30g.png\" alt=\"存储大小\"></p>\n<h2 id=\"8-添加标签直接下一步\"><a href=\"#8-添加标签直接下一步\" class=\"headerlink\" title=\"8. 添加标签直接下一步\"></a>8. 添加标签直接<strong>下一步</strong></h2><p><img src=\"/posts/aws-1register/标签.png\" alt=\"添加标签\"></p>\n<h2 id=\"9-安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步审核启动\"><a href=\"#9-安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步审核启动\" class=\"headerlink\" title=\"9. 安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步审核启动\"></a>9. 安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步<strong>审核启动</strong></h2><p><img src=\"/posts/aws-1register/安全组.png\" alt=\"安全组配置\"></p>\n<h2 id=\"10-审核启动，确定没错后点击启动\"><a href=\"#10-审核启动，确定没错后点击启动\" class=\"headerlink\" title=\"10. 审核启动，确定没错后点击启动\"></a>10. 审核启动，确定没错后点击<strong>启动</strong></h2><p><img src=\"/posts/aws-1register/审核.png\" alt=\"审核启动\"></p>\n<h2 id=\"11-创建密钥，填写名称后下载密钥对（一定要保存好），点击启动实例\"><a href=\"#11-创建密钥，填写名称后下载密钥对（一定要保存好），点击启动实例\" class=\"headerlink\" title=\"11. 创建密钥，填写名称后下载密钥对（一定要保存好），点击启动实例\"></a>11. 创建密钥，填写名称后下载密钥对（一定要保存好），点击<strong>启动实例</strong></h2><p><img src=\"/posts/aws-1register/密钥.png\" alt=\"创建密钥\"></p>\n<h2 id=\"12-实例正在启动\"><a href=\"#12-实例正在启动\" class=\"headerlink\" title=\"12. 实例正在启动\"></a>12. 实例正在启动</h2><p><img src=\"/posts/aws-1register/状态.png\" alt=\"启动状态\"></p>\n<h2 id=\"13-启动完成，查看实例\"><a href=\"#13-启动完成，查看实例\" class=\"headerlink\" title=\"13. 启动完成，查看实例\"></a>13. 启动完成，查看实例</h2><p><img src=\"/posts/aws-1register/查看.png\" alt=\"查看实例\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":394,"excerpt":"<div class=\"note info\">\n            <p>参考文章：<a href=\"https://blog.csdn.net/jjihuang/article/details/80777306\">注册aws账号创建ec2免费套餐</a>,<a href=\"https://www.cnblogs.com/ccw869476711/p/11535812.html\">AWS使用教程</a></p>\n          </div>\n<h1 id=\"一、注册aws账号\"><a href=\"#一、注册aws账号\" class=\"headerlink\" title=\"一、注册aws账号\"></a>一、注册aws账号</h1><ul>\n<li>进入<a href=\"（https://portal.aws.amazon.com/billing/signup）\">aws注册页面</a></li>\n<li>填写email、密码、用户名等信息，绑定信用卡(我暂无支持aws的信用卡)</li>\n<li>完成注册</li></ul>","more":"\n\n<h1 id=\"二、开通EC2套餐\"><a href=\"#二、开通EC2套餐\" class=\"headerlink\" title=\"二、开通EC2套餐\"></a>二、开通EC2套餐</h1><h2 id=\"1-访问AWS主页，登录后找到AWS管理控制台\"><a href=\"#1-访问AWS主页，登录后找到AWS管理控制台\" class=\"headerlink\" title=\"1. 访问AWS主页，登录后找到AWS管理控制台\"></a>1. 访问<a href=\"https://aws.amazon.com/\">AWS主页</a>，登录后找到AWS管理控制台</h2><p><img src=\"/posts/aws-1register/主页.png\" alt=\"AWS管理控制\"></p>\n<h2 id=\"2-在控制台页面点击服务-gt-计算-gt-EC2\"><a href=\"#2-在控制台页面点击服务-gt-计算-gt-EC2\" class=\"headerlink\" title=\"2. 在控制台页面点击服务-&gt;计算-&gt;EC2\"></a>2. 在控制台页面点击<strong>服务-&gt;计算-&gt;EC2</strong></h2><p><img src=\"/posts/aws-1register/服务.png\" alt=\"选择服务\"></p>\n<h2 id=\"3-跳转到资源页面先选择区域再点击启动实例\"><a href=\"#3-跳转到资源页面先选择区域再点击启动实例\" class=\"headerlink\" title=\"3. 跳转到资源页面先选择区域再点击启动实例\"></a>3. 跳转到资源页面先选择区域再点击<strong>启动实例</strong></h2><p><img src=\"/posts/aws-1register/启动.png\" alt=\"启动实例\"></p>\n<h2 id=\"4-选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\"><a href=\"#4-选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\" class=\"headerlink\" title=\"4. 选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）\"></a>4. 选择AMI（记得打勾仅免费套餐，过滤出所有的AMI都是免费的。按照自己的需要选择一个，一般选第2个）</h2><p><img src=\"/posts/aws-1register/ami.png\" alt=\"选择AMI\"></p>\n<h2 id=\"5-实例类型默认，直接下一步：配置实例详细信息\"><a href=\"#5-实例类型默认，直接下一步：配置实例详细信息\" class=\"headerlink\" title=\"5. 实例类型默认，直接下一步：配置实例详细信息\"></a>5. 实例类型默认，直接<strong>下一步：配置实例详细信息</strong></h2><p><img src=\"/posts/aws-1register/实例.png\" alt=\"选择实例类型\"></p>\n<h2 id=\"6-填写详细信息，大都默认\"><a href=\"#6-填写详细信息，大都默认\" class=\"headerlink\" title=\"6. 填写详细信息，大都默认\"></a>6. 填写详细信息，大都默认</h2><p><img src=\"/posts/aws-1register/详细.png\" alt=\"详细信息\"></p>\n<h2 id=\"7-添加存储，大小改为30G\"><a href=\"#7-添加存储，大小改为30G\" class=\"headerlink\" title=\"7. 添加存储，大小改为30G\"></a>7. 添加存储，大小改为30G</h2><p><img src=\"/posts/aws-1register/30g.png\" alt=\"存储大小\"></p>\n<h2 id=\"8-添加标签直接下一步\"><a href=\"#8-添加标签直接下一步\" class=\"headerlink\" title=\"8. 添加标签直接下一步\"></a>8. 添加标签直接<strong>下一步</strong></h2><p><img src=\"/posts/aws-1register/标签.png\" alt=\"添加标签\"></p>\n<h2 id=\"9-安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步审核启动\"><a href=\"#9-安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步审核启动\" class=\"headerlink\" title=\"9. 安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步审核启动\"></a>9. 安全组主要开通访问服务器的端口和允许访问的IP，按下图配置完就可以下一步<strong>审核启动</strong></h2><p><img src=\"/posts/aws-1register/安全组.png\" alt=\"安全组配置\"></p>\n<h2 id=\"10-审核启动，确定没错后点击启动\"><a href=\"#10-审核启动，确定没错后点击启动\" class=\"headerlink\" title=\"10. 审核启动，确定没错后点击启动\"></a>10. 审核启动，确定没错后点击<strong>启动</strong></h2><p><img src=\"/posts/aws-1register/审核.png\" alt=\"审核启动\"></p>\n<h2 id=\"11-创建密钥，填写名称后下载密钥对（一定要保存好），点击启动实例\"><a href=\"#11-创建密钥，填写名称后下载密钥对（一定要保存好），点击启动实例\" class=\"headerlink\" title=\"11. 创建密钥，填写名称后下载密钥对（一定要保存好），点击启动实例\"></a>11. 创建密钥，填写名称后下载密钥对（一定要保存好），点击<strong>启动实例</strong></h2><p><img src=\"/posts/aws-1register/密钥.png\" alt=\"创建密钥\"></p>\n<h2 id=\"12-实例正在启动\"><a href=\"#12-实例正在启动\" class=\"headerlink\" title=\"12. 实例正在启动\"></a>12. 实例正在启动</h2><p><img src=\"/posts/aws-1register/状态.png\" alt=\"启动状态\"></p>\n<h2 id=\"13-启动完成，查看实例\"><a href=\"#13-启动完成，查看实例\" class=\"headerlink\" title=\"13. 启动完成，查看实例\"></a>13. 启动完成，查看实例</h2><p><img src=\"/posts/aws-1register/查看.png\" alt=\"查看实例\"></p>"},{"title":"Vue框架搭建的餐厅管理系统","date":"2020-09-18T12:07:34.000Z","_content":"\n{% note info %}\n使用系统前务必阅读本文件！如果没有安装好环境，可以直接访问[餐厅管理系统](https://rest.guoshaocong.cn)，功能与我们的代码是一致的。\n{% endnote %}\n\n## 餐厅管理系统\n\n### 简介\n一个餐厅管理系统，前端由Vue框架进行开发，后端使用js，和数据库一起部署在阿里云上。\n<!-- more -->\n### 功能\n1. 用户正常登陆与登出\n2. 前台管理系统可以满足用户进行开台、买单与结账数据分析的需求\n3. 基础信息管理可以满足用户进行对餐品与餐桌的管理\n4. 服务管理部分可以满足用户进行点餐，开单，签单的需求\n5. 人员管理部分可以满足用户进行对顾客和员工的管理\n\n## 环境安装\n由于本系统后端部分部署在阿里云上，所以只需安装前端依赖\n\n### 安装Node.js，换源\n\n- 打开[Node.js官网](https://nodejs.org/en/)，选择LTS版本下载（目前为12.16.1），并进行安装。\n- 使用淘宝源：`npm config set registry https://registry.npm.taobao.org`\n- 验证换源是否成功：`npm config get registry`\n\n### 安装vue-cli\n\n- 安装：`npm install -g @vue/cli`\n- 验证：`vue --version`\n\n### 下载项目源码\n\n- 使用git下载 \n`git clone https://github.com/MofasJang/restaurant`\n- 访问[github仓库](https://github.com/MofasJang/restaurant)下载\n\n### 安装项目所需依赖\n\n- 确保终端位于frontend目录内\n- `npm install`来按照package.json安装所有所需依赖\n\n### 进行本地测试\n\n- 运行开发服务器：`npm run serve`\n- 访问终端中显示的地址 `http://localhost:8080/` ，应该能看到前端页面。\n\n\n## 为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\n","source":"_posts/Vue-rest.md","raw":"---\ntitle: Vue框架搭建的餐厅管理系统\ndate: 2020-09-18 20:07:34\ntags: \n- Vue\ncategories: \n- frontend\n- Vue\n---\n\n{% note info %}\n使用系统前务必阅读本文件！如果没有安装好环境，可以直接访问[餐厅管理系统](https://rest.guoshaocong.cn)，功能与我们的代码是一致的。\n{% endnote %}\n\n## 餐厅管理系统\n\n### 简介\n一个餐厅管理系统，前端由Vue框架进行开发，后端使用js，和数据库一起部署在阿里云上。\n<!-- more -->\n### 功能\n1. 用户正常登陆与登出\n2. 前台管理系统可以满足用户进行开台、买单与结账数据分析的需求\n3. 基础信息管理可以满足用户进行对餐品与餐桌的管理\n4. 服务管理部分可以满足用户进行点餐，开单，签单的需求\n5. 人员管理部分可以满足用户进行对顾客和员工的管理\n\n## 环境安装\n由于本系统后端部分部署在阿里云上，所以只需安装前端依赖\n\n### 安装Node.js，换源\n\n- 打开[Node.js官网](https://nodejs.org/en/)，选择LTS版本下载（目前为12.16.1），并进行安装。\n- 使用淘宝源：`npm config set registry https://registry.npm.taobao.org`\n- 验证换源是否成功：`npm config get registry`\n\n### 安装vue-cli\n\n- 安装：`npm install -g @vue/cli`\n- 验证：`vue --version`\n\n### 下载项目源码\n\n- 使用git下载 \n`git clone https://github.com/MofasJang/restaurant`\n- 访问[github仓库](https://github.com/MofasJang/restaurant)下载\n\n### 安装项目所需依赖\n\n- 确保终端位于frontend目录内\n- `npm install`来按照package.json安装所有所需依赖\n\n### 进行本地测试\n\n- 运行开发服务器：`npm run serve`\n- 访问终端中显示的地址 `http://localhost:8080/` ，应该能看到前端页面。\n\n\n## 为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\n","slug":"Vue-rest","published":1,"updated":"2020-09-19T08:48:34.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0g6000uc8pvbk30eq82","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>使用系统前务必阅读本文件！如果没有安装好环境，可以直接访问<a href=\"https://rest.guoshaocong.cn\">餐厅管理系统</a>，功能与我们的代码是一致的。</p>\n          </div>\n<h2 id=\"餐厅管理系统\"><a href=\"#餐厅管理系统\" class=\"headerlink\" title=\"餐厅管理系统\"></a>餐厅管理系统</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>一个餐厅管理系统，前端由Vue框架进行开发，后端使用js，和数据库一起部署在阿里云上。<br><a id=\"more\"></a></p>\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><ol>\n<li>用户正常登陆与登出</li>\n<li>前台管理系统可以满足用户进行开台、买单与结账数据分析的需求</li>\n<li>基础信息管理可以满足用户进行对餐品与餐桌的管理</li>\n<li>服务管理部分可以满足用户进行点餐，开单，签单的需求</li>\n<li>人员管理部分可以满足用户进行对顾客和员工的管理</li>\n</ol>\n<h2 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h2><p>由于本系统后端部分部署在阿里云上，所以只需安装前端依赖</p>\n<h3 id=\"安装Node-js，换源\"><a href=\"#安装Node-js，换源\" class=\"headerlink\" title=\"安装Node.js，换源\"></a>安装Node.js，换源</h3><ul>\n<li>打开<a href=\"https://nodejs.org/en/\">Node.js官网</a>，选择LTS版本下载（目前为12.16.1），并进行安装。</li>\n<li>使用淘宝源：<code>npm config set registry https://registry.npm.taobao.org</code></li>\n<li>验证换源是否成功：<code>npm config get registry</code></li>\n</ul>\n<h3 id=\"安装vue-cli\"><a href=\"#安装vue-cli\" class=\"headerlink\" title=\"安装vue-cli\"></a>安装vue-cli</h3><ul>\n<li>安装：<code>npm install -g @vue/cli</code></li>\n<li>验证：<code>vue --version</code></li>\n</ul>\n<h3 id=\"下载项目源码\"><a href=\"#下载项目源码\" class=\"headerlink\" title=\"下载项目源码\"></a>下载项目源码</h3><ul>\n<li>使用git下载<br><code>git clone https://github.com/MofasJang/restaurant</code></li>\n<li>访问<a href=\"https://github.com/MofasJang/restaurant\">github仓库</a>下载</li>\n</ul>\n<h3 id=\"安装项目所需依赖\"><a href=\"#安装项目所需依赖\" class=\"headerlink\" title=\"安装项目所需依赖\"></a>安装项目所需依赖</h3><ul>\n<li>确保终端位于frontend目录内</li>\n<li><code>npm install</code>来按照package.json安装所有所需依赖</li>\n</ul>\n<h3 id=\"进行本地测试\"><a href=\"#进行本地测试\" class=\"headerlink\" title=\"进行本地测试\"></a>进行本地测试</h3><ul>\n<li>运行开发服务器：<code>npm run serve</code></li>\n<li>访问终端中显示的地址 <code>http://localhost:8080/</code> ，应该能看到前端页面。</li>\n</ul>\n<h2 id=\"为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\"><a href=\"#为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\" class=\"headerlink\" title=\"为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\"></a>为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！</h2>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":661,"excerpt":"<div class=\"note info\">\n            <p>使用系统前务必阅读本文件！如果没有安装好环境，可以直接访问<a href=\"https://rest.guoshaocong.cn\">餐厅管理系统</a>，功能与我们的代码是一致的。</p>\n          </div>\n<h2 id=\"餐厅管理系统\"><a href=\"#餐厅管理系统\" class=\"headerlink\" title=\"餐厅管理系统\"></a>餐厅管理系统</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>一个餐厅管理系统，前端由Vue框架进行开发，后端使用js，和数据库一起部署在阿里云上。<br></p>","more":"<p></p>\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><ol>\n<li>用户正常登陆与登出</li>\n<li>前台管理系统可以满足用户进行开台、买单与结账数据分析的需求</li>\n<li>基础信息管理可以满足用户进行对餐品与餐桌的管理</li>\n<li>服务管理部分可以满足用户进行点餐，开单，签单的需求</li>\n<li>人员管理部分可以满足用户进行对顾客和员工的管理</li>\n</ol>\n<h2 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h2><p>由于本系统后端部分部署在阿里云上，所以只需安装前端依赖</p>\n<h3 id=\"安装Node-js，换源\"><a href=\"#安装Node-js，换源\" class=\"headerlink\" title=\"安装Node.js，换源\"></a>安装Node.js，换源</h3><ul>\n<li>打开<a href=\"https://nodejs.org/en/\">Node.js官网</a>，选择LTS版本下载（目前为12.16.1），并进行安装。</li>\n<li>使用淘宝源：<code>npm config set registry https://registry.npm.taobao.org</code></li>\n<li>验证换源是否成功：<code>npm config get registry</code></li>\n</ul>\n<h3 id=\"安装vue-cli\"><a href=\"#安装vue-cli\" class=\"headerlink\" title=\"安装vue-cli\"></a>安装vue-cli</h3><ul>\n<li>安装：<code>npm install -g @vue/cli</code></li>\n<li>验证：<code>vue --version</code></li>\n</ul>\n<h3 id=\"下载项目源码\"><a href=\"#下载项目源码\" class=\"headerlink\" title=\"下载项目源码\"></a>下载项目源码</h3><ul>\n<li>使用git下载<br><code>git clone https://github.com/MofasJang/restaurant</code></li>\n<li>访问<a href=\"https://github.com/MofasJang/restaurant\">github仓库</a>下载</li>\n</ul>\n<h3 id=\"安装项目所需依赖\"><a href=\"#安装项目所需依赖\" class=\"headerlink\" title=\"安装项目所需依赖\"></a>安装项目所需依赖</h3><ul>\n<li>确保终端位于frontend目录内</li>\n<li><code>npm install</code>来按照package.json安装所有所需依赖</li>\n</ul>\n<h3 id=\"进行本地测试\"><a href=\"#进行本地测试\" class=\"headerlink\" title=\"进行本地测试\"></a>进行本地测试</h3><ul>\n<li>运行开发服务器：<code>npm run serve</code></li>\n<li>访问终端中显示的地址 <code>http://localhost:8080/</code> ，应该能看到前端页面。</li>\n</ul>\n<h2 id=\"为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\"><a href=\"#为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\" class=\"headerlink\" title=\"为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！\"></a>为了方便于登陆，默认账号密码可以回车录入，点击登陆，就可以使用本系统了！</h2>"},{"title":"使用AWS Deep Learning Containers在Amazon EC2上训练深度学习模型","date":"2021-02-09T08:03:57.000Z","_content":"{% note info %}\n参考文章：[Train deep learning model AWS EC2 containers](https://aws.amazon.com/cn/getting-started/hands-on/train-deep-learning-model-aws-ec2-containers/)\n{% endnote %}\n# 简介\n* AWS Deep Learning Containers (DL Containers)是预先安装了深度学习框架的 Docker 镜像，可以跳过从头构建和优化环境的复杂流程，轻松快速部署自定义机器学习环境。\n* 利用AWS DL Containers，开发人员和数据科学家可以为其部署在 Amazon Elastic Container Service for Kubernetes (Amazon EKS)、自行管理的Kubernetes、Amazon Elastic Container Service (Amazon ECS) 和 Amazon EC2 上的容器化应用程序添加机器学习功能。\n* 本文中我们将使用 AWS Deep Learning Containers 在 Amazon EC2 实例上训练一个 TensorFlow 机器学习模型。由于还未学习TensorFlow 机器学习模型的建立和使用，故文中使用AWS官方给出的样例。\n<!-- more -->\n\n# 一、添加访问Amazon ECR的权限\n## 1. 导航到 IAM 控制台\n打开 AWS 管理控制台，以便使本分步指南处于打开状态。此屏幕加载后，请输入用户名和密码以便开始操作。在搜索栏中输入 IAM，然后选择 **IAM** 以便打开服务控制台。\n![导航到 IAM 控制台](1a.png)\n\n## 2. 选择用户\n在左侧导航窗格中，选择**用户**。\n![选择用户](1b.png)\n\n## 3. 添加权限\n现在，为所创建的新 IAM 用户或现有 IAM 用户添加权限。在 IAM 用户摘要页面上选择**添加权限**。\n![添加权限](1c.png)\n\n## 4. 添加 ECS 完全访问策略\n选择**直接附加现有策略**，搜索 ECS_FullAccess。选择 **Amazon_FullAccess** 策略，依次单击**查看**和**添加权限**。\n![添加 ECS 完全访问策略](1d.png)\n\n## 5. 添加内联策略\n在 IAM 用户摘要页面上选择**添加内联策略**。\n![添加内联策略](1e.png)\n\n## 6. 粘贴 JSON 策略\n选择 **JSON** 选项卡并粘贴以下策略：\n```json\n{\n       \"Version\": \"2012-10-17\",\n       \"Statement\": [\n              {\n                     \"Action\": \"ecr:*\",\n                     \"Effect\": \"Allow\",\n                     \"Resource\": \"*\"\n              }\n       ]\n}\n```\n将此策略另存为 “ECR”，然后选择**创建策略**。\n![粘贴 JSON 策略](1f.png)\n\n# 二、启动一个 AWS Deep Learning Base AMI 实例\n在本文中，我们将在 AWS Deep Learning Base Amazon Machine Images (AMIs) 上使用 AWS Deep Learning Containers，这些容器预先打包了必要的依赖项，例如 Nvidia 驱动程序、docker 和 nvidia-docker。可以使用这些软件包在任何 AMI 上运行 Deep Learning Containers。\n## 1. 导航到EC2控制台\n返回到 AWS 管理控制台，在搜索栏中输入 EC2，并选择 **EC2**以打开服务控制台。\n![导航到EC2控制台](2a.png)\n\n## 2. 启动一个 Amazon EC2 实例\n再次导航到 Amazon EC2 控制台，然后选择 **Launch Instance**（启动实例）按钮。\n![启动一个 Amazon EC2 实例](2b.png)\n\n## 3. 选择 AWS Deep Learning Base AMI\n选择左侧的 **AWS Marketplace** 选项卡，然后搜索“deep learning base ubuntu”。选择 **Deep Learning Base AMI (Ubuntu)**。还可以选择 **Deep Learning Base AMI (Amazon Linux)**。\n![选择 AWS Deep Learning Base AMI](2c.png)\n\n## 4. 选择实例类型\n选择 Amazon EC2 实例类型。Amazon Elastic Compute Cloud (EC2) 是用于在云中创建和运行虚拟机的 Amazon Web 服务。AWS 将这些虚拟机称为“实例”。可以选择c5.large或基于GPU 的 P3 实例。\n\n选择**检查和启动**。\n![选择实例类型](2d.png)\n\n## 5. 启动实例\n查看实例的详细信息，然后选择**启动**。\n![启动实例](2e.png)\n\n## 6. 创建一个新的私钥文件\n* 在下一个屏幕中，系统会要求选择现有密钥对或创建新的密钥对。可以使用密钥对通过 SSH 安全访问实例。AWS 会存储密钥对的公有部分，该部分密钥的作用就像门锁。需下载并使用密钥对的私有部分，该部分密钥的作用就像门锁钥匙。\n\n* 选择**创建新密钥对**，并为其命名。然后选择**下载密钥对**，并将密钥存储在安全的位置。如果丢失密钥，就无法访问该实例。如果他人获得密钥，他们就能够访问该实例。\n\n* 如果以前创建了私钥文件，并且现在仍可访问，则可以选择选择**现有的密钥对**，使用现有私钥。\n\n![创建一个新的私钥文件](2f.png)\n\n## 7. 查看实例详情\n选择**实例ID**，在控制台上查看新创建的 Amazon EC2 的详细信息。 \n![查看实例详情](2g.png)\n\n# 三、连接到实例\n在此步骤中，将使用 SSH 连接到新启动的实例。以下说明使用 Mac/Linux 环境。如果使用的是 Windows，请按照[教程](https://aws.amazon.com/cn/getting-started/hands-on/launch-a-virtual-machine/)完成。\n## 1. 找到实例的公共 DNS 并复制\n在**说明**选项卡下，复制 Amazon EC2 实例的公共 DNS (IPv4)。\n![找到实例的公共 DNS 并复制](3a.png)\n\n## 2. 打开命令行终端\n在终端中使用以下命令更改为安全密钥所在的目录，然后使用 SSH 连接实例。\n```javascript\ncd /Users/<your_username>/Downloads/\n\nchmod 0400 <your .pem filename>\n\nssh -L localhost:8888:localhost:8888 -i <your .pem filename> ubuntu@<your instance DNS>\n```\n![打开命令行终端](3b.png)\n\n# 四、登录到 Amazon ECR\nAWS Deep Learning Container 映像托管在 Amazon Elastic Container Registry (ECR) 上，这是一个完全托管的 Docker 容器注册表，让开发人员可以轻松存储、管理和部署 Docker 容器映像。在此步骤中，将登录并验证能否正常访问 Amazon ECR。\n\n## 1. 使用 AWS 凭证配置 EC2 实例\n需要提供AWS 访问密钥 ID 和秘密访问密钥。如果还没有这些信息，则可以在[此处](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey)创建访问密钥 ID 和秘密访问密钥。\n![使用 AWS 凭证配置 EC2 实例](4a.png)\n\n## 2. 登录到 Amazon ECR\n使用以下命令登录到 Amazon ECR：\n```javascript\n$(aws ecr get-login --region us-east-1 --no-include-email --registry-ids 763104351884)\n```\n**注意**：需要在命令中包含“$”和圆括号。完成此步骤后，将看到“登录成功”。\n![登录到 Amazon ECR](4b.png)\n\n# 五、使用 Deep Learning Containers 运行 TensorFlow 训练\n在此步骤中，我们将使用 AWS Deep Learning Container 映像，通过 Python 3.6 在 CPU 实例上进行 TensorFlow 训练。\n## 1.运行 AWS Deep Learning Containers\n现在，使用以下命令在 EC2 实例上运行 AWS Deep Learning Container 映像。如果 Deep Learning Container 映像在本地不存在，则此命令将自动提取该映像。\n```javascript\ndocker run -it 763104351884.dkr.ecr.us-east-1.amazonaws.com/tensorflow-training:1.13-cpu-py36-ubuntu16.04\n```\n**注意**：此步骤可能需要几分钟，具体取决于映像的大小。如果使用的是 GPU 实例，请使用“nvidia-docker”而非“docker”。 成功完成此步骤后，将为容器进入一个 bash 提示符界面。\n![运行 AWS Deep Learning Containers](5a.png)\n\n\n## 2.拉取一个示例模型进行训练\n我们将克隆 Keras 存储库，其中包括用于训练模型的示例 Python 脚本。\n```javascript\ngit clone https://github.com/fchollet/keras.git\n```\n![拉取一个示例模型进行训练](5b.png)\n\n## 3. 开始训练\n使用以下命令开始训练规范的 MNIST CNN 模型：\n```javascript\npython keras/examples/mnist_cnn.py\n```\n已经成功使用 AWS Deep Learning Container 开始了训练。\n![开始训练](5c.png)\n\n\n# 六、终止资源\n在此步骤中，将终止在本教程中创建的 Amazon EC2 实例。\n\n**注意**：终止当前未在使用的资源可降低成本，这是最佳实践。不终止资源可能会在账户下产生费用。\n## 1.选择正在运行的实例\n在 Amazon EC2 控制台上，选择**正在运行的实例**。\n![选择正在运行的实例](6a.png)\n\n## 2.终止EC2实例\n选择之前创建的 EC2 实例，再选择**操作 > 实例状态 > 终止**。\n![终止EC2实例](6b.png)\n\n## 3. 确认终止\n系统会提示确认终止。选择**是，终止**。\n\n**注意**：完成此过程可能需要几秒钟。终止实例后，EC2 控制台上的“实例状态”会变为“已终止”。\n![确认终止](6c.png)\n\n","source":"_posts/aws-4deepl.md","raw":"---\ntitle: 使用AWS Deep Learning Containers在Amazon EC2上训练深度学习模型\ndate: 2021-02-09 16:03:57\ntags:\n- 云服务\n- AWS\n- 亚马逊\n- 深度学习\ncategories:\n- 云服务\n- AWS\n---\n{% note info %}\n参考文章：[Train deep learning model AWS EC2 containers](https://aws.amazon.com/cn/getting-started/hands-on/train-deep-learning-model-aws-ec2-containers/)\n{% endnote %}\n# 简介\n* AWS Deep Learning Containers (DL Containers)是预先安装了深度学习框架的 Docker 镜像，可以跳过从头构建和优化环境的复杂流程，轻松快速部署自定义机器学习环境。\n* 利用AWS DL Containers，开发人员和数据科学家可以为其部署在 Amazon Elastic Container Service for Kubernetes (Amazon EKS)、自行管理的Kubernetes、Amazon Elastic Container Service (Amazon ECS) 和 Amazon EC2 上的容器化应用程序添加机器学习功能。\n* 本文中我们将使用 AWS Deep Learning Containers 在 Amazon EC2 实例上训练一个 TensorFlow 机器学习模型。由于还未学习TensorFlow 机器学习模型的建立和使用，故文中使用AWS官方给出的样例。\n<!-- more -->\n\n# 一、添加访问Amazon ECR的权限\n## 1. 导航到 IAM 控制台\n打开 AWS 管理控制台，以便使本分步指南处于打开状态。此屏幕加载后，请输入用户名和密码以便开始操作。在搜索栏中输入 IAM，然后选择 **IAM** 以便打开服务控制台。\n![导航到 IAM 控制台](1a.png)\n\n## 2. 选择用户\n在左侧导航窗格中，选择**用户**。\n![选择用户](1b.png)\n\n## 3. 添加权限\n现在，为所创建的新 IAM 用户或现有 IAM 用户添加权限。在 IAM 用户摘要页面上选择**添加权限**。\n![添加权限](1c.png)\n\n## 4. 添加 ECS 完全访问策略\n选择**直接附加现有策略**，搜索 ECS_FullAccess。选择 **Amazon_FullAccess** 策略，依次单击**查看**和**添加权限**。\n![添加 ECS 完全访问策略](1d.png)\n\n## 5. 添加内联策略\n在 IAM 用户摘要页面上选择**添加内联策略**。\n![添加内联策略](1e.png)\n\n## 6. 粘贴 JSON 策略\n选择 **JSON** 选项卡并粘贴以下策略：\n```json\n{\n       \"Version\": \"2012-10-17\",\n       \"Statement\": [\n              {\n                     \"Action\": \"ecr:*\",\n                     \"Effect\": \"Allow\",\n                     \"Resource\": \"*\"\n              }\n       ]\n}\n```\n将此策略另存为 “ECR”，然后选择**创建策略**。\n![粘贴 JSON 策略](1f.png)\n\n# 二、启动一个 AWS Deep Learning Base AMI 实例\n在本文中，我们将在 AWS Deep Learning Base Amazon Machine Images (AMIs) 上使用 AWS Deep Learning Containers，这些容器预先打包了必要的依赖项，例如 Nvidia 驱动程序、docker 和 nvidia-docker。可以使用这些软件包在任何 AMI 上运行 Deep Learning Containers。\n## 1. 导航到EC2控制台\n返回到 AWS 管理控制台，在搜索栏中输入 EC2，并选择 **EC2**以打开服务控制台。\n![导航到EC2控制台](2a.png)\n\n## 2. 启动一个 Amazon EC2 实例\n再次导航到 Amazon EC2 控制台，然后选择 **Launch Instance**（启动实例）按钮。\n![启动一个 Amazon EC2 实例](2b.png)\n\n## 3. 选择 AWS Deep Learning Base AMI\n选择左侧的 **AWS Marketplace** 选项卡，然后搜索“deep learning base ubuntu”。选择 **Deep Learning Base AMI (Ubuntu)**。还可以选择 **Deep Learning Base AMI (Amazon Linux)**。\n![选择 AWS Deep Learning Base AMI](2c.png)\n\n## 4. 选择实例类型\n选择 Amazon EC2 实例类型。Amazon Elastic Compute Cloud (EC2) 是用于在云中创建和运行虚拟机的 Amazon Web 服务。AWS 将这些虚拟机称为“实例”。可以选择c5.large或基于GPU 的 P3 实例。\n\n选择**检查和启动**。\n![选择实例类型](2d.png)\n\n## 5. 启动实例\n查看实例的详细信息，然后选择**启动**。\n![启动实例](2e.png)\n\n## 6. 创建一个新的私钥文件\n* 在下一个屏幕中，系统会要求选择现有密钥对或创建新的密钥对。可以使用密钥对通过 SSH 安全访问实例。AWS 会存储密钥对的公有部分，该部分密钥的作用就像门锁。需下载并使用密钥对的私有部分，该部分密钥的作用就像门锁钥匙。\n\n* 选择**创建新密钥对**，并为其命名。然后选择**下载密钥对**，并将密钥存储在安全的位置。如果丢失密钥，就无法访问该实例。如果他人获得密钥，他们就能够访问该实例。\n\n* 如果以前创建了私钥文件，并且现在仍可访问，则可以选择选择**现有的密钥对**，使用现有私钥。\n\n![创建一个新的私钥文件](2f.png)\n\n## 7. 查看实例详情\n选择**实例ID**，在控制台上查看新创建的 Amazon EC2 的详细信息。 \n![查看实例详情](2g.png)\n\n# 三、连接到实例\n在此步骤中，将使用 SSH 连接到新启动的实例。以下说明使用 Mac/Linux 环境。如果使用的是 Windows，请按照[教程](https://aws.amazon.com/cn/getting-started/hands-on/launch-a-virtual-machine/)完成。\n## 1. 找到实例的公共 DNS 并复制\n在**说明**选项卡下，复制 Amazon EC2 实例的公共 DNS (IPv4)。\n![找到实例的公共 DNS 并复制](3a.png)\n\n## 2. 打开命令行终端\n在终端中使用以下命令更改为安全密钥所在的目录，然后使用 SSH 连接实例。\n```javascript\ncd /Users/<your_username>/Downloads/\n\nchmod 0400 <your .pem filename>\n\nssh -L localhost:8888:localhost:8888 -i <your .pem filename> ubuntu@<your instance DNS>\n```\n![打开命令行终端](3b.png)\n\n# 四、登录到 Amazon ECR\nAWS Deep Learning Container 映像托管在 Amazon Elastic Container Registry (ECR) 上，这是一个完全托管的 Docker 容器注册表，让开发人员可以轻松存储、管理和部署 Docker 容器映像。在此步骤中，将登录并验证能否正常访问 Amazon ECR。\n\n## 1. 使用 AWS 凭证配置 EC2 实例\n需要提供AWS 访问密钥 ID 和秘密访问密钥。如果还没有这些信息，则可以在[此处](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey)创建访问密钥 ID 和秘密访问密钥。\n![使用 AWS 凭证配置 EC2 实例](4a.png)\n\n## 2. 登录到 Amazon ECR\n使用以下命令登录到 Amazon ECR：\n```javascript\n$(aws ecr get-login --region us-east-1 --no-include-email --registry-ids 763104351884)\n```\n**注意**：需要在命令中包含“$”和圆括号。完成此步骤后，将看到“登录成功”。\n![登录到 Amazon ECR](4b.png)\n\n# 五、使用 Deep Learning Containers 运行 TensorFlow 训练\n在此步骤中，我们将使用 AWS Deep Learning Container 映像，通过 Python 3.6 在 CPU 实例上进行 TensorFlow 训练。\n## 1.运行 AWS Deep Learning Containers\n现在，使用以下命令在 EC2 实例上运行 AWS Deep Learning Container 映像。如果 Deep Learning Container 映像在本地不存在，则此命令将自动提取该映像。\n```javascript\ndocker run -it 763104351884.dkr.ecr.us-east-1.amazonaws.com/tensorflow-training:1.13-cpu-py36-ubuntu16.04\n```\n**注意**：此步骤可能需要几分钟，具体取决于映像的大小。如果使用的是 GPU 实例，请使用“nvidia-docker”而非“docker”。 成功完成此步骤后，将为容器进入一个 bash 提示符界面。\n![运行 AWS Deep Learning Containers](5a.png)\n\n\n## 2.拉取一个示例模型进行训练\n我们将克隆 Keras 存储库，其中包括用于训练模型的示例 Python 脚本。\n```javascript\ngit clone https://github.com/fchollet/keras.git\n```\n![拉取一个示例模型进行训练](5b.png)\n\n## 3. 开始训练\n使用以下命令开始训练规范的 MNIST CNN 模型：\n```javascript\npython keras/examples/mnist_cnn.py\n```\n已经成功使用 AWS Deep Learning Container 开始了训练。\n![开始训练](5c.png)\n\n\n# 六、终止资源\n在此步骤中，将终止在本教程中创建的 Amazon EC2 实例。\n\n**注意**：终止当前未在使用的资源可降低成本，这是最佳实践。不终止资源可能会在账户下产生费用。\n## 1.选择正在运行的实例\n在 Amazon EC2 控制台上，选择**正在运行的实例**。\n![选择正在运行的实例](6a.png)\n\n## 2.终止EC2实例\n选择之前创建的 EC2 实例，再选择**操作 > 实例状态 > 终止**。\n![终止EC2实例](6b.png)\n\n## 3. 确认终止\n系统会提示确认终止。选择**是，终止**。\n\n**注意**：完成此过程可能需要几秒钟。终止实例后，EC2 控制台上的“实例状态”会变为“已终止”。\n![确认终止](6c.png)\n\n","slug":"aws-4deepl","published":1,"updated":"2021-02-10T06:38:30.469Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0g8000yc8pvgy7n5q9x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>参考文章：<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/train-deep-learning-model-aws-ec2-containers/\">Train deep learning model AWS EC2 containers</a></p>\n          </div>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>AWS Deep Learning Containers (DL Containers)是预先安装了深度学习框架的 Docker 镜像，可以跳过从头构建和优化环境的复杂流程，轻松快速部署自定义机器学习环境。</li>\n<li>利用AWS DL Containers，开发人员和数据科学家可以为其部署在 Amazon Elastic Container Service for Kubernetes (Amazon EKS)、自行管理的Kubernetes、Amazon Elastic Container Service (Amazon ECS) 和 Amazon EC2 上的容器化应用程序添加机器学习功能。</li>\n<li>本文中我们将使用 AWS Deep Learning Containers 在 Amazon EC2 实例上训练一个 TensorFlow 机器学习模型。由于还未学习TensorFlow 机器学习模型的建立和使用，故文中使用AWS官方给出的样例。<a id=\"more\"></a>\n</li>\n</ul>\n<h1 id=\"一、添加访问Amazon-ECR的权限\"><a href=\"#一、添加访问Amazon-ECR的权限\" class=\"headerlink\" title=\"一、添加访问Amazon ECR的权限\"></a>一、添加访问Amazon ECR的权限</h1><h2 id=\"1-导航到-IAM-控制台\"><a href=\"#1-导航到-IAM-控制台\" class=\"headerlink\" title=\"1. 导航到 IAM 控制台\"></a>1. 导航到 IAM 控制台</h2><p>打开 AWS 管理控制台，以便使本分步指南处于打开状态。此屏幕加载后，请输入用户名和密码以便开始操作。在搜索栏中输入 IAM，然后选择 <strong>IAM</strong> 以便打开服务控制台。<br><img src=\"/posts/aws-4deepl/1a.png\" alt=\"导航到 IAM 控制台\"></p>\n<h2 id=\"2-选择用户\"><a href=\"#2-选择用户\" class=\"headerlink\" title=\"2. 选择用户\"></a>2. 选择用户</h2><p>在左侧导航窗格中，选择<strong>用户</strong>。<br><img src=\"/posts/aws-4deepl/1b.png\" alt=\"选择用户\"></p>\n<h2 id=\"3-添加权限\"><a href=\"#3-添加权限\" class=\"headerlink\" title=\"3. 添加权限\"></a>3. 添加权限</h2><p>现在，为所创建的新 IAM 用户或现有 IAM 用户添加权限。在 IAM 用户摘要页面上选择<strong>添加权限</strong>。<br><img src=\"/posts/aws-4deepl/1c.png\" alt=\"添加权限\"></p>\n<h2 id=\"4-添加-ECS-完全访问策略\"><a href=\"#4-添加-ECS-完全访问策略\" class=\"headerlink\" title=\"4. 添加 ECS 完全访问策略\"></a>4. 添加 ECS 完全访问策略</h2><p>选择<strong>直接附加现有策略</strong>，搜索 ECS_FullAccess。选择 <strong>Amazon_FullAccess</strong> 策略，依次单击<strong>查看</strong>和<strong>添加权限</strong>。<br><img src=\"/posts/aws-4deepl/1d.png\" alt=\"添加 ECS 完全访问策略\"></p>\n<h2 id=\"5-添加内联策略\"><a href=\"#5-添加内联策略\" class=\"headerlink\" title=\"5. 添加内联策略\"></a>5. 添加内联策略</h2><p>在 IAM 用户摘要页面上选择<strong>添加内联策略</strong>。<br><img src=\"/posts/aws-4deepl/1e.png\" alt=\"添加内联策略\"></p>\n<h2 id=\"6-粘贴-JSON-策略\"><a href=\"#6-粘贴-JSON-策略\" class=\"headerlink\" title=\"6. 粘贴 JSON 策略\"></a>6. 粘贴 JSON 策略</h2><p>选择 <strong>JSON</strong> 选项卡并粘贴以下策略：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">       <span class=\"attr\">&quot;Version&quot;</span>: <span class=\"string\">&quot;2012-10-17&quot;</span>,</span><br><span class=\"line\">       <span class=\"attr\">&quot;Statement&quot;</span>: [</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                     <span class=\"attr\">&quot;Action&quot;</span>: <span class=\"string\">&quot;ecr:*&quot;</span>,</span><br><span class=\"line\">                     <span class=\"attr\">&quot;Effect&quot;</span>: <span class=\"string\">&quot;Allow&quot;</span>,</span><br><span class=\"line\">                     <span class=\"attr\">&quot;Resource&quot;</span>: <span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">       ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>将此策略另存为 “ECR”，然后选择<strong>创建策略</strong>。<br><img src=\"/posts/aws-4deepl/1f.png\" alt=\"粘贴 JSON 策略\"></p>\n<h1 id=\"二、启动一个-AWS-Deep-Learning-Base-AMI-实例\"><a href=\"#二、启动一个-AWS-Deep-Learning-Base-AMI-实例\" class=\"headerlink\" title=\"二、启动一个 AWS Deep Learning Base AMI 实例\"></a>二、启动一个 AWS Deep Learning Base AMI 实例</h1><p>在本文中，我们将在 AWS Deep Learning Base Amazon Machine Images (AMIs) 上使用 AWS Deep Learning Containers，这些容器预先打包了必要的依赖项，例如 Nvidia 驱动程序、docker 和 nvidia-docker。可以使用这些软件包在任何 AMI 上运行 Deep Learning Containers。</p>\n<h2 id=\"1-导航到EC2控制台\"><a href=\"#1-导航到EC2控制台\" class=\"headerlink\" title=\"1. 导航到EC2控制台\"></a>1. 导航到EC2控制台</h2><p>返回到 AWS 管理控制台，在搜索栏中输入 EC2，并选择 <strong>EC2</strong>以打开服务控制台。<br><img src=\"/posts/aws-4deepl/2a.png\" alt=\"导航到EC2控制台\"></p>\n<h2 id=\"2-启动一个-Amazon-EC2-实例\"><a href=\"#2-启动一个-Amazon-EC2-实例\" class=\"headerlink\" title=\"2. 启动一个 Amazon EC2 实例\"></a>2. 启动一个 Amazon EC2 实例</h2><p>再次导航到 Amazon EC2 控制台，然后选择 <strong>Launch Instance</strong>（启动实例）按钮。<br><img src=\"/posts/aws-4deepl/2b.png\" alt=\"启动一个 Amazon EC2 实例\"></p>\n<h2 id=\"3-选择-AWS-Deep-Learning-Base-AMI\"><a href=\"#3-选择-AWS-Deep-Learning-Base-AMI\" class=\"headerlink\" title=\"3. 选择 AWS Deep Learning Base AMI\"></a>3. 选择 AWS Deep Learning Base AMI</h2><p>选择左侧的 <strong>AWS Marketplace</strong> 选项卡，然后搜索“deep learning base ubuntu”。选择 <strong>Deep Learning Base AMI (Ubuntu)</strong>。还可以选择 <strong>Deep Learning Base AMI (Amazon Linux)</strong>。<br><img src=\"/posts/aws-4deepl/2c.png\" alt=\"选择 AWS Deep Learning Base AMI\"></p>\n<h2 id=\"4-选择实例类型\"><a href=\"#4-选择实例类型\" class=\"headerlink\" title=\"4. 选择实例类型\"></a>4. 选择实例类型</h2><p>选择 Amazon EC2 实例类型。Amazon Elastic Compute Cloud (EC2) 是用于在云中创建和运行虚拟机的 Amazon Web 服务。AWS 将这些虚拟机称为“实例”。可以选择c5.large或基于GPU 的 P3 实例。</p>\n<p>选择<strong>检查和启动</strong>。<br><img src=\"/posts/aws-4deepl/2d.png\" alt=\"选择实例类型\"></p>\n<h2 id=\"5-启动实例\"><a href=\"#5-启动实例\" class=\"headerlink\" title=\"5. 启动实例\"></a>5. 启动实例</h2><p>查看实例的详细信息，然后选择<strong>启动</strong>。<br><img src=\"/posts/aws-4deepl/2e.png\" alt=\"启动实例\"></p>\n<h2 id=\"6-创建一个新的私钥文件\"><a href=\"#6-创建一个新的私钥文件\" class=\"headerlink\" title=\"6. 创建一个新的私钥文件\"></a>6. 创建一个新的私钥文件</h2><ul>\n<li><p>在下一个屏幕中，系统会要求选择现有密钥对或创建新的密钥对。可以使用密钥对通过 SSH 安全访问实例。AWS 会存储密钥对的公有部分，该部分密钥的作用就像门锁。需下载并使用密钥对的私有部分，该部分密钥的作用就像门锁钥匙。</p>\n</li>\n<li><p>选择<strong>创建新密钥对</strong>，并为其命名。然后选择<strong>下载密钥对</strong>，并将密钥存储在安全的位置。如果丢失密钥，就无法访问该实例。如果他人获得密钥，他们就能够访问该实例。</p>\n</li>\n<li><p>如果以前创建了私钥文件，并且现在仍可访问，则可以选择选择<strong>现有的密钥对</strong>，使用现有私钥。</p>\n</li>\n</ul>\n<p><img src=\"/posts/aws-4deepl/2f.png\" alt=\"创建一个新的私钥文件\"></p>\n<h2 id=\"7-查看实例详情\"><a href=\"#7-查看实例详情\" class=\"headerlink\" title=\"7. 查看实例详情\"></a>7. 查看实例详情</h2><p>选择<strong>实例ID</strong>，在控制台上查看新创建的 Amazon EC2 的详细信息。<br><img src=\"/posts/aws-4deepl/2g.png\" alt=\"查看实例详情\"></p>\n<h1 id=\"三、连接到实例\"><a href=\"#三、连接到实例\" class=\"headerlink\" title=\"三、连接到实例\"></a>三、连接到实例</h1><p>在此步骤中，将使用 SSH 连接到新启动的实例。以下说明使用 Mac/Linux 环境。如果使用的是 Windows，请按照<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/launch-a-virtual-machine/\">教程</a>完成。</p>\n<h2 id=\"1-找到实例的公共-DNS-并复制\"><a href=\"#1-找到实例的公共-DNS-并复制\" class=\"headerlink\" title=\"1. 找到实例的公共 DNS 并复制\"></a>1. 找到实例的公共 DNS 并复制</h2><p>在<strong>说明</strong>选项卡下，复制 Amazon EC2 实例的公共 DNS (IPv4)。<br><img src=\"/posts/aws-4deepl/3a.png\" alt=\"找到实例的公共 DNS 并复制\"></p>\n<h2 id=\"2-打开命令行终端\"><a href=\"#2-打开命令行终端\" class=\"headerlink\" title=\"2. 打开命令行终端\"></a>2. 打开命令行终端</h2><p>在终端中使用以下命令更改为安全密钥所在的目录，然后使用 SSH 连接实例。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /Users/<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">your_username</span>&gt;</span>/Downloads/</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod 0400 &lt;your .pem filename&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">ssh -L localhost:8888:localhost:8888 -i &lt;your .pem filename&gt; ubuntu@&lt;your instance DNS&gt;</span><br></pre></td></tr></table></figure><br><img src=\"/posts/aws-4deepl/3b.png\" alt=\"打开命令行终端\"></p>\n<h1 id=\"四、登录到-Amazon-ECR\"><a href=\"#四、登录到-Amazon-ECR\" class=\"headerlink\" title=\"四、登录到 Amazon ECR\"></a>四、登录到 Amazon ECR</h1><p>AWS Deep Learning Container 映像托管在 Amazon Elastic Container Registry (ECR) 上，这是一个完全托管的 Docker 容器注册表，让开发人员可以轻松存储、管理和部署 Docker 容器映像。在此步骤中，将登录并验证能否正常访问 Amazon ECR。</p>\n<h2 id=\"1-使用-AWS-凭证配置-EC2-实例\"><a href=\"#1-使用-AWS-凭证配置-EC2-实例\" class=\"headerlink\" title=\"1. 使用 AWS 凭证配置 EC2 实例\"></a>1. 使用 AWS 凭证配置 EC2 实例</h2><p>需要提供AWS 访问密钥 ID 和秘密访问密钥。如果还没有这些信息，则可以在<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey\">此处</a>创建访问密钥 ID 和秘密访问密钥。<br><img src=\"/posts/aws-4deepl/4a.png\" alt=\"使用 AWS 凭证配置 EC2 实例\"></p>\n<h2 id=\"2-登录到-Amazon-ECR\"><a href=\"#2-登录到-Amazon-ECR\" class=\"headerlink\" title=\"2. 登录到 Amazon ECR\"></a>2. 登录到 Amazon ECR</h2><p>使用以下命令登录到 Amazon ECR：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(aws ecr get-login --region us-east<span class=\"number\">-1</span> --no-include-email --registry-ids <span class=\"number\">763104351884</span>)</span><br></pre></td></tr></table></figure><br><strong>注意</strong>：需要在命令中包含“$”和圆括号。完成此步骤后，将看到“登录成功”。<br><img src=\"/posts/aws-4deepl/4b.png\" alt=\"登录到 Amazon ECR\"></p>\n<h1 id=\"五、使用-Deep-Learning-Containers-运行-TensorFlow-训练\"><a href=\"#五、使用-Deep-Learning-Containers-运行-TensorFlow-训练\" class=\"headerlink\" title=\"五、使用 Deep Learning Containers 运行 TensorFlow 训练\"></a>五、使用 Deep Learning Containers 运行 TensorFlow 训练</h1><p>在此步骤中，我们将使用 AWS Deep Learning Container 映像，通过 Python 3.6 在 CPU 实例上进行 TensorFlow 训练。</p>\n<h2 id=\"1-运行-AWS-Deep-Learning-Containers\"><a href=\"#1-运行-AWS-Deep-Learning-Containers\" class=\"headerlink\" title=\"1.运行 AWS Deep Learning Containers\"></a>1.运行 AWS Deep Learning Containers</h2><p>现在，使用以下命令在 EC2 实例上运行 AWS Deep Learning Container 映像。如果 Deep Learning Container 映像在本地不存在，则此命令将自动提取该映像。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it <span class=\"number\">763104351884.</span>dkr.ecr.us-east<span class=\"number\">-1.</span>amazonaws.com/tensorflow-training:<span class=\"number\">1.13</span>-cpu-py36-ubuntu16<span class=\"number\">.04</span></span><br></pre></td></tr></table></figure><br><strong>注意</strong>：此步骤可能需要几分钟，具体取决于映像的大小。如果使用的是 GPU 实例，请使用“nvidia-docker”而非“docker”。 成功完成此步骤后，将为容器进入一个 bash 提示符界面。<br><img src=\"/posts/aws-4deepl/5a.png\" alt=\"运行 AWS Deep Learning Containers\"></p>\n<h2 id=\"2-拉取一个示例模型进行训练\"><a href=\"#2-拉取一个示例模型进行训练\" class=\"headerlink\" title=\"2.拉取一个示例模型进行训练\"></a>2.拉取一个示例模型进行训练</h2><p>我们将克隆 Keras 存储库，其中包括用于训练模型的示例 Python 脚本。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/fchollet/keras.git</span></span><br></pre></td></tr></table></figure><br><img src=\"/posts/aws-4deepl/5b.png\" alt=\"拉取一个示例模型进行训练\"></p>\n<h2 id=\"3-开始训练\"><a href=\"#3-开始训练\" class=\"headerlink\" title=\"3. 开始训练\"></a>3. 开始训练</h2><p>使用以下命令开始训练规范的 MNIST CNN 模型：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python keras/examples/mnist_cnn.py</span><br></pre></td></tr></table></figure><br>已经成功使用 AWS Deep Learning Container 开始了训练。<br><img src=\"/posts/aws-4deepl/5c.png\" alt=\"开始训练\"></p>\n<h1 id=\"六、终止资源\"><a href=\"#六、终止资源\" class=\"headerlink\" title=\"六、终止资源\"></a>六、终止资源</h1><p>在此步骤中，将终止在本教程中创建的 Amazon EC2 实例。</p>\n<p><strong>注意</strong>：终止当前未在使用的资源可降低成本，这是最佳实践。不终止资源可能会在账户下产生费用。</p>\n<h2 id=\"1-选择正在运行的实例\"><a href=\"#1-选择正在运行的实例\" class=\"headerlink\" title=\"1.选择正在运行的实例\"></a>1.选择正在运行的实例</h2><p>在 Amazon EC2 控制台上，选择<strong>正在运行的实例</strong>。<br><img src=\"/posts/aws-4deepl/6a.png\" alt=\"选择正在运行的实例\"></p>\n<h2 id=\"2-终止EC2实例\"><a href=\"#2-终止EC2实例\" class=\"headerlink\" title=\"2.终止EC2实例\"></a>2.终止EC2实例</h2><p>选择之前创建的 EC2 实例，再选择<strong>操作 &gt; 实例状态 &gt; 终止</strong>。<br><img src=\"/posts/aws-4deepl/6b.png\" alt=\"终止EC2实例\"></p>\n<h2 id=\"3-确认终止\"><a href=\"#3-确认终止\" class=\"headerlink\" title=\"3. 确认终止\"></a>3. 确认终止</h2><p>系统会提示确认终止。选择<strong>是，终止</strong>。</p>\n<p><strong>注意</strong>：完成此过程可能需要几秒钟。终止实例后，EC2 控制台上的“实例状态”会变为“已终止”。<br><img src=\"/posts/aws-4deepl/6c.png\" alt=\"确认终止\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":3405,"excerpt":"<div class=\"note info\">\n            <p>参考文章：<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/train-deep-learning-model-aws-ec2-containers/\">Train deep learning model AWS EC2 containers</a></p>\n          </div>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>AWS Deep Learning Containers (DL Containers)是预先安装了深度学习框架的 Docker 镜像，可以跳过从头构建和优化环境的复杂流程，轻松快速部署自定义机器学习环境。</li>\n<li>利用AWS DL Containers，开发人员和数据科学家可以为其部署在 Amazon Elastic Container Service for Kubernetes (Amazon EKS)、自行管理的Kubernetes、Amazon Elastic Container Service (Amazon ECS) 和 Amazon EC2 上的容器化应用程序添加机器学习功能。</li>\n<li>本文中我们将使用 AWS Deep Learning Containers 在 Amazon EC2 实例上训练一个 TensorFlow 机器学习模型。由于还未学习TensorFlow 机器学习模型的建立和使用，故文中使用AWS官方给出的样例。</li></ul>","more":"\n\n<h1 id=\"一、添加访问Amazon-ECR的权限\"><a href=\"#一、添加访问Amazon-ECR的权限\" class=\"headerlink\" title=\"一、添加访问Amazon ECR的权限\"></a>一、添加访问Amazon ECR的权限</h1><h2 id=\"1-导航到-IAM-控制台\"><a href=\"#1-导航到-IAM-控制台\" class=\"headerlink\" title=\"1. 导航到 IAM 控制台\"></a>1. 导航到 IAM 控制台</h2><p>打开 AWS 管理控制台，以便使本分步指南处于打开状态。此屏幕加载后，请输入用户名和密码以便开始操作。在搜索栏中输入 IAM，然后选择 <strong>IAM</strong> 以便打开服务控制台。<br><img src=\"/posts/aws-4deepl/1a.png\" alt=\"导航到 IAM 控制台\"></p>\n<h2 id=\"2-选择用户\"><a href=\"#2-选择用户\" class=\"headerlink\" title=\"2. 选择用户\"></a>2. 选择用户</h2><p>在左侧导航窗格中，选择<strong>用户</strong>。<br><img src=\"/posts/aws-4deepl/1b.png\" alt=\"选择用户\"></p>\n<h2 id=\"3-添加权限\"><a href=\"#3-添加权限\" class=\"headerlink\" title=\"3. 添加权限\"></a>3. 添加权限</h2><p>现在，为所创建的新 IAM 用户或现有 IAM 用户添加权限。在 IAM 用户摘要页面上选择<strong>添加权限</strong>。<br><img src=\"/posts/aws-4deepl/1c.png\" alt=\"添加权限\"></p>\n<h2 id=\"4-添加-ECS-完全访问策略\"><a href=\"#4-添加-ECS-完全访问策略\" class=\"headerlink\" title=\"4. 添加 ECS 完全访问策略\"></a>4. 添加 ECS 完全访问策略</h2><p>选择<strong>直接附加现有策略</strong>，搜索 ECS_FullAccess。选择 <strong>Amazon_FullAccess</strong> 策略，依次单击<strong>查看</strong>和<strong>添加权限</strong>。<br><img src=\"/posts/aws-4deepl/1d.png\" alt=\"添加 ECS 完全访问策略\"></p>\n<h2 id=\"5-添加内联策略\"><a href=\"#5-添加内联策略\" class=\"headerlink\" title=\"5. 添加内联策略\"></a>5. 添加内联策略</h2><p>在 IAM 用户摘要页面上选择<strong>添加内联策略</strong>。<br><img src=\"/posts/aws-4deepl/1e.png\" alt=\"添加内联策略\"></p>\n<h2 id=\"6-粘贴-JSON-策略\"><a href=\"#6-粘贴-JSON-策略\" class=\"headerlink\" title=\"6. 粘贴 JSON 策略\"></a>6. 粘贴 JSON 策略</h2><p>选择 <strong>JSON</strong> 选项卡并粘贴以下策略：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">       <span class=\"attr\">&quot;Version&quot;</span>: <span class=\"string\">&quot;2012-10-17&quot;</span>,</span><br><span class=\"line\">       <span class=\"attr\">&quot;Statement&quot;</span>: [</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                     <span class=\"attr\">&quot;Action&quot;</span>: <span class=\"string\">&quot;ecr:*&quot;</span>,</span><br><span class=\"line\">                     <span class=\"attr\">&quot;Effect&quot;</span>: <span class=\"string\">&quot;Allow&quot;</span>,</span><br><span class=\"line\">                     <span class=\"attr\">&quot;Resource&quot;</span>: <span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">       ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>将此策略另存为 “ECR”，然后选择<strong>创建策略</strong>。<br><img src=\"/posts/aws-4deepl/1f.png\" alt=\"粘贴 JSON 策略\"></p>\n<h1 id=\"二、启动一个-AWS-Deep-Learning-Base-AMI-实例\"><a href=\"#二、启动一个-AWS-Deep-Learning-Base-AMI-实例\" class=\"headerlink\" title=\"二、启动一个 AWS Deep Learning Base AMI 实例\"></a>二、启动一个 AWS Deep Learning Base AMI 实例</h1><p>在本文中，我们将在 AWS Deep Learning Base Amazon Machine Images (AMIs) 上使用 AWS Deep Learning Containers，这些容器预先打包了必要的依赖项，例如 Nvidia 驱动程序、docker 和 nvidia-docker。可以使用这些软件包在任何 AMI 上运行 Deep Learning Containers。</p>\n<h2 id=\"1-导航到EC2控制台\"><a href=\"#1-导航到EC2控制台\" class=\"headerlink\" title=\"1. 导航到EC2控制台\"></a>1. 导航到EC2控制台</h2><p>返回到 AWS 管理控制台，在搜索栏中输入 EC2，并选择 <strong>EC2</strong>以打开服务控制台。<br><img src=\"/posts/aws-4deepl/2a.png\" alt=\"导航到EC2控制台\"></p>\n<h2 id=\"2-启动一个-Amazon-EC2-实例\"><a href=\"#2-启动一个-Amazon-EC2-实例\" class=\"headerlink\" title=\"2. 启动一个 Amazon EC2 实例\"></a>2. 启动一个 Amazon EC2 实例</h2><p>再次导航到 Amazon EC2 控制台，然后选择 <strong>Launch Instance</strong>（启动实例）按钮。<br><img src=\"/posts/aws-4deepl/2b.png\" alt=\"启动一个 Amazon EC2 实例\"></p>\n<h2 id=\"3-选择-AWS-Deep-Learning-Base-AMI\"><a href=\"#3-选择-AWS-Deep-Learning-Base-AMI\" class=\"headerlink\" title=\"3. 选择 AWS Deep Learning Base AMI\"></a>3. 选择 AWS Deep Learning Base AMI</h2><p>选择左侧的 <strong>AWS Marketplace</strong> 选项卡，然后搜索“deep learning base ubuntu”。选择 <strong>Deep Learning Base AMI (Ubuntu)</strong>。还可以选择 <strong>Deep Learning Base AMI (Amazon Linux)</strong>。<br><img src=\"/posts/aws-4deepl/2c.png\" alt=\"选择 AWS Deep Learning Base AMI\"></p>\n<h2 id=\"4-选择实例类型\"><a href=\"#4-选择实例类型\" class=\"headerlink\" title=\"4. 选择实例类型\"></a>4. 选择实例类型</h2><p>选择 Amazon EC2 实例类型。Amazon Elastic Compute Cloud (EC2) 是用于在云中创建和运行虚拟机的 Amazon Web 服务。AWS 将这些虚拟机称为“实例”。可以选择c5.large或基于GPU 的 P3 实例。</p>\n<p>选择<strong>检查和启动</strong>。<br><img src=\"/posts/aws-4deepl/2d.png\" alt=\"选择实例类型\"></p>\n<h2 id=\"5-启动实例\"><a href=\"#5-启动实例\" class=\"headerlink\" title=\"5. 启动实例\"></a>5. 启动实例</h2><p>查看实例的详细信息，然后选择<strong>启动</strong>。<br><img src=\"/posts/aws-4deepl/2e.png\" alt=\"启动实例\"></p>\n<h2 id=\"6-创建一个新的私钥文件\"><a href=\"#6-创建一个新的私钥文件\" class=\"headerlink\" title=\"6. 创建一个新的私钥文件\"></a>6. 创建一个新的私钥文件</h2><ul>\n<li><p>在下一个屏幕中，系统会要求选择现有密钥对或创建新的密钥对。可以使用密钥对通过 SSH 安全访问实例。AWS 会存储密钥对的公有部分，该部分密钥的作用就像门锁。需下载并使用密钥对的私有部分，该部分密钥的作用就像门锁钥匙。</p>\n</li>\n<li><p>选择<strong>创建新密钥对</strong>，并为其命名。然后选择<strong>下载密钥对</strong>，并将密钥存储在安全的位置。如果丢失密钥，就无法访问该实例。如果他人获得密钥，他们就能够访问该实例。</p>\n</li>\n<li><p>如果以前创建了私钥文件，并且现在仍可访问，则可以选择选择<strong>现有的密钥对</strong>，使用现有私钥。</p>\n</li>\n</ul>\n<p><img src=\"/posts/aws-4deepl/2f.png\" alt=\"创建一个新的私钥文件\"></p>\n<h2 id=\"7-查看实例详情\"><a href=\"#7-查看实例详情\" class=\"headerlink\" title=\"7. 查看实例详情\"></a>7. 查看实例详情</h2><p>选择<strong>实例ID</strong>，在控制台上查看新创建的 Amazon EC2 的详细信息。<br><img src=\"/posts/aws-4deepl/2g.png\" alt=\"查看实例详情\"></p>\n<h1 id=\"三、连接到实例\"><a href=\"#三、连接到实例\" class=\"headerlink\" title=\"三、连接到实例\"></a>三、连接到实例</h1><p>在此步骤中，将使用 SSH 连接到新启动的实例。以下说明使用 Mac/Linux 环境。如果使用的是 Windows，请按照<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/launch-a-virtual-machine/\">教程</a>完成。</p>\n<h2 id=\"1-找到实例的公共-DNS-并复制\"><a href=\"#1-找到实例的公共-DNS-并复制\" class=\"headerlink\" title=\"1. 找到实例的公共 DNS 并复制\"></a>1. 找到实例的公共 DNS 并复制</h2><p>在<strong>说明</strong>选项卡下，复制 Amazon EC2 实例的公共 DNS (IPv4)。<br><img src=\"/posts/aws-4deepl/3a.png\" alt=\"找到实例的公共 DNS 并复制\"></p>\n<h2 id=\"2-打开命令行终端\"><a href=\"#2-打开命令行终端\" class=\"headerlink\" title=\"2. 打开命令行终端\"></a>2. 打开命令行终端</h2><p>在终端中使用以下命令更改为安全密钥所在的目录，然后使用 SSH 连接实例。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /Users/<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">your_username</span>&gt;</span>/Downloads/</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod 0400 &lt;your .pem filename&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">ssh -L localhost:8888:localhost:8888 -i &lt;your .pem filename&gt; ubuntu@&lt;your instance DNS&gt;</span><br></pre></td></tr></table></figure><br><img src=\"/posts/aws-4deepl/3b.png\" alt=\"打开命令行终端\"></p>\n<h1 id=\"四、登录到-Amazon-ECR\"><a href=\"#四、登录到-Amazon-ECR\" class=\"headerlink\" title=\"四、登录到 Amazon ECR\"></a>四、登录到 Amazon ECR</h1><p>AWS Deep Learning Container 映像托管在 Amazon Elastic Container Registry (ECR) 上，这是一个完全托管的 Docker 容器注册表，让开发人员可以轻松存储、管理和部署 Docker 容器映像。在此步骤中，将登录并验证能否正常访问 Amazon ECR。</p>\n<h2 id=\"1-使用-AWS-凭证配置-EC2-实例\"><a href=\"#1-使用-AWS-凭证配置-EC2-实例\" class=\"headerlink\" title=\"1. 使用 AWS 凭证配置 EC2 实例\"></a>1. 使用 AWS 凭证配置 EC2 实例</h2><p>需要提供AWS 访问密钥 ID 和秘密访问密钥。如果还没有这些信息，则可以在<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey\">此处</a>创建访问密钥 ID 和秘密访问密钥。<br><img src=\"/posts/aws-4deepl/4a.png\" alt=\"使用 AWS 凭证配置 EC2 实例\"></p>\n<h2 id=\"2-登录到-Amazon-ECR\"><a href=\"#2-登录到-Amazon-ECR\" class=\"headerlink\" title=\"2. 登录到 Amazon ECR\"></a>2. 登录到 Amazon ECR</h2><p>使用以下命令登录到 Amazon ECR：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(aws ecr get-login --region us-east<span class=\"number\">-1</span> --no-include-email --registry-ids <span class=\"number\">763104351884</span>)</span><br></pre></td></tr></table></figure><br><strong>注意</strong>：需要在命令中包含“$”和圆括号。完成此步骤后，将看到“登录成功”。<br><img src=\"/posts/aws-4deepl/4b.png\" alt=\"登录到 Amazon ECR\"></p>\n<h1 id=\"五、使用-Deep-Learning-Containers-运行-TensorFlow-训练\"><a href=\"#五、使用-Deep-Learning-Containers-运行-TensorFlow-训练\" class=\"headerlink\" title=\"五、使用 Deep Learning Containers 运行 TensorFlow 训练\"></a>五、使用 Deep Learning Containers 运行 TensorFlow 训练</h1><p>在此步骤中，我们将使用 AWS Deep Learning Container 映像，通过 Python 3.6 在 CPU 实例上进行 TensorFlow 训练。</p>\n<h2 id=\"1-运行-AWS-Deep-Learning-Containers\"><a href=\"#1-运行-AWS-Deep-Learning-Containers\" class=\"headerlink\" title=\"1.运行 AWS Deep Learning Containers\"></a>1.运行 AWS Deep Learning Containers</h2><p>现在，使用以下命令在 EC2 实例上运行 AWS Deep Learning Container 映像。如果 Deep Learning Container 映像在本地不存在，则此命令将自动提取该映像。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it <span class=\"number\">763104351884.</span>dkr.ecr.us-east<span class=\"number\">-1.</span>amazonaws.com/tensorflow-training:<span class=\"number\">1.13</span>-cpu-py36-ubuntu16<span class=\"number\">.04</span></span><br></pre></td></tr></table></figure><br><strong>注意</strong>：此步骤可能需要几分钟，具体取决于映像的大小。如果使用的是 GPU 实例，请使用“nvidia-docker”而非“docker”。 成功完成此步骤后，将为容器进入一个 bash 提示符界面。<br><img src=\"/posts/aws-4deepl/5a.png\" alt=\"运行 AWS Deep Learning Containers\"></p>\n<h2 id=\"2-拉取一个示例模型进行训练\"><a href=\"#2-拉取一个示例模型进行训练\" class=\"headerlink\" title=\"2.拉取一个示例模型进行训练\"></a>2.拉取一个示例模型进行训练</h2><p>我们将克隆 Keras 存储库，其中包括用于训练模型的示例 Python 脚本。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/fchollet/keras.git</span></span><br></pre></td></tr></table></figure><br><img src=\"/posts/aws-4deepl/5b.png\" alt=\"拉取一个示例模型进行训练\"></p>\n<h2 id=\"3-开始训练\"><a href=\"#3-开始训练\" class=\"headerlink\" title=\"3. 开始训练\"></a>3. 开始训练</h2><p>使用以下命令开始训练规范的 MNIST CNN 模型：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python keras/examples/mnist_cnn.py</span><br></pre></td></tr></table></figure><br>已经成功使用 AWS Deep Learning Container 开始了训练。<br><img src=\"/posts/aws-4deepl/5c.png\" alt=\"开始训练\"></p>\n<h1 id=\"六、终止资源\"><a href=\"#六、终止资源\" class=\"headerlink\" title=\"六、终止资源\"></a>六、终止资源</h1><p>在此步骤中，将终止在本教程中创建的 Amazon EC2 实例。</p>\n<p><strong>注意</strong>：终止当前未在使用的资源可降低成本，这是最佳实践。不终止资源可能会在账户下产生费用。</p>\n<h2 id=\"1-选择正在运行的实例\"><a href=\"#1-选择正在运行的实例\" class=\"headerlink\" title=\"1.选择正在运行的实例\"></a>1.选择正在运行的实例</h2><p>在 Amazon EC2 控制台上，选择<strong>正在运行的实例</strong>。<br><img src=\"/posts/aws-4deepl/6a.png\" alt=\"选择正在运行的实例\"></p>\n<h2 id=\"2-终止EC2实例\"><a href=\"#2-终止EC2实例\" class=\"headerlink\" title=\"2.终止EC2实例\"></a>2.终止EC2实例</h2><p>选择之前创建的 EC2 实例，再选择<strong>操作 &gt; 实例状态 &gt; 终止</strong>。<br><img src=\"/posts/aws-4deepl/6b.png\" alt=\"终止EC2实例\"></p>\n<h2 id=\"3-确认终止\"><a href=\"#3-确认终止\" class=\"headerlink\" title=\"3. 确认终止\"></a>3. 确认终止</h2><p>系统会提示确认终止。选择<strong>是，终止</strong>。</p>\n<p><strong>注意</strong>：完成此过程可能需要几秒钟。终止实例后，EC2 控制台上的“实例状态”会变为“已终止”。<br><img src=\"/posts/aws-4deepl/6c.png\" alt=\"确认终止\"></p>"},{"title":"在AWS上托管简单静态页面","date":"2021-02-09T05:55:59.000Z","_content":"{% note info %}\n参考文章：[host static website](https://aws.amazon.com/cn/getting-started/hands-on/host-static-website/)\n{% endnote %}\n# 简介\n* 本文记录在AWS控制台中使用 AWS Amplify 托管静态网站的过程。AWS Amplify 可提供完全托管的静态网站和 Web 应用程托管。Amplify 的托管解决方案利用 Amazon CloudFront 和 Amazon S3 通过 AWS 内容分发网络 (CDN) 交付您的站点资产。\n* 设置连续部署：Amplify 提供了基于 Git 的连续部署工作流，允许您在每次提交代码时自动将更新部署到站点。\n<!-- more -->\n\n# 构建\n## 一、创建并连接数据库\n## 1. 创建并初始化一个存储库。最简单的方法就是使用命令 create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\n```javascript\nnpx create-react-app amplifyapp\ncd amplifyapp\nnpm start\n```\n\n## 2. 为应用创建一个新的 GitHub 代码库\n![GitHub 代码库](git库.png)\n\n## 3. 初始化 Git 并将应用程序推送到新的 GitHub 代码库，在命令行界面中执行以下命令：\n```javascript\ngit init\ngit remote add origin git@github.com:username/reponame.git\ngit add .\ngit commit -m “initial commit”\ngit push origin master\n```\n\n## 4. 登录[Amplify 控制台](https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Famplify%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Famplify&forceMobileApp=0&code_challenge=TtR_InsZGGm6AJR4mRegMnEVcuDPSHVTWaZiEAyfK6E&code_challenge_method=SHA-256)，然后在**部署**下选择**入门**。\n![Amplify 控制台](入门.png)\n\n## 5. 连接GitHub存储库。在授权 Amplify 控制台后，Amplify 会通过存储库提供商获取访问令牌，但不会将令牌存储在 AWS 服务器上。Amplify 仅使用安装在特定存储库中的部署密钥来访问存储库。\n![连接存储库](选择.png)\n\n\n## 6. 连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\n![选择分支](分支.png)\n\n## 二、确认构建设置\n　　对于所选择的分支，Amplify 会检查存储库，以自动检测要执行的构建命令的顺序。确认构建设置并单击**下一步**。\n![确认构建设置](确认.png)\n\n## 三、保存并部署\n　　查看所有设置，以确保所有设置均正确无误。选择**保存并部署**，将Web 应用程序部署到全球内容分发网络 (CDN)。前端构建通常需要 1-2 分钟的时间，但可能会因应用程序的大小而有所差异。\n![部署Web应用](部署.png)\n\n","source":"_posts/aws-2staticweb.md","raw":"---\ntitle: 在AWS上托管简单静态页面\ndate: 2021-02-09 13:55:59\ntags:\n- 云服务\n- AWS\n- 亚马逊\ncategories:\n- 云服务\n- AWS\n---\n{% note info %}\n参考文章：[host static website](https://aws.amazon.com/cn/getting-started/hands-on/host-static-website/)\n{% endnote %}\n# 简介\n* 本文记录在AWS控制台中使用 AWS Amplify 托管静态网站的过程。AWS Amplify 可提供完全托管的静态网站和 Web 应用程托管。Amplify 的托管解决方案利用 Amazon CloudFront 和 Amazon S3 通过 AWS 内容分发网络 (CDN) 交付您的站点资产。\n* 设置连续部署：Amplify 提供了基于 Git 的连续部署工作流，允许您在每次提交代码时自动将更新部署到站点。\n<!-- more -->\n\n# 构建\n## 一、创建并连接数据库\n## 1. 创建并初始化一个存储库。最简单的方法就是使用命令 create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\n```javascript\nnpx create-react-app amplifyapp\ncd amplifyapp\nnpm start\n```\n\n## 2. 为应用创建一个新的 GitHub 代码库\n![GitHub 代码库](git库.png)\n\n## 3. 初始化 Git 并将应用程序推送到新的 GitHub 代码库，在命令行界面中执行以下命令：\n```javascript\ngit init\ngit remote add origin git@github.com:username/reponame.git\ngit add .\ngit commit -m “initial commit”\ngit push origin master\n```\n\n## 4. 登录[Amplify 控制台](https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Famplify%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Famplify&forceMobileApp=0&code_challenge=TtR_InsZGGm6AJR4mRegMnEVcuDPSHVTWaZiEAyfK6E&code_challenge_method=SHA-256)，然后在**部署**下选择**入门**。\n![Amplify 控制台](入门.png)\n\n## 5. 连接GitHub存储库。在授权 Amplify 控制台后，Amplify 会通过存储库提供商获取访问令牌，但不会将令牌存储在 AWS 服务器上。Amplify 仅使用安装在特定存储库中的部署密钥来访问存储库。\n![连接存储库](选择.png)\n\n\n## 6. 连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\n![选择分支](分支.png)\n\n## 二、确认构建设置\n　　对于所选择的分支，Amplify 会检查存储库，以自动检测要执行的构建命令的顺序。确认构建设置并单击**下一步**。\n![确认构建设置](确认.png)\n\n## 三、保存并部署\n　　查看所有设置，以确保所有设置均正确无误。选择**保存并部署**，将Web 应用程序部署到全球内容分发网络 (CDN)。前端构建通常需要 1-2 分钟的时间，但可能会因应用程序的大小而有所差异。\n![部署Web应用](部署.png)\n\n","slug":"aws-2staticweb","published":1,"updated":"2021-02-09T08:21:44.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0g90010c8pv8hzkhe1e","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>参考文章：<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/host-static-website/\">host static website</a></p>\n          </div>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>本文记录在AWS控制台中使用 AWS Amplify 托管静态网站的过程。AWS Amplify 可提供完全托管的静态网站和 Web 应用程托管。Amplify 的托管解决方案利用 Amazon CloudFront 和 Amazon S3 通过 AWS 内容分发网络 (CDN) 交付您的站点资产。</li>\n<li>设置连续部署：Amplify 提供了基于 Git 的连续部署工作流，允许您在每次提交代码时自动将更新部署到站点。<a id=\"more\"></a>\n</li>\n</ul>\n<h1 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h1><h2 id=\"一、创建并连接数据库\"><a href=\"#一、创建并连接数据库\" class=\"headerlink\" title=\"一、创建并连接数据库\"></a>一、创建并连接数据库</h2><h2 id=\"1-创建并初始化一个存储库。最简单的方法就是使用命令-create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\"><a href=\"#1-创建并初始化一个存储库。最简单的方法就是使用命令-create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\" class=\"headerlink\" title=\"1. 创建并初始化一个存储库。最简单的方法就是使用命令 create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\"></a>1. 创建并初始化一个存储库。最简单的方法就是使用命令 create-react-app。在命令提示符或终端中使用以下命令安装此软件包。</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx create-react-app amplifyapp</span><br><span class=\"line\">cd amplifyapp</span><br><span class=\"line\">npm start</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-为应用创建一个新的-GitHub-代码库\"><a href=\"#2-为应用创建一个新的-GitHub-代码库\" class=\"headerlink\" title=\"2. 为应用创建一个新的 GitHub 代码库\"></a>2. 为应用创建一个新的 GitHub 代码库</h2><p><img src=\"/posts/aws-2staticweb/git库.png\" alt=\"GitHub 代码库\"></p>\n<h2 id=\"3-初始化-Git-并将应用程序推送到新的-GitHub-代码库，在命令行界面中执行以下命令：\"><a href=\"#3-初始化-Git-并将应用程序推送到新的-GitHub-代码库，在命令行界面中执行以下命令：\" class=\"headerlink\" title=\"3. 初始化 Git 并将应用程序推送到新的 GitHub 代码库，在命令行界面中执行以下命令：\"></a>3. 初始化 Git 并将应用程序推送到新的 GitHub 代码库，在命令行界面中执行以下命令：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin git@github.com:username/reponame.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m “initial commit”</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-登录Amplify-控制台，然后在部署下选择入门。\"><a href=\"#4-登录Amplify-控制台，然后在部署下选择入门。\" class=\"headerlink\" title=\"4. 登录Amplify 控制台，然后在部署下选择入门。\"></a>4. 登录<a href=\"https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Famplify%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&amp;client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Famplify&amp;forceMobileApp=0&amp;code_challenge=TtR_InsZGGm6AJR4mRegMnEVcuDPSHVTWaZiEAyfK6E&amp;code_challenge_method=SHA-256\">Amplify 控制台</a>，然后在<strong>部署</strong>下选择<strong>入门</strong>。</h2><p><img src=\"/posts/aws-2staticweb/入门.png\" alt=\"Amplify 控制台\"></p>\n<h2 id=\"5-连接GitHub存储库。在授权-Amplify-控制台后，Amplify-会通过存储库提供商获取访问令牌，但不会将令牌存储在-AWS-服务器上。Amplify-仅使用安装在特定存储库中的部署密钥来访问存储库。\"><a href=\"#5-连接GitHub存储库。在授权-Amplify-控制台后，Amplify-会通过存储库提供商获取访问令牌，但不会将令牌存储在-AWS-服务器上。Amplify-仅使用安装在特定存储库中的部署密钥来访问存储库。\" class=\"headerlink\" title=\"5. 连接GitHub存储库。在授权 Amplify 控制台后，Amplify 会通过存储库提供商获取访问令牌，但不会将令牌存储在 AWS 服务器上。Amplify 仅使用安装在特定存储库中的部署密钥来访问存储库。\"></a>5. 连接GitHub存储库。在授权 Amplify 控制台后，Amplify 会通过存储库提供商获取访问令牌，但不会将令牌存储在 AWS 服务器上。Amplify 仅使用安装在特定存储库中的部署密钥来访问存储库。</h2><p><img src=\"/posts/aws-2staticweb/选择.png\" alt=\"连接存储库\"></p>\n<h2 id=\"6-连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\"><a href=\"#6-连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\" class=\"headerlink\" title=\"6. 连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\"></a>6. 连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。</h2><p><img src=\"/posts/aws-2staticweb/分支.png\" alt=\"选择分支\"></p>\n<h2 id=\"二、确认构建设置\"><a href=\"#二、确认构建设置\" class=\"headerlink\" title=\"二、确认构建设置\"></a>二、确认构建设置</h2><p>　　对于所选择的分支，Amplify 会检查存储库，以自动检测要执行的构建命令的顺序。确认构建设置并单击<strong>下一步</strong>。<br><img src=\"/posts/aws-2staticweb/确认.png\" alt=\"确认构建设置\"></p>\n<h2 id=\"三、保存并部署\"><a href=\"#三、保存并部署\" class=\"headerlink\" title=\"三、保存并部署\"></a>三、保存并部署</h2><p>　　查看所有设置，以确保所有设置均正确无误。选择<strong>保存并部署</strong>，将Web 应用程序部署到全球内容分发网络 (CDN)。前端构建通常需要 1-2 分钟的时间，但可能会因应用程序的大小而有所差异。<br><img src=\"/posts/aws-2staticweb/部署.png\" alt=\"部署Web应用\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":845,"excerpt":"<div class=\"note info\">\n            <p>参考文章：<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/host-static-website/\">host static website</a></p>\n          </div>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>本文记录在AWS控制台中使用 AWS Amplify 托管静态网站的过程。AWS Amplify 可提供完全托管的静态网站和 Web 应用程托管。Amplify 的托管解决方案利用 Amazon CloudFront 和 Amazon S3 通过 AWS 内容分发网络 (CDN) 交付您的站点资产。</li>\n<li>设置连续部署：Amplify 提供了基于 Git 的连续部署工作流，允许您在每次提交代码时自动将更新部署到站点。</li></ul>","more":"\n\n<h1 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h1><h2 id=\"一、创建并连接数据库\"><a href=\"#一、创建并连接数据库\" class=\"headerlink\" title=\"一、创建并连接数据库\"></a>一、创建并连接数据库</h2><h2 id=\"1-创建并初始化一个存储库。最简单的方法就是使用命令-create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\"><a href=\"#1-创建并初始化一个存储库。最简单的方法就是使用命令-create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\" class=\"headerlink\" title=\"1. 创建并初始化一个存储库。最简单的方法就是使用命令 create-react-app。在命令提示符或终端中使用以下命令安装此软件包。\"></a>1. 创建并初始化一个存储库。最简单的方法就是使用命令 create-react-app。在命令提示符或终端中使用以下命令安装此软件包。</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx create-react-app amplifyapp</span><br><span class=\"line\">cd amplifyapp</span><br><span class=\"line\">npm start</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-为应用创建一个新的-GitHub-代码库\"><a href=\"#2-为应用创建一个新的-GitHub-代码库\" class=\"headerlink\" title=\"2. 为应用创建一个新的 GitHub 代码库\"></a>2. 为应用创建一个新的 GitHub 代码库</h2><p><img src=\"/posts/aws-2staticweb/git库.png\" alt=\"GitHub 代码库\"></p>\n<h2 id=\"3-初始化-Git-并将应用程序推送到新的-GitHub-代码库，在命令行界面中执行以下命令：\"><a href=\"#3-初始化-Git-并将应用程序推送到新的-GitHub-代码库，在命令行界面中执行以下命令：\" class=\"headerlink\" title=\"3. 初始化 Git 并将应用程序推送到新的 GitHub 代码库，在命令行界面中执行以下命令：\"></a>3. 初始化 Git 并将应用程序推送到新的 GitHub 代码库，在命令行界面中执行以下命令：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin git@github.com:username/reponame.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m “initial commit”</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-登录Amplify-控制台，然后在部署下选择入门。\"><a href=\"#4-登录Amplify-控制台，然后在部署下选择入门。\" class=\"headerlink\" title=\"4. 登录Amplify 控制台，然后在部署下选择入门。\"></a>4. 登录<a href=\"https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Famplify%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&amp;client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Famplify&amp;forceMobileApp=0&amp;code_challenge=TtR_InsZGGm6AJR4mRegMnEVcuDPSHVTWaZiEAyfK6E&amp;code_challenge_method=SHA-256\">Amplify 控制台</a>，然后在<strong>部署</strong>下选择<strong>入门</strong>。</h2><p><img src=\"/posts/aws-2staticweb/入门.png\" alt=\"Amplify 控制台\"></p>\n<h2 id=\"5-连接GitHub存储库。在授权-Amplify-控制台后，Amplify-会通过存储库提供商获取访问令牌，但不会将令牌存储在-AWS-服务器上。Amplify-仅使用安装在特定存储库中的部署密钥来访问存储库。\"><a href=\"#5-连接GitHub存储库。在授权-Amplify-控制台后，Amplify-会通过存储库提供商获取访问令牌，但不会将令牌存储在-AWS-服务器上。Amplify-仅使用安装在特定存储库中的部署密钥来访问存储库。\" class=\"headerlink\" title=\"5. 连接GitHub存储库。在授权 Amplify 控制台后，Amplify 会通过存储库提供商获取访问令牌，但不会将令牌存储在 AWS 服务器上。Amplify 仅使用安装在特定存储库中的部署密钥来访问存储库。\"></a>5. 连接GitHub存储库。在授权 Amplify 控制台后，Amplify 会通过存储库提供商获取访问令牌，但不会将令牌存储在 AWS 服务器上。Amplify 仅使用安装在特定存储库中的部署密钥来访问存储库。</h2><p><img src=\"/posts/aws-2staticweb/选择.png\" alt=\"连接存储库\"></p>\n<h2 id=\"6-连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\"><a href=\"#6-连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\" class=\"headerlink\" title=\"6. 连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。\"></a>6. 连接存储库服务提供商后，请选择一个存储库，然后选择一个对应的分支来进行构建和部署。</h2><p><img src=\"/posts/aws-2staticweb/分支.png\" alt=\"选择分支\"></p>\n<h2 id=\"二、确认构建设置\"><a href=\"#二、确认构建设置\" class=\"headerlink\" title=\"二、确认构建设置\"></a>二、确认构建设置</h2><p>　　对于所选择的分支，Amplify 会检查存储库，以自动检测要执行的构建命令的顺序。确认构建设置并单击<strong>下一步</strong>。<br><img src=\"/posts/aws-2staticweb/确认.png\" alt=\"确认构建设置\"></p>\n<h2 id=\"三、保存并部署\"><a href=\"#三、保存并部署\" class=\"headerlink\" title=\"三、保存并部署\"></a>三、保存并部署</h2><p>　　查看所有设置，以确保所有设置均正确无误。选择<strong>保存并部署</strong>，将Web 应用程序部署到全球内容分发网络 (CDN)。前端构建通常需要 1-2 分钟的时间，但可能会因应用程序的大小而有所差异。<br><img src=\"/posts/aws-2staticweb/部署.png\" alt=\"部署Web应用\"></p>"},{"title":"使用AWS Systems Manager在EC2实例上远程运行命令","date":"2021-02-09T06:23:40.000Z","_content":"{% note info %}\n参考文章：[Remotely run commands EC2 instance systems manager](https://aws.amazon.com/cn/getting-started/hands-on/remotely-run-commands-ec2-instance-systems-manager/)\n{% endnote %}\n# 简介\n* 本文介绍如何使用 AWS Systems Manager 在 Amazon EC2 实例上远程运行命令。Systems Manager 是一种管理工具，可以用它来了解 AWS 资源的运行状况，并以安全且规模化的方式对 AWS 资源采取措施。使用 Systems Manager 的一种自动化功能 Run Command 时，无需使用堡垒主机、SSH 或远程 PowerShell，从而可以简化管理任务。\n* 为解决团队不允许通过 SSH 或使用堡垒主机直接访问生产服务器的问题，我们将创建 Identity and Access Management (IAM) 角色，在实例上启动一个与 Systems Manager 通信的代理，然后遵循通过运行 AWS-UpdateSSMAgent 文档升级 Systems Manager 代理的最佳实践，最后使用 Systems Manager 在实例上运行命令。\n<!-- more -->\n\n# 一、创建Identity and Access Management(IAM)角色\n## 1. 打开[IAM控制台](https://console.aws.amazon.com/iam/)\n![IAM控制台](1a.png)\n\n## 2. 从左侧导航窗格中选择**Roles**（角色），然后选择**Create role**（创建角色）。\n![创建角色](1b.png)\n\n## 3. 在选择受信任实体的类型页面上，在**AWS 服务**下选择**EC2**，然后选择**下一步: 权限**。\n![受信任实体](1c.png)\n\n## 4. 在**Attached permissions policy**（附加的权限策略）页面上的搜索栏中输入 AmazonEC2RoleforSSM，然后从策略列表中选择**AmazonEC2RoleforSSM**，然后选择**Next: Review**（下一步：审核）。\n![AmazonEC2RoleforSSM](1d.png)\n\n## 5. 在**Review**（审核）页面上的**Role name**（角色名称）框中键入 EnablesEC2ToAccessSystemsManagerRole。在**Role description**（角色描述）框中键入 Enables an EC2 instance to access Systems Manager。选择**Create role**（创建角色）。\n![角色描述](1e.png)\n\n# 二、创建EC2实例\n此过程在[AWS服务的注册和创建主机](http://www.panjiangtao.cn/posts/aws-1register/)已介绍，在此不加赘述。\n\n# 三、更新 Systems Manager 代理\n## 1. 单击顶部菜单中的**Services**（服务）。然后在“Management Tools”（管理工具）下，选择 Systems Manager 以打开 Systems Manager 控制台。\n![Systems Manager 控制台](3a.png)\n\n## 2. 选择左侧导航栏中**Shared Resources**（共享资源）下方的**Managed Instances**（托管实例）。\n![托管实例](3b.png)\n\n## 3. 在托管实例页面上，选择**Actions**（操作）下拉菜单中的**Run Command**（运行命令）。\n![运行命令](3c.png)\n\n## 4. \n* 在**Run a command**（运行命令）页面上的搜索栏中单击并选择**Document name prefix**（文档名称前缀），然后单击**Equal**（等于），并键入 AWS-UpdateSSMAgent。\n* 现在单击**AWS-UpdateSSMAgent** 左边的单选按钮。本文档将更新实例上的系统管理代理。\n* 向下滚动至**目标**面板，并单击您的托管式 Amazon EC2 实例旁的复选框。\n* 最后，向下滚动并选择**运行**。\n\n![AWS-UpdateSSMAgent](3d.png)\n\n## 5. 接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\n![成功](3e.png)\n\n# 四、运行 Remote Shell 脚本\n## 1. 从**系统管理**控制台中，选择左侧导航栏中**Shared Resources**（共享资源）下方的**Managed instances**（托管实例）。然后在**Actions**（操作）菜单中选择**Run Command**（运行命令） 菜单项。 \n![运行命令](4a.png)\n\n## 2. \n* 在**Run a command**（运行命令）页面上的搜索栏中单击并选择**Document name prefix**（文档名称前缀），然后单击**Equal**（等于），并键入 AWS-RunShellScript。\n* 现在单击**AWS-RunShellScript** 左边的单选按钮。本文档将更新实例上的系统管理代理。\n* 向下滚动至**目标**面板，并单击您的托管式 Amazon EC2 实例旁的复选框。\n\n![更新实例上的系统管理代理](4b.png)\n\n## 3. \n* 向下滚动至**Command Parameters**（命令参数）面板，并在**Commands**（命令）文本框中插入以下命令：\n`sudo yum update -y`\n* 最后，向下滚动并选择**运行**。\n\n![命令参数](4c.png)\n\n## 4. 当您的脚本在托管式 Amazon EC2 实例上远程运行时，**整体状态**显示为**正在进行**。不久后，**整体状态**将变成“成功”。届时，向下滚动至**Targets and outputs**（目标和输出）面板并单击实例的实例 ID。您的实例 ID 将与图片上的不同。\n![成功](4d.png)\n\n## 5. 在**Output on: i-XX** 页面中，单击**Step 1 - Output**（第 1 步 - 输出）面板的标头，查看来自实例的更新命令输出。\n![查看](4e.png)\n","source":"_posts/aws-3manager.md","raw":"---\ntitle: 使用AWS Systems Manager在EC2实例上远程运行命令\ndate: 2021-02-09 14:23:40\ntags:\n- 云服务\n- AWS\n- 亚马逊\ncategories:\n- 云服务\n- AWS\n---\n{% note info %}\n参考文章：[Remotely run commands EC2 instance systems manager](https://aws.amazon.com/cn/getting-started/hands-on/remotely-run-commands-ec2-instance-systems-manager/)\n{% endnote %}\n# 简介\n* 本文介绍如何使用 AWS Systems Manager 在 Amazon EC2 实例上远程运行命令。Systems Manager 是一种管理工具，可以用它来了解 AWS 资源的运行状况，并以安全且规模化的方式对 AWS 资源采取措施。使用 Systems Manager 的一种自动化功能 Run Command 时，无需使用堡垒主机、SSH 或远程 PowerShell，从而可以简化管理任务。\n* 为解决团队不允许通过 SSH 或使用堡垒主机直接访问生产服务器的问题，我们将创建 Identity and Access Management (IAM) 角色，在实例上启动一个与 Systems Manager 通信的代理，然后遵循通过运行 AWS-UpdateSSMAgent 文档升级 Systems Manager 代理的最佳实践，最后使用 Systems Manager 在实例上运行命令。\n<!-- more -->\n\n# 一、创建Identity and Access Management(IAM)角色\n## 1. 打开[IAM控制台](https://console.aws.amazon.com/iam/)\n![IAM控制台](1a.png)\n\n## 2. 从左侧导航窗格中选择**Roles**（角色），然后选择**Create role**（创建角色）。\n![创建角色](1b.png)\n\n## 3. 在选择受信任实体的类型页面上，在**AWS 服务**下选择**EC2**，然后选择**下一步: 权限**。\n![受信任实体](1c.png)\n\n## 4. 在**Attached permissions policy**（附加的权限策略）页面上的搜索栏中输入 AmazonEC2RoleforSSM，然后从策略列表中选择**AmazonEC2RoleforSSM**，然后选择**Next: Review**（下一步：审核）。\n![AmazonEC2RoleforSSM](1d.png)\n\n## 5. 在**Review**（审核）页面上的**Role name**（角色名称）框中键入 EnablesEC2ToAccessSystemsManagerRole。在**Role description**（角色描述）框中键入 Enables an EC2 instance to access Systems Manager。选择**Create role**（创建角色）。\n![角色描述](1e.png)\n\n# 二、创建EC2实例\n此过程在[AWS服务的注册和创建主机](http://www.panjiangtao.cn/posts/aws-1register/)已介绍，在此不加赘述。\n\n# 三、更新 Systems Manager 代理\n## 1. 单击顶部菜单中的**Services**（服务）。然后在“Management Tools”（管理工具）下，选择 Systems Manager 以打开 Systems Manager 控制台。\n![Systems Manager 控制台](3a.png)\n\n## 2. 选择左侧导航栏中**Shared Resources**（共享资源）下方的**Managed Instances**（托管实例）。\n![托管实例](3b.png)\n\n## 3. 在托管实例页面上，选择**Actions**（操作）下拉菜单中的**Run Command**（运行命令）。\n![运行命令](3c.png)\n\n## 4. \n* 在**Run a command**（运行命令）页面上的搜索栏中单击并选择**Document name prefix**（文档名称前缀），然后单击**Equal**（等于），并键入 AWS-UpdateSSMAgent。\n* 现在单击**AWS-UpdateSSMAgent** 左边的单选按钮。本文档将更新实例上的系统管理代理。\n* 向下滚动至**目标**面板，并单击您的托管式 Amazon EC2 实例旁的复选框。\n* 最后，向下滚动并选择**运行**。\n\n![AWS-UpdateSSMAgent](3d.png)\n\n## 5. 接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\n![成功](3e.png)\n\n# 四、运行 Remote Shell 脚本\n## 1. 从**系统管理**控制台中，选择左侧导航栏中**Shared Resources**（共享资源）下方的**Managed instances**（托管实例）。然后在**Actions**（操作）菜单中选择**Run Command**（运行命令） 菜单项。 \n![运行命令](4a.png)\n\n## 2. \n* 在**Run a command**（运行命令）页面上的搜索栏中单击并选择**Document name prefix**（文档名称前缀），然后单击**Equal**（等于），并键入 AWS-RunShellScript。\n* 现在单击**AWS-RunShellScript** 左边的单选按钮。本文档将更新实例上的系统管理代理。\n* 向下滚动至**目标**面板，并单击您的托管式 Amazon EC2 实例旁的复选框。\n\n![更新实例上的系统管理代理](4b.png)\n\n## 3. \n* 向下滚动至**Command Parameters**（命令参数）面板，并在**Commands**（命令）文本框中插入以下命令：\n`sudo yum update -y`\n* 最后，向下滚动并选择**运行**。\n\n![命令参数](4c.png)\n\n## 4. 当您的脚本在托管式 Amazon EC2 实例上远程运行时，**整体状态**显示为**正在进行**。不久后，**整体状态**将变成“成功”。届时，向下滚动至**Targets and outputs**（目标和输出）面板并单击实例的实例 ID。您的实例 ID 将与图片上的不同。\n![成功](4d.png)\n\n## 5. 在**Output on: i-XX** 页面中，单击**Step 1 - Output**（第 1 步 - 输出）面板的标头，查看来自实例的更新命令输出。\n![查看](4e.png)\n","slug":"aws-3manager","published":1,"updated":"2021-02-09T08:23:05.204Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gb0013c8pv51y0dj5j","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>参考文章：<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/remotely-run-commands-ec2-instance-systems-manager/\">Remotely run commands EC2 instance systems manager</a></p>\n          </div>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>本文介绍如何使用 AWS Systems Manager 在 Amazon EC2 实例上远程运行命令。Systems Manager 是一种管理工具，可以用它来了解 AWS 资源的运行状况，并以安全且规模化的方式对 AWS 资源采取措施。使用 Systems Manager 的一种自动化功能 Run Command 时，无需使用堡垒主机、SSH 或远程 PowerShell，从而可以简化管理任务。</li>\n<li>为解决团队不允许通过 SSH 或使用堡垒主机直接访问生产服务器的问题，我们将创建 Identity and Access Management (IAM) 角色，在实例上启动一个与 Systems Manager 通信的代理，然后遵循通过运行 AWS-UpdateSSMAgent 文档升级 Systems Manager 代理的最佳实践，最后使用 Systems Manager 在实例上运行命令。<a id=\"more\"></a>\n</li>\n</ul>\n<h1 id=\"一、创建Identity-and-Access-Management-IAM-角色\"><a href=\"#一、创建Identity-and-Access-Management-IAM-角色\" class=\"headerlink\" title=\"一、创建Identity and Access Management(IAM)角色\"></a>一、创建Identity and Access Management(IAM)角色</h1><h2 id=\"1-打开IAM控制台\"><a href=\"#1-打开IAM控制台\" class=\"headerlink\" title=\"1. 打开IAM控制台\"></a>1. 打开<a href=\"https://console.aws.amazon.com/iam/\">IAM控制台</a></h2><p><img src=\"/posts/aws-3manager/1a.png\" alt=\"IAM控制台\"></p>\n<h2 id=\"2-从左侧导航窗格中选择Roles（角色），然后选择Create-role（创建角色）。\"><a href=\"#2-从左侧导航窗格中选择Roles（角色），然后选择Create-role（创建角色）。\" class=\"headerlink\" title=\"2. 从左侧导航窗格中选择Roles（角色），然后选择Create role（创建角色）。\"></a>2. 从左侧导航窗格中选择<strong>Roles</strong>（角色），然后选择<strong>Create role</strong>（创建角色）。</h2><p><img src=\"/posts/aws-3manager/1b.png\" alt=\"创建角色\"></p>\n<h2 id=\"3-在选择受信任实体的类型页面上，在AWS-服务下选择EC2，然后选择下一步-权限。\"><a href=\"#3-在选择受信任实体的类型页面上，在AWS-服务下选择EC2，然后选择下一步-权限。\" class=\"headerlink\" title=\"3. 在选择受信任实体的类型页面上，在AWS 服务下选择EC2，然后选择下一步: 权限。\"></a>3. 在选择受信任实体的类型页面上，在<strong>AWS 服务</strong>下选择<strong>EC2</strong>，然后选择<strong>下一步: 权限</strong>。</h2><p><img src=\"/posts/aws-3manager/1c.png\" alt=\"受信任实体\"></p>\n<h2 id=\"4-在Attached-permissions-policy（附加的权限策略）页面上的搜索栏中输入-AmazonEC2RoleforSSM，然后从策略列表中选择AmazonEC2RoleforSSM，然后选择Next-Review（下一步：审核）。\"><a href=\"#4-在Attached-permissions-policy（附加的权限策略）页面上的搜索栏中输入-AmazonEC2RoleforSSM，然后从策略列表中选择AmazonEC2RoleforSSM，然后选择Next-Review（下一步：审核）。\" class=\"headerlink\" title=\"4. 在Attached permissions policy（附加的权限策略）页面上的搜索栏中输入 AmazonEC2RoleforSSM，然后从策略列表中选择AmazonEC2RoleforSSM，然后选择Next: Review（下一步：审核）。\"></a>4. 在<strong>Attached permissions policy</strong>（附加的权限策略）页面上的搜索栏中输入 AmazonEC2RoleforSSM，然后从策略列表中选择<strong>AmazonEC2RoleforSSM</strong>，然后选择<strong>Next: Review</strong>（下一步：审核）。</h2><p><img src=\"/posts/aws-3manager/1d.png\" alt=\"AmazonEC2RoleforSSM\"></p>\n<h2 id=\"5-在Review（审核）页面上的Role-name（角色名称）框中键入-EnablesEC2ToAccessSystemsManagerRole。在Role-description（角色描述）框中键入-Enables-an-EC2-instance-to-access-Systems-Manager。选择Create-role（创建角色）。\"><a href=\"#5-在Review（审核）页面上的Role-name（角色名称）框中键入-EnablesEC2ToAccessSystemsManagerRole。在Role-description（角色描述）框中键入-Enables-an-EC2-instance-to-access-Systems-Manager。选择Create-role（创建角色）。\" class=\"headerlink\" title=\"5. 在Review（审核）页面上的Role name（角色名称）框中键入 EnablesEC2ToAccessSystemsManagerRole。在Role description（角色描述）框中键入 Enables an EC2 instance to access Systems Manager。选择Create role（创建角色）。\"></a>5. 在<strong>Review</strong>（审核）页面上的<strong>Role name</strong>（角色名称）框中键入 EnablesEC2ToAccessSystemsManagerRole。在<strong>Role description</strong>（角色描述）框中键入 Enables an EC2 instance to access Systems Manager。选择<strong>Create role</strong>（创建角色）。</h2><p><img src=\"/posts/aws-3manager/1e.png\" alt=\"角色描述\"></p>\n<h1 id=\"二、创建EC2实例\"><a href=\"#二、创建EC2实例\" class=\"headerlink\" title=\"二、创建EC2实例\"></a>二、创建EC2实例</h1><p>此过程在<a href=\"http://www.panjiangtao.cn/posts/aws-1register/\">AWS服务的注册和创建主机</a>已介绍，在此不加赘述。</p>\n<h1 id=\"三、更新-Systems-Manager-代理\"><a href=\"#三、更新-Systems-Manager-代理\" class=\"headerlink\" title=\"三、更新 Systems Manager 代理\"></a>三、更新 Systems Manager 代理</h1><h2 id=\"1-单击顶部菜单中的Services（服务）。然后在“Management-Tools”（管理工具）下，选择-Systems-Manager-以打开-Systems-Manager-控制台。\"><a href=\"#1-单击顶部菜单中的Services（服务）。然后在“Management-Tools”（管理工具）下，选择-Systems-Manager-以打开-Systems-Manager-控制台。\" class=\"headerlink\" title=\"1. 单击顶部菜单中的Services（服务）。然后在“Management Tools”（管理工具）下，选择 Systems Manager 以打开 Systems Manager 控制台。\"></a>1. 单击顶部菜单中的<strong>Services</strong>（服务）。然后在“Management Tools”（管理工具）下，选择 Systems Manager 以打开 Systems Manager 控制台。</h2><p><img src=\"/posts/aws-3manager/3a.png\" alt=\"Systems Manager 控制台\"></p>\n<h2 id=\"2-选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-Instances（托管实例）。\"><a href=\"#2-选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-Instances（托管实例）。\" class=\"headerlink\" title=\"2. 选择左侧导航栏中Shared Resources（共享资源）下方的Managed Instances（托管实例）。\"></a>2. 选择左侧导航栏中<strong>Shared Resources</strong>（共享资源）下方的<strong>Managed Instances</strong>（托管实例）。</h2><p><img src=\"/posts/aws-3manager/3b.png\" alt=\"托管实例\"></p>\n<h2 id=\"3-在托管实例页面上，选择Actions（操作）下拉菜单中的Run-Command（运行命令）。\"><a href=\"#3-在托管实例页面上，选择Actions（操作）下拉菜单中的Run-Command（运行命令）。\" class=\"headerlink\" title=\"3. 在托管实例页面上，选择Actions（操作）下拉菜单中的Run Command（运行命令）。\"></a>3. 在托管实例页面上，选择<strong>Actions</strong>（操作）下拉菜单中的<strong>Run Command</strong>（运行命令）。</h2><p><img src=\"/posts/aws-3manager/3c.png\" alt=\"运行命令\"></p>\n<h2 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4.\"></a>4.</h2><ul>\n<li>在<strong>Run a command</strong>（运行命令）页面上的搜索栏中单击并选择<strong>Document name prefix</strong>（文档名称前缀），然后单击<strong>Equal</strong>（等于），并键入 AWS-UpdateSSMAgent。</li>\n<li>现在单击<strong>AWS-UpdateSSMAgent</strong> 左边的单选按钮。本文档将更新实例上的系统管理代理。</li>\n<li>向下滚动至<strong>目标</strong>面板，并单击您的托管式 Amazon EC2 实例旁的复选框。</li>\n<li>最后，向下滚动并选择<strong>运行</strong>。</li>\n</ul>\n<p><img src=\"/posts/aws-3manager/3d.png\" alt=\"AWS-UpdateSSMAgent\"></p>\n<h2 id=\"5-接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\"><a href=\"#5-接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\" class=\"headerlink\" title=\"5. 接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\"></a>5. 接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。</h2><p><img src=\"/posts/aws-3manager/3e.png\" alt=\"成功\"></p>\n<h1 id=\"四、运行-Remote-Shell-脚本\"><a href=\"#四、运行-Remote-Shell-脚本\" class=\"headerlink\" title=\"四、运行 Remote Shell 脚本\"></a>四、运行 Remote Shell 脚本</h1><h2 id=\"1-从系统管理控制台中，选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-instances（托管实例）。然后在Actions（操作）菜单中选择Run-Command（运行命令）-菜单项。\"><a href=\"#1-从系统管理控制台中，选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-instances（托管实例）。然后在Actions（操作）菜单中选择Run-Command（运行命令）-菜单项。\" class=\"headerlink\" title=\"1. 从系统管理控制台中，选择左侧导航栏中Shared Resources（共享资源）下方的Managed instances（托管实例）。然后在Actions（操作）菜单中选择Run Command（运行命令） 菜单项。\"></a>1. 从<strong>系统管理</strong>控制台中，选择左侧导航栏中<strong>Shared Resources</strong>（共享资源）下方的<strong>Managed instances</strong>（托管实例）。然后在<strong>Actions</strong>（操作）菜单中选择<strong>Run Command</strong>（运行命令） 菜单项。</h2><p><img src=\"/posts/aws-3manager/4a.png\" alt=\"运行命令\"></p>\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2.\"></a>2.</h2><ul>\n<li>在<strong>Run a command</strong>（运行命令）页面上的搜索栏中单击并选择<strong>Document name prefix</strong>（文档名称前缀），然后单击<strong>Equal</strong>（等于），并键入 AWS-RunShellScript。</li>\n<li>现在单击<strong>AWS-RunShellScript</strong> 左边的单选按钮。本文档将更新实例上的系统管理代理。</li>\n<li>向下滚动至<strong>目标</strong>面板，并单击您的托管式 Amazon EC2 实例旁的复选框。</li>\n</ul>\n<p><img src=\"/posts/aws-3manager/4b.png\" alt=\"更新实例上的系统管理代理\"></p>\n<h2 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3.\"></a>3.</h2><ul>\n<li>向下滚动至<strong>Command Parameters</strong>（命令参数）面板，并在<strong>Commands</strong>（命令）文本框中插入以下命令：<br><code>sudo yum update -y</code></li>\n<li>最后，向下滚动并选择<strong>运行</strong>。</li>\n</ul>\n<p><img src=\"/posts/aws-3manager/4c.png\" alt=\"命令参数\"></p>\n<h2 id=\"4-当您的脚本在托管式-Amazon-EC2-实例上远程运行时，整体状态显示为正在进行。不久后，整体状态将变成“成功”。届时，向下滚动至Targets-and-outputs（目标和输出）面板并单击实例的实例-ID。您的实例-ID-将与图片上的不同。\"><a href=\"#4-当您的脚本在托管式-Amazon-EC2-实例上远程运行时，整体状态显示为正在进行。不久后，整体状态将变成“成功”。届时，向下滚动至Targets-and-outputs（目标和输出）面板并单击实例的实例-ID。您的实例-ID-将与图片上的不同。\" class=\"headerlink\" title=\"4. 当您的脚本在托管式 Amazon EC2 实例上远程运行时，整体状态显示为正在进行。不久后，整体状态将变成“成功”。届时，向下滚动至Targets and outputs（目标和输出）面板并单击实例的实例 ID。您的实例 ID 将与图片上的不同。\"></a>4. 当您的脚本在托管式 Amazon EC2 实例上远程运行时，<strong>整体状态</strong>显示为<strong>正在进行</strong>。不久后，<strong>整体状态</strong>将变成“成功”。届时，向下滚动至<strong>Targets and outputs</strong>（目标和输出）面板并单击实例的实例 ID。您的实例 ID 将与图片上的不同。</h2><p><img src=\"/posts/aws-3manager/4d.png\" alt=\"成功\"></p>\n<h2 id=\"5-在Output-on-i-XX-页面中，单击Step-1-Output（第-1-步-输出）面板的标头，查看来自实例的更新命令输出。\"><a href=\"#5-在Output-on-i-XX-页面中，单击Step-1-Output（第-1-步-输出）面板的标头，查看来自实例的更新命令输出。\" class=\"headerlink\" title=\"5. 在Output on: i-XX 页面中，单击Step 1 - Output（第 1 步 - 输出）面板的标头，查看来自实例的更新命令输出。\"></a>5. 在<strong>Output on: i-XX</strong> 页面中，单击<strong>Step 1 - Output</strong>（第 1 步 - 输出）面板的标头，查看来自实例的更新命令输出。</h2><p><img src=\"/posts/aws-3manager/4e.png\" alt=\"查看\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1879,"excerpt":"<div class=\"note info\">\n            <p>参考文章：<a href=\"https://aws.amazon.com/cn/getting-started/hands-on/remotely-run-commands-ec2-instance-systems-manager/\">Remotely run commands EC2 instance systems manager</a></p>\n          </div>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><ul>\n<li>本文介绍如何使用 AWS Systems Manager 在 Amazon EC2 实例上远程运行命令。Systems Manager 是一种管理工具，可以用它来了解 AWS 资源的运行状况，并以安全且规模化的方式对 AWS 资源采取措施。使用 Systems Manager 的一种自动化功能 Run Command 时，无需使用堡垒主机、SSH 或远程 PowerShell，从而可以简化管理任务。</li>\n<li>为解决团队不允许通过 SSH 或使用堡垒主机直接访问生产服务器的问题，我们将创建 Identity and Access Management (IAM) 角色，在实例上启动一个与 Systems Manager 通信的代理，然后遵循通过运行 AWS-UpdateSSMAgent 文档升级 Systems Manager 代理的最佳实践，最后使用 Systems Manager 在实例上运行命令。</li></ul>","more":"\n\n<h1 id=\"一、创建Identity-and-Access-Management-IAM-角色\"><a href=\"#一、创建Identity-and-Access-Management-IAM-角色\" class=\"headerlink\" title=\"一、创建Identity and Access Management(IAM)角色\"></a>一、创建Identity and Access Management(IAM)角色</h1><h2 id=\"1-打开IAM控制台\"><a href=\"#1-打开IAM控制台\" class=\"headerlink\" title=\"1. 打开IAM控制台\"></a>1. 打开<a href=\"https://console.aws.amazon.com/iam/\">IAM控制台</a></h2><p><img src=\"/posts/aws-3manager/1a.png\" alt=\"IAM控制台\"></p>\n<h2 id=\"2-从左侧导航窗格中选择Roles（角色），然后选择Create-role（创建角色）。\"><a href=\"#2-从左侧导航窗格中选择Roles（角色），然后选择Create-role（创建角色）。\" class=\"headerlink\" title=\"2. 从左侧导航窗格中选择Roles（角色），然后选择Create role（创建角色）。\"></a>2. 从左侧导航窗格中选择<strong>Roles</strong>（角色），然后选择<strong>Create role</strong>（创建角色）。</h2><p><img src=\"/posts/aws-3manager/1b.png\" alt=\"创建角色\"></p>\n<h2 id=\"3-在选择受信任实体的类型页面上，在AWS-服务下选择EC2，然后选择下一步-权限。\"><a href=\"#3-在选择受信任实体的类型页面上，在AWS-服务下选择EC2，然后选择下一步-权限。\" class=\"headerlink\" title=\"3. 在选择受信任实体的类型页面上，在AWS 服务下选择EC2，然后选择下一步: 权限。\"></a>3. 在选择受信任实体的类型页面上，在<strong>AWS 服务</strong>下选择<strong>EC2</strong>，然后选择<strong>下一步: 权限</strong>。</h2><p><img src=\"/posts/aws-3manager/1c.png\" alt=\"受信任实体\"></p>\n<h2 id=\"4-在Attached-permissions-policy（附加的权限策略）页面上的搜索栏中输入-AmazonEC2RoleforSSM，然后从策略列表中选择AmazonEC2RoleforSSM，然后选择Next-Review（下一步：审核）。\"><a href=\"#4-在Attached-permissions-policy（附加的权限策略）页面上的搜索栏中输入-AmazonEC2RoleforSSM，然后从策略列表中选择AmazonEC2RoleforSSM，然后选择Next-Review（下一步：审核）。\" class=\"headerlink\" title=\"4. 在Attached permissions policy（附加的权限策略）页面上的搜索栏中输入 AmazonEC2RoleforSSM，然后从策略列表中选择AmazonEC2RoleforSSM，然后选择Next: Review（下一步：审核）。\"></a>4. 在<strong>Attached permissions policy</strong>（附加的权限策略）页面上的搜索栏中输入 AmazonEC2RoleforSSM，然后从策略列表中选择<strong>AmazonEC2RoleforSSM</strong>，然后选择<strong>Next: Review</strong>（下一步：审核）。</h2><p><img src=\"/posts/aws-3manager/1d.png\" alt=\"AmazonEC2RoleforSSM\"></p>\n<h2 id=\"5-在Review（审核）页面上的Role-name（角色名称）框中键入-EnablesEC2ToAccessSystemsManagerRole。在Role-description（角色描述）框中键入-Enables-an-EC2-instance-to-access-Systems-Manager。选择Create-role（创建角色）。\"><a href=\"#5-在Review（审核）页面上的Role-name（角色名称）框中键入-EnablesEC2ToAccessSystemsManagerRole。在Role-description（角色描述）框中键入-Enables-an-EC2-instance-to-access-Systems-Manager。选择Create-role（创建角色）。\" class=\"headerlink\" title=\"5. 在Review（审核）页面上的Role name（角色名称）框中键入 EnablesEC2ToAccessSystemsManagerRole。在Role description（角色描述）框中键入 Enables an EC2 instance to access Systems Manager。选择Create role（创建角色）。\"></a>5. 在<strong>Review</strong>（审核）页面上的<strong>Role name</strong>（角色名称）框中键入 EnablesEC2ToAccessSystemsManagerRole。在<strong>Role description</strong>（角色描述）框中键入 Enables an EC2 instance to access Systems Manager。选择<strong>Create role</strong>（创建角色）。</h2><p><img src=\"/posts/aws-3manager/1e.png\" alt=\"角色描述\"></p>\n<h1 id=\"二、创建EC2实例\"><a href=\"#二、创建EC2实例\" class=\"headerlink\" title=\"二、创建EC2实例\"></a>二、创建EC2实例</h1><p>此过程在<a href=\"http://www.panjiangtao.cn/posts/aws-1register/\">AWS服务的注册和创建主机</a>已介绍，在此不加赘述。</p>\n<h1 id=\"三、更新-Systems-Manager-代理\"><a href=\"#三、更新-Systems-Manager-代理\" class=\"headerlink\" title=\"三、更新 Systems Manager 代理\"></a>三、更新 Systems Manager 代理</h1><h2 id=\"1-单击顶部菜单中的Services（服务）。然后在“Management-Tools”（管理工具）下，选择-Systems-Manager-以打开-Systems-Manager-控制台。\"><a href=\"#1-单击顶部菜单中的Services（服务）。然后在“Management-Tools”（管理工具）下，选择-Systems-Manager-以打开-Systems-Manager-控制台。\" class=\"headerlink\" title=\"1. 单击顶部菜单中的Services（服务）。然后在“Management Tools”（管理工具）下，选择 Systems Manager 以打开 Systems Manager 控制台。\"></a>1. 单击顶部菜单中的<strong>Services</strong>（服务）。然后在“Management Tools”（管理工具）下，选择 Systems Manager 以打开 Systems Manager 控制台。</h2><p><img src=\"/posts/aws-3manager/3a.png\" alt=\"Systems Manager 控制台\"></p>\n<h2 id=\"2-选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-Instances（托管实例）。\"><a href=\"#2-选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-Instances（托管实例）。\" class=\"headerlink\" title=\"2. 选择左侧导航栏中Shared Resources（共享资源）下方的Managed Instances（托管实例）。\"></a>2. 选择左侧导航栏中<strong>Shared Resources</strong>（共享资源）下方的<strong>Managed Instances</strong>（托管实例）。</h2><p><img src=\"/posts/aws-3manager/3b.png\" alt=\"托管实例\"></p>\n<h2 id=\"3-在托管实例页面上，选择Actions（操作）下拉菜单中的Run-Command（运行命令）。\"><a href=\"#3-在托管实例页面上，选择Actions（操作）下拉菜单中的Run-Command（运行命令）。\" class=\"headerlink\" title=\"3. 在托管实例页面上，选择Actions（操作）下拉菜单中的Run Command（运行命令）。\"></a>3. 在托管实例页面上，选择<strong>Actions</strong>（操作）下拉菜单中的<strong>Run Command</strong>（运行命令）。</h2><p><img src=\"/posts/aws-3manager/3c.png\" alt=\"运行命令\"></p>\n<h2 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4.\"></a>4.</h2><ul>\n<li>在<strong>Run a command</strong>（运行命令）页面上的搜索栏中单击并选择<strong>Document name prefix</strong>（文档名称前缀），然后单击<strong>Equal</strong>（等于），并键入 AWS-UpdateSSMAgent。</li>\n<li>现在单击<strong>AWS-UpdateSSMAgent</strong> 左边的单选按钮。本文档将更新实例上的系统管理代理。</li>\n<li>向下滚动至<strong>目标</strong>面板，并单击您的托管式 Amazon EC2 实例旁的复选框。</li>\n<li>最后，向下滚动并选择<strong>运行</strong>。</li>\n</ul>\n<p><img src=\"/posts/aws-3manager/3d.png\" alt=\"AWS-UpdateSSMAgent\"></p>\n<h2 id=\"5-接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\"><a href=\"#5-接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\" class=\"headerlink\" title=\"5. 接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。\"></a>5. 接下来您将看到页面上记录了正在运行的命令，且整体状态以绿色显示为“Success”（成功）。</h2><p><img src=\"/posts/aws-3manager/3e.png\" alt=\"成功\"></p>\n<h1 id=\"四、运行-Remote-Shell-脚本\"><a href=\"#四、运行-Remote-Shell-脚本\" class=\"headerlink\" title=\"四、运行 Remote Shell 脚本\"></a>四、运行 Remote Shell 脚本</h1><h2 id=\"1-从系统管理控制台中，选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-instances（托管实例）。然后在Actions（操作）菜单中选择Run-Command（运行命令）-菜单项。\"><a href=\"#1-从系统管理控制台中，选择左侧导航栏中Shared-Resources（共享资源）下方的Managed-instances（托管实例）。然后在Actions（操作）菜单中选择Run-Command（运行命令）-菜单项。\" class=\"headerlink\" title=\"1. 从系统管理控制台中，选择左侧导航栏中Shared Resources（共享资源）下方的Managed instances（托管实例）。然后在Actions（操作）菜单中选择Run Command（运行命令） 菜单项。\"></a>1. 从<strong>系统管理</strong>控制台中，选择左侧导航栏中<strong>Shared Resources</strong>（共享资源）下方的<strong>Managed instances</strong>（托管实例）。然后在<strong>Actions</strong>（操作）菜单中选择<strong>Run Command</strong>（运行命令） 菜单项。</h2><p><img src=\"/posts/aws-3manager/4a.png\" alt=\"运行命令\"></p>\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2.\"></a>2.</h2><ul>\n<li>在<strong>Run a command</strong>（运行命令）页面上的搜索栏中单击并选择<strong>Document name prefix</strong>（文档名称前缀），然后单击<strong>Equal</strong>（等于），并键入 AWS-RunShellScript。</li>\n<li>现在单击<strong>AWS-RunShellScript</strong> 左边的单选按钮。本文档将更新实例上的系统管理代理。</li>\n<li>向下滚动至<strong>目标</strong>面板，并单击您的托管式 Amazon EC2 实例旁的复选框。</li>\n</ul>\n<p><img src=\"/posts/aws-3manager/4b.png\" alt=\"更新实例上的系统管理代理\"></p>\n<h2 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3.\"></a>3.</h2><ul>\n<li>向下滚动至<strong>Command Parameters</strong>（命令参数）面板，并在<strong>Commands</strong>（命令）文本框中插入以下命令：<br><code>sudo yum update -y</code></li>\n<li>最后，向下滚动并选择<strong>运行</strong>。</li>\n</ul>\n<p><img src=\"/posts/aws-3manager/4c.png\" alt=\"命令参数\"></p>\n<h2 id=\"4-当您的脚本在托管式-Amazon-EC2-实例上远程运行时，整体状态显示为正在进行。不久后，整体状态将变成“成功”。届时，向下滚动至Targets-and-outputs（目标和输出）面板并单击实例的实例-ID。您的实例-ID-将与图片上的不同。\"><a href=\"#4-当您的脚本在托管式-Amazon-EC2-实例上远程运行时，整体状态显示为正在进行。不久后，整体状态将变成“成功”。届时，向下滚动至Targets-and-outputs（目标和输出）面板并单击实例的实例-ID。您的实例-ID-将与图片上的不同。\" class=\"headerlink\" title=\"4. 当您的脚本在托管式 Amazon EC2 实例上远程运行时，整体状态显示为正在进行。不久后，整体状态将变成“成功”。届时，向下滚动至Targets and outputs（目标和输出）面板并单击实例的实例 ID。您的实例 ID 将与图片上的不同。\"></a>4. 当您的脚本在托管式 Amazon EC2 实例上远程运行时，<strong>整体状态</strong>显示为<strong>正在进行</strong>。不久后，<strong>整体状态</strong>将变成“成功”。届时，向下滚动至<strong>Targets and outputs</strong>（目标和输出）面板并单击实例的实例 ID。您的实例 ID 将与图片上的不同。</h2><p><img src=\"/posts/aws-3manager/4d.png\" alt=\"成功\"></p>\n<h2 id=\"5-在Output-on-i-XX-页面中，单击Step-1-Output（第-1-步-输出）面板的标头，查看来自实例的更新命令输出。\"><a href=\"#5-在Output-on-i-XX-页面中，单击Step-1-Output（第-1-步-输出）面板的标头，查看来自实例的更新命令输出。\" class=\"headerlink\" title=\"5. 在Output on: i-XX 页面中，单击Step 1 - Output（第 1 步 - 输出）面板的标头，查看来自实例的更新命令输出。\"></a>5. 在<strong>Output on: i-XX</strong> 页面中，单击<strong>Step 1 - Output</strong>（第 1 步 - 输出）面板的标头，查看来自实例的更新命令输出。</h2><p><img src=\"/posts/aws-3manager/4e.png\" alt=\"查看\"></p>"},{"title":"Hexo博客将链接自动提交百度","date":"2020-09-25T08:29:10.000Z","_content":"试过多种方法，发现这个是最高效的SEO\n\n# 安装插件\n```js\nnpm install hexo-baidu-url-submit  –save\n```\n<!-- more -->\n\n# 在根目录配置文件_config.yml中：\n## 添加新字段\n需要在[百度资源平台](https://ziyuan.baidu.com/)注册并获取token秘钥\n```yml\nbaidu_url_submit:\n  count: 100 # 提交最新的一个链接\n  host: wudong.tech # 在百度站长平台中注册的域名\n  token: 23GYpxowKnhVsUM # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!\n  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里\n```\n\n## deploy中添加新的type\n```yml\ndeploy:\n- type: git       #这行最前面加-\n  repo: \n  branch: master\n- type: baidu_url_submitter     #这行是新加的\n```\n\n# 最后重新deploy一下就好啦。","source":"_posts/baidu-push.md","raw":"---\ntitle: Hexo博客将链接自动提交百度\ndate: 2020-09-25 16:29:10\ntags: Hexo\ncategories: \n- Hexo\n---\n试过多种方法，发现这个是最高效的SEO\n\n# 安装插件\n```js\nnpm install hexo-baidu-url-submit  –save\n```\n<!-- more -->\n\n# 在根目录配置文件_config.yml中：\n## 添加新字段\n需要在[百度资源平台](https://ziyuan.baidu.com/)注册并获取token秘钥\n```yml\nbaidu_url_submit:\n  count: 100 # 提交最新的一个链接\n  host: wudong.tech # 在百度站长平台中注册的域名\n  token: 23GYpxowKnhVsUM # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!\n  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里\n```\n\n## deploy中添加新的type\n```yml\ndeploy:\n- type: git       #这行最前面加-\n  repo: \n  branch: master\n- type: baidu_url_submitter     #这行是新加的\n```\n\n# 最后重新deploy一下就好啦。","slug":"baidu-push","published":1,"updated":"2020-09-25T08:38:32.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ge0015c8pv338q3pfq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>试过多种方法，发现这个是最高效的SEO</p>\n<h1 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit  –save</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"在根目录配置文件-config-yml中：\"><a href=\"#在根目录配置文件-config-yml中：\" class=\"headerlink\" title=\"在根目录配置文件_config.yml中：\"></a>在根目录配置文件_config.yml中：</h1><h2 id=\"添加新字段\"><a href=\"#添加新字段\" class=\"headerlink\" title=\"添加新字段\"></a>添加新字段</h2><p>需要在<a href=\"https://ziyuan.baidu.com/\">百度资源平台</a>注册并获取token秘钥<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">baidu_url_submit:</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"number\">100</span> <span class=\"comment\"># 提交最新的一个链接</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">wudong.tech</span> <span class=\"comment\"># 在百度站长平台中注册的域名</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">23GYpxowKnhVsUM</span> <span class=\"comment\"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">baidu_urls.txt</span> <span class=\"comment\"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"deploy中添加新的type\"><a href=\"#deploy中添加新的type\" class=\"headerlink\" title=\"deploy中添加新的type\"></a>deploy中添加新的type</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span>       <span class=\"comment\">#这行最前面加-</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> </span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">baidu_url_submitter</span>     <span class=\"comment\">#这行是新加的</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"最后重新deploy一下就好啦。\"><a href=\"#最后重新deploy一下就好啦。\" class=\"headerlink\" title=\"最后重新deploy一下就好啦。\"></a>最后重新deploy一下就好啦。</h1>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":381,"excerpt":"<p>试过多种方法，发现这个是最高效的SEO</p>\n<h1 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit  –save</span><br></pre></td></tr></table></figure>","more":"<h1 id=\"在根目录配置文件-config-yml中：\"><a href=\"#在根目录配置文件-config-yml中：\" class=\"headerlink\" title=\"在根目录配置文件_config.yml中：\"></a>在根目录配置文件_config.yml中：</h1><h2 id=\"添加新字段\"><a href=\"#添加新字段\" class=\"headerlink\" title=\"添加新字段\"></a>添加新字段</h2><p>需要在<a href=\"https://ziyuan.baidu.com/\">百度资源平台</a>注册并获取token秘钥<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">baidu_url_submit:</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"number\">100</span> <span class=\"comment\"># 提交最新的一个链接</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">wudong.tech</span> <span class=\"comment\"># 在百度站长平台中注册的域名</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">23GYpxowKnhVsUM</span> <span class=\"comment\"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">baidu_urls.txt</span> <span class=\"comment\"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"deploy中添加新的type\"><a href=\"#deploy中添加新的type\" class=\"headerlink\" title=\"deploy中添加新的type\"></a>deploy中添加新的type</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span>       <span class=\"comment\">#这行最前面加-</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> </span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">baidu_url_submitter</span>     <span class=\"comment\">#这行是新加的</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"最后重新deploy一下就好啦。\"><a href=\"#最后重新deploy一下就好啦。\" class=\"headerlink\" title=\"最后重新deploy一下就好啦。\"></a>最后重新deploy一下就好啦。</h1>"},{"title":"操作系统课堂笔记","date":"2020-09-21T08:49:31.000Z","_content":"# 软件工程专业操作系统课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.pdf\" width=\"100%\" height=\"1000px\"></iframe>","source":"_posts/caozuoxitong.md","raw":"---\ntitle: 操作系统课堂笔记\ndate: 2020-09-21 16:49:31\ntags:\n- 笔记\n- 操作系统\ncategories:\n- 笔记\n- 操作系统\n---\n# 软件工程专业操作系统课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.pdf\" width=\"100%\" height=\"1000px\"></iframe>","slug":"caozuoxitong","published":1,"updated":"2020-10-27T08:20:09.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gg0019c8pv1io811z4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"软件工程专业操作系统课程笔记\"><a href=\"#软件工程专业操作系统课程笔记\" class=\"headerlink\" title=\"软件工程专业操作系统课程笔记\"></a>软件工程专业操作系统课程笔记</h1><a id=\"more\"></a>\n<iframe src=\"http://file.panjiangtao.cn/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.pdf\" width=\"100%\" height=\"1000px\"></iframe>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":14,"excerpt":"<h1 id=\"软件工程专业操作系统课程笔记\"><a href=\"#软件工程专业操作系统课程笔记\" class=\"headerlink\" title=\"软件工程专业操作系统课程笔记\"></a>软件工程专业操作系统课程笔记</h1>","more":"<iframe src=\"http://file.panjiangtao.cn/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.pdf\" width=\"100%\" height=\"1000px\"></iframe>"},{"title":"编译原理课堂笔记","date":"2020-09-21T08:49:42.000Z","_content":"# 软件工程专业编译原理课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.pdf\" width=\"100%\" height=\"1000px\"></iframe>","source":"_posts/bianyi.md","raw":"---\ntitle: 编译原理课堂笔记\ndate: 2020-09-21 16:49:42\ntags:\n- 笔记\n- 编译原理\ncategories:\n- 笔记\n- 编译原理\n---\n# 软件工程专业编译原理课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.pdf\" width=\"100%\" height=\"1000px\"></iframe>","slug":"bianyi","published":1,"updated":"2020-10-27T08:20:09.871Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gj001cc8pv7paqdea3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"软件工程专业编译原理课程笔记\"><a href=\"#软件工程专业编译原理课程笔记\" class=\"headerlink\" title=\"软件工程专业编译原理课程笔记\"></a>软件工程专业编译原理课程笔记</h1><a id=\"more\"></a>\n<iframe src=\"http://file.panjiangtao.cn/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.pdf\" width=\"100%\" height=\"1000px\"></iframe>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":14,"excerpt":"<h1 id=\"软件工程专业编译原理课程笔记\"><a href=\"#软件工程专业编译原理课程笔记\" class=\"headerlink\" title=\"软件工程专业编译原理课程笔记\"></a>软件工程专业编译原理课程笔记</h1>","more":"<iframe src=\"http://file.panjiangtao.cn/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.pdf\" width=\"100%\" height=\"1000px\"></iframe>"},{"title":"晨午晚检自动填报工具","date":"2020-09-18T11:45:28.000Z","_content":"{% note info %}\n搬运自HPShark的[github仓库](https://github.com/HPShark/xdu_chenwuwanjian)\n{% endnote %}\n\n# 晨午晚检自动填报工具\n\n#### 本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\n\n#### 如果此项目侵犯了您或者您公司的权益，请立即联系我删除\n<!-- more -->\n# 注意\n\n本脚本只内置了南校区的经纬度,**只适用于南校区在校的同学**\n\n\n# 项目说明\n\n- `data` 需要提交给网站的信息\n- `AccountInfo.ini` 登录的配置文件，用来保存帐号密码以及收发邮箱信息和邮箱key（只支持QQ邮箱）\n- `index.py` 完成自动提交的py脚本\n- `utils` 帮助生成默认项配置的py脚本\n- `requirements.txt` py依赖库以及版本说明文件\n- `层文件.zip` 打包好的云函数依赖库文件\n\n\n\n# 使用方式\n\n### 配合腾讯云函数使用（免费）\n\n1. clone 或者 下载 此仓库到本地\n\n   ```\n   git clone https://github.com/HPShark/xdu_chenwuwanjian.git\n   ```\n\n2. 打开本地仓库文件夹，配置`AccountInfo.ini`中对应的信息，**注意这里的学号和密码都是教务系统的学号和密码，key是邮箱的密码**\n\n3. 打开百度搜索[腾讯云函数](https://console.cloud.tencent.com/scf/index?rid=1)，注册认证后，进入控制台，点击左边的层，然后点新建，名称随意，然后点击上传zip，选择项目中的`层文件.zip`上传，然后选择运行环境`python3.6`，然后点击确定，耐心等待一下，上传依赖包需要花费的时间比较长 [新建腾讯云函数依赖](ceng.jpg)\n\n4. 点左边的函数服务，新建云函数，名称随意，运行环境选择`python3.6`，创建方式选择空白函数，然后点击下一步 ![新建腾讯云函数](hanshu.jpg)\n5. 提交方法选择上传本地压缩包，把本地的/data，/utils，AccountInfo.ini，index.py，requirements.txt五个文件和文件夹打包上传，在点击下面的高级设置，设置内存为256M，超时时间为`30秒`，添加层为刚刚新建的函数依赖层，环境变量设置一个`TZ=Asia/Shanghai`，然后点击完成![高级设置](gaoji.jpg)\n\n6. 进入新建好的云函数，左边点击触发管理，点击创建触发器，名称随意，触发周期选择自定义，然后配置cron表达式。下面的表达式表示每天中午十二点整执行，可配置多个时间以便早中晚自动运行\n\n   ```\n   0 0 12 * * * *\n   ```\n\n7. 然后就可以测试云函数了，绿色代表云函数执行成功，红色代表云函数执行失败（失败的原因大部分是由于依赖造成的）。返回结果是`auto submit fail.`代表自动提交失败；返回结果是`auto submit success.`，代表自动提交成功，如遇到问题，请仔细查看日志\n\n8. 也可配合Windows计划任务或者使用linux定时任务，将脚本挂在自己的云服务器上，不会就搜索一下，过程不再赘述\n\n#### ","source":"_posts/chenwujian.md","raw":"---\ntitle: 晨午晚检自动填报工具\ndate: 2020-09-18 19:45:28\ntags: \n- XDU\n- 自动工具\ncategories: \n- 生活\n- 搬运\n---\n{% note info %}\n搬运自HPShark的[github仓库](https://github.com/HPShark/xdu_chenwuwanjian)\n{% endnote %}\n\n# 晨午晚检自动填报工具\n\n#### 本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\n\n#### 如果此项目侵犯了您或者您公司的权益，请立即联系我删除\n<!-- more -->\n# 注意\n\n本脚本只内置了南校区的经纬度,**只适用于南校区在校的同学**\n\n\n# 项目说明\n\n- `data` 需要提交给网站的信息\n- `AccountInfo.ini` 登录的配置文件，用来保存帐号密码以及收发邮箱信息和邮箱key（只支持QQ邮箱）\n- `index.py` 完成自动提交的py脚本\n- `utils` 帮助生成默认项配置的py脚本\n- `requirements.txt` py依赖库以及版本说明文件\n- `层文件.zip` 打包好的云函数依赖库文件\n\n\n\n# 使用方式\n\n### 配合腾讯云函数使用（免费）\n\n1. clone 或者 下载 此仓库到本地\n\n   ```\n   git clone https://github.com/HPShark/xdu_chenwuwanjian.git\n   ```\n\n2. 打开本地仓库文件夹，配置`AccountInfo.ini`中对应的信息，**注意这里的学号和密码都是教务系统的学号和密码，key是邮箱的密码**\n\n3. 打开百度搜索[腾讯云函数](https://console.cloud.tencent.com/scf/index?rid=1)，注册认证后，进入控制台，点击左边的层，然后点新建，名称随意，然后点击上传zip，选择项目中的`层文件.zip`上传，然后选择运行环境`python3.6`，然后点击确定，耐心等待一下，上传依赖包需要花费的时间比较长 [新建腾讯云函数依赖](ceng.jpg)\n\n4. 点左边的函数服务，新建云函数，名称随意，运行环境选择`python3.6`，创建方式选择空白函数，然后点击下一步 ![新建腾讯云函数](hanshu.jpg)\n5. 提交方法选择上传本地压缩包，把本地的/data，/utils，AccountInfo.ini，index.py，requirements.txt五个文件和文件夹打包上传，在点击下面的高级设置，设置内存为256M，超时时间为`30秒`，添加层为刚刚新建的函数依赖层，环境变量设置一个`TZ=Asia/Shanghai`，然后点击完成![高级设置](gaoji.jpg)\n\n6. 进入新建好的云函数，左边点击触发管理，点击创建触发器，名称随意，触发周期选择自定义，然后配置cron表达式。下面的表达式表示每天中午十二点整执行，可配置多个时间以便早中晚自动运行\n\n   ```\n   0 0 12 * * * *\n   ```\n\n7. 然后就可以测试云函数了，绿色代表云函数执行成功，红色代表云函数执行失败（失败的原因大部分是由于依赖造成的）。返回结果是`auto submit fail.`代表自动提交失败；返回结果是`auto submit success.`，代表自动提交成功，如遇到问题，请仔细查看日志\n\n8. 也可配合Windows计划任务或者使用linux定时任务，将脚本挂在自己的云服务器上，不会就搜索一下，过程不再赘述\n\n#### ","slug":"chenwujian","published":1,"updated":"2020-09-19T08:48:58.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gl001hc8pv4llt11h0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>搬运自HPShark的<a href=\"https://github.com/HPShark/xdu_chenwuwanjian\">github仓库</a></p>\n          </div>\n<h1 id=\"晨午晚检自动填报工具\"><a href=\"#晨午晚检自动填报工具\" class=\"headerlink\" title=\"晨午晚检自动填报工具\"></a>晨午晚检自动填报工具</h1><h4 id=\"本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\"><a href=\"#本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\" class=\"headerlink\" title=\"本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\"></a>本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关</h4><h4 id=\"如果此项目侵犯了您或者您公司的权益，请立即联系我删除\"><a href=\"#如果此项目侵犯了您或者您公司的权益，请立即联系我删除\" class=\"headerlink\" title=\"如果此项目侵犯了您或者您公司的权益，请立即联系我删除\"></a>如果此项目侵犯了您或者您公司的权益，请立即联系我删除</h4><a id=\"more\"></a>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>本脚本只内置了南校区的经纬度,<strong>只适用于南校区在校的同学</strong></p>\n<h1 id=\"项目说明\"><a href=\"#项目说明\" class=\"headerlink\" title=\"项目说明\"></a>项目说明</h1><ul>\n<li><code>data</code> 需要提交给网站的信息</li>\n<li><code>AccountInfo.ini</code> 登录的配置文件，用来保存帐号密码以及收发邮箱信息和邮箱key（只支持QQ邮箱）</li>\n<li><code>index.py</code> 完成自动提交的py脚本</li>\n<li><code>utils</code> 帮助生成默认项配置的py脚本</li>\n<li><code>requirements.txt</code> py依赖库以及版本说明文件</li>\n<li><code>层文件.zip</code> 打包好的云函数依赖库文件</li>\n</ul>\n<h1 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h1><h3 id=\"配合腾讯云函数使用（免费）\"><a href=\"#配合腾讯云函数使用（免费）\" class=\"headerlink\" title=\"配合腾讯云函数使用（免费）\"></a>配合腾讯云函数使用（免费）</h3><ol>\n<li><p>clone 或者 下载 此仓库到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;HPShark&#x2F;xdu_chenwuwanjian.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开本地仓库文件夹，配置<code>AccountInfo.ini</code>中对应的信息，<strong>注意这里的学号和密码都是教务系统的学号和密码，key是邮箱的密码</strong></p>\n</li>\n<li><p>打开百度搜索<a href=\"https://console.cloud.tencent.com/scf/index?rid=1\">腾讯云函数</a>，注册认证后，进入控制台，点击左边的层，然后点新建，名称随意，然后点击上传zip，选择项目中的<code>层文件.zip</code>上传，然后选择运行环境<code>python3.6</code>，然后点击确定，耐心等待一下，上传依赖包需要花费的时间比较长 <a href=\"ceng.jpg\">新建腾讯云函数依赖</a></p>\n</li>\n<li><p>点左边的函数服务，新建云函数，名称随意，运行环境选择<code>python3.6</code>，创建方式选择空白函数，然后点击下一步 <img src=\"/posts/chenwujian/hanshu.jpg\" alt=\"新建腾讯云函数\"></p>\n</li>\n<li><p>提交方法选择上传本地压缩包，把本地的/data，/utils，AccountInfo.ini，index.py，requirements.txt五个文件和文件夹打包上传，在点击下面的高级设置，设置内存为256M，超时时间为<code>30秒</code>，添加层为刚刚新建的函数依赖层，环境变量设置一个<code>TZ=Asia/Shanghai</code>，然后点击完成<img src=\"/posts/chenwujian/gaoji.jpg\" alt=\"高级设置\"></p>\n</li>\n<li><p>进入新建好的云函数，左边点击触发管理，点击创建触发器，名称随意，触发周期选择自定义，然后配置cron表达式。下面的表达式表示每天中午十二点整执行，可配置多个时间以便早中晚自动运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 0 12 * * * *</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后就可以测试云函数了，绿色代表云函数执行成功，红色代表云函数执行失败（失败的原因大部分是由于依赖造成的）。返回结果是<code>auto submit fail.</code>代表自动提交失败；返回结果是<code>auto submit success.</code>，代表自动提交成功，如遇到问题，请仔细查看日志</p>\n</li>\n<li><p>也可配合Windows计划任务或者使用linux定时任务，将脚本挂在自己的云服务器上，不会就搜索一下，过程不再赘述</p>\n</li>\n</ol>\n<h4 id><a href=\"#\" class=\"headerlink\" title=\" \"></a> </h4>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1082,"excerpt":"<div class=\"note info\">\n            <p>搬运自HPShark的<a href=\"https://github.com/HPShark/xdu_chenwuwanjian\">github仓库</a></p>\n          </div>\n<h1 id=\"晨午晚检自动填报工具\"><a href=\"#晨午晚检自动填报工具\" class=\"headerlink\" title=\"晨午晚检自动填报工具\"></a>晨午晚检自动填报工具</h1><h4 id=\"本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\"><a href=\"#本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\" class=\"headerlink\" title=\"本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关\"></a>本项目仅供学习交流使用，如作他用所承受的任何直接、间接法律责任一概与作者和搬运者无关</h4><h4 id=\"如果此项目侵犯了您或者您公司的权益，请立即联系我删除\"><a href=\"#如果此项目侵犯了您或者您公司的权益，请立即联系我删除\" class=\"headerlink\" title=\"如果此项目侵犯了您或者您公司的权益，请立即联系我删除\"></a>如果此项目侵犯了您或者您公司的权益，请立即联系我删除</h4>","more":"<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>本脚本只内置了南校区的经纬度,<strong>只适用于南校区在校的同学</strong></p>\n<h1 id=\"项目说明\"><a href=\"#项目说明\" class=\"headerlink\" title=\"项目说明\"></a>项目说明</h1><ul>\n<li><code>data</code> 需要提交给网站的信息</li>\n<li><code>AccountInfo.ini</code> 登录的配置文件，用来保存帐号密码以及收发邮箱信息和邮箱key（只支持QQ邮箱）</li>\n<li><code>index.py</code> 完成自动提交的py脚本</li>\n<li><code>utils</code> 帮助生成默认项配置的py脚本</li>\n<li><code>requirements.txt</code> py依赖库以及版本说明文件</li>\n<li><code>层文件.zip</code> 打包好的云函数依赖库文件</li>\n</ul>\n<h1 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h1><h3 id=\"配合腾讯云函数使用（免费）\"><a href=\"#配合腾讯云函数使用（免费）\" class=\"headerlink\" title=\"配合腾讯云函数使用（免费）\"></a>配合腾讯云函数使用（免费）</h3><ol>\n<li><p>clone 或者 下载 此仓库到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;HPShark&#x2F;xdu_chenwuwanjian.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开本地仓库文件夹，配置<code>AccountInfo.ini</code>中对应的信息，<strong>注意这里的学号和密码都是教务系统的学号和密码，key是邮箱的密码</strong></p>\n</li>\n<li><p>打开百度搜索<a href=\"https://console.cloud.tencent.com/scf/index?rid=1\">腾讯云函数</a>，注册认证后，进入控制台，点击左边的层，然后点新建，名称随意，然后点击上传zip，选择项目中的<code>层文件.zip</code>上传，然后选择运行环境<code>python3.6</code>，然后点击确定，耐心等待一下，上传依赖包需要花费的时间比较长 <a href=\"ceng.jpg\">新建腾讯云函数依赖</a></p>\n</li>\n<li><p>点左边的函数服务，新建云函数，名称随意，运行环境选择<code>python3.6</code>，创建方式选择空白函数，然后点击下一步 <img src=\"/posts/chenwujian/hanshu.jpg\" alt=\"新建腾讯云函数\"></p>\n</li>\n<li><p>提交方法选择上传本地压缩包，把本地的/data，/utils，AccountInfo.ini，index.py，requirements.txt五个文件和文件夹打包上传，在点击下面的高级设置，设置内存为256M，超时时间为<code>30秒</code>，添加层为刚刚新建的函数依赖层，环境变量设置一个<code>TZ=Asia/Shanghai</code>，然后点击完成<img src=\"/posts/chenwujian/gaoji.jpg\" alt=\"高级设置\"></p>\n</li>\n<li><p>进入新建好的云函数，左边点击触发管理，点击创建触发器，名称随意，触发周期选择自定义，然后配置cron表达式。下面的表达式表示每天中午十二点整执行，可配置多个时间以便早中晚自动运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 0 12 * * * *</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后就可以测试云函数了，绿色代表云函数执行成功，红色代表云函数执行失败（失败的原因大部分是由于依赖造成的）。返回结果是<code>auto submit fail.</code>代表自动提交失败；返回结果是<code>auto submit success.</code>，代表自动提交成功，如遇到问题，请仔细查看日志</p>\n</li>\n<li><p>也可配合Windows计划任务或者使用linux定时任务，将脚本挂在自己的云服务器上，不会就搜索一下，过程不再赘述</p>\n</li>\n</ol>\n<h4 id><a href=\"#\" class=\"headerlink\" title=\" \"></a> </h4>"},{"title":"不同类型循环神经网络","copyright":false,"date":"2021-03-12T06:28:23.000Z","_content":"\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 分类\n## 多对多(Many-to-many)\n　　上一节中提到的命名识别模型就属于多对多模型（下图左），其$T_{x}=T_{y}$\n　　多对多也存在$T_{x}!=T_{y}$的情况。\n<!-- more -->\n![多对多(左)，多对一(右)](14e1df0a7a8cdd1584b2e92e87e23aa7.png)\n\n## 多对一(Many-to-one)\n　　情感分类中（上图右），输入一个序列，输出单个评分，其$T_{x}>1$,$T_{y}=1$\n\n## 一对多(One-to-many)\n　　音乐生成模型，输入为一个音符，输出一段乐谱序列。每个输出单元都会喂给下一单元作为输入。\n![音乐生成模型](db580f1dfd6095d672fc62cce74ce5e2.png)","source":"_posts/dl-10different-rnn.md","raw":"---\ntitle: 不同类型循环神经网络\ncopyright: false\ndate: 2021-03-12 14:28:23\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 分类\n## 多对多(Many-to-many)\n　　上一节中提到的命名识别模型就属于多对多模型（下图左），其$T_{x}=T_{y}$\n　　多对多也存在$T_{x}!=T_{y}$的情况。\n<!-- more -->\n![多对多(左)，多对一(右)](14e1df0a7a8cdd1584b2e92e87e23aa7.png)\n\n## 多对一(Many-to-one)\n　　情感分类中（上图右），输入一个序列，输出单个评分，其$T_{x}>1$,$T_{y}=1$\n\n## 一对多(One-to-many)\n　　音乐生成模型，输入为一个音符，输出一段乐谱序列。每个输出单元都会喂给下一单元作为输入。\n![音乐生成模型](db580f1dfd6095d672fc62cce74ce5e2.png)","slug":"dl-10different-rnn","published":1,"updated":"2021-03-12T07:34:21.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gm001kc8pv0y8bggra","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h1><h2 id=\"多对多-Many-to-many\"><a href=\"#多对多-Many-to-many\" class=\"headerlink\" title=\"多对多(Many-to-many)\"></a>多对多(Many-to-many)</h2><p>　　上一节中提到的命名识别模型就属于多对多模型（下图左），其$T_{x}=T_{y}$<br>　　多对多也存在$T_{x}!=T_{y}$的情况。<br><a id=\"more\"></a><br><img src=\"/posts/dl-10different-rnn/14e1df0a7a8cdd1584b2e92e87e23aa7.png\" alt=\"多对多(左)，多对一(右)\"></p>\n<h2 id=\"多对一-Many-to-one\"><a href=\"#多对一-Many-to-one\" class=\"headerlink\" title=\"多对一(Many-to-one)\"></a>多对一(Many-to-one)</h2><p>　　情感分类中（上图右），输入一个序列，输出单个评分，其$T_{x}&gt;1$,$T_{y}=1$</p>\n<h2 id=\"一对多-One-to-many\"><a href=\"#一对多-One-to-many\" class=\"headerlink\" title=\"一对多(One-to-many)\"></a>一对多(One-to-many)</h2><p>　　音乐生成模型，输入为一个音符，输出一段乐谱序列。每个输出单元都会喂给下一单元作为输入。<br><img src=\"/posts/dl-10different-rnn/db580f1dfd6095d672fc62cce74ce5e2.png\" alt=\"音乐生成模型\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":236,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h1><h2 id=\"多对多-Many-to-many\"><a href=\"#多对多-Many-to-many\" class=\"headerlink\" title=\"多对多(Many-to-many)\"></a>多对多(Many-to-many)</h2><p>　　上一节中提到的命名识别模型就属于多对多模型（下图左），其$T_{x}=T_{y}$<br>　　多对多也存在$T_{x}!=T_{y}$的情况。<br></p>","more":"<br><img src=\"/posts/dl-10different-rnn/14e1df0a7a8cdd1584b2e92e87e23aa7.png\" alt=\"多对多(左)，多对一(右)\"><p></p>\n<h2 id=\"多对一-Many-to-one\"><a href=\"#多对一-Many-to-one\" class=\"headerlink\" title=\"多对一(Many-to-one)\"></a>多对一(Many-to-one)</h2><p>　　情感分类中（上图右），输入一个序列，输出单个评分，其$T_{x}&gt;1$,$T_{y}=1$</p>\n<h2 id=\"一对多-One-to-many\"><a href=\"#一对多-One-to-many\" class=\"headerlink\" title=\"一对多(One-to-many)\"></a>一对多(One-to-many)</h2><p>　　音乐生成模型，输入为一个音符，输出一段乐谱序列。每个输出单元都会喂给下一单元作为输入。<br><img src=\"/posts/dl-10different-rnn/db580f1dfd6095d672fc62cce74ce5e2.png\" alt=\"音乐生成模型\"></p>"},{"title":"一句","date":"2020-09-19T07:44:17.000Z","top":100,"_content":"{% cq %}\n<!-- ### <script type=\"text/javascript\" src=\"https://api.uixsj.cn/hitokoto/w.php?code=js\"></script><div id=\"xsjhitokoto\"><script>xsjhitokoto()</script></div> -->\n# <script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script><span id=\"jinrishici-sentence\">正在加载今日诗词....</span>\n{% endcq %}\n<iframe scrolling=\"no\" src=\"https://tianqiapi.com/api.php?style=tz&skin=gif\" frameborder=\"0\" width=\"100%\" height=\"30\" allowtransparency=\"true\"></iframe>\n<!-- more -->\n---\n\n{% cq %}\n### 最长的弯路也是最近的归途。\n\n## ———C·S·路易斯\n{% endcq %}\n2020.11.5\n\n\n{% cq %}\n### 我点燃了火，\n### 却控制不了它。\n\n## ———三体\n{% endcq %}\n2020.11.4\n\n\n{% cq %}\n### 在没有危险的地方，\n### 那里爱情拥有双眼，\n### 不会盲目。\n\n## ———戴米恩·莱斯\n{% endcq %}\n2020.11.3\n\n\n{% cq %}\n### 无论我们处在怎样的年纪，\n### 只要能看到未来，\n### 就能获得青春。\n\n## ————保罗·索伦蒂诺\n{% endcq %}\n2020.11.2\n\n\n{% cq %}\n### 她今夜出去只喝香槟，\n### 她几乎打量了所有男人，\n### 她在玩她的游戏，\n### 你可以听到他们说，\n### 她很漂亮，\n### 我们要为她的美貌付钱。\n\n## ————发电站\n{% endcq %}\n2020.11.1\n\n\n{% cq %}\n### 人生若只如初见，\n### 何事秋风悲画扇。\n\n## ————木兰花·拟古决绝词柬友\n{% endcq %}\n2020.10.31\n\n\n{% cq %}\n### 我并不是一味喜欢老旧的东西，\n### 我喜欢的，是建立在经典不变的基础上，\n### 再融入新的东西。\n### 我觉得有品味的人，\n### 能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\n\n## ————长冈贤明\n{% endcq %}\n2020.10.30\n\n\n{% cq %}\n### 人闲桂花落，\n### 夜静春山空。\n\n## ————鸟鸣涧\n{% endcq %}\n2020.10.29\n\n\n{% cq %}\n### 他们太过于个人化，\n### 太过于阳春白雪......\n### 今后应该比我迄今为止所做的更加尊重观众。\n\n## ————赖纳·维尔纳·法斯宾德\n{% endcq %}\n2020.10.28\n\n\n{% cq %}\n### 这世界开始时没有人，\n### 当它终结时还是没有人。\n\n## ————克洛德·列维·斯特劳斯\n{% endcq %}\n2020.10.27\n\n\n{% cq %}\n### 昔日我曾如此苍老，\n### 如今才是风华正茂。\n\n## ————鲍勃·迪伦\n{% endcq %}\n2020.10.26\n\n\n{% cq %}\n### 一别都门三改火，\n### 天涯踏尽红尘。\n\n## ————临江仙·送钱穆父\n{% endcq %}\n2020.10.25\n\n\n{% cq %}\n### 醉后不知天在水，\n### 满船清梦压星河。\n\n## ————题龙阳县青草湖\n{% endcq %}\n2020.10.24\n\n\n{% cq %}\n### 事实上，\n### 忧郁的人会成为最大的瘾君子，\n### 因为真正上了瘾的体验总是一种孤独的体验。\n\n## ————苏珊·桑塔格\n{% endcq %}\n2020.10.23\n\n\n{% cq %}\n### 天下熙熙，\n### 皆为利来；\n### 天下攘攘，\n### 皆为利往。\n\n## ————史记·货殖列传\n{% endcq %}\n2020.10.22  \n\n\n{% cq %}\n### 我的风格就是我唯一能做的好事，\n### 我不考虑流派，\n### 我不考虑标签，\n### 它们没有什么意义\n\n## ————穆玄英挂帅\n{% endcq %}\n2020.10.21  \n\n\n{% cq %}\n### 世间情动，\n### 不过盛夏白瓷梅子汤，\n### 碎冰碰壁当啷响。\n\n## ————穆玄英挂帅\n{% endcq %}\n2020.10.20  \n\n\n{% cq %}\n### 我不喜欢“惊人”这个词，\n### 我在寻找意想不到的东西。\n### 寻找那些我从来没见过的东西......\n### 我在拍这些照片，\n### 我觉得义不容辞。\n\n##            ————罗伯特·梅普尔索普\n{% endcq %}\n2020.10.19\n\n\n{% cq %}\n### 我的关注永远不是艺术，\n### 但总是可以使用什么艺术。\n\n##            ————格哈德·里希特\n{% endcq %}\n2020.10.18\n\n\n{% cq %}\n### 人们理解杜尚花了100年时间，\n### 理解我估计要更久一点。\n\n##            ————白南准\n{% endcq %}\n2020.10.17\n\n\n{% cq %}\n### 我肯定，\n### 在空无的中心，\n### 如同在人的心脏,\n### 有火在燃烧。\n\n##           ————伊夫·克莱因\n{% endcq %}\n2020.10.16\n\n\n{% cq %}\n### 随着年龄的增长，\n### 我想起了我们古老的文字、遗产和价值观。\n### 它们中的任何一个都代表着一种完整的理解,\n### 即唯一确定的是不确定。\n\n##            ————巴克里希纳·多西\n{% endcq %}\n2020.10.15\n\n\n{% cq %}\n### 我们哭着降临世界，\n### 却可以笑着走向永恒。\n\n##            ————如果国宝会说话\n{% endcq %}\n2020.10.14\n\n\n{% cq %}\n### 他们说我是这镇子上的万人迷。\n\n##           ————弗兰克·扎帕\n{% endcq %}\n2020.10.13\n\n\n{% cq %}\n### 风乍起。\n### 合当奋意向人生。\n\n##           ————堀辰雄\n{% endcq %}\n2020.10.12\n\n\n{% cq %}\n### 我的作品就是我的肉体和灵魂，\n### 为了它我甘愿冒失去生命和理智的危险。\n\n##           ————文森特·威廉·梵·高\n{% endcq %}\n2020.10.11\n\n\n{% cq %}\n### 抱歉，似乎是最难以启齿的话。\n\n##           ————雷·查尔斯\n{% endcq %}\n2020.10.10\n\n\n{% cq %}\n### 历史学的目标并不是由过去视角出发展望未来。\n\n##            ————埃里克·霍布斯鲍姆\n{% endcq %}\n2020.10.9\n\n\n{% cq %}\n### 和魔鬼共舞时，\n### 只能等着音乐结束。\n\n##            ————盖·里奇\n{% endcq %}\n2020.10.8\n\n\n{% cq %}\n### 你了解星空下万物温馨的生长吗，\n### 你了解我们的存在吗，\n### 你已经遗失开启王国的钥匙了吗，\n### 你在轮回中反复降生一直活着吗，\n### 让我们彻底改造诸神，\n### 包括各个时代的神话。\n\n##            ————吉姆·莫里森\n{% endcq %}\n2020.10.7\n\n\n{% cq %}\n### 声音在太空中消逝，\n### 霞光变得昏暗。\n### 永远沉默的世界里，\n### 只有你和我交谈。\n\n##                     ————阿赫马托娃\n{% endcq %}\n2020.9.28\n\n\n{% cq %}\n### 这几张脸在人群中幻境般闪现，\n### 湿漉漉的黑树枝上花瓣数点。\n\n##                     ————埃兹拉·庞德\n{% endcq %}\n2020.9.27\n\n\n{% cq %}\n### 热水澡肯定不能包治百病，\n### 但我想例外也不会太多。\n### 每当我悲痛欲绝，\n### 或者神经紧张、夜不成寐，\n### 意志消沉、萎靡不振，\n### 这时我就会对自己说：\n### 洗个热水澡吧。\n\n##                     ————西尔维娅·普拉斯\n{% endcq %}\n2020.9.26\n\n\n{% cq %}\n### 当我回顾人类的历史，\n### 有时我觉得是一出喜剧，\n### 但这喜剧让我哭泣；\n### 有时又觉得它是一出悲剧，\n### 但这悲剧却让我微笑。\n\n##                     ————特拉斯诺霍尔卡伊·拉斯洛\n{% endcq %}\n2020.9.25\n\n\n{% cq %}\n### 就着几盏昏红的灯下，\n### 靠在几张旧床边，\n### 我们就在这儿挥洒激情的汗水，\n### 无论我们能从中收获怎样的音乐，\n### 我知道我们永不会忘。\n\n##                     ————深紫乐队\n{% endcq %}\n2020.9.24\n\n\n{% cq %}\n### 很多人常说我受某某的影响，\n### 其实并无关连，\n### 认真说来只有盗窃而已。\n### 除了盗窃以外，\n### 别无其他，\n### 只不过其他人不敢说出来。\n\n##                     ————丸尾末广\n{% endcq %}\n2020.9.23\n\n\n{% cq %}\n### 直线属于人类，\n### 曲线属于上帝。\n\n##                     ————安东尼·高迪\n{% endcq %}\n2020.9.22\n\n\n{% cq %}\n### 以前人们似乎总是很明确地知道，\n### 政府或者谁哪里哪里做得不对，\n### 于是一起针对问题示威游行。\n### 但是如今，我们为何愤怒，\n### 完全是个谜。\n\n##                     ————李沧东\n{% endcq %}\n2020.9.21\n\n\n{% cq %}\n### 一个故事之所以吸引我，\n### 是因为它本身的价值，\n### 而非我可以顾影自怜。\n\n##                     ————奥逊·威尔斯\n{% endcq %}\n2020.9.20\n\n\n{% cq %}\n### 不要问篝火该不该燃烧，\n### 先问寒冷黑暗还在不在；\n### 不要问子弹该不该上膛，\n### 先问压迫剥削还在不在；\n### 不要问正义事业有没有明天，\n### 先问人间不平今天还在不在。\n\n##                     ————切·格瓦拉\n{% endcq %}\n2020.9.19","source":"_posts/daily.md","raw":"---\ntitle: 一句\ndate: 2020-09-19 15:44:17\ntop: 100\ntags: \n- 格言\ncategories: \n- 生活\n---\n{% cq %}\n<!-- ### <script type=\"text/javascript\" src=\"https://api.uixsj.cn/hitokoto/w.php?code=js\"></script><div id=\"xsjhitokoto\"><script>xsjhitokoto()</script></div> -->\n# <script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script><span id=\"jinrishici-sentence\">正在加载今日诗词....</span>\n{% endcq %}\n<iframe scrolling=\"no\" src=\"https://tianqiapi.com/api.php?style=tz&skin=gif\" frameborder=\"0\" width=\"100%\" height=\"30\" allowtransparency=\"true\"></iframe>\n<!-- more -->\n---\n\n{% cq %}\n### 最长的弯路也是最近的归途。\n\n## ———C·S·路易斯\n{% endcq %}\n2020.11.5\n\n\n{% cq %}\n### 我点燃了火，\n### 却控制不了它。\n\n## ———三体\n{% endcq %}\n2020.11.4\n\n\n{% cq %}\n### 在没有危险的地方，\n### 那里爱情拥有双眼，\n### 不会盲目。\n\n## ———戴米恩·莱斯\n{% endcq %}\n2020.11.3\n\n\n{% cq %}\n### 无论我们处在怎样的年纪，\n### 只要能看到未来，\n### 就能获得青春。\n\n## ————保罗·索伦蒂诺\n{% endcq %}\n2020.11.2\n\n\n{% cq %}\n### 她今夜出去只喝香槟，\n### 她几乎打量了所有男人，\n### 她在玩她的游戏，\n### 你可以听到他们说，\n### 她很漂亮，\n### 我们要为她的美貌付钱。\n\n## ————发电站\n{% endcq %}\n2020.11.1\n\n\n{% cq %}\n### 人生若只如初见，\n### 何事秋风悲画扇。\n\n## ————木兰花·拟古决绝词柬友\n{% endcq %}\n2020.10.31\n\n\n{% cq %}\n### 我并不是一味喜欢老旧的东西，\n### 我喜欢的，是建立在经典不变的基础上，\n### 再融入新的东西。\n### 我觉得有品味的人，\n### 能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\n\n## ————长冈贤明\n{% endcq %}\n2020.10.30\n\n\n{% cq %}\n### 人闲桂花落，\n### 夜静春山空。\n\n## ————鸟鸣涧\n{% endcq %}\n2020.10.29\n\n\n{% cq %}\n### 他们太过于个人化，\n### 太过于阳春白雪......\n### 今后应该比我迄今为止所做的更加尊重观众。\n\n## ————赖纳·维尔纳·法斯宾德\n{% endcq %}\n2020.10.28\n\n\n{% cq %}\n### 这世界开始时没有人，\n### 当它终结时还是没有人。\n\n## ————克洛德·列维·斯特劳斯\n{% endcq %}\n2020.10.27\n\n\n{% cq %}\n### 昔日我曾如此苍老，\n### 如今才是风华正茂。\n\n## ————鲍勃·迪伦\n{% endcq %}\n2020.10.26\n\n\n{% cq %}\n### 一别都门三改火，\n### 天涯踏尽红尘。\n\n## ————临江仙·送钱穆父\n{% endcq %}\n2020.10.25\n\n\n{% cq %}\n### 醉后不知天在水，\n### 满船清梦压星河。\n\n## ————题龙阳县青草湖\n{% endcq %}\n2020.10.24\n\n\n{% cq %}\n### 事实上，\n### 忧郁的人会成为最大的瘾君子，\n### 因为真正上了瘾的体验总是一种孤独的体验。\n\n## ————苏珊·桑塔格\n{% endcq %}\n2020.10.23\n\n\n{% cq %}\n### 天下熙熙，\n### 皆为利来；\n### 天下攘攘，\n### 皆为利往。\n\n## ————史记·货殖列传\n{% endcq %}\n2020.10.22  \n\n\n{% cq %}\n### 我的风格就是我唯一能做的好事，\n### 我不考虑流派，\n### 我不考虑标签，\n### 它们没有什么意义\n\n## ————穆玄英挂帅\n{% endcq %}\n2020.10.21  \n\n\n{% cq %}\n### 世间情动，\n### 不过盛夏白瓷梅子汤，\n### 碎冰碰壁当啷响。\n\n## ————穆玄英挂帅\n{% endcq %}\n2020.10.20  \n\n\n{% cq %}\n### 我不喜欢“惊人”这个词，\n### 我在寻找意想不到的东西。\n### 寻找那些我从来没见过的东西......\n### 我在拍这些照片，\n### 我觉得义不容辞。\n\n##            ————罗伯特·梅普尔索普\n{% endcq %}\n2020.10.19\n\n\n{% cq %}\n### 我的关注永远不是艺术，\n### 但总是可以使用什么艺术。\n\n##            ————格哈德·里希特\n{% endcq %}\n2020.10.18\n\n\n{% cq %}\n### 人们理解杜尚花了100年时间，\n### 理解我估计要更久一点。\n\n##            ————白南准\n{% endcq %}\n2020.10.17\n\n\n{% cq %}\n### 我肯定，\n### 在空无的中心，\n### 如同在人的心脏,\n### 有火在燃烧。\n\n##           ————伊夫·克莱因\n{% endcq %}\n2020.10.16\n\n\n{% cq %}\n### 随着年龄的增长，\n### 我想起了我们古老的文字、遗产和价值观。\n### 它们中的任何一个都代表着一种完整的理解,\n### 即唯一确定的是不确定。\n\n##            ————巴克里希纳·多西\n{% endcq %}\n2020.10.15\n\n\n{% cq %}\n### 我们哭着降临世界，\n### 却可以笑着走向永恒。\n\n##            ————如果国宝会说话\n{% endcq %}\n2020.10.14\n\n\n{% cq %}\n### 他们说我是这镇子上的万人迷。\n\n##           ————弗兰克·扎帕\n{% endcq %}\n2020.10.13\n\n\n{% cq %}\n### 风乍起。\n### 合当奋意向人生。\n\n##           ————堀辰雄\n{% endcq %}\n2020.10.12\n\n\n{% cq %}\n### 我的作品就是我的肉体和灵魂，\n### 为了它我甘愿冒失去生命和理智的危险。\n\n##           ————文森特·威廉·梵·高\n{% endcq %}\n2020.10.11\n\n\n{% cq %}\n### 抱歉，似乎是最难以启齿的话。\n\n##           ————雷·查尔斯\n{% endcq %}\n2020.10.10\n\n\n{% cq %}\n### 历史学的目标并不是由过去视角出发展望未来。\n\n##            ————埃里克·霍布斯鲍姆\n{% endcq %}\n2020.10.9\n\n\n{% cq %}\n### 和魔鬼共舞时，\n### 只能等着音乐结束。\n\n##            ————盖·里奇\n{% endcq %}\n2020.10.8\n\n\n{% cq %}\n### 你了解星空下万物温馨的生长吗，\n### 你了解我们的存在吗，\n### 你已经遗失开启王国的钥匙了吗，\n### 你在轮回中反复降生一直活着吗，\n### 让我们彻底改造诸神，\n### 包括各个时代的神话。\n\n##            ————吉姆·莫里森\n{% endcq %}\n2020.10.7\n\n\n{% cq %}\n### 声音在太空中消逝，\n### 霞光变得昏暗。\n### 永远沉默的世界里，\n### 只有你和我交谈。\n\n##                     ————阿赫马托娃\n{% endcq %}\n2020.9.28\n\n\n{% cq %}\n### 这几张脸在人群中幻境般闪现，\n### 湿漉漉的黑树枝上花瓣数点。\n\n##                     ————埃兹拉·庞德\n{% endcq %}\n2020.9.27\n\n\n{% cq %}\n### 热水澡肯定不能包治百病，\n### 但我想例外也不会太多。\n### 每当我悲痛欲绝，\n### 或者神经紧张、夜不成寐，\n### 意志消沉、萎靡不振，\n### 这时我就会对自己说：\n### 洗个热水澡吧。\n\n##                     ————西尔维娅·普拉斯\n{% endcq %}\n2020.9.26\n\n\n{% cq %}\n### 当我回顾人类的历史，\n### 有时我觉得是一出喜剧，\n### 但这喜剧让我哭泣；\n### 有时又觉得它是一出悲剧，\n### 但这悲剧却让我微笑。\n\n##                     ————特拉斯诺霍尔卡伊·拉斯洛\n{% endcq %}\n2020.9.25\n\n\n{% cq %}\n### 就着几盏昏红的灯下，\n### 靠在几张旧床边，\n### 我们就在这儿挥洒激情的汗水，\n### 无论我们能从中收获怎样的音乐，\n### 我知道我们永不会忘。\n\n##                     ————深紫乐队\n{% endcq %}\n2020.9.24\n\n\n{% cq %}\n### 很多人常说我受某某的影响，\n### 其实并无关连，\n### 认真说来只有盗窃而已。\n### 除了盗窃以外，\n### 别无其他，\n### 只不过其他人不敢说出来。\n\n##                     ————丸尾末广\n{% endcq %}\n2020.9.23\n\n\n{% cq %}\n### 直线属于人类，\n### 曲线属于上帝。\n\n##                     ————安东尼·高迪\n{% endcq %}\n2020.9.22\n\n\n{% cq %}\n### 以前人们似乎总是很明确地知道，\n### 政府或者谁哪里哪里做得不对，\n### 于是一起针对问题示威游行。\n### 但是如今，我们为何愤怒，\n### 完全是个谜。\n\n##                     ————李沧东\n{% endcq %}\n2020.9.21\n\n\n{% cq %}\n### 一个故事之所以吸引我，\n### 是因为它本身的价值，\n### 而非我可以顾影自怜。\n\n##                     ————奥逊·威尔斯\n{% endcq %}\n2020.9.20\n\n\n{% cq %}\n### 不要问篝火该不该燃烧，\n### 先问寒冷黑暗还在不在；\n### 不要问子弹该不该上膛，\n### 先问压迫剥削还在不在；\n### 不要问正义事业有没有明天，\n### 先问人间不平今天还在不在。\n\n##                     ————切·格瓦拉\n{% endcq %}\n2020.9.19","slug":"daily","published":1,"updated":"2021-03-07T08:56:59.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gn001lc8pv3hhhdcy8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <!-- ### <script type=\"text/javascript\" src=\"https://api.uixsj.cn/hitokoto/w.php?code=js\"></script><div id=\"xsjhitokoto\"><script>xsjhitokoto()</script></div> -->\n<h1 id=\"正在加载今日诗词…\"><a href=\"#正在加载今日诗词…\" class=\"headerlink\" title=\"正在加载今日诗词….\"></a><script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script><span id=\"jinrishici-sentence\">正在加载今日诗词….</span></h1>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p><iframe scrolling=\"no\" src=\"https://tianqiapi.com/api.php?style=tz&skin=gif\" frameborder=\"0\" width=\"100%\" height=\"30\" allowtransparency=\"true\"></iframe></p>\n<h2 id><a href=\"#\" class=\"headerlink\" title></a><a id=\"more\"></a></h2><blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"最长的弯路也是最近的归途。\"><a href=\"#最长的弯路也是最近的归途。\" class=\"headerlink\" title=\"最长的弯路也是最近的归途。\"></a>最长的弯路也是最近的归途。</h3><h2 id=\"———C·S·路易斯\"><a href=\"#———C·S·路易斯\" class=\"headerlink\" title=\"———C·S·路易斯\"></a>———C·S·路易斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.5</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我点燃了火，\"><a href=\"#我点燃了火，\" class=\"headerlink\" title=\"我点燃了火，\"></a>我点燃了火，</h3><h3 id=\"却控制不了它。\"><a href=\"#却控制不了它。\" class=\"headerlink\" title=\"却控制不了它。\"></a>却控制不了它。</h3><h2 id=\"———三体\"><a href=\"#———三体\" class=\"headerlink\" title=\"———三体\"></a>———三体</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.4</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"在没有危险的地方，\"><a href=\"#在没有危险的地方，\" class=\"headerlink\" title=\"在没有危险的地方，\"></a>在没有危险的地方，</h3><h3 id=\"那里爱情拥有双眼，\"><a href=\"#那里爱情拥有双眼，\" class=\"headerlink\" title=\"那里爱情拥有双眼，\"></a>那里爱情拥有双眼，</h3><h3 id=\"不会盲目。\"><a href=\"#不会盲目。\" class=\"headerlink\" title=\"不会盲目。\"></a>不会盲目。</h3><h2 id=\"———戴米恩·莱斯\"><a href=\"#———戴米恩·莱斯\" class=\"headerlink\" title=\"———戴米恩·莱斯\"></a>———戴米恩·莱斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.3</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"无论我们处在怎样的年纪，\"><a href=\"#无论我们处在怎样的年纪，\" class=\"headerlink\" title=\"无论我们处在怎样的年纪，\"></a>无论我们处在怎样的年纪，</h3><h3 id=\"只要能看到未来，\"><a href=\"#只要能看到未来，\" class=\"headerlink\" title=\"只要能看到未来，\"></a>只要能看到未来，</h3><h3 id=\"就能获得青春。\"><a href=\"#就能获得青春。\" class=\"headerlink\" title=\"就能获得青春。\"></a>就能获得青春。</h3><h2 id=\"————保罗·索伦蒂诺\"><a href=\"#————保罗·索伦蒂诺\" class=\"headerlink\" title=\"————保罗·索伦蒂诺\"></a>————保罗·索伦蒂诺</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.2</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"她今夜出去只喝香槟，\"><a href=\"#她今夜出去只喝香槟，\" class=\"headerlink\" title=\"她今夜出去只喝香槟，\"></a>她今夜出去只喝香槟，</h3><h3 id=\"她几乎打量了所有男人，\"><a href=\"#她几乎打量了所有男人，\" class=\"headerlink\" title=\"她几乎打量了所有男人，\"></a>她几乎打量了所有男人，</h3><h3 id=\"她在玩她的游戏，\"><a href=\"#她在玩她的游戏，\" class=\"headerlink\" title=\"她在玩她的游戏，\"></a>她在玩她的游戏，</h3><h3 id=\"你可以听到他们说，\"><a href=\"#你可以听到他们说，\" class=\"headerlink\" title=\"你可以听到他们说，\"></a>你可以听到他们说，</h3><h3 id=\"她很漂亮，\"><a href=\"#她很漂亮，\" class=\"headerlink\" title=\"她很漂亮，\"></a>她很漂亮，</h3><h3 id=\"我们要为她的美貌付钱。\"><a href=\"#我们要为她的美貌付钱。\" class=\"headerlink\" title=\"我们要为她的美貌付钱。\"></a>我们要为她的美貌付钱。</h3><h2 id=\"————发电站\"><a href=\"#————发电站\" class=\"headerlink\" title=\"————发电站\"></a>————发电站</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.1</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"人生若只如初见，\"><a href=\"#人生若只如初见，\" class=\"headerlink\" title=\"人生若只如初见，\"></a>人生若只如初见，</h3><h3 id=\"何事秋风悲画扇。\"><a href=\"#何事秋风悲画扇。\" class=\"headerlink\" title=\"何事秋风悲画扇。\"></a>何事秋风悲画扇。</h3><h2 id=\"————木兰花·拟古决绝词柬友\"><a href=\"#————木兰花·拟古决绝词柬友\" class=\"headerlink\" title=\"————木兰花·拟古决绝词柬友\"></a>————木兰花·拟古决绝词柬友</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.31</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我并不是一味喜欢老旧的东西，\"><a href=\"#我并不是一味喜欢老旧的东西，\" class=\"headerlink\" title=\"我并不是一味喜欢老旧的东西，\"></a>我并不是一味喜欢老旧的东西，</h3><h3 id=\"我喜欢的，是建立在经典不变的基础上，\"><a href=\"#我喜欢的，是建立在经典不变的基础上，\" class=\"headerlink\" title=\"我喜欢的，是建立在经典不变的基础上，\"></a>我喜欢的，是建立在经典不变的基础上，</h3><h3 id=\"再融入新的东西。\"><a href=\"#再融入新的东西。\" class=\"headerlink\" title=\"再融入新的东西。\"></a>再融入新的东西。</h3><h3 id=\"我觉得有品味的人，\"><a href=\"#我觉得有品味的人，\" class=\"headerlink\" title=\"我觉得有品味的人，\"></a>我觉得有品味的人，</h3><h3 id=\"能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\"><a href=\"#能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\" class=\"headerlink\" title=\"能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\"></a>能够把这些常规的永远不变的东西和新的东西很好地融合在一起。</h3><h2 id=\"————长冈贤明\"><a href=\"#————长冈贤明\" class=\"headerlink\" title=\"————长冈贤明\"></a>————长冈贤明</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.30</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"人闲桂花落，\"><a href=\"#人闲桂花落，\" class=\"headerlink\" title=\"人闲桂花落，\"></a>人闲桂花落，</h3><h3 id=\"夜静春山空。\"><a href=\"#夜静春山空。\" class=\"headerlink\" title=\"夜静春山空。\"></a>夜静春山空。</h3><h2 id=\"————鸟鸣涧\"><a href=\"#————鸟鸣涧\" class=\"headerlink\" title=\"————鸟鸣涧\"></a>————鸟鸣涧</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.29</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"他们太过于个人化，\"><a href=\"#他们太过于个人化，\" class=\"headerlink\" title=\"他们太过于个人化，\"></a>他们太过于个人化，</h3><h3 id=\"太过于阳春白雪……\"><a href=\"#太过于阳春白雪……\" class=\"headerlink\" title=\"太过于阳春白雪……\"></a>太过于阳春白雪……</h3><h3 id=\"今后应该比我迄今为止所做的更加尊重观众。\"><a href=\"#今后应该比我迄今为止所做的更加尊重观众。\" class=\"headerlink\" title=\"今后应该比我迄今为止所做的更加尊重观众。\"></a>今后应该比我迄今为止所做的更加尊重观众。</h3><h2 id=\"————赖纳·维尔纳·法斯宾德\"><a href=\"#————赖纳·维尔纳·法斯宾德\" class=\"headerlink\" title=\"————赖纳·维尔纳·法斯宾德\"></a>————赖纳·维尔纳·法斯宾德</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.28</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"这世界开始时没有人，\"><a href=\"#这世界开始时没有人，\" class=\"headerlink\" title=\"这世界开始时没有人，\"></a>这世界开始时没有人，</h3><h3 id=\"当它终结时还是没有人。\"><a href=\"#当它终结时还是没有人。\" class=\"headerlink\" title=\"当它终结时还是没有人。\"></a>当它终结时还是没有人。</h3><h2 id=\"————克洛德·列维·斯特劳斯\"><a href=\"#————克洛德·列维·斯特劳斯\" class=\"headerlink\" title=\"————克洛德·列维·斯特劳斯\"></a>————克洛德·列维·斯特劳斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.27</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"昔日我曾如此苍老，\"><a href=\"#昔日我曾如此苍老，\" class=\"headerlink\" title=\"昔日我曾如此苍老，\"></a>昔日我曾如此苍老，</h3><h3 id=\"如今才是风华正茂。\"><a href=\"#如今才是风华正茂。\" class=\"headerlink\" title=\"如今才是风华正茂。\"></a>如今才是风华正茂。</h3><h2 id=\"————鲍勃·迪伦\"><a href=\"#————鲍勃·迪伦\" class=\"headerlink\" title=\"————鲍勃·迪伦\"></a>————鲍勃·迪伦</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.26</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"一别都门三改火，\"><a href=\"#一别都门三改火，\" class=\"headerlink\" title=\"一别都门三改火，\"></a>一别都门三改火，</h3><h3 id=\"天涯踏尽红尘。\"><a href=\"#天涯踏尽红尘。\" class=\"headerlink\" title=\"天涯踏尽红尘。\"></a>天涯踏尽红尘。</h3><h2 id=\"————临江仙·送钱穆父\"><a href=\"#————临江仙·送钱穆父\" class=\"headerlink\" title=\"————临江仙·送钱穆父\"></a>————临江仙·送钱穆父</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.25</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"醉后不知天在水，\"><a href=\"#醉后不知天在水，\" class=\"headerlink\" title=\"醉后不知天在水，\"></a>醉后不知天在水，</h3><h3 id=\"满船清梦压星河。\"><a href=\"#满船清梦压星河。\" class=\"headerlink\" title=\"满船清梦压星河。\"></a>满船清梦压星河。</h3><h2 id=\"————题龙阳县青草湖\"><a href=\"#————题龙阳县青草湖\" class=\"headerlink\" title=\"————题龙阳县青草湖\"></a>————题龙阳县青草湖</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.24</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"事实上，\"><a href=\"#事实上，\" class=\"headerlink\" title=\"事实上，\"></a>事实上，</h3><h3 id=\"忧郁的人会成为最大的瘾君子，\"><a href=\"#忧郁的人会成为最大的瘾君子，\" class=\"headerlink\" title=\"忧郁的人会成为最大的瘾君子，\"></a>忧郁的人会成为最大的瘾君子，</h3><h3 id=\"因为真正上了瘾的体验总是一种孤独的体验。\"><a href=\"#因为真正上了瘾的体验总是一种孤独的体验。\" class=\"headerlink\" title=\"因为真正上了瘾的体验总是一种孤独的体验。\"></a>因为真正上了瘾的体验总是一种孤独的体验。</h3><h2 id=\"————苏珊·桑塔格\"><a href=\"#————苏珊·桑塔格\" class=\"headerlink\" title=\"————苏珊·桑塔格\"></a>————苏珊·桑塔格</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.23</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"天下熙熙，\"><a href=\"#天下熙熙，\" class=\"headerlink\" title=\"天下熙熙，\"></a>天下熙熙，</h3><h3 id=\"皆为利来；\"><a href=\"#皆为利来；\" class=\"headerlink\" title=\"皆为利来；\"></a>皆为利来；</h3><h3 id=\"天下攘攘，\"><a href=\"#天下攘攘，\" class=\"headerlink\" title=\"天下攘攘，\"></a>天下攘攘，</h3><h3 id=\"皆为利往。\"><a href=\"#皆为利往。\" class=\"headerlink\" title=\"皆为利往。\"></a>皆为利往。</h3><h2 id=\"————史记·货殖列传\"><a href=\"#————史记·货殖列传\" class=\"headerlink\" title=\"————史记·货殖列传\"></a>————史记·货殖列传</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.22  </p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我的风格就是我唯一能做的好事，\"><a href=\"#我的风格就是我唯一能做的好事，\" class=\"headerlink\" title=\"我的风格就是我唯一能做的好事，\"></a>我的风格就是我唯一能做的好事，</h3><h3 id=\"我不考虑流派，\"><a href=\"#我不考虑流派，\" class=\"headerlink\" title=\"我不考虑流派，\"></a>我不考虑流派，</h3><h3 id=\"我不考虑标签，\"><a href=\"#我不考虑标签，\" class=\"headerlink\" title=\"我不考虑标签，\"></a>我不考虑标签，</h3><h3 id=\"它们没有什么意义\"><a href=\"#它们没有什么意义\" class=\"headerlink\" title=\"它们没有什么意义\"></a>它们没有什么意义</h3><h2 id=\"————穆玄英挂帅\"><a href=\"#————穆玄英挂帅\" class=\"headerlink\" title=\"————穆玄英挂帅\"></a>————穆玄英挂帅</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.21  </p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"世间情动，\"><a href=\"#世间情动，\" class=\"headerlink\" title=\"世间情动，\"></a>世间情动，</h3><h3 id=\"不过盛夏白瓷梅子汤，\"><a href=\"#不过盛夏白瓷梅子汤，\" class=\"headerlink\" title=\"不过盛夏白瓷梅子汤，\"></a>不过盛夏白瓷梅子汤，</h3><h3 id=\"碎冰碰壁当啷响。\"><a href=\"#碎冰碰壁当啷响。\" class=\"headerlink\" title=\"碎冰碰壁当啷响。\"></a>碎冰碰壁当啷响。</h3><h2 id=\"————穆玄英挂帅\"><a href=\"#————穆玄英挂帅\" class=\"headerlink\" title=\"————穆玄英挂帅\"></a>————穆玄英挂帅</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.20  </p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我不喜欢“惊人”这个词，\"><a href=\"#我不喜欢“惊人”这个词，\" class=\"headerlink\" title=\"我不喜欢“惊人”这个词，\"></a>我不喜欢“惊人”这个词，</h3><h3 id=\"我在寻找意想不到的东西。\"><a href=\"#我在寻找意想不到的东西。\" class=\"headerlink\" title=\"我在寻找意想不到的东西。\"></a>我在寻找意想不到的东西。</h3><h3 id=\"寻找那些我从来没见过的东西……\"><a href=\"#寻找那些我从来没见过的东西……\" class=\"headerlink\" title=\"寻找那些我从来没见过的东西……\"></a>寻找那些我从来没见过的东西……</h3><h3 id=\"我在拍这些照片，\"><a href=\"#我在拍这些照片，\" class=\"headerlink\" title=\"我在拍这些照片，\"></a>我在拍这些照片，</h3><h3 id=\"我觉得义不容辞。\"><a href=\"#我觉得义不容辞。\" class=\"headerlink\" title=\"我觉得义不容辞。\"></a>我觉得义不容辞。</h3><h2 id=\"————罗伯特·梅普尔索普\"><a href=\"#————罗伯特·梅普尔索普\" class=\"headerlink\" title=\"————罗伯特·梅普尔索普\"></a>————罗伯特·梅普尔索普</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.19</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我的关注永远不是艺术，\"><a href=\"#我的关注永远不是艺术，\" class=\"headerlink\" title=\"我的关注永远不是艺术，\"></a>我的关注永远不是艺术，</h3><h3 id=\"但总是可以使用什么艺术。\"><a href=\"#但总是可以使用什么艺术。\" class=\"headerlink\" title=\"但总是可以使用什么艺术。\"></a>但总是可以使用什么艺术。</h3><h2 id=\"————格哈德·里希特\"><a href=\"#————格哈德·里希特\" class=\"headerlink\" title=\"————格哈德·里希特\"></a>————格哈德·里希特</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.18</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"人们理解杜尚花了100年时间，\"><a href=\"#人们理解杜尚花了100年时间，\" class=\"headerlink\" title=\"人们理解杜尚花了100年时间，\"></a>人们理解杜尚花了100年时间，</h3><h3 id=\"理解我估计要更久一点。\"><a href=\"#理解我估计要更久一点。\" class=\"headerlink\" title=\"理解我估计要更久一点。\"></a>理解我估计要更久一点。</h3><h2 id=\"————白南准\"><a href=\"#————白南准\" class=\"headerlink\" title=\"————白南准\"></a>————白南准</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.17</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我肯定，\"><a href=\"#我肯定，\" class=\"headerlink\" title=\"我肯定，\"></a>我肯定，</h3><h3 id=\"在空无的中心，\"><a href=\"#在空无的中心，\" class=\"headerlink\" title=\"在空无的中心，\"></a>在空无的中心，</h3><h3 id=\"如同在人的心脏\"><a href=\"#如同在人的心脏\" class=\"headerlink\" title=\"如同在人的心脏,\"></a>如同在人的心脏,</h3><h3 id=\"有火在燃烧。\"><a href=\"#有火在燃烧。\" class=\"headerlink\" title=\"有火在燃烧。\"></a>有火在燃烧。</h3><h2 id=\"————伊夫·克莱因\"><a href=\"#————伊夫·克莱因\" class=\"headerlink\" title=\"————伊夫·克莱因\"></a>————伊夫·克莱因</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.16</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"随着年龄的增长，\"><a href=\"#随着年龄的增长，\" class=\"headerlink\" title=\"随着年龄的增长，\"></a>随着年龄的增长，</h3><h3 id=\"我想起了我们古老的文字、遗产和价值观。\"><a href=\"#我想起了我们古老的文字、遗产和价值观。\" class=\"headerlink\" title=\"我想起了我们古老的文字、遗产和价值观。\"></a>我想起了我们古老的文字、遗产和价值观。</h3><h3 id=\"它们中的任何一个都代表着一种完整的理解\"><a href=\"#它们中的任何一个都代表着一种完整的理解\" class=\"headerlink\" title=\"它们中的任何一个都代表着一种完整的理解,\"></a>它们中的任何一个都代表着一种完整的理解,</h3><h3 id=\"即唯一确定的是不确定。\"><a href=\"#即唯一确定的是不确定。\" class=\"headerlink\" title=\"即唯一确定的是不确定。\"></a>即唯一确定的是不确定。</h3><h2 id=\"————巴克里希纳·多西\"><a href=\"#————巴克里希纳·多西\" class=\"headerlink\" title=\"————巴克里希纳·多西\"></a>————巴克里希纳·多西</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.15</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我们哭着降临世界，\"><a href=\"#我们哭着降临世界，\" class=\"headerlink\" title=\"我们哭着降临世界，\"></a>我们哭着降临世界，</h3><h3 id=\"却可以笑着走向永恒。\"><a href=\"#却可以笑着走向永恒。\" class=\"headerlink\" title=\"却可以笑着走向永恒。\"></a>却可以笑着走向永恒。</h3><h2 id=\"————如果国宝会说话\"><a href=\"#————如果国宝会说话\" class=\"headerlink\" title=\"————如果国宝会说话\"></a>————如果国宝会说话</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.14</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"他们说我是这镇子上的万人迷。\"><a href=\"#他们说我是这镇子上的万人迷。\" class=\"headerlink\" title=\"他们说我是这镇子上的万人迷。\"></a>他们说我是这镇子上的万人迷。</h3><h2 id=\"————弗兰克·扎帕\"><a href=\"#————弗兰克·扎帕\" class=\"headerlink\" title=\"————弗兰克·扎帕\"></a>————弗兰克·扎帕</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.13</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"风乍起。\"><a href=\"#风乍起。\" class=\"headerlink\" title=\"风乍起。\"></a>风乍起。</h3><h3 id=\"合当奋意向人生。\"><a href=\"#合当奋意向人生。\" class=\"headerlink\" title=\"合当奋意向人生。\"></a>合当奋意向人生。</h3><h2 id=\"————堀辰雄\"><a href=\"#————堀辰雄\" class=\"headerlink\" title=\"————堀辰雄\"></a>————堀辰雄</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.12</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我的作品就是我的肉体和灵魂，\"><a href=\"#我的作品就是我的肉体和灵魂，\" class=\"headerlink\" title=\"我的作品就是我的肉体和灵魂，\"></a>我的作品就是我的肉体和灵魂，</h3><h3 id=\"为了它我甘愿冒失去生命和理智的危险。\"><a href=\"#为了它我甘愿冒失去生命和理智的危险。\" class=\"headerlink\" title=\"为了它我甘愿冒失去生命和理智的危险。\"></a>为了它我甘愿冒失去生命和理智的危险。</h3><h2 id=\"————文森特·威廉·梵·高\"><a href=\"#————文森特·威廉·梵·高\" class=\"headerlink\" title=\"————文森特·威廉·梵·高\"></a>————文森特·威廉·梵·高</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.11</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"抱歉，似乎是最难以启齿的话。\"><a href=\"#抱歉，似乎是最难以启齿的话。\" class=\"headerlink\" title=\"抱歉，似乎是最难以启齿的话。\"></a>抱歉，似乎是最难以启齿的话。</h3><h2 id=\"————雷·查尔斯\"><a href=\"#————雷·查尔斯\" class=\"headerlink\" title=\"————雷·查尔斯\"></a>————雷·查尔斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.10</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"历史学的目标并不是由过去视角出发展望未来。\"><a href=\"#历史学的目标并不是由过去视角出发展望未来。\" class=\"headerlink\" title=\"历史学的目标并不是由过去视角出发展望未来。\"></a>历史学的目标并不是由过去视角出发展望未来。</h3><h2 id=\"————埃里克·霍布斯鲍姆\"><a href=\"#————埃里克·霍布斯鲍姆\" class=\"headerlink\" title=\"————埃里克·霍布斯鲍姆\"></a>————埃里克·霍布斯鲍姆</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.9</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"和魔鬼共舞时，\"><a href=\"#和魔鬼共舞时，\" class=\"headerlink\" title=\"和魔鬼共舞时，\"></a>和魔鬼共舞时，</h3><h3 id=\"只能等着音乐结束。\"><a href=\"#只能等着音乐结束。\" class=\"headerlink\" title=\"只能等着音乐结束。\"></a>只能等着音乐结束。</h3><h2 id=\"————盖·里奇\"><a href=\"#————盖·里奇\" class=\"headerlink\" title=\"————盖·里奇\"></a>————盖·里奇</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.8</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"你了解星空下万物温馨的生长吗，\"><a href=\"#你了解星空下万物温馨的生长吗，\" class=\"headerlink\" title=\"你了解星空下万物温馨的生长吗，\"></a>你了解星空下万物温馨的生长吗，</h3><h3 id=\"你了解我们的存在吗，\"><a href=\"#你了解我们的存在吗，\" class=\"headerlink\" title=\"你了解我们的存在吗，\"></a>你了解我们的存在吗，</h3><h3 id=\"你已经遗失开启王国的钥匙了吗，\"><a href=\"#你已经遗失开启王国的钥匙了吗，\" class=\"headerlink\" title=\"你已经遗失开启王国的钥匙了吗，\"></a>你已经遗失开启王国的钥匙了吗，</h3><h3 id=\"你在轮回中反复降生一直活着吗，\"><a href=\"#你在轮回中反复降生一直活着吗，\" class=\"headerlink\" title=\"你在轮回中反复降生一直活着吗，\"></a>你在轮回中反复降生一直活着吗，</h3><h3 id=\"让我们彻底改造诸神，\"><a href=\"#让我们彻底改造诸神，\" class=\"headerlink\" title=\"让我们彻底改造诸神，\"></a>让我们彻底改造诸神，</h3><h3 id=\"包括各个时代的神话。\"><a href=\"#包括各个时代的神话。\" class=\"headerlink\" title=\"包括各个时代的神话。\"></a>包括各个时代的神话。</h3><h2 id=\"————吉姆·莫里森\"><a href=\"#————吉姆·莫里森\" class=\"headerlink\" title=\"————吉姆·莫里森\"></a>————吉姆·莫里森</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.7</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"声音在太空中消逝，\"><a href=\"#声音在太空中消逝，\" class=\"headerlink\" title=\"声音在太空中消逝，\"></a>声音在太空中消逝，</h3><h3 id=\"霞光变得昏暗。\"><a href=\"#霞光变得昏暗。\" class=\"headerlink\" title=\"霞光变得昏暗。\"></a>霞光变得昏暗。</h3><h3 id=\"永远沉默的世界里，\"><a href=\"#永远沉默的世界里，\" class=\"headerlink\" title=\"永远沉默的世界里，\"></a>永远沉默的世界里，</h3><h3 id=\"只有你和我交谈。\"><a href=\"#只有你和我交谈。\" class=\"headerlink\" title=\"只有你和我交谈。\"></a>只有你和我交谈。</h3><h2 id=\"————阿赫马托娃\"><a href=\"#————阿赫马托娃\" class=\"headerlink\" title=\"————阿赫马托娃\"></a>————阿赫马托娃</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.28</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"这几张脸在人群中幻境般闪现，\"><a href=\"#这几张脸在人群中幻境般闪现，\" class=\"headerlink\" title=\"这几张脸在人群中幻境般闪现，\"></a>这几张脸在人群中幻境般闪现，</h3><h3 id=\"湿漉漉的黑树枝上花瓣数点。\"><a href=\"#湿漉漉的黑树枝上花瓣数点。\" class=\"headerlink\" title=\"湿漉漉的黑树枝上花瓣数点。\"></a>湿漉漉的黑树枝上花瓣数点。</h3><h2 id=\"————埃兹拉·庞德\"><a href=\"#————埃兹拉·庞德\" class=\"headerlink\" title=\"————埃兹拉·庞德\"></a>————埃兹拉·庞德</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.27</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"热水澡肯定不能包治百病，\"><a href=\"#热水澡肯定不能包治百病，\" class=\"headerlink\" title=\"热水澡肯定不能包治百病，\"></a>热水澡肯定不能包治百病，</h3><h3 id=\"但我想例外也不会太多。\"><a href=\"#但我想例外也不会太多。\" class=\"headerlink\" title=\"但我想例外也不会太多。\"></a>但我想例外也不会太多。</h3><h3 id=\"每当我悲痛欲绝，\"><a href=\"#每当我悲痛欲绝，\" class=\"headerlink\" title=\"每当我悲痛欲绝，\"></a>每当我悲痛欲绝，</h3><h3 id=\"或者神经紧张、夜不成寐，\"><a href=\"#或者神经紧张、夜不成寐，\" class=\"headerlink\" title=\"或者神经紧张、夜不成寐，\"></a>或者神经紧张、夜不成寐，</h3><h3 id=\"意志消沉、萎靡不振，\"><a href=\"#意志消沉、萎靡不振，\" class=\"headerlink\" title=\"意志消沉、萎靡不振，\"></a>意志消沉、萎靡不振，</h3><h3 id=\"这时我就会对自己说：\"><a href=\"#这时我就会对自己说：\" class=\"headerlink\" title=\"这时我就会对自己说：\"></a>这时我就会对自己说：</h3><h3 id=\"洗个热水澡吧。\"><a href=\"#洗个热水澡吧。\" class=\"headerlink\" title=\"洗个热水澡吧。\"></a>洗个热水澡吧。</h3><h2 id=\"————西尔维娅·普拉斯\"><a href=\"#————西尔维娅·普拉斯\" class=\"headerlink\" title=\"————西尔维娅·普拉斯\"></a>————西尔维娅·普拉斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.26</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"当我回顾人类的历史，\"><a href=\"#当我回顾人类的历史，\" class=\"headerlink\" title=\"当我回顾人类的历史，\"></a>当我回顾人类的历史，</h3><h3 id=\"有时我觉得是一出喜剧，\"><a href=\"#有时我觉得是一出喜剧，\" class=\"headerlink\" title=\"有时我觉得是一出喜剧，\"></a>有时我觉得是一出喜剧，</h3><h3 id=\"但这喜剧让我哭泣；\"><a href=\"#但这喜剧让我哭泣；\" class=\"headerlink\" title=\"但这喜剧让我哭泣；\"></a>但这喜剧让我哭泣；</h3><h3 id=\"有时又觉得它是一出悲剧，\"><a href=\"#有时又觉得它是一出悲剧，\" class=\"headerlink\" title=\"有时又觉得它是一出悲剧，\"></a>有时又觉得它是一出悲剧，</h3><h3 id=\"但这悲剧却让我微笑。\"><a href=\"#但这悲剧却让我微笑。\" class=\"headerlink\" title=\"但这悲剧却让我微笑。\"></a>但这悲剧却让我微笑。</h3><h2 id=\"————特拉斯诺霍尔卡伊·拉斯洛\"><a href=\"#————特拉斯诺霍尔卡伊·拉斯洛\" class=\"headerlink\" title=\"————特拉斯诺霍尔卡伊·拉斯洛\"></a>————特拉斯诺霍尔卡伊·拉斯洛</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.25</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"就着几盏昏红的灯下，\"><a href=\"#就着几盏昏红的灯下，\" class=\"headerlink\" title=\"就着几盏昏红的灯下，\"></a>就着几盏昏红的灯下，</h3><h3 id=\"靠在几张旧床边，\"><a href=\"#靠在几张旧床边，\" class=\"headerlink\" title=\"靠在几张旧床边，\"></a>靠在几张旧床边，</h3><h3 id=\"我们就在这儿挥洒激情的汗水，\"><a href=\"#我们就在这儿挥洒激情的汗水，\" class=\"headerlink\" title=\"我们就在这儿挥洒激情的汗水，\"></a>我们就在这儿挥洒激情的汗水，</h3><h3 id=\"无论我们能从中收获怎样的音乐，\"><a href=\"#无论我们能从中收获怎样的音乐，\" class=\"headerlink\" title=\"无论我们能从中收获怎样的音乐，\"></a>无论我们能从中收获怎样的音乐，</h3><h3 id=\"我知道我们永不会忘。\"><a href=\"#我知道我们永不会忘。\" class=\"headerlink\" title=\"我知道我们永不会忘。\"></a>我知道我们永不会忘。</h3><h2 id=\"————深紫乐队\"><a href=\"#————深紫乐队\" class=\"headerlink\" title=\"————深紫乐队\"></a>————深紫乐队</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.24</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"很多人常说我受某某的影响，\"><a href=\"#很多人常说我受某某的影响，\" class=\"headerlink\" title=\"很多人常说我受某某的影响，\"></a>很多人常说我受某某的影响，</h3><h3 id=\"其实并无关连，\"><a href=\"#其实并无关连，\" class=\"headerlink\" title=\"其实并无关连，\"></a>其实并无关连，</h3><h3 id=\"认真说来只有盗窃而已。\"><a href=\"#认真说来只有盗窃而已。\" class=\"headerlink\" title=\"认真说来只有盗窃而已。\"></a>认真说来只有盗窃而已。</h3><h3 id=\"除了盗窃以外，\"><a href=\"#除了盗窃以外，\" class=\"headerlink\" title=\"除了盗窃以外，\"></a>除了盗窃以外，</h3><h3 id=\"别无其他，\"><a href=\"#别无其他，\" class=\"headerlink\" title=\"别无其他，\"></a>别无其他，</h3><h3 id=\"只不过其他人不敢说出来。\"><a href=\"#只不过其他人不敢说出来。\" class=\"headerlink\" title=\"只不过其他人不敢说出来。\"></a>只不过其他人不敢说出来。</h3><h2 id=\"————丸尾末广\"><a href=\"#————丸尾末广\" class=\"headerlink\" title=\"————丸尾末广\"></a>————丸尾末广</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.23</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"直线属于人类，\"><a href=\"#直线属于人类，\" class=\"headerlink\" title=\"直线属于人类，\"></a>直线属于人类，</h3><h3 id=\"曲线属于上帝。\"><a href=\"#曲线属于上帝。\" class=\"headerlink\" title=\"曲线属于上帝。\"></a>曲线属于上帝。</h3><h2 id=\"————安东尼·高迪\"><a href=\"#————安东尼·高迪\" class=\"headerlink\" title=\"————安东尼·高迪\"></a>————安东尼·高迪</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.22</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"以前人们似乎总是很明确地知道，\"><a href=\"#以前人们似乎总是很明确地知道，\" class=\"headerlink\" title=\"以前人们似乎总是很明确地知道，\"></a>以前人们似乎总是很明确地知道，</h3><h3 id=\"政府或者谁哪里哪里做得不对，\"><a href=\"#政府或者谁哪里哪里做得不对，\" class=\"headerlink\" title=\"政府或者谁哪里哪里做得不对，\"></a>政府或者谁哪里哪里做得不对，</h3><h3 id=\"于是一起针对问题示威游行。\"><a href=\"#于是一起针对问题示威游行。\" class=\"headerlink\" title=\"于是一起针对问题示威游行。\"></a>于是一起针对问题示威游行。</h3><h3 id=\"但是如今，我们为何愤怒，\"><a href=\"#但是如今，我们为何愤怒，\" class=\"headerlink\" title=\"但是如今，我们为何愤怒，\"></a>但是如今，我们为何愤怒，</h3><h3 id=\"完全是个谜。\"><a href=\"#完全是个谜。\" class=\"headerlink\" title=\"完全是个谜。\"></a>完全是个谜。</h3><h2 id=\"————李沧东\"><a href=\"#————李沧东\" class=\"headerlink\" title=\"————李沧东\"></a>————李沧东</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.21</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"一个故事之所以吸引我，\"><a href=\"#一个故事之所以吸引我，\" class=\"headerlink\" title=\"一个故事之所以吸引我，\"></a>一个故事之所以吸引我，</h3><h3 id=\"是因为它本身的价值，\"><a href=\"#是因为它本身的价值，\" class=\"headerlink\" title=\"是因为它本身的价值，\"></a>是因为它本身的价值，</h3><h3 id=\"而非我可以顾影自怜。\"><a href=\"#而非我可以顾影自怜。\" class=\"headerlink\" title=\"而非我可以顾影自怜。\"></a>而非我可以顾影自怜。</h3><h2 id=\"————奥逊·威尔斯\"><a href=\"#————奥逊·威尔斯\" class=\"headerlink\" title=\"————奥逊·威尔斯\"></a>————奥逊·威尔斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.20</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"不要问篝火该不该燃烧，\"><a href=\"#不要问篝火该不该燃烧，\" class=\"headerlink\" title=\"不要问篝火该不该燃烧，\"></a>不要问篝火该不该燃烧，</h3><h3 id=\"先问寒冷黑暗还在不在；\"><a href=\"#先问寒冷黑暗还在不在；\" class=\"headerlink\" title=\"先问寒冷黑暗还在不在；\"></a>先问寒冷黑暗还在不在；</h3><h3 id=\"不要问子弹该不该上膛，\"><a href=\"#不要问子弹该不该上膛，\" class=\"headerlink\" title=\"不要问子弹该不该上膛，\"></a>不要问子弹该不该上膛，</h3><h3 id=\"先问压迫剥削还在不在；\"><a href=\"#先问压迫剥削还在不在；\" class=\"headerlink\" title=\"先问压迫剥削还在不在；\"></a>先问压迫剥削还在不在；</h3><h3 id=\"不要问正义事业有没有明天，\"><a href=\"#不要问正义事业有没有明天，\" class=\"headerlink\" title=\"不要问正义事业有没有明天，\"></a>不要问正义事业有没有明天，</h3><h3 id=\"先问人间不平今天还在不在。\"><a href=\"#先问人间不平今天还在不在。\" class=\"headerlink\" title=\"先问人间不平今天还在不在。\"></a>先问人间不平今天还在不在。</h3><h2 id=\"————切·格瓦拉\"><a href=\"#————切·格瓦拉\" class=\"headerlink\" title=\"————切·格瓦拉\"></a>————切·格瓦拉</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.19</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2120,"excerpt":"<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <!-- ### <script type=\"text/javascript\" src=\"https://api.uixsj.cn/hitokoto/w.php?code=js\"></script><div id=\"xsjhitokoto\"><script>xsjhitokoto()</script></div> -->\n<h1 id=\"正在加载今日诗词…\"><a href=\"#正在加载今日诗词…\" class=\"headerlink\" title=\"正在加载今日诗词….\"></a><script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script><span id=\"jinrishici-sentence\">正在加载今日诗词….</span></h1>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p><iframe scrolling=\"no\" src=\"https://tianqiapi.com/api.php?style=tz&skin=gif\" frameborder=\"0\" width=\"100%\" height=\"30\" allowtransparency=\"true\"></iframe></p>\n<h2 id><a href=\"#\" class=\"headerlink\" title></a></h2>","more":"<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"最长的弯路也是最近的归途。\"><a href=\"#最长的弯路也是最近的归途。\" class=\"headerlink\" title=\"最长的弯路也是最近的归途。\"></a>最长的弯路也是最近的归途。</h3><h2 id=\"———C·S·路易斯\"><a href=\"#———C·S·路易斯\" class=\"headerlink\" title=\"———C·S·路易斯\"></a>———C·S·路易斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.5</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我点燃了火，\"><a href=\"#我点燃了火，\" class=\"headerlink\" title=\"我点燃了火，\"></a>我点燃了火，</h3><h3 id=\"却控制不了它。\"><a href=\"#却控制不了它。\" class=\"headerlink\" title=\"却控制不了它。\"></a>却控制不了它。</h3><h2 id=\"———三体\"><a href=\"#———三体\" class=\"headerlink\" title=\"———三体\"></a>———三体</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.4</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"在没有危险的地方，\"><a href=\"#在没有危险的地方，\" class=\"headerlink\" title=\"在没有危险的地方，\"></a>在没有危险的地方，</h3><h3 id=\"那里爱情拥有双眼，\"><a href=\"#那里爱情拥有双眼，\" class=\"headerlink\" title=\"那里爱情拥有双眼，\"></a>那里爱情拥有双眼，</h3><h3 id=\"不会盲目。\"><a href=\"#不会盲目。\" class=\"headerlink\" title=\"不会盲目。\"></a>不会盲目。</h3><h2 id=\"———戴米恩·莱斯\"><a href=\"#———戴米恩·莱斯\" class=\"headerlink\" title=\"———戴米恩·莱斯\"></a>———戴米恩·莱斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.3</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"无论我们处在怎样的年纪，\"><a href=\"#无论我们处在怎样的年纪，\" class=\"headerlink\" title=\"无论我们处在怎样的年纪，\"></a>无论我们处在怎样的年纪，</h3><h3 id=\"只要能看到未来，\"><a href=\"#只要能看到未来，\" class=\"headerlink\" title=\"只要能看到未来，\"></a>只要能看到未来，</h3><h3 id=\"就能获得青春。\"><a href=\"#就能获得青春。\" class=\"headerlink\" title=\"就能获得青春。\"></a>就能获得青春。</h3><h2 id=\"————保罗·索伦蒂诺\"><a href=\"#————保罗·索伦蒂诺\" class=\"headerlink\" title=\"————保罗·索伦蒂诺\"></a>————保罗·索伦蒂诺</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.2</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"她今夜出去只喝香槟，\"><a href=\"#她今夜出去只喝香槟，\" class=\"headerlink\" title=\"她今夜出去只喝香槟，\"></a>她今夜出去只喝香槟，</h3><h3 id=\"她几乎打量了所有男人，\"><a href=\"#她几乎打量了所有男人，\" class=\"headerlink\" title=\"她几乎打量了所有男人，\"></a>她几乎打量了所有男人，</h3><h3 id=\"她在玩她的游戏，\"><a href=\"#她在玩她的游戏，\" class=\"headerlink\" title=\"她在玩她的游戏，\"></a>她在玩她的游戏，</h3><h3 id=\"你可以听到他们说，\"><a href=\"#你可以听到他们说，\" class=\"headerlink\" title=\"你可以听到他们说，\"></a>你可以听到他们说，</h3><h3 id=\"她很漂亮，\"><a href=\"#她很漂亮，\" class=\"headerlink\" title=\"她很漂亮，\"></a>她很漂亮，</h3><h3 id=\"我们要为她的美貌付钱。\"><a href=\"#我们要为她的美貌付钱。\" class=\"headerlink\" title=\"我们要为她的美貌付钱。\"></a>我们要为她的美貌付钱。</h3><h2 id=\"————发电站\"><a href=\"#————发电站\" class=\"headerlink\" title=\"————发电站\"></a>————发电站</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.11.1</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"人生若只如初见，\"><a href=\"#人生若只如初见，\" class=\"headerlink\" title=\"人生若只如初见，\"></a>人生若只如初见，</h3><h3 id=\"何事秋风悲画扇。\"><a href=\"#何事秋风悲画扇。\" class=\"headerlink\" title=\"何事秋风悲画扇。\"></a>何事秋风悲画扇。</h3><h2 id=\"————木兰花·拟古决绝词柬友\"><a href=\"#————木兰花·拟古决绝词柬友\" class=\"headerlink\" title=\"————木兰花·拟古决绝词柬友\"></a>————木兰花·拟古决绝词柬友</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.31</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我并不是一味喜欢老旧的东西，\"><a href=\"#我并不是一味喜欢老旧的东西，\" class=\"headerlink\" title=\"我并不是一味喜欢老旧的东西，\"></a>我并不是一味喜欢老旧的东西，</h3><h3 id=\"我喜欢的，是建立在经典不变的基础上，\"><a href=\"#我喜欢的，是建立在经典不变的基础上，\" class=\"headerlink\" title=\"我喜欢的，是建立在经典不变的基础上，\"></a>我喜欢的，是建立在经典不变的基础上，</h3><h3 id=\"再融入新的东西。\"><a href=\"#再融入新的东西。\" class=\"headerlink\" title=\"再融入新的东西。\"></a>再融入新的东西。</h3><h3 id=\"我觉得有品味的人，\"><a href=\"#我觉得有品味的人，\" class=\"headerlink\" title=\"我觉得有品味的人，\"></a>我觉得有品味的人，</h3><h3 id=\"能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\"><a href=\"#能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\" class=\"headerlink\" title=\"能够把这些常规的永远不变的东西和新的东西很好地融合在一起。\"></a>能够把这些常规的永远不变的东西和新的东西很好地融合在一起。</h3><h2 id=\"————长冈贤明\"><a href=\"#————长冈贤明\" class=\"headerlink\" title=\"————长冈贤明\"></a>————长冈贤明</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.30</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"人闲桂花落，\"><a href=\"#人闲桂花落，\" class=\"headerlink\" title=\"人闲桂花落，\"></a>人闲桂花落，</h3><h3 id=\"夜静春山空。\"><a href=\"#夜静春山空。\" class=\"headerlink\" title=\"夜静春山空。\"></a>夜静春山空。</h3><h2 id=\"————鸟鸣涧\"><a href=\"#————鸟鸣涧\" class=\"headerlink\" title=\"————鸟鸣涧\"></a>————鸟鸣涧</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.29</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"他们太过于个人化，\"><a href=\"#他们太过于个人化，\" class=\"headerlink\" title=\"他们太过于个人化，\"></a>他们太过于个人化，</h3><h3 id=\"太过于阳春白雪……\"><a href=\"#太过于阳春白雪……\" class=\"headerlink\" title=\"太过于阳春白雪……\"></a>太过于阳春白雪……</h3><h3 id=\"今后应该比我迄今为止所做的更加尊重观众。\"><a href=\"#今后应该比我迄今为止所做的更加尊重观众。\" class=\"headerlink\" title=\"今后应该比我迄今为止所做的更加尊重观众。\"></a>今后应该比我迄今为止所做的更加尊重观众。</h3><h2 id=\"————赖纳·维尔纳·法斯宾德\"><a href=\"#————赖纳·维尔纳·法斯宾德\" class=\"headerlink\" title=\"————赖纳·维尔纳·法斯宾德\"></a>————赖纳·维尔纳·法斯宾德</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.28</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"这世界开始时没有人，\"><a href=\"#这世界开始时没有人，\" class=\"headerlink\" title=\"这世界开始时没有人，\"></a>这世界开始时没有人，</h3><h3 id=\"当它终结时还是没有人。\"><a href=\"#当它终结时还是没有人。\" class=\"headerlink\" title=\"当它终结时还是没有人。\"></a>当它终结时还是没有人。</h3><h2 id=\"————克洛德·列维·斯特劳斯\"><a href=\"#————克洛德·列维·斯特劳斯\" class=\"headerlink\" title=\"————克洛德·列维·斯特劳斯\"></a>————克洛德·列维·斯特劳斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.27</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"昔日我曾如此苍老，\"><a href=\"#昔日我曾如此苍老，\" class=\"headerlink\" title=\"昔日我曾如此苍老，\"></a>昔日我曾如此苍老，</h3><h3 id=\"如今才是风华正茂。\"><a href=\"#如今才是风华正茂。\" class=\"headerlink\" title=\"如今才是风华正茂。\"></a>如今才是风华正茂。</h3><h2 id=\"————鲍勃·迪伦\"><a href=\"#————鲍勃·迪伦\" class=\"headerlink\" title=\"————鲍勃·迪伦\"></a>————鲍勃·迪伦</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.26</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"一别都门三改火，\"><a href=\"#一别都门三改火，\" class=\"headerlink\" title=\"一别都门三改火，\"></a>一别都门三改火，</h3><h3 id=\"天涯踏尽红尘。\"><a href=\"#天涯踏尽红尘。\" class=\"headerlink\" title=\"天涯踏尽红尘。\"></a>天涯踏尽红尘。</h3><h2 id=\"————临江仙·送钱穆父\"><a href=\"#————临江仙·送钱穆父\" class=\"headerlink\" title=\"————临江仙·送钱穆父\"></a>————临江仙·送钱穆父</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.25</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"醉后不知天在水，\"><a href=\"#醉后不知天在水，\" class=\"headerlink\" title=\"醉后不知天在水，\"></a>醉后不知天在水，</h3><h3 id=\"满船清梦压星河。\"><a href=\"#满船清梦压星河。\" class=\"headerlink\" title=\"满船清梦压星河。\"></a>满船清梦压星河。</h3><h2 id=\"————题龙阳县青草湖\"><a href=\"#————题龙阳县青草湖\" class=\"headerlink\" title=\"————题龙阳县青草湖\"></a>————题龙阳县青草湖</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.24</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"事实上，\"><a href=\"#事实上，\" class=\"headerlink\" title=\"事实上，\"></a>事实上，</h3><h3 id=\"忧郁的人会成为最大的瘾君子，\"><a href=\"#忧郁的人会成为最大的瘾君子，\" class=\"headerlink\" title=\"忧郁的人会成为最大的瘾君子，\"></a>忧郁的人会成为最大的瘾君子，</h3><h3 id=\"因为真正上了瘾的体验总是一种孤独的体验。\"><a href=\"#因为真正上了瘾的体验总是一种孤独的体验。\" class=\"headerlink\" title=\"因为真正上了瘾的体验总是一种孤独的体验。\"></a>因为真正上了瘾的体验总是一种孤独的体验。</h3><h2 id=\"————苏珊·桑塔格\"><a href=\"#————苏珊·桑塔格\" class=\"headerlink\" title=\"————苏珊·桑塔格\"></a>————苏珊·桑塔格</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.23</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"天下熙熙，\"><a href=\"#天下熙熙，\" class=\"headerlink\" title=\"天下熙熙，\"></a>天下熙熙，</h3><h3 id=\"皆为利来；\"><a href=\"#皆为利来；\" class=\"headerlink\" title=\"皆为利来；\"></a>皆为利来；</h3><h3 id=\"天下攘攘，\"><a href=\"#天下攘攘，\" class=\"headerlink\" title=\"天下攘攘，\"></a>天下攘攘，</h3><h3 id=\"皆为利往。\"><a href=\"#皆为利往。\" class=\"headerlink\" title=\"皆为利往。\"></a>皆为利往。</h3><h2 id=\"————史记·货殖列传\"><a href=\"#————史记·货殖列传\" class=\"headerlink\" title=\"————史记·货殖列传\"></a>————史记·货殖列传</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.22  </p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我的风格就是我唯一能做的好事，\"><a href=\"#我的风格就是我唯一能做的好事，\" class=\"headerlink\" title=\"我的风格就是我唯一能做的好事，\"></a>我的风格就是我唯一能做的好事，</h3><h3 id=\"我不考虑流派，\"><a href=\"#我不考虑流派，\" class=\"headerlink\" title=\"我不考虑流派，\"></a>我不考虑流派，</h3><h3 id=\"我不考虑标签，\"><a href=\"#我不考虑标签，\" class=\"headerlink\" title=\"我不考虑标签，\"></a>我不考虑标签，</h3><h3 id=\"它们没有什么意义\"><a href=\"#它们没有什么意义\" class=\"headerlink\" title=\"它们没有什么意义\"></a>它们没有什么意义</h3><h2 id=\"————穆玄英挂帅\"><a href=\"#————穆玄英挂帅\" class=\"headerlink\" title=\"————穆玄英挂帅\"></a>————穆玄英挂帅</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.21  </p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"世间情动，\"><a href=\"#世间情动，\" class=\"headerlink\" title=\"世间情动，\"></a>世间情动，</h3><h3 id=\"不过盛夏白瓷梅子汤，\"><a href=\"#不过盛夏白瓷梅子汤，\" class=\"headerlink\" title=\"不过盛夏白瓷梅子汤，\"></a>不过盛夏白瓷梅子汤，</h3><h3 id=\"碎冰碰壁当啷响。\"><a href=\"#碎冰碰壁当啷响。\" class=\"headerlink\" title=\"碎冰碰壁当啷响。\"></a>碎冰碰壁当啷响。</h3><h2 id=\"————穆玄英挂帅\"><a href=\"#————穆玄英挂帅\" class=\"headerlink\" title=\"————穆玄英挂帅\"></a>————穆玄英挂帅</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.20  </p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我不喜欢“惊人”这个词，\"><a href=\"#我不喜欢“惊人”这个词，\" class=\"headerlink\" title=\"我不喜欢“惊人”这个词，\"></a>我不喜欢“惊人”这个词，</h3><h3 id=\"我在寻找意想不到的东西。\"><a href=\"#我在寻找意想不到的东西。\" class=\"headerlink\" title=\"我在寻找意想不到的东西。\"></a>我在寻找意想不到的东西。</h3><h3 id=\"寻找那些我从来没见过的东西……\"><a href=\"#寻找那些我从来没见过的东西……\" class=\"headerlink\" title=\"寻找那些我从来没见过的东西……\"></a>寻找那些我从来没见过的东西……</h3><h3 id=\"我在拍这些照片，\"><a href=\"#我在拍这些照片，\" class=\"headerlink\" title=\"我在拍这些照片，\"></a>我在拍这些照片，</h3><h3 id=\"我觉得义不容辞。\"><a href=\"#我觉得义不容辞。\" class=\"headerlink\" title=\"我觉得义不容辞。\"></a>我觉得义不容辞。</h3><h2 id=\"————罗伯特·梅普尔索普\"><a href=\"#————罗伯特·梅普尔索普\" class=\"headerlink\" title=\"————罗伯特·梅普尔索普\"></a>————罗伯特·梅普尔索普</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.19</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我的关注永远不是艺术，\"><a href=\"#我的关注永远不是艺术，\" class=\"headerlink\" title=\"我的关注永远不是艺术，\"></a>我的关注永远不是艺术，</h3><h3 id=\"但总是可以使用什么艺术。\"><a href=\"#但总是可以使用什么艺术。\" class=\"headerlink\" title=\"但总是可以使用什么艺术。\"></a>但总是可以使用什么艺术。</h3><h2 id=\"————格哈德·里希特\"><a href=\"#————格哈德·里希特\" class=\"headerlink\" title=\"————格哈德·里希特\"></a>————格哈德·里希特</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.18</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"人们理解杜尚花了100年时间，\"><a href=\"#人们理解杜尚花了100年时间，\" class=\"headerlink\" title=\"人们理解杜尚花了100年时间，\"></a>人们理解杜尚花了100年时间，</h3><h3 id=\"理解我估计要更久一点。\"><a href=\"#理解我估计要更久一点。\" class=\"headerlink\" title=\"理解我估计要更久一点。\"></a>理解我估计要更久一点。</h3><h2 id=\"————白南准\"><a href=\"#————白南准\" class=\"headerlink\" title=\"————白南准\"></a>————白南准</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.17</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我肯定，\"><a href=\"#我肯定，\" class=\"headerlink\" title=\"我肯定，\"></a>我肯定，</h3><h3 id=\"在空无的中心，\"><a href=\"#在空无的中心，\" class=\"headerlink\" title=\"在空无的中心，\"></a>在空无的中心，</h3><h3 id=\"如同在人的心脏\"><a href=\"#如同在人的心脏\" class=\"headerlink\" title=\"如同在人的心脏,\"></a>如同在人的心脏,</h3><h3 id=\"有火在燃烧。\"><a href=\"#有火在燃烧。\" class=\"headerlink\" title=\"有火在燃烧。\"></a>有火在燃烧。</h3><h2 id=\"————伊夫·克莱因\"><a href=\"#————伊夫·克莱因\" class=\"headerlink\" title=\"————伊夫·克莱因\"></a>————伊夫·克莱因</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.16</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"随着年龄的增长，\"><a href=\"#随着年龄的增长，\" class=\"headerlink\" title=\"随着年龄的增长，\"></a>随着年龄的增长，</h3><h3 id=\"我想起了我们古老的文字、遗产和价值观。\"><a href=\"#我想起了我们古老的文字、遗产和价值观。\" class=\"headerlink\" title=\"我想起了我们古老的文字、遗产和价值观。\"></a>我想起了我们古老的文字、遗产和价值观。</h3><h3 id=\"它们中的任何一个都代表着一种完整的理解\"><a href=\"#它们中的任何一个都代表着一种完整的理解\" class=\"headerlink\" title=\"它们中的任何一个都代表着一种完整的理解,\"></a>它们中的任何一个都代表着一种完整的理解,</h3><h3 id=\"即唯一确定的是不确定。\"><a href=\"#即唯一确定的是不确定。\" class=\"headerlink\" title=\"即唯一确定的是不确定。\"></a>即唯一确定的是不确定。</h3><h2 id=\"————巴克里希纳·多西\"><a href=\"#————巴克里希纳·多西\" class=\"headerlink\" title=\"————巴克里希纳·多西\"></a>————巴克里希纳·多西</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.15</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我们哭着降临世界，\"><a href=\"#我们哭着降临世界，\" class=\"headerlink\" title=\"我们哭着降临世界，\"></a>我们哭着降临世界，</h3><h3 id=\"却可以笑着走向永恒。\"><a href=\"#却可以笑着走向永恒。\" class=\"headerlink\" title=\"却可以笑着走向永恒。\"></a>却可以笑着走向永恒。</h3><h2 id=\"————如果国宝会说话\"><a href=\"#————如果国宝会说话\" class=\"headerlink\" title=\"————如果国宝会说话\"></a>————如果国宝会说话</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.14</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"他们说我是这镇子上的万人迷。\"><a href=\"#他们说我是这镇子上的万人迷。\" class=\"headerlink\" title=\"他们说我是这镇子上的万人迷。\"></a>他们说我是这镇子上的万人迷。</h3><h2 id=\"————弗兰克·扎帕\"><a href=\"#————弗兰克·扎帕\" class=\"headerlink\" title=\"————弗兰克·扎帕\"></a>————弗兰克·扎帕</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.13</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"风乍起。\"><a href=\"#风乍起。\" class=\"headerlink\" title=\"风乍起。\"></a>风乍起。</h3><h3 id=\"合当奋意向人生。\"><a href=\"#合当奋意向人生。\" class=\"headerlink\" title=\"合当奋意向人生。\"></a>合当奋意向人生。</h3><h2 id=\"————堀辰雄\"><a href=\"#————堀辰雄\" class=\"headerlink\" title=\"————堀辰雄\"></a>————堀辰雄</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.12</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"我的作品就是我的肉体和灵魂，\"><a href=\"#我的作品就是我的肉体和灵魂，\" class=\"headerlink\" title=\"我的作品就是我的肉体和灵魂，\"></a>我的作品就是我的肉体和灵魂，</h3><h3 id=\"为了它我甘愿冒失去生命和理智的危险。\"><a href=\"#为了它我甘愿冒失去生命和理智的危险。\" class=\"headerlink\" title=\"为了它我甘愿冒失去生命和理智的危险。\"></a>为了它我甘愿冒失去生命和理智的危险。</h3><h2 id=\"————文森特·威廉·梵·高\"><a href=\"#————文森特·威廉·梵·高\" class=\"headerlink\" title=\"————文森特·威廉·梵·高\"></a>————文森特·威廉·梵·高</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.11</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"抱歉，似乎是最难以启齿的话。\"><a href=\"#抱歉，似乎是最难以启齿的话。\" class=\"headerlink\" title=\"抱歉，似乎是最难以启齿的话。\"></a>抱歉，似乎是最难以启齿的话。</h3><h2 id=\"————雷·查尔斯\"><a href=\"#————雷·查尔斯\" class=\"headerlink\" title=\"————雷·查尔斯\"></a>————雷·查尔斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.10</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"历史学的目标并不是由过去视角出发展望未来。\"><a href=\"#历史学的目标并不是由过去视角出发展望未来。\" class=\"headerlink\" title=\"历史学的目标并不是由过去视角出发展望未来。\"></a>历史学的目标并不是由过去视角出发展望未来。</h3><h2 id=\"————埃里克·霍布斯鲍姆\"><a href=\"#————埃里克·霍布斯鲍姆\" class=\"headerlink\" title=\"————埃里克·霍布斯鲍姆\"></a>————埃里克·霍布斯鲍姆</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.9</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"和魔鬼共舞时，\"><a href=\"#和魔鬼共舞时，\" class=\"headerlink\" title=\"和魔鬼共舞时，\"></a>和魔鬼共舞时，</h3><h3 id=\"只能等着音乐结束。\"><a href=\"#只能等着音乐结束。\" class=\"headerlink\" title=\"只能等着音乐结束。\"></a>只能等着音乐结束。</h3><h2 id=\"————盖·里奇\"><a href=\"#————盖·里奇\" class=\"headerlink\" title=\"————盖·里奇\"></a>————盖·里奇</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.8</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"你了解星空下万物温馨的生长吗，\"><a href=\"#你了解星空下万物温馨的生长吗，\" class=\"headerlink\" title=\"你了解星空下万物温馨的生长吗，\"></a>你了解星空下万物温馨的生长吗，</h3><h3 id=\"你了解我们的存在吗，\"><a href=\"#你了解我们的存在吗，\" class=\"headerlink\" title=\"你了解我们的存在吗，\"></a>你了解我们的存在吗，</h3><h3 id=\"你已经遗失开启王国的钥匙了吗，\"><a href=\"#你已经遗失开启王国的钥匙了吗，\" class=\"headerlink\" title=\"你已经遗失开启王国的钥匙了吗，\"></a>你已经遗失开启王国的钥匙了吗，</h3><h3 id=\"你在轮回中反复降生一直活着吗，\"><a href=\"#你在轮回中反复降生一直活着吗，\" class=\"headerlink\" title=\"你在轮回中反复降生一直活着吗，\"></a>你在轮回中反复降生一直活着吗，</h3><h3 id=\"让我们彻底改造诸神，\"><a href=\"#让我们彻底改造诸神，\" class=\"headerlink\" title=\"让我们彻底改造诸神，\"></a>让我们彻底改造诸神，</h3><h3 id=\"包括各个时代的神话。\"><a href=\"#包括各个时代的神话。\" class=\"headerlink\" title=\"包括各个时代的神话。\"></a>包括各个时代的神话。</h3><h2 id=\"————吉姆·莫里森\"><a href=\"#————吉姆·莫里森\" class=\"headerlink\" title=\"————吉姆·莫里森\"></a>————吉姆·莫里森</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.10.7</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"声音在太空中消逝，\"><a href=\"#声音在太空中消逝，\" class=\"headerlink\" title=\"声音在太空中消逝，\"></a>声音在太空中消逝，</h3><h3 id=\"霞光变得昏暗。\"><a href=\"#霞光变得昏暗。\" class=\"headerlink\" title=\"霞光变得昏暗。\"></a>霞光变得昏暗。</h3><h3 id=\"永远沉默的世界里，\"><a href=\"#永远沉默的世界里，\" class=\"headerlink\" title=\"永远沉默的世界里，\"></a>永远沉默的世界里，</h3><h3 id=\"只有你和我交谈。\"><a href=\"#只有你和我交谈。\" class=\"headerlink\" title=\"只有你和我交谈。\"></a>只有你和我交谈。</h3><h2 id=\"————阿赫马托娃\"><a href=\"#————阿赫马托娃\" class=\"headerlink\" title=\"————阿赫马托娃\"></a>————阿赫马托娃</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.28</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"这几张脸在人群中幻境般闪现，\"><a href=\"#这几张脸在人群中幻境般闪现，\" class=\"headerlink\" title=\"这几张脸在人群中幻境般闪现，\"></a>这几张脸在人群中幻境般闪现，</h3><h3 id=\"湿漉漉的黑树枝上花瓣数点。\"><a href=\"#湿漉漉的黑树枝上花瓣数点。\" class=\"headerlink\" title=\"湿漉漉的黑树枝上花瓣数点。\"></a>湿漉漉的黑树枝上花瓣数点。</h3><h2 id=\"————埃兹拉·庞德\"><a href=\"#————埃兹拉·庞德\" class=\"headerlink\" title=\"————埃兹拉·庞德\"></a>————埃兹拉·庞德</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.27</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"热水澡肯定不能包治百病，\"><a href=\"#热水澡肯定不能包治百病，\" class=\"headerlink\" title=\"热水澡肯定不能包治百病，\"></a>热水澡肯定不能包治百病，</h3><h3 id=\"但我想例外也不会太多。\"><a href=\"#但我想例外也不会太多。\" class=\"headerlink\" title=\"但我想例外也不会太多。\"></a>但我想例外也不会太多。</h3><h3 id=\"每当我悲痛欲绝，\"><a href=\"#每当我悲痛欲绝，\" class=\"headerlink\" title=\"每当我悲痛欲绝，\"></a>每当我悲痛欲绝，</h3><h3 id=\"或者神经紧张、夜不成寐，\"><a href=\"#或者神经紧张、夜不成寐，\" class=\"headerlink\" title=\"或者神经紧张、夜不成寐，\"></a>或者神经紧张、夜不成寐，</h3><h3 id=\"意志消沉、萎靡不振，\"><a href=\"#意志消沉、萎靡不振，\" class=\"headerlink\" title=\"意志消沉、萎靡不振，\"></a>意志消沉、萎靡不振，</h3><h3 id=\"这时我就会对自己说：\"><a href=\"#这时我就会对自己说：\" class=\"headerlink\" title=\"这时我就会对自己说：\"></a>这时我就会对自己说：</h3><h3 id=\"洗个热水澡吧。\"><a href=\"#洗个热水澡吧。\" class=\"headerlink\" title=\"洗个热水澡吧。\"></a>洗个热水澡吧。</h3><h2 id=\"————西尔维娅·普拉斯\"><a href=\"#————西尔维娅·普拉斯\" class=\"headerlink\" title=\"————西尔维娅·普拉斯\"></a>————西尔维娅·普拉斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.26</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"当我回顾人类的历史，\"><a href=\"#当我回顾人类的历史，\" class=\"headerlink\" title=\"当我回顾人类的历史，\"></a>当我回顾人类的历史，</h3><h3 id=\"有时我觉得是一出喜剧，\"><a href=\"#有时我觉得是一出喜剧，\" class=\"headerlink\" title=\"有时我觉得是一出喜剧，\"></a>有时我觉得是一出喜剧，</h3><h3 id=\"但这喜剧让我哭泣；\"><a href=\"#但这喜剧让我哭泣；\" class=\"headerlink\" title=\"但这喜剧让我哭泣；\"></a>但这喜剧让我哭泣；</h3><h3 id=\"有时又觉得它是一出悲剧，\"><a href=\"#有时又觉得它是一出悲剧，\" class=\"headerlink\" title=\"有时又觉得它是一出悲剧，\"></a>有时又觉得它是一出悲剧，</h3><h3 id=\"但这悲剧却让我微笑。\"><a href=\"#但这悲剧却让我微笑。\" class=\"headerlink\" title=\"但这悲剧却让我微笑。\"></a>但这悲剧却让我微笑。</h3><h2 id=\"————特拉斯诺霍尔卡伊·拉斯洛\"><a href=\"#————特拉斯诺霍尔卡伊·拉斯洛\" class=\"headerlink\" title=\"————特拉斯诺霍尔卡伊·拉斯洛\"></a>————特拉斯诺霍尔卡伊·拉斯洛</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.25</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"就着几盏昏红的灯下，\"><a href=\"#就着几盏昏红的灯下，\" class=\"headerlink\" title=\"就着几盏昏红的灯下，\"></a>就着几盏昏红的灯下，</h3><h3 id=\"靠在几张旧床边，\"><a href=\"#靠在几张旧床边，\" class=\"headerlink\" title=\"靠在几张旧床边，\"></a>靠在几张旧床边，</h3><h3 id=\"我们就在这儿挥洒激情的汗水，\"><a href=\"#我们就在这儿挥洒激情的汗水，\" class=\"headerlink\" title=\"我们就在这儿挥洒激情的汗水，\"></a>我们就在这儿挥洒激情的汗水，</h3><h3 id=\"无论我们能从中收获怎样的音乐，\"><a href=\"#无论我们能从中收获怎样的音乐，\" class=\"headerlink\" title=\"无论我们能从中收获怎样的音乐，\"></a>无论我们能从中收获怎样的音乐，</h3><h3 id=\"我知道我们永不会忘。\"><a href=\"#我知道我们永不会忘。\" class=\"headerlink\" title=\"我知道我们永不会忘。\"></a>我知道我们永不会忘。</h3><h2 id=\"————深紫乐队\"><a href=\"#————深紫乐队\" class=\"headerlink\" title=\"————深紫乐队\"></a>————深紫乐队</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.24</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"很多人常说我受某某的影响，\"><a href=\"#很多人常说我受某某的影响，\" class=\"headerlink\" title=\"很多人常说我受某某的影响，\"></a>很多人常说我受某某的影响，</h3><h3 id=\"其实并无关连，\"><a href=\"#其实并无关连，\" class=\"headerlink\" title=\"其实并无关连，\"></a>其实并无关连，</h3><h3 id=\"认真说来只有盗窃而已。\"><a href=\"#认真说来只有盗窃而已。\" class=\"headerlink\" title=\"认真说来只有盗窃而已。\"></a>认真说来只有盗窃而已。</h3><h3 id=\"除了盗窃以外，\"><a href=\"#除了盗窃以外，\" class=\"headerlink\" title=\"除了盗窃以外，\"></a>除了盗窃以外，</h3><h3 id=\"别无其他，\"><a href=\"#别无其他，\" class=\"headerlink\" title=\"别无其他，\"></a>别无其他，</h3><h3 id=\"只不过其他人不敢说出来。\"><a href=\"#只不过其他人不敢说出来。\" class=\"headerlink\" title=\"只不过其他人不敢说出来。\"></a>只不过其他人不敢说出来。</h3><h2 id=\"————丸尾末广\"><a href=\"#————丸尾末广\" class=\"headerlink\" title=\"————丸尾末广\"></a>————丸尾末广</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.23</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"直线属于人类，\"><a href=\"#直线属于人类，\" class=\"headerlink\" title=\"直线属于人类，\"></a>直线属于人类，</h3><h3 id=\"曲线属于上帝。\"><a href=\"#曲线属于上帝。\" class=\"headerlink\" title=\"曲线属于上帝。\"></a>曲线属于上帝。</h3><h2 id=\"————安东尼·高迪\"><a href=\"#————安东尼·高迪\" class=\"headerlink\" title=\"————安东尼·高迪\"></a>————安东尼·高迪</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.22</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"以前人们似乎总是很明确地知道，\"><a href=\"#以前人们似乎总是很明确地知道，\" class=\"headerlink\" title=\"以前人们似乎总是很明确地知道，\"></a>以前人们似乎总是很明确地知道，</h3><h3 id=\"政府或者谁哪里哪里做得不对，\"><a href=\"#政府或者谁哪里哪里做得不对，\" class=\"headerlink\" title=\"政府或者谁哪里哪里做得不对，\"></a>政府或者谁哪里哪里做得不对，</h3><h3 id=\"于是一起针对问题示威游行。\"><a href=\"#于是一起针对问题示威游行。\" class=\"headerlink\" title=\"于是一起针对问题示威游行。\"></a>于是一起针对问题示威游行。</h3><h3 id=\"但是如今，我们为何愤怒，\"><a href=\"#但是如今，我们为何愤怒，\" class=\"headerlink\" title=\"但是如今，我们为何愤怒，\"></a>但是如今，我们为何愤怒，</h3><h3 id=\"完全是个谜。\"><a href=\"#完全是个谜。\" class=\"headerlink\" title=\"完全是个谜。\"></a>完全是个谜。</h3><h2 id=\"————李沧东\"><a href=\"#————李沧东\" class=\"headerlink\" title=\"————李沧东\"></a>————李沧东</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.21</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"一个故事之所以吸引我，\"><a href=\"#一个故事之所以吸引我，\" class=\"headerlink\" title=\"一个故事之所以吸引我，\"></a>一个故事之所以吸引我，</h3><h3 id=\"是因为它本身的价值，\"><a href=\"#是因为它本身的价值，\" class=\"headerlink\" title=\"是因为它本身的价值，\"></a>是因为它本身的价值，</h3><h3 id=\"而非我可以顾影自怜。\"><a href=\"#而非我可以顾影自怜。\" class=\"headerlink\" title=\"而非我可以顾影自怜。\"></a>而非我可以顾影自怜。</h3><h2 id=\"————奥逊·威尔斯\"><a href=\"#————奥逊·威尔斯\" class=\"headerlink\" title=\"————奥逊·威尔斯\"></a>————奥逊·威尔斯</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.20</p>\n<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"不要问篝火该不该燃烧，\"><a href=\"#不要问篝火该不该燃烧，\" class=\"headerlink\" title=\"不要问篝火该不该燃烧，\"></a>不要问篝火该不该燃烧，</h3><h3 id=\"先问寒冷黑暗还在不在；\"><a href=\"#先问寒冷黑暗还在不在；\" class=\"headerlink\" title=\"先问寒冷黑暗还在不在；\"></a>先问寒冷黑暗还在不在；</h3><h3 id=\"不要问子弹该不该上膛，\"><a href=\"#不要问子弹该不该上膛，\" class=\"headerlink\" title=\"不要问子弹该不该上膛，\"></a>不要问子弹该不该上膛，</h3><h3 id=\"先问压迫剥削还在不在；\"><a href=\"#先问压迫剥削还在不在；\" class=\"headerlink\" title=\"先问压迫剥削还在不在；\"></a>先问压迫剥削还在不在；</h3><h3 id=\"不要问正义事业有没有明天，\"><a href=\"#不要问正义事业有没有明天，\" class=\"headerlink\" title=\"不要问正义事业有没有明天，\"></a>不要问正义事业有没有明天，</h3><h3 id=\"先问人间不平今天还在不在。\"><a href=\"#先问人间不平今天还在不在。\" class=\"headerlink\" title=\"先问人间不平今天还在不在。\"></a>先问人间不平今天还在不在。</h3><h2 id=\"————切·格瓦拉\"><a href=\"#————切·格瓦拉\" class=\"headerlink\" title=\"————切·格瓦拉\"></a>————切·格瓦拉</h2>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<p>2020.9.19</p>"},{"title":"语音模型训练和序列生成","copyright":false,"date":"2021-03-12T08:03:09.000Z","_content":"\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 模型训练\n![序列模型训练原理](986226c39270a1e14643e8658fe6c374.png)\n<!-- more -->\n　　下图利用训练好的模型生成随机序列：\n![生成随机序列](8b901fc8fcab9e16b1fe26b92f4ec546.png)","source":"_posts/dl-11Language-model-and-Sample.md","raw":"---\ntitle: 语音模型训练和序列生成\ncopyright: false\ndate: 2021-03-12 16:03:09\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 模型训练\n![序列模型训练原理](986226c39270a1e14643e8658fe6c374.png)\n<!-- more -->\n　　下图利用训练好的模型生成随机序列：\n![生成随机序列](8b901fc8fcab9e16b1fe26b92f4ec546.png)","slug":"dl-11Language-model-and-Sample","published":1,"updated":"2021-03-12T08:57:07.712Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gp001oc8pvfc1v9bx8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"模型训练\"><a href=\"#模型训练\" class=\"headerlink\" title=\"模型训练\"></a>模型训练</h1><p><img src=\"/posts/dl-11Language-model-and-Sample/986226c39270a1e14643e8658fe6c374.png\" alt=\"序列模型训练原理\"><br><a id=\"more\"></a><br>　　下图利用训练好的模型生成随机序列：<br><img src=\"/posts/dl-11Language-model-and-Sample/8b901fc8fcab9e16b1fe26b92f4ec546.png\" alt=\"生成随机序列\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":50,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"模型训练\"><a href=\"#模型训练\" class=\"headerlink\" title=\"模型训练\"></a>模型训练</h1><p><img src=\"/posts/dl-11Language-model-and-Sample/986226c39270a1e14643e8658fe6c374.png\" alt=\"序列模型训练原理\"><br></p>","more":"<br>　　下图利用训练好的模型生成随机序列：<br><img src=\"/posts/dl-11Language-model-and-Sample/8b901fc8fcab9e16b1fe26b92f4ec546.png\" alt=\"生成随机序列\"><p></p>"},{"title":"序列模型之语言辨识","copyright":false,"date":"2021-03-15T04:59:59.000Z","_content":"\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n　　传统语音识别的第一步是用一段音频生成一个声谱图，如下图所示，横轴是时间，纵轴是声音的频率（**frequencies**），而图中不同的颜色，显示了声波能量的大小（**the amount of energy**）。有一段时间，语音识别系统是用音位（**phonemes**）来构建的，也就是人工设计的基本单元（**hand-engineered basic units of cells**），如果用音位来表示\"**the quick brown fox**\"，我这里稍微简化一些，\"**the**\"含有\"**th**\"和\"**e**\"的音，而\"**quick**\"有\"**k**\" \"**w**\" \"**i**\" \"**k**\"的音。\n<!-- more -->\n![语音识别问题](8da3e9cf049139a8e4a78503bd72e7fd.png)\n　　而在**end-to-end**模型中，我们发现这种音位表示法（**phonemes representations**）已经不再必要了，而是可以构建一个系统，通过向系统中输入音频片段（**audio clip**），然后直接输出音频的文本（**a transcript**），而不需要使用这种人工设计的表示方法。\n\n# CTC损失函数\n　　通常,我们将语音音频划分为多个时间步,比如你有一段10秒的音频，并且特征（**features**）是100赫兹的，即每秒有100个样本，于是这段10秒的音频片段就会有1000个输入。而我们需要的输出往往没有这么多字母，因此将表示相同字母的音频输出为重复字母，没有意义的音频输出为空白符\"_\"，还可能有表示空格的音频输出\" \"。最后将重复的部分合并，就得到了我们希望的输出。\n![CTC损失函数过程](8f409fc3980b0be00dca49bf4fac2659.png)\n\n# 触发字检测\n　　随着语音识别的发展，越来越多的设备可以通过你的声音来唤醒，这有时被叫做触发字检测系统（**rigger word detection systems**）\n　　现在有一个这样的**RNN**结构，**我们要做的就是把一个音频片段（an audio clip）计算出它的声谱图特征（spectrogram features）得到特征向量**$x^{<1>}$, $x^{<2>}$, $x^{<3>}$..，然后把它放到**RNN**中，最后要做的，就是定义我们的目标标签$y$。假如音频片段中的这一点是某人刚刚说完一个触发字，比如\"**Alexa**\"，或者\"小度你好\" 或者\"**Okay Google**\"，那么在这一点之前，你就可以在训练集中把目标标签都设为0，然后在这个点之后把目标标签设为1。","source":"_posts/dl-13speech-recognition.md","raw":"---\ntitle: 序列模型之语言辨识\ncopyright: false\ndate: 2021-03-15 12:59:59\ntags:\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n　　传统语音识别的第一步是用一段音频生成一个声谱图，如下图所示，横轴是时间，纵轴是声音的频率（**frequencies**），而图中不同的颜色，显示了声波能量的大小（**the amount of energy**）。有一段时间，语音识别系统是用音位（**phonemes**）来构建的，也就是人工设计的基本单元（**hand-engineered basic units of cells**），如果用音位来表示\"**the quick brown fox**\"，我这里稍微简化一些，\"**the**\"含有\"**th**\"和\"**e**\"的音，而\"**quick**\"有\"**k**\" \"**w**\" \"**i**\" \"**k**\"的音。\n<!-- more -->\n![语音识别问题](8da3e9cf049139a8e4a78503bd72e7fd.png)\n　　而在**end-to-end**模型中，我们发现这种音位表示法（**phonemes representations**）已经不再必要了，而是可以构建一个系统，通过向系统中输入音频片段（**audio clip**），然后直接输出音频的文本（**a transcript**），而不需要使用这种人工设计的表示方法。\n\n# CTC损失函数\n　　通常,我们将语音音频划分为多个时间步,比如你有一段10秒的音频，并且特征（**features**）是100赫兹的，即每秒有100个样本，于是这段10秒的音频片段就会有1000个输入。而我们需要的输出往往没有这么多字母，因此将表示相同字母的音频输出为重复字母，没有意义的音频输出为空白符\"_\"，还可能有表示空格的音频输出\" \"。最后将重复的部分合并，就得到了我们希望的输出。\n![CTC损失函数过程](8f409fc3980b0be00dca49bf4fac2659.png)\n\n# 触发字检测\n　　随着语音识别的发展，越来越多的设备可以通过你的声音来唤醒，这有时被叫做触发字检测系统（**rigger word detection systems**）\n　　现在有一个这样的**RNN**结构，**我们要做的就是把一个音频片段（an audio clip）计算出它的声谱图特征（spectrogram features）得到特征向量**$x^{<1>}$, $x^{<2>}$, $x^{<3>}$..，然后把它放到**RNN**中，最后要做的，就是定义我们的目标标签$y$。假如音频片段中的这一点是某人刚刚说完一个触发字，比如\"**Alexa**\"，或者\"小度你好\" 或者\"**Okay Google**\"，那么在这一点之前，你就可以在训练集中把目标标签都设为0，然后在这个点之后把目标标签设为1。","slug":"dl-13speech-recognition","published":1,"updated":"2021-03-15T05:27:27.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gq001pc8pvhec476w9","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<p>　　传统语音识别的第一步是用一段音频生成一个声谱图，如下图所示，横轴是时间，纵轴是声音的频率（<strong>frequencies</strong>），而图中不同的颜色，显示了声波能量的大小（<strong>the amount of energy</strong>）。有一段时间，语音识别系统是用音位（<strong>phonemes</strong>）来构建的，也就是人工设计的基本单元（<strong>hand-engineered basic units of cells</strong>），如果用音位来表示”<strong>the quick brown fox</strong>“，我这里稍微简化一些，”<strong>the</strong>“含有”<strong>th</strong>“和”<strong>e</strong>“的音，而”<strong>quick</strong>“有”<strong>k</strong>“ “<strong>w</strong>“ “<strong>i</strong>“ “<strong>k</strong>“的音。<br><a id=\"more\"></a><br><img src=\"/posts/dl-13speech-recognition/8da3e9cf049139a8e4a78503bd72e7fd.png\" alt=\"语音识别问题\"><br>　　而在<strong>end-to-end</strong>模型中，我们发现这种音位表示法（<strong>phonemes representations</strong>）已经不再必要了，而是可以构建一个系统，通过向系统中输入音频片段（<strong>audio clip</strong>），然后直接输出音频的文本（<strong>a transcript</strong>），而不需要使用这种人工设计的表示方法。</p>\n<h1 id=\"CTC损失函数\"><a href=\"#CTC损失函数\" class=\"headerlink\" title=\"CTC损失函数\"></a>CTC损失函数</h1><p>　　通常,我们将语音音频划分为多个时间步,比如你有一段10秒的音频，并且特征（<strong>features</strong>）是100赫兹的，即每秒有100个样本，于是这段10秒的音频片段就会有1000个输入。而我们需要的输出往往没有这么多字母，因此将表示相同字母的音频输出为重复字母，没有意义的音频输出为空白符”_”，还可能有表示空格的音频输出” “。最后将重复的部分合并，就得到了我们希望的输出。<br><img src=\"/posts/dl-13speech-recognition/8f409fc3980b0be00dca49bf4fac2659.png\" alt=\"CTC损失函数过程\"></p>\n<h1 id=\"触发字检测\"><a href=\"#触发字检测\" class=\"headerlink\" title=\"触发字检测\"></a>触发字检测</h1><p>　　随着语音识别的发展，越来越多的设备可以通过你的声音来唤醒，这有时被叫做触发字检测系统（<strong>rigger word detection systems</strong>）<br>　　现在有一个这样的<strong>RNN</strong>结构，<strong>我们要做的就是把一个音频片段（an audio clip）计算出它的声谱图特征（spectrogram features）得到特征向量</strong>$x^{<1>}$, $x^{<2>}$, $x^{<3>}$..，然后把它放到<strong>RNN</strong>中，最后要做的，就是定义我们的目标标签$y$。假如音频片段中的这一点是某人刚刚说完一个触发字，比如”<strong>Alexa</strong>“，或者”小度你好” 或者”<strong>Okay Google</strong>“，那么在这一点之前，你就可以在训练集中把目标标签都设为0，然后在这个点之后把目标标签设为1。</3></2></1></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":920,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<p>　　传统语音识别的第一步是用一段音频生成一个声谱图，如下图所示，横轴是时间，纵轴是声音的频率（<strong>frequencies</strong>），而图中不同的颜色，显示了声波能量的大小（<strong>the amount of energy</strong>）。有一段时间，语音识别系统是用音位（<strong>phonemes</strong>）来构建的，也就是人工设计的基本单元（<strong>hand-engineered basic units of cells</strong>），如果用音位来表示”<strong>the quick brown fox</strong>“，我这里稍微简化一些，”<strong>the</strong>“含有”<strong>th</strong>“和”<strong>e</strong>“的音，而”<strong>quick</strong>“有”<strong>k</strong>“ “<strong>w</strong>“ “<strong>i</strong>“ “<strong>k</strong>“的音。<br></p>","more":"<br><img src=\"/posts/dl-13speech-recognition/8da3e9cf049139a8e4a78503bd72e7fd.png\" alt=\"语音识别问题\"><br>　　而在<strong>end-to-end</strong>模型中，我们发现这种音位表示法（<strong>phonemes representations</strong>）已经不再必要了，而是可以构建一个系统，通过向系统中输入音频片段（<strong>audio clip</strong>），然后直接输出音频的文本（<strong>a transcript</strong>），而不需要使用这种人工设计的表示方法。<p></p>\n<h1 id=\"CTC损失函数\"><a href=\"#CTC损失函数\" class=\"headerlink\" title=\"CTC损失函数\"></a>CTC损失函数</h1><p>　　通常,我们将语音音频划分为多个时间步,比如你有一段10秒的音频，并且特征（<strong>features</strong>）是100赫兹的，即每秒有100个样本，于是这段10秒的音频片段就会有1000个输入。而我们需要的输出往往没有这么多字母，因此将表示相同字母的音频输出为重复字母，没有意义的音频输出为空白符”_”，还可能有表示空格的音频输出” “。最后将重复的部分合并，就得到了我们希望的输出。<br><img src=\"/posts/dl-13speech-recognition/8f409fc3980b0be00dca49bf4fac2659.png\" alt=\"CTC损失函数过程\"></p>\n<h1 id=\"触发字检测\"><a href=\"#触发字检测\" class=\"headerlink\" title=\"触发字检测\"></a>触发字检测</h1><p>　　随着语音识别的发展，越来越多的设备可以通过你的声音来唤醒，这有时被叫做触发字检测系统（<strong>rigger word detection systems</strong>）<br>　　现在有一个这样的<strong>RNN</strong>结构，<strong>我们要做的就是把一个音频片段（an audio clip）计算出它的声谱图特征（spectrogram features）得到特征向量</strong>$x^{<1>}$, $x^{<2>}$, $x^{<3>}$..，然后把它放到<strong>RNN</strong>中，最后要做的，就是定义我们的目标标签$y$。假如音频片段中的这一点是某人刚刚说完一个触发字，比如”<strong>Alexa</strong>“，或者”小度你好” 或者”<strong>Okay Google</strong>“，那么在这一点之前，你就可以在训练集中把目标标签都设为0，然后在这个点之后把目标标签设为1。</3></2></1></p>"},{"title":"机器学习引言","date":"2021-02-19T04:05:14.000Z","copyright":false,"_content":"{% note info %}\n课程名称：[吴恩达机器学习课程](https://www.bilibili.com/video/BV164411b7dx)\n{% endnote %}\n# 机器学习(machine learning)定义\n* Arther Samuel(1959):Machine Learning:Field fo study that gives computers the ability to learn without being explicitly programmed.\n* Tom Mitchell(1998) well-posed Learning Problem: A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its improves with experience E.\n\n　　在跳棋游戏中，E->程序和自己下上万次棋，T->玩跳棋，P->与新对手下棋赢的概率。\n<!-- more -->\n# 机器学习算法分类\n## 　一、监督学习(Supervised learning)\n### (1)回归问题(Regression problem):预测出一个连续值的输出。\n例如：预测房价问题，根据样本的数据集进行拟合就可以得到一条连续的曲线。\n![房价预测](https://pic1.zhimg.com/80/v2-7497b88c2931c082a5bf6334f54b147c_720w.jpg)\n### (2)分类问题(Classification problem):预测出一个离散值的输出。\n例子：根据肿瘤的某些特征来判断是良性还是恶性，得到的结果是“良性”或者是“恶性”，是离散的。\n![肿瘤预测-单变量](https://pic4.zhimg.com/80/v2-7e1eb4d75ea5d8fb6b3cba72addeffef_720w.jpg)\n![肿瘤预测-多变量](https://pic3.zhimg.com/80/v2-c11e632cb62e2351541647412b0b546e_720w.jpg)\n## 　二、无监督学习(Unsupervised learning)\n　　无监督学习的数据集和监督学习的不同，没任何标签，也就是**没有“正确的输出结果”**。在此过程中没有指导者，只有计算机自己学习。\n### 聚类算法(Clustering algorithms)\n　　从数据集中可以通过非监督学习得到数据的某种结构，可能是把数据分成两个不同的聚集簇，称为聚类算法。\n应用：\n* Google新闻将相似新闻分类\n* 基因学将有相同基因序列的个体分为一类\n\n![DNA微阵列数据](https://pic2.zhimg.com/80/v2-0e62546b76127accdbcd984d89ff7ed1_720w.jpg)\n\n### 盲信号分离算法\n* 鸡尾酒会问题(Cocktail party problem):两人在说话，两个麦克风离两人距离不同，从每段麦克风录制的音频中分离出两个人各自的声音。\n\n![鸡尾酒会问题](https://pic4.zhimg.com/80/v2-61819fa6432378a1b42e03f6be07b8b7_720w.jpg)\n实现该音频处理只需如下代码：\n![音频分离代码](https://pic1.zhimg.com/80/v2-ff9409c9b9439df1af1e03a11f429d4c_720w.jpg)\n其中：SVD()函数——奇异值分解的缩写，作为线性代数常规函数的缩写,内置于Octave软件中。\n","source":"_posts/dl-1definition.md","raw":"---\ntitle: 机器学习引言\ndate: 2021-02-19 12:05:14\ntags:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\ncopyright: false\n---\n{% note info %}\n课程名称：[吴恩达机器学习课程](https://www.bilibili.com/video/BV164411b7dx)\n{% endnote %}\n# 机器学习(machine learning)定义\n* Arther Samuel(1959):Machine Learning:Field fo study that gives computers the ability to learn without being explicitly programmed.\n* Tom Mitchell(1998) well-posed Learning Problem: A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its improves with experience E.\n\n　　在跳棋游戏中，E->程序和自己下上万次棋，T->玩跳棋，P->与新对手下棋赢的概率。\n<!-- more -->\n# 机器学习算法分类\n## 　一、监督学习(Supervised learning)\n### (1)回归问题(Regression problem):预测出一个连续值的输出。\n例如：预测房价问题，根据样本的数据集进行拟合就可以得到一条连续的曲线。\n![房价预测](https://pic1.zhimg.com/80/v2-7497b88c2931c082a5bf6334f54b147c_720w.jpg)\n### (2)分类问题(Classification problem):预测出一个离散值的输出。\n例子：根据肿瘤的某些特征来判断是良性还是恶性，得到的结果是“良性”或者是“恶性”，是离散的。\n![肿瘤预测-单变量](https://pic4.zhimg.com/80/v2-7e1eb4d75ea5d8fb6b3cba72addeffef_720w.jpg)\n![肿瘤预测-多变量](https://pic3.zhimg.com/80/v2-c11e632cb62e2351541647412b0b546e_720w.jpg)\n## 　二、无监督学习(Unsupervised learning)\n　　无监督学习的数据集和监督学习的不同，没任何标签，也就是**没有“正确的输出结果”**。在此过程中没有指导者，只有计算机自己学习。\n### 聚类算法(Clustering algorithms)\n　　从数据集中可以通过非监督学习得到数据的某种结构，可能是把数据分成两个不同的聚集簇，称为聚类算法。\n应用：\n* Google新闻将相似新闻分类\n* 基因学将有相同基因序列的个体分为一类\n\n![DNA微阵列数据](https://pic2.zhimg.com/80/v2-0e62546b76127accdbcd984d89ff7ed1_720w.jpg)\n\n### 盲信号分离算法\n* 鸡尾酒会问题(Cocktail party problem):两人在说话，两个麦克风离两人距离不同，从每段麦克风录制的音频中分离出两个人各自的声音。\n\n![鸡尾酒会问题](https://pic4.zhimg.com/80/v2-61819fa6432378a1b42e03f6be07b8b7_720w.jpg)\n实现该音频处理只需如下代码：\n![音频分离代码](https://pic1.zhimg.com/80/v2-ff9409c9b9439df1af1e03a11f429d4c_720w.jpg)\n其中：SVD()函数——奇异值分解的缩写，作为线性代数常规函数的缩写,内置于Octave软件中。\n","slug":"dl-1definition","published":1,"updated":"2021-02-20T06:09:46.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gs001tc8pv5p04hp0l","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411b7dx\">吴恩达机器学习课程</a></p>\n          </div>\n<h1 id=\"机器学习-machine-learning-定义\"><a href=\"#机器学习-machine-learning-定义\" class=\"headerlink\" title=\"机器学习(machine learning)定义\"></a>机器学习(machine learning)定义</h1><ul>\n<li>Arther Samuel(1959):Machine Learning:Field fo study that gives computers the ability to learn without being explicitly programmed.</li>\n<li>Tom Mitchell(1998) well-posed Learning Problem: A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its improves with experience E.</li>\n</ul>\n<p>　　在跳棋游戏中，E-&gt;程序和自己下上万次棋，T-&gt;玩跳棋，P-&gt;与新对手下棋赢的概率。<br><a id=\"more\"></a></p>\n<h1 id=\"机器学习算法分类\"><a href=\"#机器学习算法分类\" class=\"headerlink\" title=\"机器学习算法分类\"></a>机器学习算法分类</h1><h2 id=\"一、监督学习-Supervised-learning\"><a href=\"#一、监督学习-Supervised-learning\" class=\"headerlink\" title=\"　一、监督学习(Supervised learning)\"></a>　一、监督学习(Supervised learning)</h2><h3 id=\"1-回归问题-Regression-problem-预测出一个连续值的输出。\"><a href=\"#1-回归问题-Regression-problem-预测出一个连续值的输出。\" class=\"headerlink\" title=\"(1)回归问题(Regression problem):预测出一个连续值的输出。\"></a>(1)回归问题(Regression problem):预测出一个连续值的输出。</h3><p>例如：预测房价问题，根据样本的数据集进行拟合就可以得到一条连续的曲线。<br><img src=\"https://pic1.zhimg.com/80/v2-7497b88c2931c082a5bf6334f54b147c_720w.jpg\" alt=\"房价预测\"></p>\n<h3 id=\"2-分类问题-Classification-problem-预测出一个离散值的输出。\"><a href=\"#2-分类问题-Classification-problem-预测出一个离散值的输出。\" class=\"headerlink\" title=\"(2)分类问题(Classification problem):预测出一个离散值的输出。\"></a>(2)分类问题(Classification problem):预测出一个离散值的输出。</h3><p>例子：根据肿瘤的某些特征来判断是良性还是恶性，得到的结果是“良性”或者是“恶性”，是离散的。<br><img src=\"https://pic4.zhimg.com/80/v2-7e1eb4d75ea5d8fb6b3cba72addeffef_720w.jpg\" alt=\"肿瘤预测-单变量\"><br><img src=\"https://pic3.zhimg.com/80/v2-c11e632cb62e2351541647412b0b546e_720w.jpg\" alt=\"肿瘤预测-多变量\"></p>\n<h2 id=\"二、无监督学习-Unsupervised-learning\"><a href=\"#二、无监督学习-Unsupervised-learning\" class=\"headerlink\" title=\"　二、无监督学习(Unsupervised learning)\"></a>　二、无监督学习(Unsupervised learning)</h2><p>　　无监督学习的数据集和监督学习的不同，没任何标签，也就是<strong>没有“正确的输出结果”</strong>。在此过程中没有指导者，只有计算机自己学习。</p>\n<h3 id=\"聚类算法-Clustering-algorithms\"><a href=\"#聚类算法-Clustering-algorithms\" class=\"headerlink\" title=\"聚类算法(Clustering algorithms)\"></a>聚类算法(Clustering algorithms)</h3><p>　　从数据集中可以通过非监督学习得到数据的某种结构，可能是把数据分成两个不同的聚集簇，称为聚类算法。<br>应用：</p>\n<ul>\n<li>Google新闻将相似新闻分类</li>\n<li>基因学将有相同基因序列的个体分为一类</li>\n</ul>\n<p><img src=\"https://pic2.zhimg.com/80/v2-0e62546b76127accdbcd984d89ff7ed1_720w.jpg\" alt=\"DNA微阵列数据\"></p>\n<h3 id=\"盲信号分离算法\"><a href=\"#盲信号分离算法\" class=\"headerlink\" title=\"盲信号分离算法\"></a>盲信号分离算法</h3><ul>\n<li>鸡尾酒会问题(Cocktail party problem):两人在说话，两个麦克风离两人距离不同，从每段麦克风录制的音频中分离出两个人各自的声音。</li>\n</ul>\n<p><img src=\"https://pic4.zhimg.com/80/v2-61819fa6432378a1b42e03f6be07b8b7_720w.jpg\" alt=\"鸡尾酒会问题\"><br>实现该音频处理只需如下代码：<br><img src=\"https://pic1.zhimg.com/80/v2-ff9409c9b9439df1af1e03a11f429d4c_720w.jpg\" alt=\"音频分离代码\"><br>其中：SVD()函数——奇异值分解的缩写，作为线性代数常规函数的缩写,内置于Octave软件中。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":905,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411b7dx\">吴恩达机器学习课程</a></p>\n          </div>\n<h1 id=\"机器学习-machine-learning-定义\"><a href=\"#机器学习-machine-learning-定义\" class=\"headerlink\" title=\"机器学习(machine learning)定义\"></a>机器学习(machine learning)定义</h1><ul>\n<li>Arther Samuel(1959):Machine Learning:Field fo study that gives computers the ability to learn without being explicitly programmed.</li>\n<li>Tom Mitchell(1998) well-posed Learning Problem: A computer program is said to learn from experience E with respect to some task T and some performance measure P, if its improves with experience E.</li>\n</ul>\n<p>　　在跳棋游戏中，E-&gt;程序和自己下上万次棋，T-&gt;玩跳棋，P-&gt;与新对手下棋赢的概率。<br></p>","more":"<p></p>\n<h1 id=\"机器学习算法分类\"><a href=\"#机器学习算法分类\" class=\"headerlink\" title=\"机器学习算法分类\"></a>机器学习算法分类</h1><h2 id=\"一、监督学习-Supervised-learning\"><a href=\"#一、监督学习-Supervised-learning\" class=\"headerlink\" title=\"　一、监督学习(Supervised learning)\"></a>　一、监督学习(Supervised learning)</h2><h3 id=\"1-回归问题-Regression-problem-预测出一个连续值的输出。\"><a href=\"#1-回归问题-Regression-problem-预测出一个连续值的输出。\" class=\"headerlink\" title=\"(1)回归问题(Regression problem):预测出一个连续值的输出。\"></a>(1)回归问题(Regression problem):预测出一个连续值的输出。</h3><p>例如：预测房价问题，根据样本的数据集进行拟合就可以得到一条连续的曲线。<br><img src=\"https://pic1.zhimg.com/80/v2-7497b88c2931c082a5bf6334f54b147c_720w.jpg\" alt=\"房价预测\"></p>\n<h3 id=\"2-分类问题-Classification-problem-预测出一个离散值的输出。\"><a href=\"#2-分类问题-Classification-problem-预测出一个离散值的输出。\" class=\"headerlink\" title=\"(2)分类问题(Classification problem):预测出一个离散值的输出。\"></a>(2)分类问题(Classification problem):预测出一个离散值的输出。</h3><p>例子：根据肿瘤的某些特征来判断是良性还是恶性，得到的结果是“良性”或者是“恶性”，是离散的。<br><img src=\"https://pic4.zhimg.com/80/v2-7e1eb4d75ea5d8fb6b3cba72addeffef_720w.jpg\" alt=\"肿瘤预测-单变量\"><br><img src=\"https://pic3.zhimg.com/80/v2-c11e632cb62e2351541647412b0b546e_720w.jpg\" alt=\"肿瘤预测-多变量\"></p>\n<h2 id=\"二、无监督学习-Unsupervised-learning\"><a href=\"#二、无监督学习-Unsupervised-learning\" class=\"headerlink\" title=\"　二、无监督学习(Unsupervised learning)\"></a>　二、无监督学习(Unsupervised learning)</h2><p>　　无监督学习的数据集和监督学习的不同，没任何标签，也就是<strong>没有“正确的输出结果”</strong>。在此过程中没有指导者，只有计算机自己学习。</p>\n<h3 id=\"聚类算法-Clustering-algorithms\"><a href=\"#聚类算法-Clustering-algorithms\" class=\"headerlink\" title=\"聚类算法(Clustering algorithms)\"></a>聚类算法(Clustering algorithms)</h3><p>　　从数据集中可以通过非监督学习得到数据的某种结构，可能是把数据分成两个不同的聚集簇，称为聚类算法。<br>应用：</p>\n<ul>\n<li>Google新闻将相似新闻分类</li>\n<li>基因学将有相同基因序列的个体分为一类</li>\n</ul>\n<p><img src=\"https://pic2.zhimg.com/80/v2-0e62546b76127accdbcd984d89ff7ed1_720w.jpg\" alt=\"DNA微阵列数据\"></p>\n<h3 id=\"盲信号分离算法\"><a href=\"#盲信号分离算法\" class=\"headerlink\" title=\"盲信号分离算法\"></a>盲信号分离算法</h3><ul>\n<li>鸡尾酒会问题(Cocktail party problem):两人在说话，两个麦克风离两人距离不同，从每段麦克风录制的音频中分离出两个人各自的声音。</li>\n</ul>\n<p><img src=\"https://pic4.zhimg.com/80/v2-61819fa6432378a1b42e03f6be07b8b7_720w.jpg\" alt=\"鸡尾酒会问题\"><br>实现该音频处理只需如下代码：<br><img src=\"https://pic1.zhimg.com/80/v2-ff9409c9b9439df1af1e03a11f429d4c_720w.jpg\" alt=\"音频分离代码\"><br>其中：SVD()函数——奇异值分解的缩写，作为线性代数常规函数的缩写,内置于Octave软件中。</p>"},{"title":"GRU单元和LSTM","copyright":false,"date":"2021-03-12T08:58:20.000Z","_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# GRU(门控循环单元)\n## GRU推导过程\n　　GRU单元中包含记忆细胞$c^{<t>}=a^{<t>}$用来记住序列的前后联系。\n　　\n　　在每个时间步，我们将用一个候选值重写记忆细胞，即${\\tilde{c}}^{<t>}$的值，所以它就是个候选值，替代了$c^{<t>}$的值。然后我们用**tanh**激活函数来计算，${\\tilde{c}}^{<t>} =tanh(W_{c}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{c})$，所以${\\tilde{c}}^{<t>}$的值就是个替代值，代替表示$c^{<t>}$的值。\n\n<!-- more -->\n\n　　$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$\n\n　　这是个下标为$u$的大写希腊字母$\\Gamma$，$u$代表更新门，这是一个0到1之间的值。我们刚才写出来的用$\\tilde{c}$更新$c$的等式。然后门决定是否要真的更新它，按照下述式子进行计算。\n\n　　$c^{<t>} = \\Gamma_{u}*{\\tilde{c}}^{<t>} +\\left( 1- \\Gamma_{u} \\right)*c^{<t-1>}$\n\n## 完整GRU\n![GRU完整过程](523650730db3f0d5c05a7192da02f878.png)\n　　添加一个门$\\Gamma_{r}$，你可以认为$r$代表相关性（**relevance**）。这个$\\Gamma_{r}$门告诉你计算出的下一个$c^{<t>}$的候选值${\\tilde{c}}^{<t>}$跟$c^{<t-1>}$有多大的相关性。计算这个门$\\Gamma_{r}$需要参数，正如你看到的这个，一个新的参数矩阵$W_{r}$，$\\Gamma_{r}= \\sigma(W_{r}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack + b_{r})$。\n\n# LSTM(长短时记忆网络)\n## LSTM正向传播\n　　LATM中不再使用$\\Gamma_{r}$，也不直接将$c^{<t>}$作为$a^{<t>}$输出，其主要式子如下：\n\n${\\tilde{c}}^{<t>} = tanh(W_{c}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{c}$\n\n更新门：$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$\n\n遗忘门：$\\Gamma_{f} =\\sigma(W_{f}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{f})$\n\n输出门：$\\Gamma_{o} =\\sigma(W_{o}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +>b_{o})$\n\n$c^{<t>} =\\Gamma_{u}*{\\tilde{c}}^{<t>} + \\Gamma_{f}*c^{<t-1>}$\n\n$a^{<t>} = \\Gamma_{o}*c^{<t>}$\n\n## **LSTM**反向传播计算：\n\n###　**门求偏导：**\n\n$d \\Gamma_o^{\\langle t \\rangle} = da_{next}*\\tanh(c_{next}) * \\Gamma_o^{\\langle t \\rangle}*(1-\\Gamma_o^{\\langle t \\rangle})\\tag{1}$\n\n$d\\tilde c^{\\langle t \\rangle} = dc_{next}*\\Gamma_i^{\\langle t \\rangle}+ \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) * i_t * da_{next} * \\tilde c^{\\langle t \\rangle} * (1-\\tanh(\\tilde c)^2) \\tag{2}$\n\n$d\\Gamma_u^{\\langle t \\rangle} = dc_{next}*\\tilde c^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) * \\tilde c^{\\langle t \\rangle} * da_{next}*\\Gamma_u^{\\langle t \\rangle}*(1-\\Gamma_u^{\\langle t \\rangle})\\tag{3}$\n\n$d\\Gamma_f^{\\langle t \\rangle} = dc_{next}*\\tilde c_{prev} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) * c_{prev} * da_{next}*\\Gamma_f^{\\langle t \\rangle}*(1-\\Gamma_f^{\\langle t \\rangle})\\tag{4}$\n\n### **参数求偏导 ：**\n\n$ dW_f = d\\Gamma_f^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{5} $\n\n$ dW_u = d\\Gamma_u^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{6} $\n\n $ dW_c = d\\tilde c^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{7} $\n\n$ dW_o = d\\Gamma_o^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{8}$\n\n为了计算$db_f, db_u, db_c, db_o$ 需要各自对$d\\Gamma_f^{\\langle t \\rangle}, d\\Gamma_u^{\\langle t \\rangle}, d\\tilde c^{\\langle t \\rangle}, d\\Gamma_o^{\\langle t \\rangle}$ 求和。\n\n### 最后，计算隐藏状态、记忆状态和输入的偏导数：\n\n$ da_{prev} = W_f^T*d\\Gamma_f^{\\langle t \\rangle} + W_u^T * d\\Gamma_u^{\\langle t \\rangle}+ W_c^T * d\\tilde c^{\\langle t \\rangle} + W_o^T * d\\Gamma_o^{\\langle t \\rangle} \\tag{9}$\n\n$ dc_{prev} = dc_{next}\\Gamma_f^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} * (1- \\tanh(c_{next})^2)*\\Gamma_f^{\\langle t \\rangle}*da_{next} \\tag{10}$\n\n$ dx^{\\langle t \\rangle} = W_f^T*d\\Gamma_f^{\\langle t \\rangle} + W_u^T * d\\Gamma_u^{\\langle t \\rangle}+ W_c^T * d\\tilde c_t + W_o^T * d\\Gamma_o^{\\langle t \\rangle} \\tag{11} $","source":"_posts/dl-12GRU-and-LSTM.md","raw":"---\ntitle: GRU单元和LSTM\ncopyright: false\ndate: 2021-03-12 16:58:20\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# GRU(门控循环单元)\n## GRU推导过程\n　　GRU单元中包含记忆细胞$c^{<t>}=a^{<t>}$用来记住序列的前后联系。\n　　\n　　在每个时间步，我们将用一个候选值重写记忆细胞，即${\\tilde{c}}^{<t>}$的值，所以它就是个候选值，替代了$c^{<t>}$的值。然后我们用**tanh**激活函数来计算，${\\tilde{c}}^{<t>} =tanh(W_{c}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{c})$，所以${\\tilde{c}}^{<t>}$的值就是个替代值，代替表示$c^{<t>}$的值。\n\n<!-- more -->\n\n　　$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$\n\n　　这是个下标为$u$的大写希腊字母$\\Gamma$，$u$代表更新门，这是一个0到1之间的值。我们刚才写出来的用$\\tilde{c}$更新$c$的等式。然后门决定是否要真的更新它，按照下述式子进行计算。\n\n　　$c^{<t>} = \\Gamma_{u}*{\\tilde{c}}^{<t>} +\\left( 1- \\Gamma_{u} \\right)*c^{<t-1>}$\n\n## 完整GRU\n![GRU完整过程](523650730db3f0d5c05a7192da02f878.png)\n　　添加一个门$\\Gamma_{r}$，你可以认为$r$代表相关性（**relevance**）。这个$\\Gamma_{r}$门告诉你计算出的下一个$c^{<t>}$的候选值${\\tilde{c}}^{<t>}$跟$c^{<t-1>}$有多大的相关性。计算这个门$\\Gamma_{r}$需要参数，正如你看到的这个，一个新的参数矩阵$W_{r}$，$\\Gamma_{r}= \\sigma(W_{r}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack + b_{r})$。\n\n# LSTM(长短时记忆网络)\n## LSTM正向传播\n　　LATM中不再使用$\\Gamma_{r}$，也不直接将$c^{<t>}$作为$a^{<t>}$输出，其主要式子如下：\n\n${\\tilde{c}}^{<t>} = tanh(W_{c}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{c}$\n\n更新门：$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$\n\n遗忘门：$\\Gamma_{f} =\\sigma(W_{f}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{f})$\n\n输出门：$\\Gamma_{o} =\\sigma(W_{o}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +>b_{o})$\n\n$c^{<t>} =\\Gamma_{u}*{\\tilde{c}}^{<t>} + \\Gamma_{f}*c^{<t-1>}$\n\n$a^{<t>} = \\Gamma_{o}*c^{<t>}$\n\n## **LSTM**反向传播计算：\n\n###　**门求偏导：**\n\n$d \\Gamma_o^{\\langle t \\rangle} = da_{next}*\\tanh(c_{next}) * \\Gamma_o^{\\langle t \\rangle}*(1-\\Gamma_o^{\\langle t \\rangle})\\tag{1}$\n\n$d\\tilde c^{\\langle t \\rangle} = dc_{next}*\\Gamma_i^{\\langle t \\rangle}+ \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) * i_t * da_{next} * \\tilde c^{\\langle t \\rangle} * (1-\\tanh(\\tilde c)^2) \\tag{2}$\n\n$d\\Gamma_u^{\\langle t \\rangle} = dc_{next}*\\tilde c^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) * \\tilde c^{\\langle t \\rangle} * da_{next}*\\Gamma_u^{\\langle t \\rangle}*(1-\\Gamma_u^{\\langle t \\rangle})\\tag{3}$\n\n$d\\Gamma_f^{\\langle t \\rangle} = dc_{next}*\\tilde c_{prev} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) * c_{prev} * da_{next}*\\Gamma_f^{\\langle t \\rangle}*(1-\\Gamma_f^{\\langle t \\rangle})\\tag{4}$\n\n### **参数求偏导 ：**\n\n$ dW_f = d\\Gamma_f^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{5} $\n\n$ dW_u = d\\Gamma_u^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{6} $\n\n $ dW_c = d\\tilde c^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{7} $\n\n$ dW_o = d\\Gamma_o^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{8}$\n\n为了计算$db_f, db_u, db_c, db_o$ 需要各自对$d\\Gamma_f^{\\langle t \\rangle}, d\\Gamma_u^{\\langle t \\rangle}, d\\tilde c^{\\langle t \\rangle}, d\\Gamma_o^{\\langle t \\rangle}$ 求和。\n\n### 最后，计算隐藏状态、记忆状态和输入的偏导数：\n\n$ da_{prev} = W_f^T*d\\Gamma_f^{\\langle t \\rangle} + W_u^T * d\\Gamma_u^{\\langle t \\rangle}+ W_c^T * d\\tilde c^{\\langle t \\rangle} + W_o^T * d\\Gamma_o^{\\langle t \\rangle} \\tag{9}$\n\n$ dc_{prev} = dc_{next}\\Gamma_f^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} * (1- \\tanh(c_{next})^2)*\\Gamma_f^{\\langle t \\rangle}*da_{next} \\tag{10}$\n\n$ dx^{\\langle t \\rangle} = W_f^T*d\\Gamma_f^{\\langle t \\rangle} + W_u^T * d\\Gamma_u^{\\langle t \\rangle}+ W_c^T * d\\tilde c_t + W_o^T * d\\Gamma_o^{\\langle t \\rangle} \\tag{11} $","slug":"dl-12GRU-and-LSTM","published":1,"updated":"2021-03-17T08:33:54.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gt001wc8pv312dfotm","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"GRU-门控循环单元\"><a href=\"#GRU-门控循环单元\" class=\"headerlink\" title=\"GRU(门控循环单元)\"></a>GRU(门控循环单元)</h1><h2 id=\"GRU推导过程\"><a href=\"#GRU推导过程\" class=\"headerlink\" title=\"GRU推导过程\"></a>GRU推导过程</h2><p>　　GRU单元中包含记忆细胞$c^{<t>}=a^{<t>}$用来记住序列的前后联系。<br>　　<br>　　在每个时间步，我们将用一个候选值重写记忆细胞，即${\\tilde{c}}^{<t>}$的值，所以它就是个候选值，替代了$c^{<t>}$的值。然后我们用<strong>tanh</strong>激活函数来计算，${\\tilde{c}}^{<t>} =tanh(W_{c}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{c})$，所以${\\tilde{c}}^{<t>}$的值就是个替代值，代替表示$c^{<t>}$的值。</t></t></t></t-1></t></t></t></t></t></p>\n<a id=\"more\"></a>\n<p>　　$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$</t></t-1></p>\n<p>　　这是个下标为$u$的大写希腊字母$\\Gamma$，$u$代表更新门，这是一个0到1之间的值。我们刚才写出来的用$\\tilde{c}$更新$c$的等式。然后门决定是否要真的更新它，按照下述式子进行计算。</p>\n<p>　　$c^{<t>} = \\Gamma_{u}<em>{\\tilde{c}}^{<t>} +\\left( 1- \\Gamma_{u} \\right)</t></em>c^{<t-1>}$</t-1></t></p>\n<h2 id=\"完整GRU\"><a href=\"#完整GRU\" class=\"headerlink\" title=\"完整GRU\"></a>完整GRU</h2><p><img src=\"/posts/dl-12GRU-and-LSTM/523650730db3f0d5c05a7192da02f878.png\" alt=\"GRU完整过程\"><br>　　添加一个门$\\Gamma_{r}$，你可以认为$r$代表相关性（<strong>relevance</strong>）。这个$\\Gamma_{r}$门告诉你计算出的下一个$c^{<t>}$的候选值${\\tilde{c}}^{<t>}$跟$c^{<t-1>}$有多大的相关性。计算这个门$\\Gamma_{r}$需要参数，正如你看到的这个，一个新的参数矩阵$W_{r}$，$\\Gamma_{r}= \\sigma(W_{r}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack + b_{r})$。</t></t-1></t-1></t></t></p>\n<h1 id=\"LSTM-长短时记忆网络\"><a href=\"#LSTM-长短时记忆网络\" class=\"headerlink\" title=\"LSTM(长短时记忆网络)\"></a>LSTM(长短时记忆网络)</h1><h2 id=\"LSTM正向传播\"><a href=\"#LSTM正向传播\" class=\"headerlink\" title=\"LSTM正向传播\"></a>LSTM正向传播</h2><p>　　LATM中不再使用$\\Gamma_{r}$，也不直接将$c^{<t>}$作为$a^{<t>}$输出，其主要式子如下：</t></t></p>\n<p>${\\tilde{c}}^{<t>} = tanh(W_{c}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{c}$</t></t-1></t></p>\n<p>更新门：$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$</t></t-1></p>\n<p>遗忘门：$\\Gamma_{f} =\\sigma(W_{f}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{f})$</t></t-1></p>\n<p>输出门：$\\Gamma_{o} =\\sigma(W_{o}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +&gt;b_{o})$</t></t-1></p>\n<p>$c^{<t>} =\\Gamma_{u}<em>{\\tilde{c}}^{<t>} + \\Gamma_{f}</t></em>c^{<t-1>}$</t-1></t></p>\n<p>$a^{<t>} = \\Gamma_{o}*c^{<t>}$</t></t></p>\n<h2 id=\"LSTM反向传播计算：\"><a href=\"#LSTM反向传播计算：\" class=\"headerlink\" title=\"LSTM反向传播计算：\"></a><strong>LSTM</strong>反向传播计算：</h2><h3 id=\"门求偏导：\"><a href=\"#门求偏导：\" class=\"headerlink\" title=\"　门求偏导：\"></a>　<strong>门求偏导：</strong></h3><p>$d \\Gamma_o^{\\langle t \\rangle} = da_{next}<em>\\tanh(c_{next}) </em> \\Gamma_o^{\\langle t \\rangle}*(1-\\Gamma_o^{\\langle t \\rangle})\\tag{1}$</p>\n<p>$d\\tilde c^{\\langle t \\rangle} = dc_{next}<em>\\Gamma_i^{\\langle t \\rangle}+ \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) </em> i_t <em> da_{next} </em> \\tilde c^{\\langle t \\rangle} * (1-\\tanh(\\tilde c)^2) \\tag{2}$</p>\n<p>$d\\Gamma_u^{\\langle t \\rangle} = dc_{next}<em>\\tilde c^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) </em> \\tilde c^{\\langle t \\rangle} <em> da_{next}</em>\\Gamma_u^{\\langle t \\rangle}*(1-\\Gamma_u^{\\langle t \\rangle})\\tag{3}$</p>\n<p>$d\\Gamma_f^{\\langle t \\rangle} = dc_{next}<em>\\tilde c_{prev} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) </em> c_{prev} <em> da_{next}</em>\\Gamma_f^{\\langle t \\rangle}*(1-\\Gamma_f^{\\langle t \\rangle})\\tag{4}$</p>\n<h3 id=\"参数求偏导-：\"><a href=\"#参数求偏导-：\" class=\"headerlink\" title=\"参数求偏导 ：\"></a><strong>参数求偏导 ：</strong></h3><p>$ dW_f = d\\Gamma_f^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{5} $</p>\n<p>$ dW_u = d\\Gamma_u^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{6} $</p>\n<p> $ dW_c = d\\tilde c^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{7} $</p>\n<p>$ dW_o = d\\Gamma_o^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{8}$</p>\n<p>为了计算$db_f, db_u, db_c, db_o$ 需要各自对$d\\Gamma_f^{\\langle t \\rangle}, d\\Gamma_u^{\\langle t \\rangle}, d\\tilde c^{\\langle t \\rangle}, d\\Gamma_o^{\\langle t \\rangle}$ 求和。</p>\n<h3 id=\"最后，计算隐藏状态、记忆状态和输入的偏导数：\"><a href=\"#最后，计算隐藏状态、记忆状态和输入的偏导数：\" class=\"headerlink\" title=\"最后，计算隐藏状态、记忆状态和输入的偏导数：\"></a>最后，计算隐藏状态、记忆状态和输入的偏导数：</h3><p>$ da_{prev} = W_f^T<em>d\\Gamma_f^{\\langle t \\rangle} + W_u^T </em> d\\Gamma_u^{\\langle t \\rangle}+ W_c^T <em> d\\tilde c^{\\langle t \\rangle} + W_o^T </em> d\\Gamma_o^{\\langle t \\rangle} \\tag{9}$</p>\n<p>$ dc_{prev} = dc_{next}\\Gamma_f^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} <em> (1- \\tanh(c_{next})^2)</em>\\Gamma_f^{\\langle t \\rangle}*da_{next} \\tag{10}$</p>\n<p>$ dx^{\\langle t \\rangle} = W_f^T<em>d\\Gamma_f^{\\langle t \\rangle} + W_u^T </em> d\\Gamma_u^{\\langle t \\rangle}+ W_c^T <em> d\\tilde c_t + W_o^T </em> d\\Gamma_o^{\\langle t \\rangle} \\tag{11} $</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2798,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"GRU-门控循环单元\"><a href=\"#GRU-门控循环单元\" class=\"headerlink\" title=\"GRU(门控循环单元)\"></a>GRU(门控循环单元)</h1><h2 id=\"GRU推导过程\"><a href=\"#GRU推导过程\" class=\"headerlink\" title=\"GRU推导过程\"></a>GRU推导过程</h2><p>　　GRU单元中包含记忆细胞$c^{<t>}=a^{<t>}$用来记住序列的前后联系。<br>　　<br>　　在每个时间步，我们将用一个候选值重写记忆细胞，即${\\tilde{c}}^{<t>}$的值，所以它就是个候选值，替代了$c^{<t>}$的值。然后我们用<strong>tanh</strong>激活函数来计算，${\\tilde{c}}^{<t>} =tanh(W_{c}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{c})$，所以${\\tilde{c}}^{<t>}$的值就是个替代值，代替表示$c^{<t>}$的值。</t></t></t></t-1></t></t></t></t></t></p>","more":"<p>　　$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$</t></t-1></p>\n<p>　　这是个下标为$u$的大写希腊字母$\\Gamma$，$u$代表更新门，这是一个0到1之间的值。我们刚才写出来的用$\\tilde{c}$更新$c$的等式。然后门决定是否要真的更新它，按照下述式子进行计算。</p>\n<p>　　$c^{<t>} = \\Gamma_{u}<em>{\\tilde{c}}^{<t>} +\\left( 1- \\Gamma_{u} \\right)</t></em>c^{<t-1>}$</t-1></t></p>\n<h2 id=\"完整GRU\"><a href=\"#完整GRU\" class=\"headerlink\" title=\"完整GRU\"></a>完整GRU</h2><p><img src=\"/posts/dl-12GRU-and-LSTM/523650730db3f0d5c05a7192da02f878.png\" alt=\"GRU完整过程\"><br>　　添加一个门$\\Gamma_{r}$，你可以认为$r$代表相关性（<strong>relevance</strong>）。这个$\\Gamma_{r}$门告诉你计算出的下一个$c^{<t>}$的候选值${\\tilde{c}}^{<t>}$跟$c^{<t-1>}$有多大的相关性。计算这个门$\\Gamma_{r}$需要参数，正如你看到的这个，一个新的参数矩阵$W_{r}$，$\\Gamma_{r}= \\sigma(W_{r}\\left\\lbrack c^{<t-1>},x^{<t>} \\right\\rbrack + b_{r})$。</t></t-1></t-1></t></t></p>\n<h1 id=\"LSTM-长短时记忆网络\"><a href=\"#LSTM-长短时记忆网络\" class=\"headerlink\" title=\"LSTM(长短时记忆网络)\"></a>LSTM(长短时记忆网络)</h1><h2 id=\"LSTM正向传播\"><a href=\"#LSTM正向传播\" class=\"headerlink\" title=\"LSTM正向传播\"></a>LSTM正向传播</h2><p>　　LATM中不再使用$\\Gamma_{r}$，也不直接将$c^{<t>}$作为$a^{<t>}$输出，其主要式子如下：</t></t></p>\n<p>${\\tilde{c}}^{<t>} = tanh(W_{c}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{c}$</t></t-1></t></p>\n<p>更新门：$\\Gamma_{u}= \\sigma(W_{u}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{u})$</t></t-1></p>\n<p>遗忘门：$\\Gamma_{f} =\\sigma(W_{f}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +b_{f})$</t></t-1></p>\n<p>输出门：$\\Gamma_{o} =\\sigma(W_{o}\\left\\lbrack a^{<t-1>},x^{<t>} \\right\\rbrack +&gt;b_{o})$</t></t-1></p>\n<p>$c^{<t>} =\\Gamma_{u}<em>{\\tilde{c}}^{<t>} + \\Gamma_{f}</t></em>c^{<t-1>}$</t-1></t></p>\n<p>$a^{<t>} = \\Gamma_{o}*c^{<t>}$</t></t></p>\n<h2 id=\"LSTM反向传播计算：\"><a href=\"#LSTM反向传播计算：\" class=\"headerlink\" title=\"LSTM反向传播计算：\"></a><strong>LSTM</strong>反向传播计算：</h2><h3 id=\"门求偏导：\"><a href=\"#门求偏导：\" class=\"headerlink\" title=\"　门求偏导：\"></a>　<strong>门求偏导：</strong></h3><p>$d \\Gamma_o^{\\langle t \\rangle} = da_{next}<em>\\tanh(c_{next}) </em> \\Gamma_o^{\\langle t \\rangle}*(1-\\Gamma_o^{\\langle t \\rangle})\\tag{1}$</p>\n<p>$d\\tilde c^{\\langle t \\rangle} = dc_{next}<em>\\Gamma_i^{\\langle t \\rangle}+ \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) </em> i_t <em> da_{next} </em> \\tilde c^{\\langle t \\rangle} * (1-\\tanh(\\tilde c)^2) \\tag{2}$</p>\n<p>$d\\Gamma_u^{\\langle t \\rangle} = dc_{next}<em>\\tilde c^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) </em> \\tilde c^{\\langle t \\rangle} <em> da_{next}</em>\\Gamma_u^{\\langle t \\rangle}*(1-\\Gamma_u^{\\langle t \\rangle})\\tag{3}$</p>\n<p>$d\\Gamma_f^{\\langle t \\rangle} = dc_{next}<em>\\tilde c_{prev} + \\Gamma_o^{\\langle t \\rangle} (1-\\tanh(c_{next})^2) </em> c_{prev} <em> da_{next}</em>\\Gamma_f^{\\langle t \\rangle}*(1-\\Gamma_f^{\\langle t \\rangle})\\tag{4}$</p>\n<h3 id=\"参数求偏导-：\"><a href=\"#参数求偏导-：\" class=\"headerlink\" title=\"参数求偏导 ：\"></a><strong>参数求偏导 ：</strong></h3><p>$ dW_f = d\\Gamma_f^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{5} $</p>\n<p>$ dW_u = d\\Gamma_u^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{6} $</p>\n<p> $ dW_c = d\\tilde c^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{7} $</p>\n<p>$ dW_o = d\\Gamma_o^{\\langle t \\rangle} * \\begin{pmatrix} a_{prev} \\\\ x_t\\end{pmatrix}^T \\tag{8}$</p>\n<p>为了计算$db_f, db_u, db_c, db_o$ 需要各自对$d\\Gamma_f^{\\langle t \\rangle}, d\\Gamma_u^{\\langle t \\rangle}, d\\tilde c^{\\langle t \\rangle}, d\\Gamma_o^{\\langle t \\rangle}$ 求和。</p>\n<h3 id=\"最后，计算隐藏状态、记忆状态和输入的偏导数：\"><a href=\"#最后，计算隐藏状态、记忆状态和输入的偏导数：\" class=\"headerlink\" title=\"最后，计算隐藏状态、记忆状态和输入的偏导数：\"></a>最后，计算隐藏状态、记忆状态和输入的偏导数：</h3><p>$ da_{prev} = W_f^T<em>d\\Gamma_f^{\\langle t \\rangle} + W_u^T </em> d\\Gamma_u^{\\langle t \\rangle}+ W_c^T <em> d\\tilde c^{\\langle t \\rangle} + W_o^T </em> d\\Gamma_o^{\\langle t \\rangle} \\tag{9}$</p>\n<p>$ dc_{prev} = dc_{next}\\Gamma_f^{\\langle t \\rangle} + \\Gamma_o^{\\langle t \\rangle} <em> (1- \\tanh(c_{next})^2)</em>\\Gamma_f^{\\langle t \\rangle}*da_{next} \\tag{10}$</p>\n<p>$ dx^{\\langle t \\rangle} = W_f^T<em>d\\Gamma_f^{\\langle t \\rangle} + W_u^T </em> d\\Gamma_u^{\\langle t \\rangle}+ W_c^T <em> d\\tilde c_t + W_o^T </em> d\\Gamma_o^{\\langle t \\rangle} \\tag{11} $</p>"},{"title":"神经网络中的逻辑回归","date":"2021-02-19T07:39:03.000Z","copyright":false,"_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 二分分类\n　　识别一张图片是否为猫片，如果识别这张图片为猫，则输出标签 1 作为结果；如果识别出不是猫，那么输出标签 0 作为结果。\n![图片像素的rgb排列](1e664a86fa2014d5212bcb88f1c419cf.png)\n<!-- more -->\n　　为了把这些像素值放到一个特征向量中，我们需要把这些像素值提取出来，然后放入一个特征向量x。为了把这些像素值转换为特征向量 x，我们需要像下面这样定义一个特征向量 x 来表示这张图片，我们把所有的像素都取出来，例如255、231等等，直到取完所有的红色像素，接着最后是255、134、…、255、134等等，直到得到一个特征向量，把图片中所有的红、绿、蓝像素值都列出来。如果图片的大小为64x64像素，那么向量 x 的总维度，将是64乘以64乘以3，这是三个像素矩阵中像素的总量。在这个例子中结果为12,288。现在我们用$n_x$=12,288，来表示输入特征向量的维度，有时候为了简洁，我会直接用小写的n来表示输入特征向量x的维度。所以在二分类问题中，我们的目标就是习得一个分类器，它以图片的特征向量作为输入，然后预测输出结果y为1还是0，也就是预测图片中是否有猫。\n![X、Y矩阵](55345ba411053da11ff843bbb3406369.png)\n**符号定义** ：\n$x$：表示一个$n_x$维数据，为输入数据，维度为$(n_x,1)$； \n\n$y$：表示输出结果，取值为$(0,1)$；\n\n$(x^{(i)},y^{(i)})$：表示第$i$组数据，可能是训练数据，也可能是测试数据，此处默认为训练数据； \n\n$X=[x^{(1)},x^{(2)},...,x^{(m)}]$：表示所有的训练数据集的输入值，放在一个 $n_x×m$的矩阵中，其中$m$表示样本数目; \n\n$Y=[y^{(1)},y^{(2)},...,y^{(m)}]$：对应表示所有训练数据集的输出值，维度为$1×m$。\n\n# 逻辑回归\n## 假设函数（Hypothesis Function）。\n　　对于二元分类问题来讲，给定一个输入特征向量$X$，它可能对应一张图片，你想识别这张图片识别看它是否是一只猫或者不是一只猫的图片，你想要一个算法能够输出预测，你只能称之为$\\hat{y}$，也就是你对实际值 $y$ 的估计。更正式地来说，你想让 $\\hat{y}$ 表示 $y$ 等于1的一种可能性或者是机会，前提条件是给定了输入特征$X$。换句话来说，如果$X$是我们在上个视频看到的图片，你想让$\\hat{y}$ 来告诉你这是一只猫的图片的机率有多大。在之前的视频中所说的，$X$是一个$n_x$维的向量（相当于有$n_x$个特征的特征向量）。我们用$w$来表示逻辑回归的参数，这也是一个$n_x$维向量（因为$w$实际上是特征权重，维度与特征向量相同），参数里面还有$b$，这是一个实数（表示偏差）。所以给出输入$x$以及参数$w$和$b$之后，我们怎样产生输出预测值$\\hat{y}$，一件你可以尝试却不可行的事是让$\\hat{y}=w^{T}x+b$。\n![逻辑回归表达式](dfb5731c30b81eced917450d31e860a3.png)\n　　这是一个线性函数，但是我们期待的$\\hat{y}$是一个介于0到1的函数，因此引入了**sigmoid**函数。下图是**sigmoid**函数的图像，如果我把水平轴作为$z$轴，那么关于$z$的**sigmoid**函数是这样的，它是平滑地从0走向1，让我在这里标记纵轴，这是0，曲线与纵轴相交的截距是0.5，这就是关于$z$的**sigmoid**函数的图像。我们通常都使用$z$来表示$w^{T}x+b$的值，其中b是拦截器。\n![sigmoid函数](7e304debcca5945a3443d56bcbdd2964.png)\n　　**sigmoid**函数的公式是这样的，$\\sigma \\( z \\)=\\frac{1}{1+e^{-z}}$,在这里$z$是一个实数，这里要说明一些要注意的事情，如果$z$非常大那么$e^{-z}$将会接近于0，关于$z$的**sigmoid**函数将会近似等于1除以1加上某个非常接近于0的项，因为$e$ 的指数如果是个绝对值很大的负数的话，这项将会接近于0，所以如果$z$很大的话那么关于$z$的**sigmoid**函数会非常接近1。相反地，如果$z$非常小或者说是一个绝对值很大的负数，那么关于$e^{-z}$这项会变成一个很大的数，你可以认为这是1除以1加上一个非常非常大的数，所以这个就接近于0。实际上你看到当$z$变成一个绝对值很大的负数，关于$z$的**sigmoid**函数就会非常接近于0，因此当你实现逻辑回归时，你的工作就是去让机器学习参数$w$以及$b$这样才使得$\\hat{y}$成为对$y=1$这一情况的概率的一个很好的估计。\n\n---\n　　我们需要训练一个代价函数来得到参数$w$和参数$b$。下图为逻辑回归的输出函数。\n![逻辑回归输出函数](4c9a27b071ce9162dbbcdad3393061d2.png)\n　　通过$m$个样本的训练，找到参数$w$和参数$b$，将训练集的预测值记为$\\hat{y}$，上面的定义是对一个训练样本来说的，这种形式也使用于每个训练样本。训练样本$i$所对应的预测值是$y^{(i)}$,是用训练样本的$w^{T}x^{(i)}+b$然后通过**sigmoid**函数来得到，也可以把$z$定义为$z^{(i)}=w^{T}x^{(i)}+b$。\n\n## 损失函数 (Loss function)\n　　损失函数又叫做误差函数，用来衡量算法的运行情况，**Loss function:$L\\( \\hat{y},y \\)$.**\n　　我们在逻辑回归中用到的损失函数是：**$L( \\hat{y},y )=-y\\log\\hat{y}-(1-y)\\log (1-\\hat{y})$**。\n\n　　(1) 当$y=1$时$L=-\\log (\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能大，因为**sigmoid**函数取值$[0,1]$，所以$\\hat{y}$会无限接近于1。\n\n　　(2) 当$y=0$时$L=-\\log (1-\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能小，因为**sigmoid**函数取值$[0,1]$，所以$\\hat{y}$会无限接近于0。\n\n## 代价函数 (Cost function)\n　　为了衡量算法在全部训练样本上的表现如何，我们需要定义一个算法的代价函数，算法的代价函数是对$m$个样本的损失函数求和然后除以$m$：\n\n**$J( w,b )=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{L( \\hat{y}^{(i)},y^{(i)} )}=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{[-y^{(i)}\\log \\hat{y}^{(i)}-(1-y^{(i)})\\log (1-\\hat{y}^{(i)})]}$**\n\n　　损失函数只适用于像这样的单个训练样本，而代价函数是参数的总代价。","source":"_posts/dl-3logistic-regression.md","raw":"---\ntitle: 神经网络中的逻辑回归\ndate: 2021-02-19 15:39:03\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\ncopyright: false\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 二分分类\n　　识别一张图片是否为猫片，如果识别这张图片为猫，则输出标签 1 作为结果；如果识别出不是猫，那么输出标签 0 作为结果。\n![图片像素的rgb排列](1e664a86fa2014d5212bcb88f1c419cf.png)\n<!-- more -->\n　　为了把这些像素值放到一个特征向量中，我们需要把这些像素值提取出来，然后放入一个特征向量x。为了把这些像素值转换为特征向量 x，我们需要像下面这样定义一个特征向量 x 来表示这张图片，我们把所有的像素都取出来，例如255、231等等，直到取完所有的红色像素，接着最后是255、134、…、255、134等等，直到得到一个特征向量，把图片中所有的红、绿、蓝像素值都列出来。如果图片的大小为64x64像素，那么向量 x 的总维度，将是64乘以64乘以3，这是三个像素矩阵中像素的总量。在这个例子中结果为12,288。现在我们用$n_x$=12,288，来表示输入特征向量的维度，有时候为了简洁，我会直接用小写的n来表示输入特征向量x的维度。所以在二分类问题中，我们的目标就是习得一个分类器，它以图片的特征向量作为输入，然后预测输出结果y为1还是0，也就是预测图片中是否有猫。\n![X、Y矩阵](55345ba411053da11ff843bbb3406369.png)\n**符号定义** ：\n$x$：表示一个$n_x$维数据，为输入数据，维度为$(n_x,1)$； \n\n$y$：表示输出结果，取值为$(0,1)$；\n\n$(x^{(i)},y^{(i)})$：表示第$i$组数据，可能是训练数据，也可能是测试数据，此处默认为训练数据； \n\n$X=[x^{(1)},x^{(2)},...,x^{(m)}]$：表示所有的训练数据集的输入值，放在一个 $n_x×m$的矩阵中，其中$m$表示样本数目; \n\n$Y=[y^{(1)},y^{(2)},...,y^{(m)}]$：对应表示所有训练数据集的输出值，维度为$1×m$。\n\n# 逻辑回归\n## 假设函数（Hypothesis Function）。\n　　对于二元分类问题来讲，给定一个输入特征向量$X$，它可能对应一张图片，你想识别这张图片识别看它是否是一只猫或者不是一只猫的图片，你想要一个算法能够输出预测，你只能称之为$\\hat{y}$，也就是你对实际值 $y$ 的估计。更正式地来说，你想让 $\\hat{y}$ 表示 $y$ 等于1的一种可能性或者是机会，前提条件是给定了输入特征$X$。换句话来说，如果$X$是我们在上个视频看到的图片，你想让$\\hat{y}$ 来告诉你这是一只猫的图片的机率有多大。在之前的视频中所说的，$X$是一个$n_x$维的向量（相当于有$n_x$个特征的特征向量）。我们用$w$来表示逻辑回归的参数，这也是一个$n_x$维向量（因为$w$实际上是特征权重，维度与特征向量相同），参数里面还有$b$，这是一个实数（表示偏差）。所以给出输入$x$以及参数$w$和$b$之后，我们怎样产生输出预测值$\\hat{y}$，一件你可以尝试却不可行的事是让$\\hat{y}=w^{T}x+b$。\n![逻辑回归表达式](dfb5731c30b81eced917450d31e860a3.png)\n　　这是一个线性函数，但是我们期待的$\\hat{y}$是一个介于0到1的函数，因此引入了**sigmoid**函数。下图是**sigmoid**函数的图像，如果我把水平轴作为$z$轴，那么关于$z$的**sigmoid**函数是这样的，它是平滑地从0走向1，让我在这里标记纵轴，这是0，曲线与纵轴相交的截距是0.5，这就是关于$z$的**sigmoid**函数的图像。我们通常都使用$z$来表示$w^{T}x+b$的值，其中b是拦截器。\n![sigmoid函数](7e304debcca5945a3443d56bcbdd2964.png)\n　　**sigmoid**函数的公式是这样的，$\\sigma \\( z \\)=\\frac{1}{1+e^{-z}}$,在这里$z$是一个实数，这里要说明一些要注意的事情，如果$z$非常大那么$e^{-z}$将会接近于0，关于$z$的**sigmoid**函数将会近似等于1除以1加上某个非常接近于0的项，因为$e$ 的指数如果是个绝对值很大的负数的话，这项将会接近于0，所以如果$z$很大的话那么关于$z$的**sigmoid**函数会非常接近1。相反地，如果$z$非常小或者说是一个绝对值很大的负数，那么关于$e^{-z}$这项会变成一个很大的数，你可以认为这是1除以1加上一个非常非常大的数，所以这个就接近于0。实际上你看到当$z$变成一个绝对值很大的负数，关于$z$的**sigmoid**函数就会非常接近于0，因此当你实现逻辑回归时，你的工作就是去让机器学习参数$w$以及$b$这样才使得$\\hat{y}$成为对$y=1$这一情况的概率的一个很好的估计。\n\n---\n　　我们需要训练一个代价函数来得到参数$w$和参数$b$。下图为逻辑回归的输出函数。\n![逻辑回归输出函数](4c9a27b071ce9162dbbcdad3393061d2.png)\n　　通过$m$个样本的训练，找到参数$w$和参数$b$，将训练集的预测值记为$\\hat{y}$，上面的定义是对一个训练样本来说的，这种形式也使用于每个训练样本。训练样本$i$所对应的预测值是$y^{(i)}$,是用训练样本的$w^{T}x^{(i)}+b$然后通过**sigmoid**函数来得到，也可以把$z$定义为$z^{(i)}=w^{T}x^{(i)}+b$。\n\n## 损失函数 (Loss function)\n　　损失函数又叫做误差函数，用来衡量算法的运行情况，**Loss function:$L\\( \\hat{y},y \\)$.**\n　　我们在逻辑回归中用到的损失函数是：**$L( \\hat{y},y )=-y\\log\\hat{y}-(1-y)\\log (1-\\hat{y})$**。\n\n　　(1) 当$y=1$时$L=-\\log (\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能大，因为**sigmoid**函数取值$[0,1]$，所以$\\hat{y}$会无限接近于1。\n\n　　(2) 当$y=0$时$L=-\\log (1-\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能小，因为**sigmoid**函数取值$[0,1]$，所以$\\hat{y}$会无限接近于0。\n\n## 代价函数 (Cost function)\n　　为了衡量算法在全部训练样本上的表现如何，我们需要定义一个算法的代价函数，算法的代价函数是对$m$个样本的损失函数求和然后除以$m$：\n\n**$J( w,b )=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{L( \\hat{y}^{(i)},y^{(i)} )}=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{[-y^{(i)}\\log \\hat{y}^{(i)}-(1-y^{(i)})\\log (1-\\hat{y}^{(i)})]}$**\n\n　　损失函数只适用于像这样的单个训练样本，而代价函数是参数的总代价。","slug":"dl-3logistic-regression","published":1,"updated":"2021-02-20T06:26:50.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gu0020c8pv3cd3di9c","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"二分分类\"><a href=\"#二分分类\" class=\"headerlink\" title=\"二分分类\"></a>二分分类</h1><p>　　识别一张图片是否为猫片，如果识别这张图片为猫，则输出标签 1 作为结果；如果识别出不是猫，那么输出标签 0 作为结果。<br><img src=\"/posts/dl-3logistic-regression/1e664a86fa2014d5212bcb88f1c419cf.png\" alt=\"图片像素的rgb排列\"><br><a id=\"more\"></a><br>　　为了把这些像素值放到一个特征向量中，我们需要把这些像素值提取出来，然后放入一个特征向量x。为了把这些像素值转换为特征向量 x，我们需要像下面这样定义一个特征向量 x 来表示这张图片，我们把所有的像素都取出来，例如255、231等等，直到取完所有的红色像素，接着最后是255、134、…、255、134等等，直到得到一个特征向量，把图片中所有的红、绿、蓝像素值都列出来。如果图片的大小为64x64像素，那么向量 x 的总维度，将是64乘以64乘以3，这是三个像素矩阵中像素的总量。在这个例子中结果为12,288。现在我们用$n_x$=12,288，来表示输入特征向量的维度，有时候为了简洁，我会直接用小写的n来表示输入特征向量x的维度。所以在二分类问题中，我们的目标就是习得一个分类器，它以图片的特征向量作为输入，然后预测输出结果y为1还是0，也就是预测图片中是否有猫。<br><img src=\"/posts/dl-3logistic-regression/55345ba411053da11ff843bbb3406369.png\" alt=\"X、Y矩阵\"><br><strong>符号定义</strong> ：<br>$x$：表示一个$n_x$维数据，为输入数据，维度为$(n_x,1)$； </p>\n<p>$y$：表示输出结果，取值为$(0,1)$；</p>\n<p>$(x^{(i)},y^{(i)})$：表示第$i$组数据，可能是训练数据，也可能是测试数据，此处默认为训练数据； </p>\n<p>$X=[x^{(1)},x^{(2)},…,x^{(m)}]$：表示所有的训练数据集的输入值，放在一个 $n_x×m$的矩阵中，其中$m$表示样本数目; </p>\n<p>$Y=[y^{(1)},y^{(2)},…,y^{(m)}]$：对应表示所有训练数据集的输出值，维度为$1×m$。</p>\n<h1 id=\"逻辑回归\"><a href=\"#逻辑回归\" class=\"headerlink\" title=\"逻辑回归\"></a>逻辑回归</h1><h2 id=\"假设函数（Hypothesis-Function）。\"><a href=\"#假设函数（Hypothesis-Function）。\" class=\"headerlink\" title=\"假设函数（Hypothesis Function）。\"></a>假设函数（Hypothesis Function）。</h2><p>　　对于二元分类问题来讲，给定一个输入特征向量$X$，它可能对应一张图片，你想识别这张图片识别看它是否是一只猫或者不是一只猫的图片，你想要一个算法能够输出预测，你只能称之为$\\hat{y}$，也就是你对实际值 $y$ 的估计。更正式地来说，你想让 $\\hat{y}$ 表示 $y$ 等于1的一种可能性或者是机会，前提条件是给定了输入特征$X$。换句话来说，如果$X$是我们在上个视频看到的图片，你想让$\\hat{y}$ 来告诉你这是一只猫的图片的机率有多大。在之前的视频中所说的，$X$是一个$n_x$维的向量（相当于有$n_x$个特征的特征向量）。我们用$w$来表示逻辑回归的参数，这也是一个$n_x$维向量（因为$w$实际上是特征权重，维度与特征向量相同），参数里面还有$b$，这是一个实数（表示偏差）。所以给出输入$x$以及参数$w$和$b$之后，我们怎样产生输出预测值$\\hat{y}$，一件你可以尝试却不可行的事是让$\\hat{y}=w^{T}x+b$。<br><img src=\"/posts/dl-3logistic-regression/dfb5731c30b81eced917450d31e860a3.png\" alt=\"逻辑回归表达式\"><br>　　这是一个线性函数，但是我们期待的$\\hat{y}$是一个介于0到1的函数，因此引入了<strong>sigmoid</strong>函数。下图是<strong>sigmoid</strong>函数的图像，如果我把水平轴作为$z$轴，那么关于$z$的<strong>sigmoid</strong>函数是这样的，它是平滑地从0走向1，让我在这里标记纵轴，这是0，曲线与纵轴相交的截距是0.5，这就是关于$z$的<strong>sigmoid</strong>函数的图像。我们通常都使用$z$来表示$w^{T}x+b$的值，其中b是拦截器。<br><img src=\"/posts/dl-3logistic-regression/7e304debcca5945a3443d56bcbdd2964.png\" alt=\"sigmoid函数\"><br>　　<strong>sigmoid</strong>函数的公式是这样的，$\\sigma ( z )=\\frac{1}{1+e^{-z}}$,在这里$z$是一个实数，这里要说明一些要注意的事情，如果$z$非常大那么$e^{-z}$将会接近于0，关于$z$的<strong>sigmoid</strong>函数将会近似等于1除以1加上某个非常接近于0的项，因为$e$ 的指数如果是个绝对值很大的负数的话，这项将会接近于0，所以如果$z$很大的话那么关于$z$的<strong>sigmoid</strong>函数会非常接近1。相反地，如果$z$非常小或者说是一个绝对值很大的负数，那么关于$e^{-z}$这项会变成一个很大的数，你可以认为这是1除以1加上一个非常非常大的数，所以这个就接近于0。实际上你看到当$z$变成一个绝对值很大的负数，关于$z$的<strong>sigmoid</strong>函数就会非常接近于0，因此当你实现逻辑回归时，你的工作就是去让机器学习参数$w$以及$b$这样才使得$\\hat{y}$成为对$y=1$这一情况的概率的一个很好的估计。</p>\n<hr>\n<p>　　我们需要训练一个代价函数来得到参数$w$和参数$b$。下图为逻辑回归的输出函数。<br><img src=\"/posts/dl-3logistic-regression/4c9a27b071ce9162dbbcdad3393061d2.png\" alt=\"逻辑回归输出函数\"><br>　　通过$m$个样本的训练，找到参数$w$和参数$b$，将训练集的预测值记为$\\hat{y}$，上面的定义是对一个训练样本来说的，这种形式也使用于每个训练样本。训练样本$i$所对应的预测值是$y^{(i)}$,是用训练样本的$w^{T}x^{(i)}+b$然后通过<strong>sigmoid</strong>函数来得到，也可以把$z$定义为$z^{(i)}=w^{T}x^{(i)}+b$。</p>\n<h2 id=\"损失函数-Loss-function\"><a href=\"#损失函数-Loss-function\" class=\"headerlink\" title=\"损失函数 (Loss function)\"></a>损失函数 (Loss function)</h2><p>　　损失函数又叫做误差函数，用来衡量算法的运行情况，<strong>Loss function:$L( \\hat{y},y )$.</strong><br>　　我们在逻辑回归中用到的损失函数是：<strong>$L( \\hat{y},y )=-y\\log\\hat{y}-(1-y)\\log (1-\\hat{y})$</strong>。</p>\n<p>　　(1) 当$y=1$时$L=-\\log (\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能大，因为<strong>sigmoid</strong>函数取值$[0,1]$，所以$\\hat{y}$会无限接近于1。</p>\n<p>　　(2) 当$y=0$时$L=-\\log (1-\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能小，因为<strong>sigmoid</strong>函数取值$[0,1]$，所以$\\hat{y}$会无限接近于0。</p>\n<h2 id=\"代价函数-Cost-function\"><a href=\"#代价函数-Cost-function\" class=\"headerlink\" title=\"代价函数 (Cost function)\"></a>代价函数 (Cost function)</h2><p>　　为了衡量算法在全部训练样本上的表现如何，我们需要定义一个算法的代价函数，算法的代价函数是对$m$个样本的损失函数求和然后除以$m$：</p>\n<p><strong>$J( w,b )=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{L( \\hat{y}^{(i)},y^{(i)} )}=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{[-y^{(i)}\\log \\hat{y}^{(i)}-(1-y^{(i)})\\log (1-\\hat{y}^{(i)})]}$</strong></p>\n<p>　　损失函数只适用于像这样的单个训练样本，而代价函数是参数的总代价。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2621,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"二分分类\"><a href=\"#二分分类\" class=\"headerlink\" title=\"二分分类\"></a>二分分类</h1><p>　　识别一张图片是否为猫片，如果识别这张图片为猫，则输出标签 1 作为结果；如果识别出不是猫，那么输出标签 0 作为结果。<br><img src=\"/posts/dl-3logistic-regression/1e664a86fa2014d5212bcb88f1c419cf.png\" alt=\"图片像素的rgb排列\"><br></p>","more":"<br>　　为了把这些像素值放到一个特征向量中，我们需要把这些像素值提取出来，然后放入一个特征向量x。为了把这些像素值转换为特征向量 x，我们需要像下面这样定义一个特征向量 x 来表示这张图片，我们把所有的像素都取出来，例如255、231等等，直到取完所有的红色像素，接着最后是255、134、…、255、134等等，直到得到一个特征向量，把图片中所有的红、绿、蓝像素值都列出来。如果图片的大小为64x64像素，那么向量 x 的总维度，将是64乘以64乘以3，这是三个像素矩阵中像素的总量。在这个例子中结果为12,288。现在我们用$n_x$=12,288，来表示输入特征向量的维度，有时候为了简洁，我会直接用小写的n来表示输入特征向量x的维度。所以在二分类问题中，我们的目标就是习得一个分类器，它以图片的特征向量作为输入，然后预测输出结果y为1还是0，也就是预测图片中是否有猫。<br><img src=\"/posts/dl-3logistic-regression/55345ba411053da11ff843bbb3406369.png\" alt=\"X、Y矩阵\"><br><strong>符号定义</strong> ：<br>$x$：表示一个$n_x$维数据，为输入数据，维度为$(n_x,1)$； <p></p>\n<p>$y$：表示输出结果，取值为$(0,1)$；</p>\n<p>$(x^{(i)},y^{(i)})$：表示第$i$组数据，可能是训练数据，也可能是测试数据，此处默认为训练数据； </p>\n<p>$X=[x^{(1)},x^{(2)},…,x^{(m)}]$：表示所有的训练数据集的输入值，放在一个 $n_x×m$的矩阵中，其中$m$表示样本数目; </p>\n<p>$Y=[y^{(1)},y^{(2)},…,y^{(m)}]$：对应表示所有训练数据集的输出值，维度为$1×m$。</p>\n<h1 id=\"逻辑回归\"><a href=\"#逻辑回归\" class=\"headerlink\" title=\"逻辑回归\"></a>逻辑回归</h1><h2 id=\"假设函数（Hypothesis-Function）。\"><a href=\"#假设函数（Hypothesis-Function）。\" class=\"headerlink\" title=\"假设函数（Hypothesis Function）。\"></a>假设函数（Hypothesis Function）。</h2><p>　　对于二元分类问题来讲，给定一个输入特征向量$X$，它可能对应一张图片，你想识别这张图片识别看它是否是一只猫或者不是一只猫的图片，你想要一个算法能够输出预测，你只能称之为$\\hat{y}$，也就是你对实际值 $y$ 的估计。更正式地来说，你想让 $\\hat{y}$ 表示 $y$ 等于1的一种可能性或者是机会，前提条件是给定了输入特征$X$。换句话来说，如果$X$是我们在上个视频看到的图片，你想让$\\hat{y}$ 来告诉你这是一只猫的图片的机率有多大。在之前的视频中所说的，$X$是一个$n_x$维的向量（相当于有$n_x$个特征的特征向量）。我们用$w$来表示逻辑回归的参数，这也是一个$n_x$维向量（因为$w$实际上是特征权重，维度与特征向量相同），参数里面还有$b$，这是一个实数（表示偏差）。所以给出输入$x$以及参数$w$和$b$之后，我们怎样产生输出预测值$\\hat{y}$，一件你可以尝试却不可行的事是让$\\hat{y}=w^{T}x+b$。<br><img src=\"/posts/dl-3logistic-regression/dfb5731c30b81eced917450d31e860a3.png\" alt=\"逻辑回归表达式\"><br>　　这是一个线性函数，但是我们期待的$\\hat{y}$是一个介于0到1的函数，因此引入了<strong>sigmoid</strong>函数。下图是<strong>sigmoid</strong>函数的图像，如果我把水平轴作为$z$轴，那么关于$z$的<strong>sigmoid</strong>函数是这样的，它是平滑地从0走向1，让我在这里标记纵轴，这是0，曲线与纵轴相交的截距是0.5，这就是关于$z$的<strong>sigmoid</strong>函数的图像。我们通常都使用$z$来表示$w^{T}x+b$的值，其中b是拦截器。<br><img src=\"/posts/dl-3logistic-regression/7e304debcca5945a3443d56bcbdd2964.png\" alt=\"sigmoid函数\"><br>　　<strong>sigmoid</strong>函数的公式是这样的，$\\sigma ( z )=\\frac{1}{1+e^{-z}}$,在这里$z$是一个实数，这里要说明一些要注意的事情，如果$z$非常大那么$e^{-z}$将会接近于0，关于$z$的<strong>sigmoid</strong>函数将会近似等于1除以1加上某个非常接近于0的项，因为$e$ 的指数如果是个绝对值很大的负数的话，这项将会接近于0，所以如果$z$很大的话那么关于$z$的<strong>sigmoid</strong>函数会非常接近1。相反地，如果$z$非常小或者说是一个绝对值很大的负数，那么关于$e^{-z}$这项会变成一个很大的数，你可以认为这是1除以1加上一个非常非常大的数，所以这个就接近于0。实际上你看到当$z$变成一个绝对值很大的负数，关于$z$的<strong>sigmoid</strong>函数就会非常接近于0，因此当你实现逻辑回归时，你的工作就是去让机器学习参数$w$以及$b$这样才使得$\\hat{y}$成为对$y=1$这一情况的概率的一个很好的估计。</p>\n<hr>\n<p>　　我们需要训练一个代价函数来得到参数$w$和参数$b$。下图为逻辑回归的输出函数。<br><img src=\"/posts/dl-3logistic-regression/4c9a27b071ce9162dbbcdad3393061d2.png\" alt=\"逻辑回归输出函数\"><br>　　通过$m$个样本的训练，找到参数$w$和参数$b$，将训练集的预测值记为$\\hat{y}$，上面的定义是对一个训练样本来说的，这种形式也使用于每个训练样本。训练样本$i$所对应的预测值是$y^{(i)}$,是用训练样本的$w^{T}x^{(i)}+b$然后通过<strong>sigmoid</strong>函数来得到，也可以把$z$定义为$z^{(i)}=w^{T}x^{(i)}+b$。</p>\n<h2 id=\"损失函数-Loss-function\"><a href=\"#损失函数-Loss-function\" class=\"headerlink\" title=\"损失函数 (Loss function)\"></a>损失函数 (Loss function)</h2><p>　　损失函数又叫做误差函数，用来衡量算法的运行情况，<strong>Loss function:$L( \\hat{y},y )$.</strong><br>　　我们在逻辑回归中用到的损失函数是：<strong>$L( \\hat{y},y )=-y\\log\\hat{y}-(1-y)\\log (1-\\hat{y})$</strong>。</p>\n<p>　　(1) 当$y=1$时$L=-\\log (\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能大，因为<strong>sigmoid</strong>函数取值$[0,1]$，所以$\\hat{y}$会无限接近于1。</p>\n<p>　　(2) 当$y=0$时$L=-\\log (1-\\hat{y})$，如果想要损失函数$L$尽可能得小，那么$\\hat{y}$就要尽可能小，因为<strong>sigmoid</strong>函数取值$[0,1]$，所以$\\hat{y}$会无限接近于0。</p>\n<h2 id=\"代价函数-Cost-function\"><a href=\"#代价函数-Cost-function\" class=\"headerlink\" title=\"代价函数 (Cost function)\"></a>代价函数 (Cost function)</h2><p>　　为了衡量算法在全部训练样本上的表现如何，我们需要定义一个算法的代价函数，算法的代价函数是对$m$个样本的损失函数求和然后除以$m$：</p>\n<p><strong>$J( w,b )=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{L( \\hat{y}^{(i)},y^{(i)} )}=\\frac{1}{m}\\sum\\limits_{i=1}^{m}{[-y^{(i)}\\log \\hat{y}^{(i)}-(1-y^{(i)})\\log (1-\\hat{y}^{(i)})]}$</strong></p>\n<p>　　损失函数只适用于像这样的单个训练样本，而代价函数是参数的总代价。</p>"},{"title":"神经网络介绍","date":"2021-02-19T05:47:24.000Z","copyright":false,"_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n# 基本神经网络\n房价预测问题：\n![房价预测函数](3fe6da26014467243e3d499569be3675.png)\n　　从趋近于零开始，然后变成一条直线。这个函数被称作 **ReLU** 激活函数，它的全称是Rectified Linear Unit。rectify（修正）可以理解成𝑚𝑎𝑥(0, 𝑥)，这也是你得到一个这种形状的函数的原因。\n<!-- more -->\n\n![神经网络预测房价](7a0e0d40f4ba80a0466f0bd7aa9f8537.png)\n　　图上每一个画的小圆圈都可以是**ReLU**的一部分，也就是指修正线性单元，或者其它稍微非线性的函数。基于房屋面积和卧室数量，可以估算家庭人口，基于邮编，可以估测步行化程度或者学校的质量。最后你可能会这样想，这些决定人们乐意花费多少钱。\n\n　　神经网络的一部分神奇之处在于，当你实现它之后，你要做的只是输入x，就能得到输出y。因为它可以自己计算你训练集中样本的数目以及所有的中间过程。\n\n# 神经网络的监督学习(Supervised Learning with Neural Networks)\n　　在监督学习中你有一些输入𝑥，你想学习到一个函数来映射到一些输出𝑦，比如我们之前提到的房价预测的例子，你只要输入有关房屋的一些特征，试着去输出或者估计价格𝑦。我们举一些其它的例子，来说明神经网络已经被高效应用到其它地方。\n![监督学习应用](QQ截图20210219142516.jpg)\n* 对于图像应用，我们经常在神经网络上使用卷积（Convolutional Neural Network），通常缩写为 CNN。\n\n![卷积神经网络模型](1bebe0ac41715ef8132f2d802968495c.png)\n* 对于序列数据，例如音频，有一个时间组件，随着时间的推移，音频被播放出来，所以音频是最自然的表现。作为一维时间序列（两种英文说法 one-dimensional time series / temporal sequence）。对于序列数据，经常使用 RNN，一种递归神经网络（Recurrent Neural Network），语言，英语和汉语字母表或单词都是逐个出现的，所以语言也是最自然的序列数据，因此更复杂的 RNNs 版本经常用于这些应用。\n\n![递归神经网络模型](4656617e30e7ad44490fe605b2e49e56.png)\n\n# 深度学习的发展\n　　多亏数字化社会的来临，现在的数据量都非常巨大，我们花了很多时间活动在这些数字的领域，比如在电脑网站上、在手机软件上以及其它数字化的服务，它们都能创建数据，同时便宜的相机被配置到移动电话，还有加速仪及各类各样的传感器，同时在物联网领域我们也收集到了越来越多的数据。仅仅在过去的20年里对于很多应用，我们便收集到了大量的数据，远超过机器学习算法能够高效发挥它们优势的规模。\n\n　　事实上如今最可靠的方法来在神经网络上获得更好的性能，往往就是**要么训练一个更大的神经网络，要么投入更多的数据**，这只能在一定程度上起作用，因为最终你耗尽了数据，或者最终你的网络是如此大规模导致将要用太久的时间去训练，但是仅仅提升规模的的确确地让我们在深度学习的世界中摸索了很多时间。\n![深度学习规模大小带来的性能影响](2b14edfcb21235115fca05879f8d9de2.png)\n\n　　作为一个具体的例子，神经网络方面的一个巨大突破是从**sigmoid**函数转换到一个**ReLU**函数。\n![sigmoid函数和ReLU函数](1a3d288dc243ca9c5a70a69799180c4a.png)\n　　可以知道的一个使用**sigmoid**函数和机器学习问题是，在这个区域，也就是这个**sigmoid**函数的梯度会接近零，所以学习的速度会变得非常缓慢，因为当你实现梯度下降以及梯度接近零的时候，参数会更新的很慢，所以学习的速率也会变的很慢，而通过改变这个被叫做激活函数的东西，神经网络换用这一个函数，叫做**ReLU**的函数（修正线性单元），**ReLU**它的梯度对于所有输入的负值都是零，因此梯度更加不会趋向逐渐减少到零。而这里的梯度，这条线的斜率在这左边是零，仅仅通过将**Sigmod**函数转换成**ReLU**函数，便能够使得一个叫做梯度下降（**gradient descent**）的算法运行的更快，这就是一个或许相对比较简单的算法创新的例子。","source":"_posts/dl-2Neural-Networks.md","raw":"---\ntitle: 神经网络介绍\ndate: 2021-02-19 13:47:24\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\ncopyright: false\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n# 基本神经网络\n房价预测问题：\n![房价预测函数](3fe6da26014467243e3d499569be3675.png)\n　　从趋近于零开始，然后变成一条直线。这个函数被称作 **ReLU** 激活函数，它的全称是Rectified Linear Unit。rectify（修正）可以理解成𝑚𝑎𝑥(0, 𝑥)，这也是你得到一个这种形状的函数的原因。\n<!-- more -->\n\n![神经网络预测房价](7a0e0d40f4ba80a0466f0bd7aa9f8537.png)\n　　图上每一个画的小圆圈都可以是**ReLU**的一部分，也就是指修正线性单元，或者其它稍微非线性的函数。基于房屋面积和卧室数量，可以估算家庭人口，基于邮编，可以估测步行化程度或者学校的质量。最后你可能会这样想，这些决定人们乐意花费多少钱。\n\n　　神经网络的一部分神奇之处在于，当你实现它之后，你要做的只是输入x，就能得到输出y。因为它可以自己计算你训练集中样本的数目以及所有的中间过程。\n\n# 神经网络的监督学习(Supervised Learning with Neural Networks)\n　　在监督学习中你有一些输入𝑥，你想学习到一个函数来映射到一些输出𝑦，比如我们之前提到的房价预测的例子，你只要输入有关房屋的一些特征，试着去输出或者估计价格𝑦。我们举一些其它的例子，来说明神经网络已经被高效应用到其它地方。\n![监督学习应用](QQ截图20210219142516.jpg)\n* 对于图像应用，我们经常在神经网络上使用卷积（Convolutional Neural Network），通常缩写为 CNN。\n\n![卷积神经网络模型](1bebe0ac41715ef8132f2d802968495c.png)\n* 对于序列数据，例如音频，有一个时间组件，随着时间的推移，音频被播放出来，所以音频是最自然的表现。作为一维时间序列（两种英文说法 one-dimensional time series / temporal sequence）。对于序列数据，经常使用 RNN，一种递归神经网络（Recurrent Neural Network），语言，英语和汉语字母表或单词都是逐个出现的，所以语言也是最自然的序列数据，因此更复杂的 RNNs 版本经常用于这些应用。\n\n![递归神经网络模型](4656617e30e7ad44490fe605b2e49e56.png)\n\n# 深度学习的发展\n　　多亏数字化社会的来临，现在的数据量都非常巨大，我们花了很多时间活动在这些数字的领域，比如在电脑网站上、在手机软件上以及其它数字化的服务，它们都能创建数据，同时便宜的相机被配置到移动电话，还有加速仪及各类各样的传感器，同时在物联网领域我们也收集到了越来越多的数据。仅仅在过去的20年里对于很多应用，我们便收集到了大量的数据，远超过机器学习算法能够高效发挥它们优势的规模。\n\n　　事实上如今最可靠的方法来在神经网络上获得更好的性能，往往就是**要么训练一个更大的神经网络，要么投入更多的数据**，这只能在一定程度上起作用，因为最终你耗尽了数据，或者最终你的网络是如此大规模导致将要用太久的时间去训练，但是仅仅提升规模的的确确地让我们在深度学习的世界中摸索了很多时间。\n![深度学习规模大小带来的性能影响](2b14edfcb21235115fca05879f8d9de2.png)\n\n　　作为一个具体的例子，神经网络方面的一个巨大突破是从**sigmoid**函数转换到一个**ReLU**函数。\n![sigmoid函数和ReLU函数](1a3d288dc243ca9c5a70a69799180c4a.png)\n　　可以知道的一个使用**sigmoid**函数和机器学习问题是，在这个区域，也就是这个**sigmoid**函数的梯度会接近零，所以学习的速度会变得非常缓慢，因为当你实现梯度下降以及梯度接近零的时候，参数会更新的很慢，所以学习的速率也会变的很慢，而通过改变这个被叫做激活函数的东西，神经网络换用这一个函数，叫做**ReLU**的函数（修正线性单元），**ReLU**它的梯度对于所有输入的负值都是零，因此梯度更加不会趋向逐渐减少到零。而这里的梯度，这条线的斜率在这左边是零，仅仅通过将**Sigmod**函数转换成**ReLU**函数，便能够使得一个叫做梯度下降（**gradient descent**）的算法运行的更快，这就是一个或许相对比较简单的算法创新的例子。","slug":"dl-2Neural-Networks","published":1,"updated":"2021-02-20T06:09:41.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gv0022c8pv9b948c3p","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"基本神经网络\"><a href=\"#基本神经网络\" class=\"headerlink\" title=\"基本神经网络\"></a>基本神经网络</h1><p>房价预测问题：<br><img src=\"/posts/dl-2Neural-Networks/3fe6da26014467243e3d499569be3675.png\" alt=\"房价预测函数\"><br>　　从趋近于零开始，然后变成一条直线。这个函数被称作 <strong>ReLU</strong> 激活函数，它的全称是Rectified Linear Unit。rectify（修正）可以理解成𝑚𝑎𝑥(0, 𝑥)，这也是你得到一个这种形状的函数的原因。<br><a id=\"more\"></a></p>\n<p><img src=\"/posts/dl-2Neural-Networks/7a0e0d40f4ba80a0466f0bd7aa9f8537.png\" alt=\"神经网络预测房价\"><br>　　图上每一个画的小圆圈都可以是<strong>ReLU</strong>的一部分，也就是指修正线性单元，或者其它稍微非线性的函数。基于房屋面积和卧室数量，可以估算家庭人口，基于邮编，可以估测步行化程度或者学校的质量。最后你可能会这样想，这些决定人们乐意花费多少钱。</p>\n<p>　　神经网络的一部分神奇之处在于，当你实现它之后，你要做的只是输入x，就能得到输出y。因为它可以自己计算你训练集中样本的数目以及所有的中间过程。</p>\n<h1 id=\"神经网络的监督学习-Supervised-Learning-with-Neural-Networks\"><a href=\"#神经网络的监督学习-Supervised-Learning-with-Neural-Networks\" class=\"headerlink\" title=\"神经网络的监督学习(Supervised Learning with Neural Networks)\"></a>神经网络的监督学习(Supervised Learning with Neural Networks)</h1><p>　　在监督学习中你有一些输入𝑥，你想学习到一个函数来映射到一些输出𝑦，比如我们之前提到的房价预测的例子，你只要输入有关房屋的一些特征，试着去输出或者估计价格𝑦。我们举一些其它的例子，来说明神经网络已经被高效应用到其它地方。<br><img src=\"/posts/dl-2Neural-Networks/QQ截图20210219142516.jpg\" alt=\"监督学习应用\"></p>\n<ul>\n<li>对于图像应用，我们经常在神经网络上使用卷积（Convolutional Neural Network），通常缩写为 CNN。</li>\n</ul>\n<p><img src=\"/posts/dl-2Neural-Networks/1bebe0ac41715ef8132f2d802968495c.png\" alt=\"卷积神经网络模型\"></p>\n<ul>\n<li>对于序列数据，例如音频，有一个时间组件，随着时间的推移，音频被播放出来，所以音频是最自然的表现。作为一维时间序列（两种英文说法 one-dimensional time series / temporal sequence）。对于序列数据，经常使用 RNN，一种递归神经网络（Recurrent Neural Network），语言，英语和汉语字母表或单词都是逐个出现的，所以语言也是最自然的序列数据，因此更复杂的 RNNs 版本经常用于这些应用。</li>\n</ul>\n<p><img src=\"/posts/dl-2Neural-Networks/4656617e30e7ad44490fe605b2e49e56.png\" alt=\"递归神经网络模型\"></p>\n<h1 id=\"深度学习的发展\"><a href=\"#深度学习的发展\" class=\"headerlink\" title=\"深度学习的发展\"></a>深度学习的发展</h1><p>　　多亏数字化社会的来临，现在的数据量都非常巨大，我们花了很多时间活动在这些数字的领域，比如在电脑网站上、在手机软件上以及其它数字化的服务，它们都能创建数据，同时便宜的相机被配置到移动电话，还有加速仪及各类各样的传感器，同时在物联网领域我们也收集到了越来越多的数据。仅仅在过去的20年里对于很多应用，我们便收集到了大量的数据，远超过机器学习算法能够高效发挥它们优势的规模。</p>\n<p>　　事实上如今最可靠的方法来在神经网络上获得更好的性能，往往就是<strong>要么训练一个更大的神经网络，要么投入更多的数据</strong>，这只能在一定程度上起作用，因为最终你耗尽了数据，或者最终你的网络是如此大规模导致将要用太久的时间去训练，但是仅仅提升规模的的确确地让我们在深度学习的世界中摸索了很多时间。<br><img src=\"/posts/dl-2Neural-Networks/2b14edfcb21235115fca05879f8d9de2.png\" alt=\"深度学习规模大小带来的性能影响\"></p>\n<p>　　作为一个具体的例子，神经网络方面的一个巨大突破是从<strong>sigmoid</strong>函数转换到一个<strong>ReLU</strong>函数。<br><img src=\"/posts/dl-2Neural-Networks/1a3d288dc243ca9c5a70a69799180c4a.png\" alt=\"sigmoid函数和ReLU函数\"><br>　　可以知道的一个使用<strong>sigmoid</strong>函数和机器学习问题是，在这个区域，也就是这个<strong>sigmoid</strong>函数的梯度会接近零，所以学习的速度会变得非常缓慢，因为当你实现梯度下降以及梯度接近零的时候，参数会更新的很慢，所以学习的速率也会变的很慢，而通过改变这个被叫做激活函数的东西，神经网络换用这一个函数，叫做<strong>ReLU</strong>的函数（修正线性单元），<strong>ReLU</strong>它的梯度对于所有输入的负值都是零，因此梯度更加不会趋向逐渐减少到零。而这里的梯度，这条线的斜率在这左边是零，仅仅通过将<strong>Sigmod</strong>函数转换成<strong>ReLU</strong>函数，便能够使得一个叫做梯度下降（<strong>gradient descent</strong>）的算法运行的更快，这就是一个或许相对比较简单的算法创新的例子。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1443,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"基本神经网络\"><a href=\"#基本神经网络\" class=\"headerlink\" title=\"基本神经网络\"></a>基本神经网络</h1><p>房价预测问题：<br><img src=\"/posts/dl-2Neural-Networks/3fe6da26014467243e3d499569be3675.png\" alt=\"房价预测函数\"><br>　　从趋近于零开始，然后变成一条直线。这个函数被称作 <strong>ReLU</strong> 激活函数，它的全称是Rectified Linear Unit。rectify（修正）可以理解成𝑚𝑎𝑥(0, 𝑥)，这也是你得到一个这种形状的函数的原因。<br></p>","more":"<p></p>\n<p><img src=\"/posts/dl-2Neural-Networks/7a0e0d40f4ba80a0466f0bd7aa9f8537.png\" alt=\"神经网络预测房价\"><br>　　图上每一个画的小圆圈都可以是<strong>ReLU</strong>的一部分，也就是指修正线性单元，或者其它稍微非线性的函数。基于房屋面积和卧室数量，可以估算家庭人口，基于邮编，可以估测步行化程度或者学校的质量。最后你可能会这样想，这些决定人们乐意花费多少钱。</p>\n<p>　　神经网络的一部分神奇之处在于，当你实现它之后，你要做的只是输入x，就能得到输出y。因为它可以自己计算你训练集中样本的数目以及所有的中间过程。</p>\n<h1 id=\"神经网络的监督学习-Supervised-Learning-with-Neural-Networks\"><a href=\"#神经网络的监督学习-Supervised-Learning-with-Neural-Networks\" class=\"headerlink\" title=\"神经网络的监督学习(Supervised Learning with Neural Networks)\"></a>神经网络的监督学习(Supervised Learning with Neural Networks)</h1><p>　　在监督学习中你有一些输入𝑥，你想学习到一个函数来映射到一些输出𝑦，比如我们之前提到的房价预测的例子，你只要输入有关房屋的一些特征，试着去输出或者估计价格𝑦。我们举一些其它的例子，来说明神经网络已经被高效应用到其它地方。<br><img src=\"/posts/dl-2Neural-Networks/QQ截图20210219142516.jpg\" alt=\"监督学习应用\"></p>\n<ul>\n<li>对于图像应用，我们经常在神经网络上使用卷积（Convolutional Neural Network），通常缩写为 CNN。</li>\n</ul>\n<p><img src=\"/posts/dl-2Neural-Networks/1bebe0ac41715ef8132f2d802968495c.png\" alt=\"卷积神经网络模型\"></p>\n<ul>\n<li>对于序列数据，例如音频，有一个时间组件，随着时间的推移，音频被播放出来，所以音频是最自然的表现。作为一维时间序列（两种英文说法 one-dimensional time series / temporal sequence）。对于序列数据，经常使用 RNN，一种递归神经网络（Recurrent Neural Network），语言，英语和汉语字母表或单词都是逐个出现的，所以语言也是最自然的序列数据，因此更复杂的 RNNs 版本经常用于这些应用。</li>\n</ul>\n<p><img src=\"/posts/dl-2Neural-Networks/4656617e30e7ad44490fe605b2e49e56.png\" alt=\"递归神经网络模型\"></p>\n<h1 id=\"深度学习的发展\"><a href=\"#深度学习的发展\" class=\"headerlink\" title=\"深度学习的发展\"></a>深度学习的发展</h1><p>　　多亏数字化社会的来临，现在的数据量都非常巨大，我们花了很多时间活动在这些数字的领域，比如在电脑网站上、在手机软件上以及其它数字化的服务，它们都能创建数据，同时便宜的相机被配置到移动电话，还有加速仪及各类各样的传感器，同时在物联网领域我们也收集到了越来越多的数据。仅仅在过去的20年里对于很多应用，我们便收集到了大量的数据，远超过机器学习算法能够高效发挥它们优势的规模。</p>\n<p>　　事实上如今最可靠的方法来在神经网络上获得更好的性能，往往就是<strong>要么训练一个更大的神经网络，要么投入更多的数据</strong>，这只能在一定程度上起作用，因为最终你耗尽了数据，或者最终你的网络是如此大规模导致将要用太久的时间去训练，但是仅仅提升规模的的确确地让我们在深度学习的世界中摸索了很多时间。<br><img src=\"/posts/dl-2Neural-Networks/2b14edfcb21235115fca05879f8d9de2.png\" alt=\"深度学习规模大小带来的性能影响\"></p>\n<p>　　作为一个具体的例子，神经网络方面的一个巨大突破是从<strong>sigmoid</strong>函数转换到一个<strong>ReLU</strong>函数。<br><img src=\"/posts/dl-2Neural-Networks/1a3d288dc243ca9c5a70a69799180c4a.png\" alt=\"sigmoid函数和ReLU函数\"><br>　　可以知道的一个使用<strong>sigmoid</strong>函数和机器学习问题是，在这个区域，也就是这个<strong>sigmoid</strong>函数的梯度会接近零，所以学习的速度会变得非常缓慢，因为当你实现梯度下降以及梯度接近零的时候，参数会更新的很慢，所以学习的速率也会变的很慢，而通过改变这个被叫做激活函数的东西，神经网络换用这一个函数，叫做<strong>ReLU</strong>的函数（修正线性单元），<strong>ReLU</strong>它的梯度对于所有输入的负值都是零，因此梯度更加不会趋向逐渐减少到零。而这里的梯度，这条线的斜率在这左边是零，仅仅通过将<strong>Sigmod</strong>函数转换成<strong>ReLU</strong>函数，便能够使得一个叫做梯度下降（<strong>gradient descent</strong>）的算法运行的更快，这就是一个或许相对比较简单的算法创新的例子。</p>"},{"title":"梯度下降法","copyright":false,"date":"2021-02-20T06:07:27.000Z","_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n　　我们通过使代价函数最小化来训练参数$w$和$b$。\n![代价函数J(w,b)](cbd5ff8c461fcb5a699c4ec4789687b3.jpg)\n　　下图中横轴表示你的空间参数$w$和$b$，在实践中，$w$可以是更高的维度，但是为了更好地绘图，我们定义$w$和$b$，都是单一实数，代价函数（成本函数）$J(w,b)$是在水平轴$w$和$b$上的曲面，因此曲面的高度就是$J(w,b)$在某一点的函数值。我们所做的就是找到使得代价函数（成本函数）$J(w,b)$函数值是最小值，对应的参数$w$和$b$。\n<!-- more -->\n![梯度下降法过程说明](c5eda5608fd2f4d846559ed8e89ed33c.jpg)\n# 梯度下降法\n## 一、在三维坐标系中\n###　1. 初始化，随机取$w$,$b$，获得$J(w,b)$初始值\n###　2. 从初始点不断向最陡的下坡方向迭代\n###　3. 直到走到全局最优解附近\n\n## 二、单参数细节说明\n　　假定b恒定，则只有w在变化，J变为二维平面函数。\n![二维梯度下降](4fb3b91114ecb2cd81ec9f3662434d81.jpg)\n　　迭代此公式：$w=w-\\alpha\\frac{dJ(w)}{dw}$\n\n　　其中等号为赋值符；a为学习率，控制步长。\n\n* 初始化点在最优解右边时，斜率$\\frac{dJ(w)}{dw}\\>0$,故下一步向左走。\n\n* 初始化点在最优解左边时，斜率$\\frac{dJ(w)}{dw}<0$,故下一步向右走。\n\n## 三、双参数细节说明\n　　代价函数有两个参数，因此需要对两个参数分别求偏导。\n　　　　$w=w-\\alpha\\frac{\\partial J(w,b)}{\\partial w}$　　$b=b-\\alpha\\frac{\\partial J(w,b)}{\\partial b}$\n　　\n　　$\\partial $ 表示求偏导符号，可以读作**round**，$\\frac{\\partial J(w,b)}{\\partial w}$  就是函数$J(w,b)$ 对$w$ 求偏导，在代码中我们会使用$dw$ 表示这个结果，$\\frac{\\partial J(w,b)}{\\partial b}$  就是函数$J(w,b)$对$b$ 求偏导，在代码中我们会使用$db$ 表示这个结果，小写字母$d$ 用在求导数（**derivative**），即函数只有一个参数，偏导数符号$\\partial $ 用在求偏导（**partial derivative**），即函数含有两个以上的参数。　\n\n# 逻辑回归中的梯度下降(单个样本)\n##　1. 求出损失函数L的值\n\n　　假设样本只有两个特征$x_{1}$和$x_{2}$，只考虑单个样本情况，可以通过以下三个式子求出损失函数L的值。\n![推理公式](03f5f96177ab15d5ead8298ba50300ac.jpg)\n##　2.反向求导\n\n　　现在让我们来讨论通过反向计算出导数。因为我们想要计算出的代价函数$L(a,y)$的导数，首先我们需要反向计算出代价函数$L(a,y)$关于$a$的导数，在编写代码时，你只需要用$da$ 来表示$\\frac{dL(a,y)}{da}$。\n\n　　通过微积分得到：$\\frac{dL(a,y)}{da}=-y/a+(1-y)/(1-a)$ \n\n　　而根据$da$可以求出${dz} = \\frac{dL(a,y)}{dz} = \\frac{dL}{dz} = ( \\frac{dL}{da} ) \\cdot (\\frac{da}{dz} ) = ( - \\frac{y}{a} + \\frac{(1 - y)}{(1 - a)})\\cdot a(1 - a) = a - y$\n\n　　然后通过反向推导求出是计算𝑤和𝑏变化对代价函数𝐿的影响：\n　　$d{w_{1}}=\\frac{\\partial L}{\\partial w_{1}}=x_{1}\\cdot dz$， \n\n　　$d{w_{2}}=\\frac{\\partial L}{\\partial w_{2}}=x_{2}\\cdot dz$，\n\n　　$db=dz$\n![反向推导](6403f00e5844c3100f4aa9ff043e2319.jpg)\n\n##　3. 更新参数值\n\n　　$w_{1}=w_{1}-\\alpha d{w}_{1}$，\n\n　　$w_{2}=w_{2}-\\alpha d{w}_{2}$，\n\n　　$b=b-\\alpha db$。\n\n# 逻辑回归中的梯度下降(m个样本)\n　　我们所需要做的就是将单个样本的梯度下降过程进行m次并求出平均值。\n![一轮梯度下降计算](8b725e51dcffc53a5def49438b70d925.png)\n　　我们初始化$J=0,d{w_{1}}=0,d{w_{2}}=0,db=0$\n\n　　代码流程：\n\n```py\nJ=0,dw1=0,dw2=0,db=0\nfor i = 1 to m:\n    z(i) = wx(i)+b\n    a(i) = sigmoid(z(i))\n    J += -[y(i)log(a(i))+(1-y(i)）log(1-a(i))\n    dz(i) = a(i)-y(i)\n    dw1 += x1(i)dz(i)\n    dw2 += x2(i)dz(i)\n    db += dz(i)\nJ/= m\ndw1/= m\ndw2/= m\ndb/= m\nw=w-alpha*dw\nb=b-alpha*db\n```\n\n　　然而，随着n的增大，dw的求取也需要一重循环，导致程序效率低下，故考虑向量化来摆脱循环。","source":"_posts/dl-4Gradient-Descent.md","raw":"---\ntitle: 梯度下降法\ncopyright: false\ndate: 2021-02-20 14:07:27\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n　　我们通过使代价函数最小化来训练参数$w$和$b$。\n![代价函数J(w,b)](cbd5ff8c461fcb5a699c4ec4789687b3.jpg)\n　　下图中横轴表示你的空间参数$w$和$b$，在实践中，$w$可以是更高的维度，但是为了更好地绘图，我们定义$w$和$b$，都是单一实数，代价函数（成本函数）$J(w,b)$是在水平轴$w$和$b$上的曲面，因此曲面的高度就是$J(w,b)$在某一点的函数值。我们所做的就是找到使得代价函数（成本函数）$J(w,b)$函数值是最小值，对应的参数$w$和$b$。\n<!-- more -->\n![梯度下降法过程说明](c5eda5608fd2f4d846559ed8e89ed33c.jpg)\n# 梯度下降法\n## 一、在三维坐标系中\n###　1. 初始化，随机取$w$,$b$，获得$J(w,b)$初始值\n###　2. 从初始点不断向最陡的下坡方向迭代\n###　3. 直到走到全局最优解附近\n\n## 二、单参数细节说明\n　　假定b恒定，则只有w在变化，J变为二维平面函数。\n![二维梯度下降](4fb3b91114ecb2cd81ec9f3662434d81.jpg)\n　　迭代此公式：$w=w-\\alpha\\frac{dJ(w)}{dw}$\n\n　　其中等号为赋值符；a为学习率，控制步长。\n\n* 初始化点在最优解右边时，斜率$\\frac{dJ(w)}{dw}\\>0$,故下一步向左走。\n\n* 初始化点在最优解左边时，斜率$\\frac{dJ(w)}{dw}<0$,故下一步向右走。\n\n## 三、双参数细节说明\n　　代价函数有两个参数，因此需要对两个参数分别求偏导。\n　　　　$w=w-\\alpha\\frac{\\partial J(w,b)}{\\partial w}$　　$b=b-\\alpha\\frac{\\partial J(w,b)}{\\partial b}$\n　　\n　　$\\partial $ 表示求偏导符号，可以读作**round**，$\\frac{\\partial J(w,b)}{\\partial w}$  就是函数$J(w,b)$ 对$w$ 求偏导，在代码中我们会使用$dw$ 表示这个结果，$\\frac{\\partial J(w,b)}{\\partial b}$  就是函数$J(w,b)$对$b$ 求偏导，在代码中我们会使用$db$ 表示这个结果，小写字母$d$ 用在求导数（**derivative**），即函数只有一个参数，偏导数符号$\\partial $ 用在求偏导（**partial derivative**），即函数含有两个以上的参数。　\n\n# 逻辑回归中的梯度下降(单个样本)\n##　1. 求出损失函数L的值\n\n　　假设样本只有两个特征$x_{1}$和$x_{2}$，只考虑单个样本情况，可以通过以下三个式子求出损失函数L的值。\n![推理公式](03f5f96177ab15d5ead8298ba50300ac.jpg)\n##　2.反向求导\n\n　　现在让我们来讨论通过反向计算出导数。因为我们想要计算出的代价函数$L(a,y)$的导数，首先我们需要反向计算出代价函数$L(a,y)$关于$a$的导数，在编写代码时，你只需要用$da$ 来表示$\\frac{dL(a,y)}{da}$。\n\n　　通过微积分得到：$\\frac{dL(a,y)}{da}=-y/a+(1-y)/(1-a)$ \n\n　　而根据$da$可以求出${dz} = \\frac{dL(a,y)}{dz} = \\frac{dL}{dz} = ( \\frac{dL}{da} ) \\cdot (\\frac{da}{dz} ) = ( - \\frac{y}{a} + \\frac{(1 - y)}{(1 - a)})\\cdot a(1 - a) = a - y$\n\n　　然后通过反向推导求出是计算𝑤和𝑏变化对代价函数𝐿的影响：\n　　$d{w_{1}}=\\frac{\\partial L}{\\partial w_{1}}=x_{1}\\cdot dz$， \n\n　　$d{w_{2}}=\\frac{\\partial L}{\\partial w_{2}}=x_{2}\\cdot dz$，\n\n　　$db=dz$\n![反向推导](6403f00e5844c3100f4aa9ff043e2319.jpg)\n\n##　3. 更新参数值\n\n　　$w_{1}=w_{1}-\\alpha d{w}_{1}$，\n\n　　$w_{2}=w_{2}-\\alpha d{w}_{2}$，\n\n　　$b=b-\\alpha db$。\n\n# 逻辑回归中的梯度下降(m个样本)\n　　我们所需要做的就是将单个样本的梯度下降过程进行m次并求出平均值。\n![一轮梯度下降计算](8b725e51dcffc53a5def49438b70d925.png)\n　　我们初始化$J=0,d{w_{1}}=0,d{w_{2}}=0,db=0$\n\n　　代码流程：\n\n```py\nJ=0,dw1=0,dw2=0,db=0\nfor i = 1 to m:\n    z(i) = wx(i)+b\n    a(i) = sigmoid(z(i))\n    J += -[y(i)log(a(i))+(1-y(i)）log(1-a(i))\n    dz(i) = a(i)-y(i)\n    dw1 += x1(i)dz(i)\n    dw2 += x2(i)dz(i)\n    db += dz(i)\nJ/= m\ndw1/= m\ndw2/= m\ndb/= m\nw=w-alpha*dw\nb=b-alpha*db\n```\n\n　　然而，随着n的增大，dw的求取也需要一重循环，导致程序效率低下，故考虑向量化来摆脱循环。","slug":"dl-4Gradient-Descent","published":1,"updated":"2021-02-23T05:15:33.020Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gw0025c8pv3gns1ak8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<p>　　我们通过使代价函数最小化来训练参数$w$和$b$。<br><img src=\"/posts/dl-4Gradient-Descent/cbd5ff8c461fcb5a699c4ec4789687b3.jpg\" alt=\"代价函数J(w,b)\"><br>　　下图中横轴表示你的空间参数$w$和$b$，在实践中，$w$可以是更高的维度，但是为了更好地绘图，我们定义$w$和$b$，都是单一实数，代价函数（成本函数）$J(w,b)$是在水平轴$w$和$b$上的曲面，因此曲面的高度就是$J(w,b)$在某一点的函数值。我们所做的就是找到使得代价函数（成本函数）$J(w,b)$函数值是最小值，对应的参数$w$和$b$。<br><a id=\"more\"></a><br><img src=\"/posts/dl-4Gradient-Descent/c5eda5608fd2f4d846559ed8e89ed33c.jpg\" alt=\"梯度下降法过程说明\"></p>\n<h1 id=\"梯度下降法\"><a href=\"#梯度下降法\" class=\"headerlink\" title=\"梯度下降法\"></a>梯度下降法</h1><h2 id=\"一、在三维坐标系中\"><a href=\"#一、在三维坐标系中\" class=\"headerlink\" title=\"一、在三维坐标系中\"></a>一、在三维坐标系中</h2><h3 id=\"1-初始化，随机取-w-b-，获得-J-w-b-初始值\"><a href=\"#1-初始化，随机取-w-b-，获得-J-w-b-初始值\" class=\"headerlink\" title=\"　1. 初始化，随机取$w$,$b$，获得$J(w,b)$初始值\"></a>　1. 初始化，随机取$w$,$b$，获得$J(w,b)$初始值</h3><h3 id=\"2-从初始点不断向最陡的下坡方向迭代\"><a href=\"#2-从初始点不断向最陡的下坡方向迭代\" class=\"headerlink\" title=\"　2. 从初始点不断向最陡的下坡方向迭代\"></a>　2. 从初始点不断向最陡的下坡方向迭代</h3><h3 id=\"3-直到走到全局最优解附近\"><a href=\"#3-直到走到全局最优解附近\" class=\"headerlink\" title=\"　3. 直到走到全局最优解附近\"></a>　3. 直到走到全局最优解附近</h3><h2 id=\"二、单参数细节说明\"><a href=\"#二、单参数细节说明\" class=\"headerlink\" title=\"二、单参数细节说明\"></a>二、单参数细节说明</h2><p>　　假定b恒定，则只有w在变化，J变为二维平面函数。<br><img src=\"/posts/dl-4Gradient-Descent/4fb3b91114ecb2cd81ec9f3662434d81.jpg\" alt=\"二维梯度下降\"><br>　　迭代此公式：$w=w-\\alpha\\frac{dJ(w)}{dw}$</p>\n<p>　　其中等号为赋值符；a为学习率，控制步长。</p>\n<ul>\n<li><p>初始化点在最优解右边时，斜率$\\frac{dJ(w)}{dw}>0$,故下一步向左走。</p>\n</li>\n<li><p>初始化点在最优解左边时，斜率$\\frac{dJ(w)}{dw}&lt;0$,故下一步向右走。</p>\n</li>\n</ul>\n<h2 id=\"三、双参数细节说明\"><a href=\"#三、双参数细节说明\" class=\"headerlink\" title=\"三、双参数细节说明\"></a>三、双参数细节说明</h2><p>　　代价函数有两个参数，因此需要对两个参数分别求偏导。<br>　　　　$w=w-\\alpha\\frac{\\partial J(w,b)}{\\partial w}$　　$b=b-\\alpha\\frac{\\partial J(w,b)}{\\partial b}$<br>　　<br>　　$\\partial $ 表示求偏导符号，可以读作<strong>round</strong>，$\\frac{\\partial J(w,b)}{\\partial w}$  就是函数$J(w,b)$ 对$w$ 求偏导，在代码中我们会使用$dw$ 表示这个结果，$\\frac{\\partial J(w,b)}{\\partial b}$  就是函数$J(w,b)$对$b$ 求偏导，在代码中我们会使用$db$ 表示这个结果，小写字母$d$ 用在求导数（<strong>derivative</strong>），即函数只有一个参数，偏导数符号$\\partial $ 用在求偏导（<strong>partial derivative</strong>），即函数含有两个以上的参数。　</p>\n<h1 id=\"逻辑回归中的梯度下降-单个样本\"><a href=\"#逻辑回归中的梯度下降-单个样本\" class=\"headerlink\" title=\"逻辑回归中的梯度下降(单个样本)\"></a>逻辑回归中的梯度下降(单个样本)</h1><h2 id=\"1-求出损失函数L的值\"><a href=\"#1-求出损失函数L的值\" class=\"headerlink\" title=\"　1. 求出损失函数L的值\"></a>　1. 求出损失函数L的值</h2><p>　　假设样本只有两个特征$x_{1}$和$x_{2}$，只考虑单个样本情况，可以通过以下三个式子求出损失函数L的值。<br><img src=\"/posts/dl-4Gradient-Descent/03f5f96177ab15d5ead8298ba50300ac.jpg\" alt=\"推理公式\"></p>\n<h2 id=\"2-反向求导\"><a href=\"#2-反向求导\" class=\"headerlink\" title=\"　2.反向求导\"></a>　2.反向求导</h2><p>　　现在让我们来讨论通过反向计算出导数。因为我们想要计算出的代价函数$L(a,y)$的导数，首先我们需要反向计算出代价函数$L(a,y)$关于$a$的导数，在编写代码时，你只需要用$da$ 来表示$\\frac{dL(a,y)}{da}$。</p>\n<p>　　通过微积分得到：$\\frac{dL(a,y)}{da}=-y/a+(1-y)/(1-a)$ </p>\n<p>　　而根据$da$可以求出${dz} = \\frac{dL(a,y)}{dz} = \\frac{dL}{dz} = ( \\frac{dL}{da} ) \\cdot (\\frac{da}{dz} ) = ( - \\frac{y}{a} + \\frac{(1 - y)}{(1 - a)})\\cdot a(1 - a) = a - y$</p>\n<p>　　然后通过反向推导求出是计算𝑤和𝑏变化对代价函数𝐿的影响：<br>　　$d{w_{1}}=\\frac{\\partial L}{\\partial w_{1}}=x_{1}\\cdot dz$， </p>\n<p>　　$d{w_{2}}=\\frac{\\partial L}{\\partial w_{2}}=x_{2}\\cdot dz$，</p>\n<p>　　$db=dz$<br><img src=\"/posts/dl-4Gradient-Descent/6403f00e5844c3100f4aa9ff043e2319.jpg\" alt=\"反向推导\"></p>\n<h2 id=\"3-更新参数值\"><a href=\"#3-更新参数值\" class=\"headerlink\" title=\"　3. 更新参数值\"></a>　3. 更新参数值</h2><p>　　$w_{1}=w_{1}-\\alpha d{w}_{1}$，</p>\n<p>　　$w_{2}=w_{2}-\\alpha d{w}_{2}$，</p>\n<p>　　$b=b-\\alpha db$。</p>\n<h1 id=\"逻辑回归中的梯度下降-m个样本\"><a href=\"#逻辑回归中的梯度下降-m个样本\" class=\"headerlink\" title=\"逻辑回归中的梯度下降(m个样本)\"></a>逻辑回归中的梯度下降(m个样本)</h1><p>　　我们所需要做的就是将单个样本的梯度下降过程进行m次并求出平均值。<br><img src=\"/posts/dl-4Gradient-Descent/8b725e51dcffc53a5def49438b70d925.png\" alt=\"一轮梯度下降计算\"><br>　　我们初始化$J=0,d{w_{1}}=0,d{w_{2}}=0,db=0$</p>\n<p>　　代码流程：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J=<span class=\"number\">0</span>,dw1=<span class=\"number\">0</span>,dw2=<span class=\"number\">0</span>,db=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to m:</span><br><span class=\"line\">    z(i) = wx(i)+b</span><br><span class=\"line\">    a(i) = sigmoid(z(i))</span><br><span class=\"line\">    J += -[y(i)log(a(i))+(<span class=\"number\">1</span>-y(i)）log(<span class=\"number\">1</span>-a(i))</span><br><span class=\"line\">    dz(i) = a(i)-y(i)</span><br><span class=\"line\">    dw1 += x1(i)dz(i)</span><br><span class=\"line\">    dw2 += x2(i)dz(i)</span><br><span class=\"line\">    db += dz(i)</span><br><span class=\"line\">J/= m</span><br><span class=\"line\">dw1/= m</span><br><span class=\"line\">dw2/= m</span><br><span class=\"line\">db/= m</span><br><span class=\"line\">w=w-alpha*dw</span><br><span class=\"line\">b=b-alpha*db</span><br></pre></td></tr></table></figure>\n<p>　　然而，随着n的增大，dw的求取也需要一重循环，导致程序效率低下，故考虑向量化来摆脱循环。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1837,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<p>　　我们通过使代价函数最小化来训练参数$w$和$b$。<br><img src=\"/posts/dl-4Gradient-Descent/cbd5ff8c461fcb5a699c4ec4789687b3.jpg\" alt=\"代价函数J(w,b)\"><br>　　下图中横轴表示你的空间参数$w$和$b$，在实践中，$w$可以是更高的维度，但是为了更好地绘图，我们定义$w$和$b$，都是单一实数，代价函数（成本函数）$J(w,b)$是在水平轴$w$和$b$上的曲面，因此曲面的高度就是$J(w,b)$在某一点的函数值。我们所做的就是找到使得代价函数（成本函数）$J(w,b)$函数值是最小值，对应的参数$w$和$b$。<br></p>","more":"<br><img src=\"/posts/dl-4Gradient-Descent/c5eda5608fd2f4d846559ed8e89ed33c.jpg\" alt=\"梯度下降法过程说明\"><p></p>\n<h1 id=\"梯度下降法\"><a href=\"#梯度下降法\" class=\"headerlink\" title=\"梯度下降法\"></a>梯度下降法</h1><h2 id=\"一、在三维坐标系中\"><a href=\"#一、在三维坐标系中\" class=\"headerlink\" title=\"一、在三维坐标系中\"></a>一、在三维坐标系中</h2><h3 id=\"1-初始化，随机取-w-b-，获得-J-w-b-初始值\"><a href=\"#1-初始化，随机取-w-b-，获得-J-w-b-初始值\" class=\"headerlink\" title=\"　1. 初始化，随机取$w$,$b$，获得$J(w,b)$初始值\"></a>　1. 初始化，随机取$w$,$b$，获得$J(w,b)$初始值</h3><h3 id=\"2-从初始点不断向最陡的下坡方向迭代\"><a href=\"#2-从初始点不断向最陡的下坡方向迭代\" class=\"headerlink\" title=\"　2. 从初始点不断向最陡的下坡方向迭代\"></a>　2. 从初始点不断向最陡的下坡方向迭代</h3><h3 id=\"3-直到走到全局最优解附近\"><a href=\"#3-直到走到全局最优解附近\" class=\"headerlink\" title=\"　3. 直到走到全局最优解附近\"></a>　3. 直到走到全局最优解附近</h3><h2 id=\"二、单参数细节说明\"><a href=\"#二、单参数细节说明\" class=\"headerlink\" title=\"二、单参数细节说明\"></a>二、单参数细节说明</h2><p>　　假定b恒定，则只有w在变化，J变为二维平面函数。<br><img src=\"/posts/dl-4Gradient-Descent/4fb3b91114ecb2cd81ec9f3662434d81.jpg\" alt=\"二维梯度下降\"><br>　　迭代此公式：$w=w-\\alpha\\frac{dJ(w)}{dw}$</p>\n<p>　　其中等号为赋值符；a为学习率，控制步长。</p>\n<ul>\n<li><p>初始化点在最优解右边时，斜率$\\frac{dJ(w)}{dw}>0$,故下一步向左走。</p>\n</li>\n<li><p>初始化点在最优解左边时，斜率$\\frac{dJ(w)}{dw}&lt;0$,故下一步向右走。</p>\n</li>\n</ul>\n<h2 id=\"三、双参数细节说明\"><a href=\"#三、双参数细节说明\" class=\"headerlink\" title=\"三、双参数细节说明\"></a>三、双参数细节说明</h2><p>　　代价函数有两个参数，因此需要对两个参数分别求偏导。<br>　　　　$w=w-\\alpha\\frac{\\partial J(w,b)}{\\partial w}$　　$b=b-\\alpha\\frac{\\partial J(w,b)}{\\partial b}$<br>　　<br>　　$\\partial $ 表示求偏导符号，可以读作<strong>round</strong>，$\\frac{\\partial J(w,b)}{\\partial w}$  就是函数$J(w,b)$ 对$w$ 求偏导，在代码中我们会使用$dw$ 表示这个结果，$\\frac{\\partial J(w,b)}{\\partial b}$  就是函数$J(w,b)$对$b$ 求偏导，在代码中我们会使用$db$ 表示这个结果，小写字母$d$ 用在求导数（<strong>derivative</strong>），即函数只有一个参数，偏导数符号$\\partial $ 用在求偏导（<strong>partial derivative</strong>），即函数含有两个以上的参数。　</p>\n<h1 id=\"逻辑回归中的梯度下降-单个样本\"><a href=\"#逻辑回归中的梯度下降-单个样本\" class=\"headerlink\" title=\"逻辑回归中的梯度下降(单个样本)\"></a>逻辑回归中的梯度下降(单个样本)</h1><h2 id=\"1-求出损失函数L的值\"><a href=\"#1-求出损失函数L的值\" class=\"headerlink\" title=\"　1. 求出损失函数L的值\"></a>　1. 求出损失函数L的值</h2><p>　　假设样本只有两个特征$x_{1}$和$x_{2}$，只考虑单个样本情况，可以通过以下三个式子求出损失函数L的值。<br><img src=\"/posts/dl-4Gradient-Descent/03f5f96177ab15d5ead8298ba50300ac.jpg\" alt=\"推理公式\"></p>\n<h2 id=\"2-反向求导\"><a href=\"#2-反向求导\" class=\"headerlink\" title=\"　2.反向求导\"></a>　2.反向求导</h2><p>　　现在让我们来讨论通过反向计算出导数。因为我们想要计算出的代价函数$L(a,y)$的导数，首先我们需要反向计算出代价函数$L(a,y)$关于$a$的导数，在编写代码时，你只需要用$da$ 来表示$\\frac{dL(a,y)}{da}$。</p>\n<p>　　通过微积分得到：$\\frac{dL(a,y)}{da}=-y/a+(1-y)/(1-a)$ </p>\n<p>　　而根据$da$可以求出${dz} = \\frac{dL(a,y)}{dz} = \\frac{dL}{dz} = ( \\frac{dL}{da} ) \\cdot (\\frac{da}{dz} ) = ( - \\frac{y}{a} + \\frac{(1 - y)}{(1 - a)})\\cdot a(1 - a) = a - y$</p>\n<p>　　然后通过反向推导求出是计算𝑤和𝑏变化对代价函数𝐿的影响：<br>　　$d{w_{1}}=\\frac{\\partial L}{\\partial w_{1}}=x_{1}\\cdot dz$， </p>\n<p>　　$d{w_{2}}=\\frac{\\partial L}{\\partial w_{2}}=x_{2}\\cdot dz$，</p>\n<p>　　$db=dz$<br><img src=\"/posts/dl-4Gradient-Descent/6403f00e5844c3100f4aa9ff043e2319.jpg\" alt=\"反向推导\"></p>\n<h2 id=\"3-更新参数值\"><a href=\"#3-更新参数值\" class=\"headerlink\" title=\"　3. 更新参数值\"></a>　3. 更新参数值</h2><p>　　$w_{1}=w_{1}-\\alpha d{w}_{1}$，</p>\n<p>　　$w_{2}=w_{2}-\\alpha d{w}_{2}$，</p>\n<p>　　$b=b-\\alpha db$。</p>\n<h1 id=\"逻辑回归中的梯度下降-m个样本\"><a href=\"#逻辑回归中的梯度下降-m个样本\" class=\"headerlink\" title=\"逻辑回归中的梯度下降(m个样本)\"></a>逻辑回归中的梯度下降(m个样本)</h1><p>　　我们所需要做的就是将单个样本的梯度下降过程进行m次并求出平均值。<br><img src=\"/posts/dl-4Gradient-Descent/8b725e51dcffc53a5def49438b70d925.png\" alt=\"一轮梯度下降计算\"><br>　　我们初始化$J=0,d{w_{1}}=0,d{w_{2}}=0,db=0$</p>\n<p>　　代码流程：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J=<span class=\"number\">0</span>,dw1=<span class=\"number\">0</span>,dw2=<span class=\"number\">0</span>,db=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to m:</span><br><span class=\"line\">    z(i) = wx(i)+b</span><br><span class=\"line\">    a(i) = sigmoid(z(i))</span><br><span class=\"line\">    J += -[y(i)log(a(i))+(<span class=\"number\">1</span>-y(i)）log(<span class=\"number\">1</span>-a(i))</span><br><span class=\"line\">    dz(i) = a(i)-y(i)</span><br><span class=\"line\">    dw1 += x1(i)dz(i)</span><br><span class=\"line\">    dw2 += x2(i)dz(i)</span><br><span class=\"line\">    db += dz(i)</span><br><span class=\"line\">J/= m</span><br><span class=\"line\">dw1/= m</span><br><span class=\"line\">dw2/= m</span><br><span class=\"line\">db/= m</span><br><span class=\"line\">w=w-alpha*dw</span><br><span class=\"line\">b=b-alpha*db</span><br></pre></td></tr></table></figure>\n<p>　　然而，随着n的增大，dw的求取也需要一重循环，导致程序效率低下，故考虑向量化来摆脱循环。</p>"},{"title":"深度学习中的向量化","copyright":false,"date":"2021-02-23T04:35:48.000Z","_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 极大提高计算效率\n　　在逻辑回归中计算$z=w^{T}x+b$时，w，x都是列向量。\n\n　　非向量方法：\n```py\nz=0\nfor i in range(n_x)\nz+=w[i]*x[i]\nz+=b\n```\n<!-- more -->\n　　向量方法：\n```py\nz=np.dot(w,x)+b\n```\n　　使用一个具体的例子，\n```py\nimport numpy as np #导入 numpy 库\nimport time #导入时间库\na = np.random.rand(1000000)\nb = np.random.rand(1000000) #通过 round 随机得到两个一百万维度的数组\ntic = time.time() #现在测量一下当前时间\n#向量化的版本\nc = np.dot(a,b)\ntoc = time.time()\nprint(“Vectorized version:” + str(1000*(toc-tic)) +”ms”) #打印一下向量\n化的版本的时间\n#非向量化的版本\nc = 0\ntic = time.time()\nfor i in range(1000000):\nc += a[i]*b[i]\ntoc = time.time()\nprint(c)\nprint(“For loop:” + str(1000*(toc-tic)) + “ms”)\n```\n　　向量化的方法几乎要快300倍。\n　　其原因是深度学习基本上由CPU或GPU来完成计算，他们都有并行化的指令，称为SIMD(单指令流多数据流)，而高级语言中的内置函数(如np.dot)可以更好地利用并行化进行计算，其中GPU比CPU更擅长SIMD处理。\n\n# 更多向量化例子\n### `u=np.exp(v)` 可以使列向量v的每一项$v_{i}$都变为$e^{v_{i}}$。\n\n    * np.log(v)——每一项求自然对数\n    * np.abs(v)——每一项求绝对值\n    * np.maximum(v,0)——每一项是否比0大\n\n### 在逻辑回归中\n　　原本需要使用二重for循环：\n```py\nJ=0,db=0\nfor i = 1 to n:\n    dw(i) = 0\nfor i = 1 to m:\n    z(i) = wx(i)+b\n    a(i) = sigmoid(z(i))\n    J += -[y(i)log(a(i))+(1-y(i)）log(1-a(i))\n    dz(i) = a(i)-y(i)\n    for j = 1 to n:\n        dw(j) += x(j)(i)dz(i)\n    db += dz(i)\nJ/= m\nfor i = 1 to n:\n    dw(i) /= m\ndb/= m\nw=w-alpha*dw\nb=b-alpha*db\n```\n　　在经过简单向量化后，代码具有一重for循环，变为：\n```py\nimport numpy as np\nJ=0,dw=np.zeros(n_x,1),db=0\nfor i = 1 to m:\n    z(i) = wx(i)+b\n    a(i) = sigmoid(z(i))\n    J += -[y(i)log(a(i))+(1-y(i)）log(1-a(i))\n    dz(i) = a(i)-y(i)\n    dw = np.dot(x,dz.T)\n    db += dz(i)\nJ/= m\ndw /= m\ndb/= m\nw=w-alpha*dw\nb=b-alpha*db\n```\n\n# 终极向量化\n##　求取z\n　　只需一行代码即可完成逻辑回归中z的计算，即`Z=np.dot(w.T,X)+b`。\n\n　　$[z^{(1)} z^{(2)}...z^{(m)}]=w^{T}X+[b b...b]=[w^{T}x^{(1)}+b,w^{T}x^{(2)}+b...w^{T}x^{(m)}+b]$ 。\n\n　　$w^{T}x^{(1)}+b$ 这是第一个元素，$w^{T}x^{(2)}+b$ 这是第二个元素， $w^{T}x^{(m)}+b$ 这是第 $m$ 个元素。\n\n　　这里在 Python 中有一个巧妙的地方，这里 𝑏 是一个实数，或者你可以说是一个 1 × 1 矩阵，只是一个普通的实数。但是当你将这个向量加上这个实数时，Python 自动把这个实数 𝑏 扩展成一个 1 × 𝑚 的行向量。所以这种情况下的操作似乎有点不可思议，它在 Python 中被称作广播(brosdcasting)。\n\n　　而$A=[a^{(1)} a^{(2)} ... a^{(m)}]=\\sigma (Z)$可以高效输出A。\n##　去掉循环\n```py\nZ = np.dot( w.T,X)+b\nA = sigma( Z )\ndZ = A - Y\ndw = 1/m*np.dot(x,dz.T)\ndb= 1/m*np.sum(dZ)\nw: = w - a*dw\nb: = b - a*db\n```","source":"_posts/dl-5vectorization.md","raw":"---\ntitle: 深度学习中的向量化\ncopyright: false\ndate: 2021-02-23 12:35:48\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 极大提高计算效率\n　　在逻辑回归中计算$z=w^{T}x+b$时，w，x都是列向量。\n\n　　非向量方法：\n```py\nz=0\nfor i in range(n_x)\nz+=w[i]*x[i]\nz+=b\n```\n<!-- more -->\n　　向量方法：\n```py\nz=np.dot(w,x)+b\n```\n　　使用一个具体的例子，\n```py\nimport numpy as np #导入 numpy 库\nimport time #导入时间库\na = np.random.rand(1000000)\nb = np.random.rand(1000000) #通过 round 随机得到两个一百万维度的数组\ntic = time.time() #现在测量一下当前时间\n#向量化的版本\nc = np.dot(a,b)\ntoc = time.time()\nprint(“Vectorized version:” + str(1000*(toc-tic)) +”ms”) #打印一下向量\n化的版本的时间\n#非向量化的版本\nc = 0\ntic = time.time()\nfor i in range(1000000):\nc += a[i]*b[i]\ntoc = time.time()\nprint(c)\nprint(“For loop:” + str(1000*(toc-tic)) + “ms”)\n```\n　　向量化的方法几乎要快300倍。\n　　其原因是深度学习基本上由CPU或GPU来完成计算，他们都有并行化的指令，称为SIMD(单指令流多数据流)，而高级语言中的内置函数(如np.dot)可以更好地利用并行化进行计算，其中GPU比CPU更擅长SIMD处理。\n\n# 更多向量化例子\n### `u=np.exp(v)` 可以使列向量v的每一项$v_{i}$都变为$e^{v_{i}}$。\n\n    * np.log(v)——每一项求自然对数\n    * np.abs(v)——每一项求绝对值\n    * np.maximum(v,0)——每一项是否比0大\n\n### 在逻辑回归中\n　　原本需要使用二重for循环：\n```py\nJ=0,db=0\nfor i = 1 to n:\n    dw(i) = 0\nfor i = 1 to m:\n    z(i) = wx(i)+b\n    a(i) = sigmoid(z(i))\n    J += -[y(i)log(a(i))+(1-y(i)）log(1-a(i))\n    dz(i) = a(i)-y(i)\n    for j = 1 to n:\n        dw(j) += x(j)(i)dz(i)\n    db += dz(i)\nJ/= m\nfor i = 1 to n:\n    dw(i) /= m\ndb/= m\nw=w-alpha*dw\nb=b-alpha*db\n```\n　　在经过简单向量化后，代码具有一重for循环，变为：\n```py\nimport numpy as np\nJ=0,dw=np.zeros(n_x,1),db=0\nfor i = 1 to m:\n    z(i) = wx(i)+b\n    a(i) = sigmoid(z(i))\n    J += -[y(i)log(a(i))+(1-y(i)）log(1-a(i))\n    dz(i) = a(i)-y(i)\n    dw = np.dot(x,dz.T)\n    db += dz(i)\nJ/= m\ndw /= m\ndb/= m\nw=w-alpha*dw\nb=b-alpha*db\n```\n\n# 终极向量化\n##　求取z\n　　只需一行代码即可完成逻辑回归中z的计算，即`Z=np.dot(w.T,X)+b`。\n\n　　$[z^{(1)} z^{(2)}...z^{(m)}]=w^{T}X+[b b...b]=[w^{T}x^{(1)}+b,w^{T}x^{(2)}+b...w^{T}x^{(m)}+b]$ 。\n\n　　$w^{T}x^{(1)}+b$ 这是第一个元素，$w^{T}x^{(2)}+b$ 这是第二个元素， $w^{T}x^{(m)}+b$ 这是第 $m$ 个元素。\n\n　　这里在 Python 中有一个巧妙的地方，这里 𝑏 是一个实数，或者你可以说是一个 1 × 1 矩阵，只是一个普通的实数。但是当你将这个向量加上这个实数时，Python 自动把这个实数 𝑏 扩展成一个 1 × 𝑚 的行向量。所以这种情况下的操作似乎有点不可思议，它在 Python 中被称作广播(brosdcasting)。\n\n　　而$A=[a^{(1)} a^{(2)} ... a^{(m)}]=\\sigma (Z)$可以高效输出A。\n##　去掉循环\n```py\nZ = np.dot( w.T,X)+b\nA = sigma( Z )\ndZ = A - Y\ndw = 1/m*np.dot(x,dz.T)\ndb= 1/m*np.sum(dZ)\nw: = w - a*dw\nb: = b - a*db\n```","slug":"dl-5vectorization","published":1,"updated":"2021-02-23T08:04:13.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gx0026c8pve9ud18f1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"极大提高计算效率\"><a href=\"#极大提高计算效率\" class=\"headerlink\" title=\"极大提高计算效率\"></a>极大提高计算效率</h1><p>　　在逻辑回归中计算$z=w^{T}x+b$时，w，x都是列向量。</p>\n<p>　　非向量方法：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n_x)</span><br><span class=\"line\">z+=w[i]*x[i]</span><br><span class=\"line\">z+=b</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br>　　向量方法：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z=np.dot(w,x)+b</span><br></pre></td></tr></table></figure><br>　　使用一个具体的例子，<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np <span class=\"comment\">#导入 numpy 库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time <span class=\"comment\">#导入时间库</span></span><br><span class=\"line\">a = np.random.rand(<span class=\"number\">1000000</span>)</span><br><span class=\"line\">b = np.random.rand(<span class=\"number\">1000000</span>) <span class=\"comment\">#通过 round 随机得到两个一百万维度的数组</span></span><br><span class=\"line\">tic = time.time() <span class=\"comment\">#现在测量一下当前时间</span></span><br><span class=\"line\"><span class=\"comment\">#向量化的版本</span></span><br><span class=\"line\">c = np.dot(a,b)</span><br><span class=\"line\">toc = time.time()</span><br><span class=\"line\">print(“Vectorized version:” + str(<span class=\"number\">1000</span>*(toc-tic)) +”ms”) <span class=\"comment\">#打印一下向量</span></span><br><span class=\"line\">化的版本的时间</span><br><span class=\"line\"><span class=\"comment\">#非向量化的版本</span></span><br><span class=\"line\">c = <span class=\"number\">0</span></span><br><span class=\"line\">tic = time.time()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1000000</span>):</span><br><span class=\"line\">c += a[i]*b[i]</span><br><span class=\"line\">toc = time.time()</span><br><span class=\"line\">print(c)</span><br><span class=\"line\">print(“For loop:” + str(<span class=\"number\">1000</span>*(toc-tic)) + “ms”)</span><br></pre></td></tr></table></figure><br>　　向量化的方法几乎要快300倍。<br>　　其原因是深度学习基本上由CPU或GPU来完成计算，他们都有并行化的指令，称为SIMD(单指令流多数据流)，而高级语言中的内置函数(如np.dot)可以更好地利用并行化进行计算，其中GPU比CPU更擅长SIMD处理。</p>\n<h1 id=\"更多向量化例子\"><a href=\"#更多向量化例子\" class=\"headerlink\" title=\"更多向量化例子\"></a>更多向量化例子</h1><h3 id=\"u-np-exp-v-可以使列向量v的每一项-v-i-都变为-e-v-i-。\"><a href=\"#u-np-exp-v-可以使列向量v的每一项-v-i-都变为-e-v-i-。\" class=\"headerlink\" title=\"u=np.exp(v) 可以使列向量v的每一项$v_{i}$都变为$e^{v_{i}}$。\"></a><code>u=np.exp(v)</code> 可以使列向量v的每一项$v_{i}$都变为$e^{v_{i}}$。</h3><pre><code>* np.log(v)——每一项求自然对数\n* np.abs(v)——每一项求绝对值\n* np.maximum(v,0)——每一项是否比0大\n</code></pre><h3 id=\"在逻辑回归中\"><a href=\"#在逻辑回归中\" class=\"headerlink\" title=\"在逻辑回归中\"></a>在逻辑回归中</h3><p>　　原本需要使用二重for循环：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J=<span class=\"number\">0</span>,db=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to n:</span><br><span class=\"line\">    dw(i) = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to m:</span><br><span class=\"line\">    z(i) = wx(i)+b</span><br><span class=\"line\">    a(i) = sigmoid(z(i))</span><br><span class=\"line\">    J += -[y(i)log(a(i))+(<span class=\"number\">1</span>-y(i)）log(<span class=\"number\">1</span>-a(i))</span><br><span class=\"line\">    dz(i) = a(i)-y(i)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j = <span class=\"number\">1</span> to n:</span><br><span class=\"line\">        dw(j) += x(j)(i)dz(i)</span><br><span class=\"line\">    db += dz(i)</span><br><span class=\"line\">J/= m</span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to n:</span><br><span class=\"line\">    dw(i) /= m</span><br><span class=\"line\">db/= m</span><br><span class=\"line\">w=w-alpha*dw</span><br><span class=\"line\">b=b-alpha*db</span><br></pre></td></tr></table></figure><br>　　在经过简单向量化后，代码具有一重for循环，变为：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">J=<span class=\"number\">0</span>,dw=np.zeros(n_x,<span class=\"number\">1</span>),db=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to m:</span><br><span class=\"line\">    z(i) = wx(i)+b</span><br><span class=\"line\">    a(i) = sigmoid(z(i))</span><br><span class=\"line\">    J += -[y(i)log(a(i))+(<span class=\"number\">1</span>-y(i)）log(<span class=\"number\">1</span>-a(i))</span><br><span class=\"line\">    dz(i) = a(i)-y(i)</span><br><span class=\"line\">    dw = np.dot(x,dz.T)</span><br><span class=\"line\">    db += dz(i)</span><br><span class=\"line\">J/= m</span><br><span class=\"line\">dw /= m</span><br><span class=\"line\">db/= m</span><br><span class=\"line\">w=w-alpha*dw</span><br><span class=\"line\">b=b-alpha*db</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"终极向量化\"><a href=\"#终极向量化\" class=\"headerlink\" title=\"终极向量化\"></a>终极向量化</h1><h2 id=\"求取z\"><a href=\"#求取z\" class=\"headerlink\" title=\"　求取z\"></a>　求取z</h2><p>　　只需一行代码即可完成逻辑回归中z的计算，即<code>Z=np.dot(w.T,X)+b</code>。</p>\n<p>　　$[z^{(1)} z^{(2)}…z^{(m)}]=w^{T}X+[b b…b]=[w^{T}x^{(1)}+b,w^{T}x^{(2)}+b…w^{T}x^{(m)}+b]$ 。</p>\n<p>　　$w^{T}x^{(1)}+b$ 这是第一个元素，$w^{T}x^{(2)}+b$ 这是第二个元素， $w^{T}x^{(m)}+b$ 这是第 $m$ 个元素。</p>\n<p>　　这里在 Python 中有一个巧妙的地方，这里 𝑏 是一个实数，或者你可以说是一个 1 × 1 矩阵，只是一个普通的实数。但是当你将这个向量加上这个实数时，Python 自动把这个实数 𝑏 扩展成一个 1 × 𝑚 的行向量。所以这种情况下的操作似乎有点不可思议，它在 Python 中被称作广播(brosdcasting)。</p>\n<p>　　而$A=[a^{(1)} a^{(2)} … a^{(m)}]=\\sigma (Z)$可以高效输出A。</p>\n<h2 id=\"去掉循环\"><a href=\"#去掉循环\" class=\"headerlink\" title=\"　去掉循环\"></a>　去掉循环</h2><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Z = np.dot( w.T,X)+b</span><br><span class=\"line\">A = sigma( Z )</span><br><span class=\"line\">dZ = A - Y</span><br><span class=\"line\">dw = <span class=\"number\">1</span>/m*np.dot(x,dz.T)</span><br><span class=\"line\">db= <span class=\"number\">1</span>/m*np.sum(dZ)</span><br><span class=\"line\">w: = w - a*dw</span><br><span class=\"line\">b: = b - a*db</span><br></pre></td></tr></table></figure>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1771,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"极大提高计算效率\"><a href=\"#极大提高计算效率\" class=\"headerlink\" title=\"极大提高计算效率\"></a>极大提高计算效率</h1><p>　　在逻辑回归中计算$z=w^{T}x+b$时，w，x都是列向量。</p>\n<p>　　非向量方法：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n_x)</span><br><span class=\"line\">z+=w[i]*x[i]</span><br><span class=\"line\">z+=b</span><br></pre></td></tr></table></figure><br></p>","more":"<br>　　向量方法：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z=np.dot(w,x)+b</span><br></pre></td></tr></table></figure><br>　　使用一个具体的例子，<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np <span class=\"comment\">#导入 numpy 库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time <span class=\"comment\">#导入时间库</span></span><br><span class=\"line\">a = np.random.rand(<span class=\"number\">1000000</span>)</span><br><span class=\"line\">b = np.random.rand(<span class=\"number\">1000000</span>) <span class=\"comment\">#通过 round 随机得到两个一百万维度的数组</span></span><br><span class=\"line\">tic = time.time() <span class=\"comment\">#现在测量一下当前时间</span></span><br><span class=\"line\"><span class=\"comment\">#向量化的版本</span></span><br><span class=\"line\">c = np.dot(a,b)</span><br><span class=\"line\">toc = time.time()</span><br><span class=\"line\">print(“Vectorized version:” + str(<span class=\"number\">1000</span>*(toc-tic)) +”ms”) <span class=\"comment\">#打印一下向量</span></span><br><span class=\"line\">化的版本的时间</span><br><span class=\"line\"><span class=\"comment\">#非向量化的版本</span></span><br><span class=\"line\">c = <span class=\"number\">0</span></span><br><span class=\"line\">tic = time.time()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1000000</span>):</span><br><span class=\"line\">c += a[i]*b[i]</span><br><span class=\"line\">toc = time.time()</span><br><span class=\"line\">print(c)</span><br><span class=\"line\">print(“For loop:” + str(<span class=\"number\">1000</span>*(toc-tic)) + “ms”)</span><br></pre></td></tr></table></figure><br>　　向量化的方法几乎要快300倍。<br>　　其原因是深度学习基本上由CPU或GPU来完成计算，他们都有并行化的指令，称为SIMD(单指令流多数据流)，而高级语言中的内置函数(如np.dot)可以更好地利用并行化进行计算，其中GPU比CPU更擅长SIMD处理。<p></p>\n<h1 id=\"更多向量化例子\"><a href=\"#更多向量化例子\" class=\"headerlink\" title=\"更多向量化例子\"></a>更多向量化例子</h1><h3 id=\"u-np-exp-v-可以使列向量v的每一项-v-i-都变为-e-v-i-。\"><a href=\"#u-np-exp-v-可以使列向量v的每一项-v-i-都变为-e-v-i-。\" class=\"headerlink\" title=\"u=np.exp(v) 可以使列向量v的每一项$v_{i}$都变为$e^{v_{i}}$。\"></a><code>u=np.exp(v)</code> 可以使列向量v的每一项$v_{i}$都变为$e^{v_{i}}$。</h3><pre><code>* np.log(v)——每一项求自然对数\n* np.abs(v)——每一项求绝对值\n* np.maximum(v,0)——每一项是否比0大\n</code></pre><h3 id=\"在逻辑回归中\"><a href=\"#在逻辑回归中\" class=\"headerlink\" title=\"在逻辑回归中\"></a>在逻辑回归中</h3><p>　　原本需要使用二重for循环：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J=<span class=\"number\">0</span>,db=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to n:</span><br><span class=\"line\">    dw(i) = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to m:</span><br><span class=\"line\">    z(i) = wx(i)+b</span><br><span class=\"line\">    a(i) = sigmoid(z(i))</span><br><span class=\"line\">    J += -[y(i)log(a(i))+(<span class=\"number\">1</span>-y(i)）log(<span class=\"number\">1</span>-a(i))</span><br><span class=\"line\">    dz(i) = a(i)-y(i)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j = <span class=\"number\">1</span> to n:</span><br><span class=\"line\">        dw(j) += x(j)(i)dz(i)</span><br><span class=\"line\">    db += dz(i)</span><br><span class=\"line\">J/= m</span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to n:</span><br><span class=\"line\">    dw(i) /= m</span><br><span class=\"line\">db/= m</span><br><span class=\"line\">w=w-alpha*dw</span><br><span class=\"line\">b=b-alpha*db</span><br></pre></td></tr></table></figure><br>　　在经过简单向量化后，代码具有一重for循环，变为：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">J=<span class=\"number\">0</span>,dw=np.zeros(n_x,<span class=\"number\">1</span>),db=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span> to m:</span><br><span class=\"line\">    z(i) = wx(i)+b</span><br><span class=\"line\">    a(i) = sigmoid(z(i))</span><br><span class=\"line\">    J += -[y(i)log(a(i))+(<span class=\"number\">1</span>-y(i)）log(<span class=\"number\">1</span>-a(i))</span><br><span class=\"line\">    dz(i) = a(i)-y(i)</span><br><span class=\"line\">    dw = np.dot(x,dz.T)</span><br><span class=\"line\">    db += dz(i)</span><br><span class=\"line\">J/= m</span><br><span class=\"line\">dw /= m</span><br><span class=\"line\">db/= m</span><br><span class=\"line\">w=w-alpha*dw</span><br><span class=\"line\">b=b-alpha*db</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"终极向量化\"><a href=\"#终极向量化\" class=\"headerlink\" title=\"终极向量化\"></a>终极向量化</h1><h2 id=\"求取z\"><a href=\"#求取z\" class=\"headerlink\" title=\"　求取z\"></a>　求取z</h2><p>　　只需一行代码即可完成逻辑回归中z的计算，即<code>Z=np.dot(w.T,X)+b</code>。</p>\n<p>　　$[z^{(1)} z^{(2)}…z^{(m)}]=w^{T}X+[b b…b]=[w^{T}x^{(1)}+b,w^{T}x^{(2)}+b…w^{T}x^{(m)}+b]$ 。</p>\n<p>　　$w^{T}x^{(1)}+b$ 这是第一个元素，$w^{T}x^{(2)}+b$ 这是第二个元素， $w^{T}x^{(m)}+b$ 这是第 $m$ 个元素。</p>\n<p>　　这里在 Python 中有一个巧妙的地方，这里 𝑏 是一个实数，或者你可以说是一个 1 × 1 矩阵，只是一个普通的实数。但是当你将这个向量加上这个实数时，Python 自动把这个实数 𝑏 扩展成一个 1 × 𝑚 的行向量。所以这种情况下的操作似乎有点不可思议，它在 Python 中被称作广播(brosdcasting)。</p>\n<p>　　而$A=[a^{(1)} a^{(2)} … a^{(m)}]=\\sigma (Z)$可以高效输出A。</p>\n<h2 id=\"去掉循环\"><a href=\"#去掉循环\" class=\"headerlink\" title=\"　去掉循环\"></a>　去掉循环</h2><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Z = np.dot( w.T,X)+b</span><br><span class=\"line\">A = sigma( Z )</span><br><span class=\"line\">dZ = A - Y</span><br><span class=\"line\">dw = <span class=\"number\">1</span>/m*np.dot(x,dz.T)</span><br><span class=\"line\">db= <span class=\"number\">1</span>/m*np.sum(dZ)</span><br><span class=\"line\">w: = w - a*dw</span><br><span class=\"line\">b: = b - a*db</span><br></pre></td></tr></table></figure>"},{"title":"神经网络的表示和输出","copyright":false,"date":"2021-02-23T08:24:29.000Z","_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 神经网络的表示\n　　下图为一个只包含一个隐藏层的神经网络。\n![神经网络图片](L1_week3_3.png)\n<!-- more -->\n\n层名|描述\n----|-------------\n**输入层**|图中的$x_{1}$、$x_{2}$、$x_{3}$,包含神经网络的输入\n**隐藏层**|中间的一列四个结点，因在训练集中看不到，故称隐藏层\n**输出层**|最后的那个结点，负责产生预测值\n\n　　每一层的值都有表示方法，如下图：\n![神经网络符号](L1_week3_5.png)\n　　$a^{[0]}$,$a^{[1]}$,$a^{[2]}$分别表示图中的输入层，隐藏层和输出层，而$a^{[1]}$则是一个有四个隐藏层单元的1*4的列向量。\n\n{% note %}\n值得注意的是，神经网络计算层数时不算输入层，因此上图中为两层神经网络。\n{% endnote %}\n\n　　在隐藏层中将拥有两个参数$W$和$b$，我将给它们加上上标$^{[1]}$($W^{[1]}$,$b^{[1]}$)，表示这些参数是和第一层这个隐藏层有关系的。之后在这个例子中我们会看到$W$是一个4x3的矩阵，而$b$是一个4x1的向量，第一个数字4源自于我们有四个结点或隐藏层单元，然后数字3源自于这里有三个输入特征，我们之后会更加详细地讨论这些矩阵的维数，到那时你可能就更加清楚了。相似的输出层也有一些与之关联的参数$W^{[2]}$以及$b^{[2]}$。从维数上来看，它们的规模分别是1x4以及1x1。1x4是因为隐藏层有四个隐藏层单元而输出层只有一个单元。\n\n# 神经网络输出\n## 神经网络的计算\n　　下图为一次逻辑回归计算的过程，圆圈表示神经网络的计算单元，首先你按步骤计算出$z$，然后在第二步中你以**sigmoid**函数为激活函数计算$z$（得出$a$），一个神经网络只是这样子做了好多次重复计算。\n![逻辑回归计算](L1_week3_6.png)\n　　通过对隐藏层的四个单元的分别进行逻辑回归运算，得到了四组z和a的结果：\n$z^{[1]}_1 = w^{[1]T}_1x + b^{[1]}_1, a^{[1]}_1 = \\sigma(z^{[1]}_1)$\n\n$z^{[1]}_2 = w^{[1]T}_2x + b^{[1]}_2, a^{[1]}_2 = \\sigma(z^{[1]}_2)$\n\n$z^{[1]}_3 = w^{[1]T}_3x + b^{[1]}_3, a^{[1]}_3 = \\sigma(z^{[1]}_3)$\n\n$z^{[1]}_4 = w^{[1]T}_4x + b^{[1]}_4, a^{[1]}_4 = \\sigma(z^{[1]}_4)$\n\n## 向量化计算\n　　把上面四个等式向量化。向量化的过程是将神经网络中的一层神经元参数纵向堆积起来，例如隐藏层中的$w$纵向堆积起来变成一个(4,3)的矩阵，用符号$W^{[1]}$表示。\n　　因而，得到z、a的向量计算过程：\n![z计算过程](QQ截图20210305135246.jpg)\n![a计算过程](QQ截图20210305135223.jpg)\n　　对于需要计算的两层参数，列出下图中的两组计算式。\n![隐藏层、输出层参数计算](L1_week3_7.png)\n　　最终可以得到一个(1,1)的$z^{[2]}$和$a^{[2]}$。\n\n## 多样本的向量化\n　　对于每一个训练样本i，都进行上述的四个等式的计算：\n\n$z^{[1]\\(i\\)}=W^{[1]\\(i\\)}x^{(i)}+b^{[1]\\(i\\)}$\n\n$a^{[1]\\(i\\)}=\\sigma(z^{[1]\\(i\\)})$\n\n$z^{[2]\\(i\\)}=W^{[2]\\(i\\)}a^{[1]\\(i\\)}+b^{[2]\\(i\\)}$\n\n$a^{[2]\\(i\\)}=\\sigma(z^{[2]\\(i\\)})$\n\n　　当我们进行归纳推演，不难得出如下向量计算式：\n\n$Z^{[1]}=W^{[1]}X+b^{[1]}$\n\n$A^{[1]}=\\sigma(Z^{[1]})$\n\n$Z^{[2]}=W^{[2]}A^{[1]}+b^{[2]}$\n\n$A^{[2]}=\\sigma(Z^{[2]})$\n\n其中，X为下图所示\n![向量X](QQ截图20210305142218.jpg)\n$Z^{[1]}$为\n![向量Z^1](QQ截图20210305142539.jpg)\n$A^{[1]}$为\n![向量A^1](QQ截图20210305142550.jpg)\n　　横向计算为每个训练样本，纵向为不同隐藏层单元。","source":"_posts/dl-6neural-network-representation.md","raw":"---\ntitle: 神经网络的表示和输出\ncopyright: false\ndate: 2021-02-23 16:24:29\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 神经网络的表示\n　　下图为一个只包含一个隐藏层的神经网络。\n![神经网络图片](L1_week3_3.png)\n<!-- more -->\n\n层名|描述\n----|-------------\n**输入层**|图中的$x_{1}$、$x_{2}$、$x_{3}$,包含神经网络的输入\n**隐藏层**|中间的一列四个结点，因在训练集中看不到，故称隐藏层\n**输出层**|最后的那个结点，负责产生预测值\n\n　　每一层的值都有表示方法，如下图：\n![神经网络符号](L1_week3_5.png)\n　　$a^{[0]}$,$a^{[1]}$,$a^{[2]}$分别表示图中的输入层，隐藏层和输出层，而$a^{[1]}$则是一个有四个隐藏层单元的1*4的列向量。\n\n{% note %}\n值得注意的是，神经网络计算层数时不算输入层，因此上图中为两层神经网络。\n{% endnote %}\n\n　　在隐藏层中将拥有两个参数$W$和$b$，我将给它们加上上标$^{[1]}$($W^{[1]}$,$b^{[1]}$)，表示这些参数是和第一层这个隐藏层有关系的。之后在这个例子中我们会看到$W$是一个4x3的矩阵，而$b$是一个4x1的向量，第一个数字4源自于我们有四个结点或隐藏层单元，然后数字3源自于这里有三个输入特征，我们之后会更加详细地讨论这些矩阵的维数，到那时你可能就更加清楚了。相似的输出层也有一些与之关联的参数$W^{[2]}$以及$b^{[2]}$。从维数上来看，它们的规模分别是1x4以及1x1。1x4是因为隐藏层有四个隐藏层单元而输出层只有一个单元。\n\n# 神经网络输出\n## 神经网络的计算\n　　下图为一次逻辑回归计算的过程，圆圈表示神经网络的计算单元，首先你按步骤计算出$z$，然后在第二步中你以**sigmoid**函数为激活函数计算$z$（得出$a$），一个神经网络只是这样子做了好多次重复计算。\n![逻辑回归计算](L1_week3_6.png)\n　　通过对隐藏层的四个单元的分别进行逻辑回归运算，得到了四组z和a的结果：\n$z^{[1]}_1 = w^{[1]T}_1x + b^{[1]}_1, a^{[1]}_1 = \\sigma(z^{[1]}_1)$\n\n$z^{[1]}_2 = w^{[1]T}_2x + b^{[1]}_2, a^{[1]}_2 = \\sigma(z^{[1]}_2)$\n\n$z^{[1]}_3 = w^{[1]T}_3x + b^{[1]}_3, a^{[1]}_3 = \\sigma(z^{[1]}_3)$\n\n$z^{[1]}_4 = w^{[1]T}_4x + b^{[1]}_4, a^{[1]}_4 = \\sigma(z^{[1]}_4)$\n\n## 向量化计算\n　　把上面四个等式向量化。向量化的过程是将神经网络中的一层神经元参数纵向堆积起来，例如隐藏层中的$w$纵向堆积起来变成一个(4,3)的矩阵，用符号$W^{[1]}$表示。\n　　因而，得到z、a的向量计算过程：\n![z计算过程](QQ截图20210305135246.jpg)\n![a计算过程](QQ截图20210305135223.jpg)\n　　对于需要计算的两层参数，列出下图中的两组计算式。\n![隐藏层、输出层参数计算](L1_week3_7.png)\n　　最终可以得到一个(1,1)的$z^{[2]}$和$a^{[2]}$。\n\n## 多样本的向量化\n　　对于每一个训练样本i，都进行上述的四个等式的计算：\n\n$z^{[1]\\(i\\)}=W^{[1]\\(i\\)}x^{(i)}+b^{[1]\\(i\\)}$\n\n$a^{[1]\\(i\\)}=\\sigma(z^{[1]\\(i\\)})$\n\n$z^{[2]\\(i\\)}=W^{[2]\\(i\\)}a^{[1]\\(i\\)}+b^{[2]\\(i\\)}$\n\n$a^{[2]\\(i\\)}=\\sigma(z^{[2]\\(i\\)})$\n\n　　当我们进行归纳推演，不难得出如下向量计算式：\n\n$Z^{[1]}=W^{[1]}X+b^{[1]}$\n\n$A^{[1]}=\\sigma(Z^{[1]})$\n\n$Z^{[2]}=W^{[2]}A^{[1]}+b^{[2]}$\n\n$A^{[2]}=\\sigma(Z^{[2]})$\n\n其中，X为下图所示\n![向量X](QQ截图20210305142218.jpg)\n$Z^{[1]}$为\n![向量Z^1](QQ截图20210305142539.jpg)\n$A^{[1]}$为\n![向量A^1](QQ截图20210305142550.jpg)\n　　横向计算为每个训练样本，纵向为不同隐藏层单元。","slug":"dl-6neural-network-representation","published":1,"updated":"2021-03-08T06:32:24.912Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gy0028c8pvcm3r2c8w","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"神经网络的表示\"><a href=\"#神经网络的表示\" class=\"headerlink\" title=\"神经网络的表示\"></a>神经网络的表示</h1><p>　　下图为一个只包含一个隐藏层的神经网络。<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_3.png\" alt=\"神经网络图片\"><br><a id=\"more\"></a></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>层名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>输入层</strong></td>\n<td>图中的$x_{1}$、$x_{2}$、$x_{3}$,包含神经网络的输入</td>\n</tr>\n<tr>\n<td><strong>隐藏层</strong></td>\n<td>中间的一列四个结点，因在训练集中看不到，故称隐藏层</td>\n</tr>\n<tr>\n<td><strong>输出层</strong></td>\n<td>最后的那个结点，负责产生预测值</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>　　每一层的值都有表示方法，如下图：<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_5.png\" alt=\"神经网络符号\"><br>　　$a^{[0]}$,$a^{[1]}$,$a^{[2]}$分别表示图中的输入层，隐藏层和输出层，而$a^{[1]}$则是一个有四个隐藏层单元的1*4的列向量。</p>\n<div class=\"note \">\n            <p>值得注意的是，神经网络计算层数时不算输入层，因此上图中为两层神经网络。</p>\n          </div>\n<p>　　在隐藏层中将拥有两个参数$W$和$b$，我将给它们加上上标$^{[1]}$($W^{[1]}$,$b^{[1]}$)，表示这些参数是和第一层这个隐藏层有关系的。之后在这个例子中我们会看到$W$是一个4x3的矩阵，而$b$是一个4x1的向量，第一个数字4源自于我们有四个结点或隐藏层单元，然后数字3源自于这里有三个输入特征，我们之后会更加详细地讨论这些矩阵的维数，到那时你可能就更加清楚了。相似的输出层也有一些与之关联的参数$W^{[2]}$以及$b^{[2]}$。从维数上来看，它们的规模分别是1x4以及1x1。1x4是因为隐藏层有四个隐藏层单元而输出层只有一个单元。</p>\n<h1 id=\"神经网络输出\"><a href=\"#神经网络输出\" class=\"headerlink\" title=\"神经网络输出\"></a>神经网络输出</h1><h2 id=\"神经网络的计算\"><a href=\"#神经网络的计算\" class=\"headerlink\" title=\"神经网络的计算\"></a>神经网络的计算</h2><p>　　下图为一次逻辑回归计算的过程，圆圈表示神经网络的计算单元，首先你按步骤计算出$z$，然后在第二步中你以<strong>sigmoid</strong>函数为激活函数计算$z$（得出$a$），一个神经网络只是这样子做了好多次重复计算。<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_6.png\" alt=\"逻辑回归计算\"><br>　　通过对隐藏层的四个单元的分别进行逻辑回归运算，得到了四组z和a的结果：<br>$z^{[1]}_1 = w^{[1]T}_1x + b^{[1]}_1, a^{[1]}_1 = \\sigma(z^{[1]}_1)$</p>\n<p>$z^{[1]}_2 = w^{[1]T}_2x + b^{[1]}_2, a^{[1]}_2 = \\sigma(z^{[1]}_2)$</p>\n<p>$z^{[1]}_3 = w^{[1]T}_3x + b^{[1]}_3, a^{[1]}_3 = \\sigma(z^{[1]}_3)$</p>\n<p>$z^{[1]}_4 = w^{[1]T}_4x + b^{[1]}_4, a^{[1]}_4 = \\sigma(z^{[1]}_4)$</p>\n<h2 id=\"向量化计算\"><a href=\"#向量化计算\" class=\"headerlink\" title=\"向量化计算\"></a>向量化计算</h2><p>　　把上面四个等式向量化。向量化的过程是将神经网络中的一层神经元参数纵向堆积起来，例如隐藏层中的$w$纵向堆积起来变成一个(4,3)的矩阵，用符号$W^{[1]}$表示。<br>　　因而，得到z、a的向量计算过程：<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305135246.jpg\" alt=\"z计算过程\"><br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305135223.jpg\" alt=\"a计算过程\"><br>　　对于需要计算的两层参数，列出下图中的两组计算式。<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_7.png\" alt=\"隐藏层、输出层参数计算\"><br>　　最终可以得到一个(1,1)的$z^{[2]}$和$a^{[2]}$。</p>\n<h2 id=\"多样本的向量化\"><a href=\"#多样本的向量化\" class=\"headerlink\" title=\"多样本的向量化\"></a>多样本的向量化</h2><p>　　对于每一个训练样本i，都进行上述的四个等式的计算：</p>\n<p>$z^{[1](i)}=W^{[1](i)}x^{(i)}+b^{[1](i)}$</p>\n<p>$a^{[1](i)}=\\sigma(z^{[1](i)})$</p>\n<p>$z^{[2](i)}=W^{[2](i)}a^{[1](i)}+b^{[2](i)}$</p>\n<p>$a^{[2](i)}=\\sigma(z^{[2](i)})$</p>\n<p>　　当我们进行归纳推演，不难得出如下向量计算式：</p>\n<p>$Z^{[1]}=W^{[1]}X+b^{[1]}$</p>\n<p>$A^{[1]}=\\sigma(Z^{[1]})$</p>\n<p>$Z^{[2]}=W^{[2]}A^{[1]}+b^{[2]}$</p>\n<p>$A^{[2]}=\\sigma(Z^{[2]})$</p>\n<p>其中，X为下图所示<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305142218.jpg\" alt=\"向量X\"><br>$Z^{[1]}$为<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305142539.jpg\" alt=\"向量Z^1\"><br>$A^{[1]}$为<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305142550.jpg\" alt=\"向量A^1\"><br>　　横向计算为每个训练样本，纵向为不同隐藏层单元。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1472,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"神经网络的表示\"><a href=\"#神经网络的表示\" class=\"headerlink\" title=\"神经网络的表示\"></a>神经网络的表示</h1><p>　　下图为一个只包含一个隐藏层的神经网络。<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_3.png\" alt=\"神经网络图片\"><br></p>","more":"<p></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>层名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>输入层</strong></td>\n<td>图中的$x_{1}$、$x_{2}$、$x_{3}$,包含神经网络的输入</td>\n</tr>\n<tr>\n<td><strong>隐藏层</strong></td>\n<td>中间的一列四个结点，因在训练集中看不到，故称隐藏层</td>\n</tr>\n<tr>\n<td><strong>输出层</strong></td>\n<td>最后的那个结点，负责产生预测值</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>　　每一层的值都有表示方法，如下图：<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_5.png\" alt=\"神经网络符号\"><br>　　$a^{[0]}$,$a^{[1]}$,$a^{[2]}$分别表示图中的输入层，隐藏层和输出层，而$a^{[1]}$则是一个有四个隐藏层单元的1*4的列向量。</p>\n<div class=\"note \">\n            <p>值得注意的是，神经网络计算层数时不算输入层，因此上图中为两层神经网络。</p>\n          </div>\n<p>　　在隐藏层中将拥有两个参数$W$和$b$，我将给它们加上上标$^{[1]}$($W^{[1]}$,$b^{[1]}$)，表示这些参数是和第一层这个隐藏层有关系的。之后在这个例子中我们会看到$W$是一个4x3的矩阵，而$b$是一个4x1的向量，第一个数字4源自于我们有四个结点或隐藏层单元，然后数字3源自于这里有三个输入特征，我们之后会更加详细地讨论这些矩阵的维数，到那时你可能就更加清楚了。相似的输出层也有一些与之关联的参数$W^{[2]}$以及$b^{[2]}$。从维数上来看，它们的规模分别是1x4以及1x1。1x4是因为隐藏层有四个隐藏层单元而输出层只有一个单元。</p>\n<h1 id=\"神经网络输出\"><a href=\"#神经网络输出\" class=\"headerlink\" title=\"神经网络输出\"></a>神经网络输出</h1><h2 id=\"神经网络的计算\"><a href=\"#神经网络的计算\" class=\"headerlink\" title=\"神经网络的计算\"></a>神经网络的计算</h2><p>　　下图为一次逻辑回归计算的过程，圆圈表示神经网络的计算单元，首先你按步骤计算出$z$，然后在第二步中你以<strong>sigmoid</strong>函数为激活函数计算$z$（得出$a$），一个神经网络只是这样子做了好多次重复计算。<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_6.png\" alt=\"逻辑回归计算\"><br>　　通过对隐藏层的四个单元的分别进行逻辑回归运算，得到了四组z和a的结果：<br>$z^{[1]}_1 = w^{[1]T}_1x + b^{[1]}_1, a^{[1]}_1 = \\sigma(z^{[1]}_1)$</p>\n<p>$z^{[1]}_2 = w^{[1]T}_2x + b^{[1]}_2, a^{[1]}_2 = \\sigma(z^{[1]}_2)$</p>\n<p>$z^{[1]}_3 = w^{[1]T}_3x + b^{[1]}_3, a^{[1]}_3 = \\sigma(z^{[1]}_3)$</p>\n<p>$z^{[1]}_4 = w^{[1]T}_4x + b^{[1]}_4, a^{[1]}_4 = \\sigma(z^{[1]}_4)$</p>\n<h2 id=\"向量化计算\"><a href=\"#向量化计算\" class=\"headerlink\" title=\"向量化计算\"></a>向量化计算</h2><p>　　把上面四个等式向量化。向量化的过程是将神经网络中的一层神经元参数纵向堆积起来，例如隐藏层中的$w$纵向堆积起来变成一个(4,3)的矩阵，用符号$W^{[1]}$表示。<br>　　因而，得到z、a的向量计算过程：<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305135246.jpg\" alt=\"z计算过程\"><br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305135223.jpg\" alt=\"a计算过程\"><br>　　对于需要计算的两层参数，列出下图中的两组计算式。<br><img src=\"/posts/dl-6neural-network-representation/L1_week3_7.png\" alt=\"隐藏层、输出层参数计算\"><br>　　最终可以得到一个(1,1)的$z^{[2]}$和$a^{[2]}$。</p>\n<h2 id=\"多样本的向量化\"><a href=\"#多样本的向量化\" class=\"headerlink\" title=\"多样本的向量化\"></a>多样本的向量化</h2><p>　　对于每一个训练样本i，都进行上述的四个等式的计算：</p>\n<p>$z^{[1](i)}=W^{[1](i)}x^{(i)}+b^{[1](i)}$</p>\n<p>$a^{[1](i)}=\\sigma(z^{[1](i)})$</p>\n<p>$z^{[2](i)}=W^{[2](i)}a^{[1](i)}+b^{[2](i)}$</p>\n<p>$a^{[2](i)}=\\sigma(z^{[2](i)})$</p>\n<p>　　当我们进行归纳推演，不难得出如下向量计算式：</p>\n<p>$Z^{[1]}=W^{[1]}X+b^{[1]}$</p>\n<p>$A^{[1]}=\\sigma(Z^{[1]})$</p>\n<p>$Z^{[2]}=W^{[2]}A^{[1]}+b^{[2]}$</p>\n<p>$A^{[2]}=\\sigma(Z^{[2]})$</p>\n<p>其中，X为下图所示<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305142218.jpg\" alt=\"向量X\"><br>$Z^{[1]}$为<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305142539.jpg\" alt=\"向量Z^1\"><br>$A^{[1]}$为<br><img src=\"/posts/dl-6neural-network-representation/QQ截图20210305142550.jpg\" alt=\"向量A^1\"><br>　　横向计算为每个训练样本，纵向为不同隐藏层单元。</p>"},{"title":"神经网络的激活函数","copyright":false,"date":"2021-03-05T06:47:20.000Z","_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 不同的激活函数\n## 下图为4种常见激活函数\n![激活函数图像](L1_week3_9.jpg)\n<!-- more -->\n\n### 1.sigmoid函数\n　　$a = \\sigma(z) = \\frac{1}{1 + e^{- z}}$，其值介于0和1之间。\n\n### 2.tanh函数\n　　激活函数g(z)可以是$a = tanh(z) = \\frac{e^{z} - e^{- z}}{e^{z} + e^{- z}}$,其值介于-1和1之间，在大多情况下使用该函数的效果优于sigmoid函数，但是也有例外，如二分类问题。\n\n　　每一层可以使用不同的激活函数，表示为$g^{[i]}()$,i表示层数。\n\n　　tanh和sigmoid函数的共同问题是z很大或很小时导数的梯度过小，会使梯度下降算法效率降低。\n\n### 3.ReLU函数\n　　ReLU函数的公式为$a=max(0,z)$,z大于0时导数为1，小于0时导数为0\n\n### 4.Leaky ReLU函数\n　　公式为$a=max(0.01z,z)$,z大于1时导数为1，z小于0时，导数介于0到1之间。\n\n　　**sigmoid函数只适合作为二分类的输出层激活函数，其他层使用ReLU作为激活函数。如果不知道使用什么函数，那就默认使用ReLU函数**\n\n## 优劣\n* ReLU函数不存在导数靠近0的时刻，故效率高\n* sigmoid 和 tanh 函数的导数在正负饱和区的梯度都会接近于 0，这会造成梯度弥散，而 Relu 和 Leaky ReLu 函数大于 0 部分都为常数，不会产生梯度弥散现象。(同时应该注意到的是，Relu 进入负半区的时候，梯度为 0，神经元此时不会训练，产生所谓的稀疏性，而 Leaky ReLu 不会有这问题)\n* z在 ReLu 的梯度一半都是 0，但是，有足够的隐藏层使得z值大于 0，所以对大多数的训练数据来说学习过程仍然可以很快。\n\n注意：不能在隐藏层用线性激活函数，可以用 ReLU 或者 tanh 或者 leaky ReLU 或者其他的非线性激活函数，唯一可以用线性激活函数的通常就是输出层\n\n# 激活函数的导数\n## sigmoid函数的导数\n　　$a= g(z)$， $g^{'}(z)=\\frac{d}{dz}g(z)={\\frac{1}{1 + e^{-z}} (1-\\frac{1}{1 + e^{-z}})}=g(z)(1-g(z))=a(1-a)$，故只需求出a就可知道其导数。\n\n## tanh函数的导数\n　　$a = g(z) = tanh(z) = \\frac{e^{z} - e^{-z}}{e^{z} + e^{-z}} $\n\n　　$g^{'}(z)=\\frac{d}{dz}g(z) = 1 - (tanh(z))^{2}=1-a^{2}$\n\n## ReLU函数\n　　z大于0时，导数为1；小于0时导数为0。","source":"_posts/dl-7activation-functions.md","raw":"---\ntitle: 神经网络的激活函数\ncopyright: false\ndate: 2021-03-05 14:47:20\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 不同的激活函数\n## 下图为4种常见激活函数\n![激活函数图像](L1_week3_9.jpg)\n<!-- more -->\n\n### 1.sigmoid函数\n　　$a = \\sigma(z) = \\frac{1}{1 + e^{- z}}$，其值介于0和1之间。\n\n### 2.tanh函数\n　　激活函数g(z)可以是$a = tanh(z) = \\frac{e^{z} - e^{- z}}{e^{z} + e^{- z}}$,其值介于-1和1之间，在大多情况下使用该函数的效果优于sigmoid函数，但是也有例外，如二分类问题。\n\n　　每一层可以使用不同的激活函数，表示为$g^{[i]}()$,i表示层数。\n\n　　tanh和sigmoid函数的共同问题是z很大或很小时导数的梯度过小，会使梯度下降算法效率降低。\n\n### 3.ReLU函数\n　　ReLU函数的公式为$a=max(0,z)$,z大于0时导数为1，小于0时导数为0\n\n### 4.Leaky ReLU函数\n　　公式为$a=max(0.01z,z)$,z大于1时导数为1，z小于0时，导数介于0到1之间。\n\n　　**sigmoid函数只适合作为二分类的输出层激活函数，其他层使用ReLU作为激活函数。如果不知道使用什么函数，那就默认使用ReLU函数**\n\n## 优劣\n* ReLU函数不存在导数靠近0的时刻，故效率高\n* sigmoid 和 tanh 函数的导数在正负饱和区的梯度都会接近于 0，这会造成梯度弥散，而 Relu 和 Leaky ReLu 函数大于 0 部分都为常数，不会产生梯度弥散现象。(同时应该注意到的是，Relu 进入负半区的时候，梯度为 0，神经元此时不会训练，产生所谓的稀疏性，而 Leaky ReLu 不会有这问题)\n* z在 ReLu 的梯度一半都是 0，但是，有足够的隐藏层使得z值大于 0，所以对大多数的训练数据来说学习过程仍然可以很快。\n\n注意：不能在隐藏层用线性激活函数，可以用 ReLU 或者 tanh 或者 leaky ReLU 或者其他的非线性激活函数，唯一可以用线性激活函数的通常就是输出层\n\n# 激活函数的导数\n## sigmoid函数的导数\n　　$a= g(z)$， $g^{'}(z)=\\frac{d}{dz}g(z)={\\frac{1}{1 + e^{-z}} (1-\\frac{1}{1 + e^{-z}})}=g(z)(1-g(z))=a(1-a)$，故只需求出a就可知道其导数。\n\n## tanh函数的导数\n　　$a = g(z) = tanh(z) = \\frac{e^{z} - e^{-z}}{e^{z} + e^{-z}} $\n\n　　$g^{'}(z)=\\frac{d}{dz}g(z) = 1 - (tanh(z))^{2}=1-a^{2}$\n\n## ReLU函数\n　　z大于0时，导数为1；小于0时导数为0。","slug":"dl-7activation-functions","published":1,"updated":"2021-03-07T04:50:03.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0gz002cc8pvfrozda52","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"不同的激活函数\"><a href=\"#不同的激活函数\" class=\"headerlink\" title=\"不同的激活函数\"></a>不同的激活函数</h1><h2 id=\"下图为4种常见激活函数\"><a href=\"#下图为4种常见激活函数\" class=\"headerlink\" title=\"下图为4种常见激活函数\"></a>下图为4种常见激活函数</h2><p><img src=\"/posts/dl-7activation-functions/L1_week3_9.jpg\" alt=\"激活函数图像\"><br><a id=\"more\"></a></p>\n<h3 id=\"1-sigmoid函数\"><a href=\"#1-sigmoid函数\" class=\"headerlink\" title=\"1.sigmoid函数\"></a>1.sigmoid函数</h3><p>　　$a = \\sigma(z) = \\frac{1}{1 + e^{- z}}$，其值介于0和1之间。</p>\n<h3 id=\"2-tanh函数\"><a href=\"#2-tanh函数\" class=\"headerlink\" title=\"2.tanh函数\"></a>2.tanh函数</h3><p>　　激活函数g(z)可以是$a = tanh(z) = \\frac{e^{z} - e^{- z}}{e^{z} + e^{- z}}$,其值介于-1和1之间，在大多情况下使用该函数的效果优于sigmoid函数，但是也有例外，如二分类问题。</p>\n<p>　　每一层可以使用不同的激活函数，表示为$g^{[i]}()$,i表示层数。</p>\n<p>　　tanh和sigmoid函数的共同问题是z很大或很小时导数的梯度过小，会使梯度下降算法效率降低。</p>\n<h3 id=\"3-ReLU函数\"><a href=\"#3-ReLU函数\" class=\"headerlink\" title=\"3.ReLU函数\"></a>3.ReLU函数</h3><p>　　ReLU函数的公式为$a=max(0,z)$,z大于0时导数为1，小于0时导数为0</p>\n<h3 id=\"4-Leaky-ReLU函数\"><a href=\"#4-Leaky-ReLU函数\" class=\"headerlink\" title=\"4.Leaky ReLU函数\"></a>4.Leaky ReLU函数</h3><p>　　公式为$a=max(0.01z,z)$,z大于1时导数为1，z小于0时，导数介于0到1之间。</p>\n<p>　　<strong>sigmoid函数只适合作为二分类的输出层激活函数，其他层使用ReLU作为激活函数。如果不知道使用什么函数，那就默认使用ReLU函数</strong></p>\n<h2 id=\"优劣\"><a href=\"#优劣\" class=\"headerlink\" title=\"优劣\"></a>优劣</h2><ul>\n<li>ReLU函数不存在导数靠近0的时刻，故效率高</li>\n<li>sigmoid 和 tanh 函数的导数在正负饱和区的梯度都会接近于 0，这会造成梯度弥散，而 Relu 和 Leaky ReLu 函数大于 0 部分都为常数，不会产生梯度弥散现象。(同时应该注意到的是，Relu 进入负半区的时候，梯度为 0，神经元此时不会训练，产生所谓的稀疏性，而 Leaky ReLu 不会有这问题)</li>\n<li>z在 ReLu 的梯度一半都是 0，但是，有足够的隐藏层使得z值大于 0，所以对大多数的训练数据来说学习过程仍然可以很快。</li>\n</ul>\n<p>注意：不能在隐藏层用线性激活函数，可以用 ReLU 或者 tanh 或者 leaky ReLU 或者其他的非线性激活函数，唯一可以用线性激活函数的通常就是输出层</p>\n<h1 id=\"激活函数的导数\"><a href=\"#激活函数的导数\" class=\"headerlink\" title=\"激活函数的导数\"></a>激活函数的导数</h1><h2 id=\"sigmoid函数的导数\"><a href=\"#sigmoid函数的导数\" class=\"headerlink\" title=\"sigmoid函数的导数\"></a>sigmoid函数的导数</h2><p>　　$a= g(z)$， $g^{‘}(z)=\\frac{d}{dz}g(z)={\\frac{1}{1 + e^{-z}} (1-\\frac{1}{1 + e^{-z}})}=g(z)(1-g(z))=a(1-a)$，故只需求出a就可知道其导数。</p>\n<h2 id=\"tanh函数的导数\"><a href=\"#tanh函数的导数\" class=\"headerlink\" title=\"tanh函数的导数\"></a>tanh函数的导数</h2><p>　　$a = g(z) = tanh(z) = \\frac{e^{z} - e^{-z}}{e^{z} + e^{-z}} $</p>\n<p>　　$g^{‘}(z)=\\frac{d}{dz}g(z) = 1 - (tanh(z))^{2}=1-a^{2}$</p>\n<h2 id=\"ReLU函数\"><a href=\"#ReLU函数\" class=\"headerlink\" title=\"ReLU函数\"></a>ReLU函数</h2><p>　　z大于0时，导数为1；小于0时导数为0。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1043,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"不同的激活函数\"><a href=\"#不同的激活函数\" class=\"headerlink\" title=\"不同的激活函数\"></a>不同的激活函数</h1><h2 id=\"下图为4种常见激活函数\"><a href=\"#下图为4种常见激活函数\" class=\"headerlink\" title=\"下图为4种常见激活函数\"></a>下图为4种常见激活函数</h2><p><img src=\"/posts/dl-7activation-functions/L1_week3_9.jpg\" alt=\"激活函数图像\"><br></p>","more":"<p></p>\n<h3 id=\"1-sigmoid函数\"><a href=\"#1-sigmoid函数\" class=\"headerlink\" title=\"1.sigmoid函数\"></a>1.sigmoid函数</h3><p>　　$a = \\sigma(z) = \\frac{1}{1 + e^{- z}}$，其值介于0和1之间。</p>\n<h3 id=\"2-tanh函数\"><a href=\"#2-tanh函数\" class=\"headerlink\" title=\"2.tanh函数\"></a>2.tanh函数</h3><p>　　激活函数g(z)可以是$a = tanh(z) = \\frac{e^{z} - e^{- z}}{e^{z} + e^{- z}}$,其值介于-1和1之间，在大多情况下使用该函数的效果优于sigmoid函数，但是也有例外，如二分类问题。</p>\n<p>　　每一层可以使用不同的激活函数，表示为$g^{[i]}()$,i表示层数。</p>\n<p>　　tanh和sigmoid函数的共同问题是z很大或很小时导数的梯度过小，会使梯度下降算法效率降低。</p>\n<h3 id=\"3-ReLU函数\"><a href=\"#3-ReLU函数\" class=\"headerlink\" title=\"3.ReLU函数\"></a>3.ReLU函数</h3><p>　　ReLU函数的公式为$a=max(0,z)$,z大于0时导数为1，小于0时导数为0</p>\n<h3 id=\"4-Leaky-ReLU函数\"><a href=\"#4-Leaky-ReLU函数\" class=\"headerlink\" title=\"4.Leaky ReLU函数\"></a>4.Leaky ReLU函数</h3><p>　　公式为$a=max(0.01z,z)$,z大于1时导数为1，z小于0时，导数介于0到1之间。</p>\n<p>　　<strong>sigmoid函数只适合作为二分类的输出层激活函数，其他层使用ReLU作为激活函数。如果不知道使用什么函数，那就默认使用ReLU函数</strong></p>\n<h2 id=\"优劣\"><a href=\"#优劣\" class=\"headerlink\" title=\"优劣\"></a>优劣</h2><ul>\n<li>ReLU函数不存在导数靠近0的时刻，故效率高</li>\n<li>sigmoid 和 tanh 函数的导数在正负饱和区的梯度都会接近于 0，这会造成梯度弥散，而 Relu 和 Leaky ReLu 函数大于 0 部分都为常数，不会产生梯度弥散现象。(同时应该注意到的是，Relu 进入负半区的时候，梯度为 0，神经元此时不会训练，产生所谓的稀疏性，而 Leaky ReLu 不会有这问题)</li>\n<li>z在 ReLu 的梯度一半都是 0，但是，有足够的隐藏层使得z值大于 0，所以对大多数的训练数据来说学习过程仍然可以很快。</li>\n</ul>\n<p>注意：不能在隐藏层用线性激活函数，可以用 ReLU 或者 tanh 或者 leaky ReLU 或者其他的非线性激活函数，唯一可以用线性激活函数的通常就是输出层</p>\n<h1 id=\"激活函数的导数\"><a href=\"#激活函数的导数\" class=\"headerlink\" title=\"激活函数的导数\"></a>激活函数的导数</h1><h2 id=\"sigmoid函数的导数\"><a href=\"#sigmoid函数的导数\" class=\"headerlink\" title=\"sigmoid函数的导数\"></a>sigmoid函数的导数</h2><p>　　$a= g(z)$， $g^{‘}(z)=\\frac{d}{dz}g(z)={\\frac{1}{1 + e^{-z}} (1-\\frac{1}{1 + e^{-z}})}=g(z)(1-g(z))=a(1-a)$，故只需求出a就可知道其导数。</p>\n<h2 id=\"tanh函数的导数\"><a href=\"#tanh函数的导数\" class=\"headerlink\" title=\"tanh函数的导数\"></a>tanh函数的导数</h2><p>　　$a = g(z) = tanh(z) = \\frac{e^{z} - e^{-z}}{e^{z} + e^{-z}} $</p>\n<p>　　$g^{‘}(z)=\\frac{d}{dz}g(z) = 1 - (tanh(z))^{2}=1-a^{2}$</p>\n<h2 id=\"ReLU函数\"><a href=\"#ReLU函数\" class=\"headerlink\" title=\"ReLU函数\"></a>ReLU函数</h2><p>　　z大于0时，导数为1；小于0时导数为0。</p>"},{"title":"神经网络中的梯度下降","copyright":false,"date":"2021-03-07T04:52:47.000Z","_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n# 梯度下降的计算过程\n　　单隐层神经网络会有$W^{[1]}$，$b^{[1]}$，$W^{[2]}$，$b^{[2]}$这些参数，还有个$n_x$表示输入特征的个数，$n^{[1]}$表示隐藏单元个数，$n^{[2]}$表示输出单元个数。\n<!-- more -->\n\n　　在我们的例子中，我们只介绍过的这种情况，那么参数:\n\n　　矩阵$W^{[1]}$的维度就是($n^{[1]}, n^{[0]}$)，$b^{[1]}$就是$n^{[1]}$维向量，可以写成$(n^{[1]}, 1)$，就是一个的列向量。\n矩阵$W^{[2]}$的维度就是($n^{[2]}, n^{[1]}$)，$b^{[2]}$的维度就是$(n^{[2]},1)$维度。\n\n　　你还有一个神经网络的成本函数，假设你在做二分类任务，那么你的成本函数等于：\n\n**Cost function**:\n公式：$J(W^{[1]},b^{[1]},W^{[2]},b^{[2]}) = {\\frac{1}{m}}\\sum_{i=1}^mL(\\hat{y}, y)$\n**loss function**和之前做**logistic**回归完全一样。\n\n## 训练参数公式\n　　训练参数需要做梯度下降，在训练神经网络的时候，随机初始化参数很重要，而不是初始化成全零。当你参数初始化成某些值后，每次梯度下降都会循环计算以下预测值：\n\n　　$\\hat{y}^{(i)},(i=1,2,…,m)$\n\n公式3.28：$dW^{[1]} = \\frac{dJ}{dW^{[1]}},db^{[1]} = \\frac{dJ}{db^{[1]}}$\n\n公式3.29：${d}W^{[2]} = \\frac{dJ}{dW^{[2]}},{d}b^{[2]} = \\frac{dJ}{db^{[2]}}$\n\n公式3.30：$W^{[1]}\\implies{W^{[1]} - adW^{[1]}},b^{[1]}\\implies{b^{[1]} -adb^{[1]}}$\n\n公式3.31：$W^{[2]}\\implies{W^{[2]} - \\alpha{\\rm d}W^{[2]}},b^{[2]}\\implies{b^{[2]} - \\alpha{\\rm d}b^{[2]}}$\n\n## 传播公式\n### 正向传播方程如下：\n**forward propagation**：\n\n(1)$z^{[1]} = W^{[1]}x + b^{[1]}$\n\n(2)$a^{[1]} = \\sigma(z^{[1]})$\n\n(3)$z^{[2]} = W^{[2]}a^{[1]} + b^{[2]}$\n\n(4)$a^{[2]} = g^{[2]}(z^{[z]}) = \\sigma(z^{[2]})$\n\n### 反向传播方程如下:\n**back propagation**：\n\n公式3.32：$ dZ^{[2]} = A^{[2]} - Y , Y = \\begin{bmatrix}y^{[1]} & y^{[2]} & \\cdots & y^{[m]}\\\\ \\end{bmatrix} $\n\n公式3.33：$ dW^{[2]} = {\\frac{1}{m}}dZ^{[2]}A^{[1]T} $\n\n公式3.34：$ {\\rm d}b^{[2]} = {\\frac{1}{m}}np.sum({d}z^{[2]},axis=1,keepdims=True)$\n\n公式3.35：![](QQ截图20210307171037.jpg)\n\n公式3.36：$dW^{[1]} = {\\frac{1}{m}}dZ^{[1]}x^{T}$\n\n公式3.37：${\\underbrace{db^{[1]}}_{(n^{[1]},1)}} = {\\frac{1}{m}}np.sum(dZ^{[1]},axis=1,keepdims=True)$\n\n　　上述是反向传播的步骤，注：这些都是针对所有样本进行过向量化，$Y$是$1×m$的矩阵；这里`np.sum`是python的numpy命令，`axis=1`表示水平相加求和，`keepdims`是防止**python**输出那些古怪的秩数$(n,)$，加上这个确保阵矩阵$db^{[2]}$这个向量输出的维度为$(n,1)$这样标准的形式。 \n\n# 随机初始化\n　　一般情况下，$w^{[1]}$不初始化为全0矩阵，在单隐层神经网络中，$n_{0}$为2，$n_{1}$为2。使用如下公式对其进行初始化。\n\n$W^{[1]} = np.random.randn(2,2) * 0.01$\n\n$b^{[1]} = np.zeros((2,1))$\n\n$W^{[2]} = np.random.randn(2,2) * 0.01$\n\n$b^{[2]} = 0$\n\n　　乘0.01是为了使z落在sigmoid函数中斜率较大位置，提高收敛效率。\n\n# 深层神经网络概述\n　　深度神经网络是具有多个隐藏层的神经网络，其大体上计算过程和浅层神经网络类似，只是多了隐藏层的多次循环。","source":"_posts/dl-8Gradient-descent-for-neural.md","raw":"---\ntitle: 神经网络中的梯度下降\ncopyright: false\ndate: 2021-03-07 12:52:47\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV164411m79z)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n# 梯度下降的计算过程\n　　单隐层神经网络会有$W^{[1]}$，$b^{[1]}$，$W^{[2]}$，$b^{[2]}$这些参数，还有个$n_x$表示输入特征的个数，$n^{[1]}$表示隐藏单元个数，$n^{[2]}$表示输出单元个数。\n<!-- more -->\n\n　　在我们的例子中，我们只介绍过的这种情况，那么参数:\n\n　　矩阵$W^{[1]}$的维度就是($n^{[1]}, n^{[0]}$)，$b^{[1]}$就是$n^{[1]}$维向量，可以写成$(n^{[1]}, 1)$，就是一个的列向量。\n矩阵$W^{[2]}$的维度就是($n^{[2]}, n^{[1]}$)，$b^{[2]}$的维度就是$(n^{[2]},1)$维度。\n\n　　你还有一个神经网络的成本函数，假设你在做二分类任务，那么你的成本函数等于：\n\n**Cost function**:\n公式：$J(W^{[1]},b^{[1]},W^{[2]},b^{[2]}) = {\\frac{1}{m}}\\sum_{i=1}^mL(\\hat{y}, y)$\n**loss function**和之前做**logistic**回归完全一样。\n\n## 训练参数公式\n　　训练参数需要做梯度下降，在训练神经网络的时候，随机初始化参数很重要，而不是初始化成全零。当你参数初始化成某些值后，每次梯度下降都会循环计算以下预测值：\n\n　　$\\hat{y}^{(i)},(i=1,2,…,m)$\n\n公式3.28：$dW^{[1]} = \\frac{dJ}{dW^{[1]}},db^{[1]} = \\frac{dJ}{db^{[1]}}$\n\n公式3.29：${d}W^{[2]} = \\frac{dJ}{dW^{[2]}},{d}b^{[2]} = \\frac{dJ}{db^{[2]}}$\n\n公式3.30：$W^{[1]}\\implies{W^{[1]} - adW^{[1]}},b^{[1]}\\implies{b^{[1]} -adb^{[1]}}$\n\n公式3.31：$W^{[2]}\\implies{W^{[2]} - \\alpha{\\rm d}W^{[2]}},b^{[2]}\\implies{b^{[2]} - \\alpha{\\rm d}b^{[2]}}$\n\n## 传播公式\n### 正向传播方程如下：\n**forward propagation**：\n\n(1)$z^{[1]} = W^{[1]}x + b^{[1]}$\n\n(2)$a^{[1]} = \\sigma(z^{[1]})$\n\n(3)$z^{[2]} = W^{[2]}a^{[1]} + b^{[2]}$\n\n(4)$a^{[2]} = g^{[2]}(z^{[z]}) = \\sigma(z^{[2]})$\n\n### 反向传播方程如下:\n**back propagation**：\n\n公式3.32：$ dZ^{[2]} = A^{[2]} - Y , Y = \\begin{bmatrix}y^{[1]} & y^{[2]} & \\cdots & y^{[m]}\\\\ \\end{bmatrix} $\n\n公式3.33：$ dW^{[2]} = {\\frac{1}{m}}dZ^{[2]}A^{[1]T} $\n\n公式3.34：$ {\\rm d}b^{[2]} = {\\frac{1}{m}}np.sum({d}z^{[2]},axis=1,keepdims=True)$\n\n公式3.35：![](QQ截图20210307171037.jpg)\n\n公式3.36：$dW^{[1]} = {\\frac{1}{m}}dZ^{[1]}x^{T}$\n\n公式3.37：${\\underbrace{db^{[1]}}_{(n^{[1]},1)}} = {\\frac{1}{m}}np.sum(dZ^{[1]},axis=1,keepdims=True)$\n\n　　上述是反向传播的步骤，注：这些都是针对所有样本进行过向量化，$Y$是$1×m$的矩阵；这里`np.sum`是python的numpy命令，`axis=1`表示水平相加求和，`keepdims`是防止**python**输出那些古怪的秩数$(n,)$，加上这个确保阵矩阵$db^{[2]}$这个向量输出的维度为$(n,1)$这样标准的形式。 \n\n# 随机初始化\n　　一般情况下，$w^{[1]}$不初始化为全0矩阵，在单隐层神经网络中，$n_{0}$为2，$n_{1}$为2。使用如下公式对其进行初始化。\n\n$W^{[1]} = np.random.randn(2,2) * 0.01$\n\n$b^{[1]} = np.zeros((2,1))$\n\n$W^{[2]} = np.random.randn(2,2) * 0.01$\n\n$b^{[2]} = 0$\n\n　　乘0.01是为了使z落在sigmoid函数中斜率较大位置，提高收敛效率。\n\n# 深层神经网络概述\n　　深度神经网络是具有多个隐藏层的神经网络，其大体上计算过程和浅层神经网络类似，只是多了隐藏层的多次循环。","slug":"dl-8Gradient-descent-for-neural","published":1,"updated":"2021-03-31T14:59:41.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0h0002dc8pv6o2ob5jh","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"梯度下降的计算过程\"><a href=\"#梯度下降的计算过程\" class=\"headerlink\" title=\"梯度下降的计算过程\"></a>梯度下降的计算过程</h1><p>　　单隐层神经网络会有$W^{[1]}$，$b^{[1]}$，$W^{[2]}$，$b^{[2]}$这些参数，还有个$n_x$表示输入特征的个数，$n^{[1]}$表示隐藏单元个数，$n^{[2]}$表示输出单元个数。<br><a id=\"more\"></a></p>\n<p>　　在我们的例子中，我们只介绍过的这种情况，那么参数:</p>\n<p>　　矩阵$W^{[1]}$的维度就是($n^{[1]}, n^{[0]}$)，$b^{[1]}$就是$n^{[1]}$维向量，可以写成$(n^{[1]}, 1)$，就是一个的列向量。<br>矩阵$W^{[2]}$的维度就是($n^{[2]}, n^{[1]}$)，$b^{[2]}$的维度就是$(n^{[2]},1)$维度。</p>\n<p>　　你还有一个神经网络的成本函数，假设你在做二分类任务，那么你的成本函数等于：</p>\n<p><strong>Cost function</strong>:<br>公式：$J(W^{[1]},b^{[1]},W^{[2]},b^{[2]}) = {\\frac{1}{m}}\\sum_{i=1}^mL(\\hat{y}, y)$<br><strong>loss function</strong>和之前做<strong>logistic</strong>回归完全一样。</p>\n<h2 id=\"训练参数公式\"><a href=\"#训练参数公式\" class=\"headerlink\" title=\"训练参数公式\"></a>训练参数公式</h2><p>　　训练参数需要做梯度下降，在训练神经网络的时候，随机初始化参数很重要，而不是初始化成全零。当你参数初始化成某些值后，每次梯度下降都会循环计算以下预测值：</p>\n<p>　　$\\hat{y}^{(i)},(i=1,2,…,m)$</p>\n<p>公式3.28：$dW^{[1]} = \\frac{dJ}{dW^{[1]}},db^{[1]} = \\frac{dJ}{db^{[1]}}$</p>\n<p>公式3.29：${d}W^{[2]} = \\frac{dJ}{dW^{[2]}},{d}b^{[2]} = \\frac{dJ}{db^{[2]}}$</p>\n<p>公式3.30：$W^{[1]}\\implies{W^{[1]} - adW^{[1]}},b^{[1]}\\implies{b^{[1]} -adb^{[1]}}$</p>\n<p>公式3.31：$W^{[2]}\\implies{W^{[2]} - \\alpha{\\rm d}W^{[2]}},b^{[2]}\\implies{b^{[2]} - \\alpha{\\rm d}b^{[2]}}$</p>\n<h2 id=\"传播公式\"><a href=\"#传播公式\" class=\"headerlink\" title=\"传播公式\"></a>传播公式</h2><h3 id=\"正向传播方程如下：\"><a href=\"#正向传播方程如下：\" class=\"headerlink\" title=\"正向传播方程如下：\"></a>正向传播方程如下：</h3><p><strong>forward propagation</strong>：</p>\n<p>(1)$z^{[1]} = W^{[1]}x + b^{[1]}$</p>\n<p>(2)$a^{[1]} = \\sigma(z^{[1]})$</p>\n<p>(3)$z^{[2]} = W^{[2]}a^{[1]} + b^{[2]}$</p>\n<p>(4)$a^{[2]} = g^{[2]}(z^{[z]}) = \\sigma(z^{[2]})$</p>\n<h3 id=\"反向传播方程如下\"><a href=\"#反向传播方程如下\" class=\"headerlink\" title=\"反向传播方程如下:\"></a>反向传播方程如下:</h3><p><strong>back propagation</strong>：</p>\n<p>公式3.32：$ dZ^{[2]} = A^{[2]} - Y , Y = \\begin{bmatrix}y^{[1]} &amp; y^{[2]} &amp; \\cdots &amp; y^{[m]}\\\\ \\end{bmatrix} $</p>\n<p>公式3.33：$ dW^{[2]} = {\\frac{1}{m}}dZ^{[2]}A^{[1]T} $</p>\n<p>公式3.34：$ {\\rm d}b^{[2]} = {\\frac{1}{m}}np.sum({d}z^{[2]},axis=1,keepdims=True)$</p>\n<p>公式3.35：<img src=\"/posts/dl-8Gradient-descent-for-neural/QQ截图20210307171037.jpg\" alt></p>\n<p>公式3.36：$dW^{[1]} = {\\frac{1}{m}}dZ^{[1]}x^{T}$</p>\n<p>公式3.37：${\\underbrace{db^{[1]}}_{(n^{[1]},1)}} = {\\frac{1}{m}}np.sum(dZ^{[1]},axis=1,keepdims=True)$</p>\n<p>　　上述是反向传播的步骤，注：这些都是针对所有样本进行过向量化，$Y$是$1×m$的矩阵；这里<code>np.sum</code>是python的numpy命令，<code>axis=1</code>表示水平相加求和，<code>keepdims</code>是防止<strong>python</strong>输出那些古怪的秩数$(n,)$，加上这个确保阵矩阵$db^{[2]}$这个向量输出的维度为$(n,1)$这样标准的形式。 </p>\n<h1 id=\"随机初始化\"><a href=\"#随机初始化\" class=\"headerlink\" title=\"随机初始化\"></a>随机初始化</h1><p>　　一般情况下，$w^{[1]}$不初始化为全0矩阵，在单隐层神经网络中，$n_{0}$为2，$n_{1}$为2。使用如下公式对其进行初始化。</p>\n<p>$W^{[1]} = np.random.randn(2,2) * 0.01$</p>\n<p>$b^{[1]} = np.zeros((2,1))$</p>\n<p>$W^{[2]} = np.random.randn(2,2) * 0.01$</p>\n<p>$b^{[2]} = 0$</p>\n<p>　　乘0.01是为了使z落在sigmoid函数中斜率较大位置，提高收敛效率。</p>\n<h1 id=\"深层神经网络概述\"><a href=\"#深层神经网络概述\" class=\"headerlink\" title=\"深层神经网络概述\"></a>深层神经网络概述</h1><p>　　深度神经网络是具有多个隐藏层的神经网络，其大体上计算过程和浅层神经网络类似，只是多了隐藏层的多次循环。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1901,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV164411m79z\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"梯度下降的计算过程\"><a href=\"#梯度下降的计算过程\" class=\"headerlink\" title=\"梯度下降的计算过程\"></a>梯度下降的计算过程</h1><p>　　单隐层神经网络会有$W^{[1]}$，$b^{[1]}$，$W^{[2]}$，$b^{[2]}$这些参数，还有个$n_x$表示输入特征的个数，$n^{[1]}$表示隐藏单元个数，$n^{[2]}$表示输出单元个数。<br></p>","more":"<p></p>\n<p>　　在我们的例子中，我们只介绍过的这种情况，那么参数:</p>\n<p>　　矩阵$W^{[1]}$的维度就是($n^{[1]}, n^{[0]}$)，$b^{[1]}$就是$n^{[1]}$维向量，可以写成$(n^{[1]}, 1)$，就是一个的列向量。<br>矩阵$W^{[2]}$的维度就是($n^{[2]}, n^{[1]}$)，$b^{[2]}$的维度就是$(n^{[2]},1)$维度。</p>\n<p>　　你还有一个神经网络的成本函数，假设你在做二分类任务，那么你的成本函数等于：</p>\n<p><strong>Cost function</strong>:<br>公式：$J(W^{[1]},b^{[1]},W^{[2]},b^{[2]}) = {\\frac{1}{m}}\\sum_{i=1}^mL(\\hat{y}, y)$<br><strong>loss function</strong>和之前做<strong>logistic</strong>回归完全一样。</p>\n<h2 id=\"训练参数公式\"><a href=\"#训练参数公式\" class=\"headerlink\" title=\"训练参数公式\"></a>训练参数公式</h2><p>　　训练参数需要做梯度下降，在训练神经网络的时候，随机初始化参数很重要，而不是初始化成全零。当你参数初始化成某些值后，每次梯度下降都会循环计算以下预测值：</p>\n<p>　　$\\hat{y}^{(i)},(i=1,2,…,m)$</p>\n<p>公式3.28：$dW^{[1]} = \\frac{dJ}{dW^{[1]}},db^{[1]} = \\frac{dJ}{db^{[1]}}$</p>\n<p>公式3.29：${d}W^{[2]} = \\frac{dJ}{dW^{[2]}},{d}b^{[2]} = \\frac{dJ}{db^{[2]}}$</p>\n<p>公式3.30：$W^{[1]}\\implies{W^{[1]} - adW^{[1]}},b^{[1]}\\implies{b^{[1]} -adb^{[1]}}$</p>\n<p>公式3.31：$W^{[2]}\\implies{W^{[2]} - \\alpha{\\rm d}W^{[2]}},b^{[2]}\\implies{b^{[2]} - \\alpha{\\rm d}b^{[2]}}$</p>\n<h2 id=\"传播公式\"><a href=\"#传播公式\" class=\"headerlink\" title=\"传播公式\"></a>传播公式</h2><h3 id=\"正向传播方程如下：\"><a href=\"#正向传播方程如下：\" class=\"headerlink\" title=\"正向传播方程如下：\"></a>正向传播方程如下：</h3><p><strong>forward propagation</strong>：</p>\n<p>(1)$z^{[1]} = W^{[1]}x + b^{[1]}$</p>\n<p>(2)$a^{[1]} = \\sigma(z^{[1]})$</p>\n<p>(3)$z^{[2]} = W^{[2]}a^{[1]} + b^{[2]}$</p>\n<p>(4)$a^{[2]} = g^{[2]}(z^{[z]}) = \\sigma(z^{[2]})$</p>\n<h3 id=\"反向传播方程如下\"><a href=\"#反向传播方程如下\" class=\"headerlink\" title=\"反向传播方程如下:\"></a>反向传播方程如下:</h3><p><strong>back propagation</strong>：</p>\n<p>公式3.32：$ dZ^{[2]} = A^{[2]} - Y , Y = \\begin{bmatrix}y^{[1]} &amp; y^{[2]} &amp; \\cdots &amp; y^{[m]}\\\\ \\end{bmatrix} $</p>\n<p>公式3.33：$ dW^{[2]} = {\\frac{1}{m}}dZ^{[2]}A^{[1]T} $</p>\n<p>公式3.34：$ {\\rm d}b^{[2]} = {\\frac{1}{m}}np.sum({d}z^{[2]},axis=1,keepdims=True)$</p>\n<p>公式3.35：<img src=\"/posts/dl-8Gradient-descent-for-neural/QQ截图20210307171037.jpg\" alt></p>\n<p>公式3.36：$dW^{[1]} = {\\frac{1}{m}}dZ^{[1]}x^{T}$</p>\n<p>公式3.37：${\\underbrace{db^{[1]}}_{(n^{[1]},1)}} = {\\frac{1}{m}}np.sum(dZ^{[1]},axis=1,keepdims=True)$</p>\n<p>　　上述是反向传播的步骤，注：这些都是针对所有样本进行过向量化，$Y$是$1×m$的矩阵；这里<code>np.sum</code>是python的numpy命令，<code>axis=1</code>表示水平相加求和，<code>keepdims</code>是防止<strong>python</strong>输出那些古怪的秩数$(n,)$，加上这个确保阵矩阵$db^{[2]}$这个向量输出的维度为$(n,1)$这样标准的形式。 </p>\n<h1 id=\"随机初始化\"><a href=\"#随机初始化\" class=\"headerlink\" title=\"随机初始化\"></a>随机初始化</h1><p>　　一般情况下，$w^{[1]}$不初始化为全0矩阵，在单隐层神经网络中，$n_{0}$为2，$n_{1}$为2。使用如下公式对其进行初始化。</p>\n<p>$W^{[1]} = np.random.randn(2,2) * 0.01$</p>\n<p>$b^{[1]} = np.zeros((2,1))$</p>\n<p>$W^{[2]} = np.random.randn(2,2) * 0.01$</p>\n<p>$b^{[2]} = 0$</p>\n<p>　　乘0.01是为了使z落在sigmoid函数中斜率较大位置，提高收敛效率。</p>\n<h1 id=\"深层神经网络概述\"><a href=\"#深层神经网络概述\" class=\"headerlink\" title=\"深层神经网络概述\"></a>深层神经网络概述</h1><p>　　深度神经网络是具有多个隐藏层的神经网络，其大体上计算过程和浅层神经网络类似，只是多了隐藏层的多次循环。</p>"},{"title":"go语言指针","date":"2020-09-24T08:11:01.000Z","_content":"# 声明指针\n一个指针变量指向了一个值的内存地址\n类似于变量和常量，在使用指针前你需要声明指针。指针声明格式如下：\n```go\nvar var_name *var-type\n```\nvar-type 为指针类型，var_name 为指针变量名，* 号用于指定变量是作为一个指针。以下是有效的指针声明：\n```go\nvar ip *int        /* 指向整型*/\nvar fp *float32    /* 指向浮点型 */\n```\n<!-- more -->\n\n# 使用指针\n## 过程\n* 定义指针变量。\n* 为指针变量赋值。\n* 访问指针变量中指向地址的值。\n    * 在指针类型前面加上 * 号（前缀）来获取指针所指向的内容。\n\n## 例\n```go\nvar a int= 20   /* 声明实际变量 */\nvar ip *int        /* 声明指针变量 */\nip = &a  /* 指针变量的存储地址 */\n\nfmt.Printf(\"a 变量的地址是: %x\\n\", &a  )\n/* 指针变量的存储地址 */\nfmt.Printf(\"ip 变量储存的指针地址: %x\\n\", ip )\n/* 使用指针访问值 */\nfmt.Printf(\"*ip 变量的值: %d\\n\", *ip )\n```\n\n## 空指针\n```go\nvar  ptr *int      /* 不赋值,ptr=0 */\nif(ptr != nil)     /* ptr 不是空指针 */\nif(ptr == nil)     /* ptr 是空指针 */\n```\n\n# 指针数组\n```go\nvar ptr [MAX]*int; //定义\nptr[i] = &a[i] /* 整数地址赋值给指针数组 */\nfmt.Printf(\"a[%d] = %d\\n\", i,*ptr[i] )  //访问\n```\n\n# Go 语言指针作为函数参数\nGo 语言允许向函数传递指针，只需要在函数定义的参数上设置为指针类型即可。\n以下实例演示了如何向函数传递指针，并在函数调用后修改函数内的值：\n```go\nswap(&a, &b);   //函数调用\n\nfunc swap(x *int, y *int) {  //函数定义\n    ...\n}\n```","source":"_posts/go-10zhizhen.md","raw":"---\ntitle: go语言指针\ndate: 2020-09-24 16:11:01\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# 声明指针\n一个指针变量指向了一个值的内存地址\n类似于变量和常量，在使用指针前你需要声明指针。指针声明格式如下：\n```go\nvar var_name *var-type\n```\nvar-type 为指针类型，var_name 为指针变量名，* 号用于指定变量是作为一个指针。以下是有效的指针声明：\n```go\nvar ip *int        /* 指向整型*/\nvar fp *float32    /* 指向浮点型 */\n```\n<!-- more -->\n\n# 使用指针\n## 过程\n* 定义指针变量。\n* 为指针变量赋值。\n* 访问指针变量中指向地址的值。\n    * 在指针类型前面加上 * 号（前缀）来获取指针所指向的内容。\n\n## 例\n```go\nvar a int= 20   /* 声明实际变量 */\nvar ip *int        /* 声明指针变量 */\nip = &a  /* 指针变量的存储地址 */\n\nfmt.Printf(\"a 变量的地址是: %x\\n\", &a  )\n/* 指针变量的存储地址 */\nfmt.Printf(\"ip 变量储存的指针地址: %x\\n\", ip )\n/* 使用指针访问值 */\nfmt.Printf(\"*ip 变量的值: %d\\n\", *ip )\n```\n\n## 空指针\n```go\nvar  ptr *int      /* 不赋值,ptr=0 */\nif(ptr != nil)     /* ptr 不是空指针 */\nif(ptr == nil)     /* ptr 是空指针 */\n```\n\n# 指针数组\n```go\nvar ptr [MAX]*int; //定义\nptr[i] = &a[i] /* 整数地址赋值给指针数组 */\nfmt.Printf(\"a[%d] = %d\\n\", i,*ptr[i] )  //访问\n```\n\n# Go 语言指针作为函数参数\nGo 语言允许向函数传递指针，只需要在函数定义的参数上设置为指针类型即可。\n以下实例演示了如何向函数传递指针，并在函数调用后修改函数内的值：\n```go\nswap(&a, &b);   //函数调用\n\nfunc swap(x *int, y *int) {  //函数定义\n    ...\n}\n```","slug":"go-10zhizhen","published":1,"updated":"2020-09-24T09:11:05.835Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0h2002hc8pv2jqd5s0k","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"声明指针\"><a href=\"#声明指针\" class=\"headerlink\" title=\"声明指针\"></a>声明指针</h1><p>一个指针变量指向了一个值的内存地址<br>类似于变量和常量，在使用指针前你需要声明指针。指针声明格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> var_name *<span class=\"keyword\">var</span>-<span class=\"keyword\">type</span></span><br></pre></td></tr></table></figure><br>var-type 为指针类型，var_name 为指针变量名，* 号用于指定变量是作为一个指针。以下是有效的指针声明：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ip *<span class=\"keyword\">int</span>        <span class=\"comment\">/* 指向整型*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fp *<span class=\"keyword\">float32</span>    <span class=\"comment\">/* 指向浮点型 */</span></span><br></pre></td></tr></table></figure><br><a id=\"more\"></a></p>\n<h1 id=\"使用指针\"><a href=\"#使用指针\" class=\"headerlink\" title=\"使用指针\"></a>使用指针</h1><h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><ul>\n<li>定义指针变量。</li>\n<li>为指针变量赋值。</li>\n<li>访问指针变量中指向地址的值。<ul>\n<li>在指针类型前面加上 * 号（前缀）来获取指针所指向的内容。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"例\"><a href=\"#例\" class=\"headerlink\" title=\"例\"></a>例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">int</span>= <span class=\"number\">20</span>   <span class=\"comment\">/* 声明实际变量 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ip *<span class=\"keyword\">int</span>        <span class=\"comment\">/* 声明指针变量 */</span></span><br><span class=\"line\">ip = &amp;a  <span class=\"comment\">/* 指针变量的存储地址 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;a 变量的地址是: %x\\n&quot;</span>, &amp;a  )</span><br><span class=\"line\"><span class=\"comment\">/* 指针变量的存储地址 */</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;ip 变量储存的指针地址: %x\\n&quot;</span>, ip )</span><br><span class=\"line\"><span class=\"comment\">/* 使用指针访问值 */</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;*ip 变量的值: %d\\n&quot;</span>, *ip )</span><br></pre></td></tr></table></figure>\n<h2 id=\"空指针\"><a href=\"#空指针\" class=\"headerlink\" title=\"空指针\"></a>空指针</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  ptr *<span class=\"keyword\">int</span>      <span class=\"comment\">/* 不赋值,ptr=0 */</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(ptr != <span class=\"literal\">nil</span>)     <span class=\"comment\">/* ptr 不是空指针 */</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(ptr == <span class=\"literal\">nil</span>)     <span class=\"comment\">/* ptr 是空指针 */</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"指针数组\"><a href=\"#指针数组\" class=\"headerlink\" title=\"指针数组\"></a>指针数组</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ptr [MAX]*<span class=\"keyword\">int</span>; <span class=\"comment\">//定义</span></span><br><span class=\"line\">ptr[i] = &amp;a[i] <span class=\"comment\">/* 整数地址赋值给指针数组 */</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;a[%d] = %d\\n&quot;</span>, i,*ptr[i] )  <span class=\"comment\">//访问</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Go-语言指针作为函数参数\"><a href=\"#Go-语言指针作为函数参数\" class=\"headerlink\" title=\"Go 语言指针作为函数参数\"></a>Go 语言指针作为函数参数</h1><p>Go 语言允许向函数传递指针，只需要在函数定义的参数上设置为指针类型即可。<br>以下实例演示了如何向函数传递指针，并在函数调用后修改函数内的值：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swap(&amp;a, &amp;b);   <span class=\"comment\">//函数调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swap</span><span class=\"params\">(x *<span class=\"keyword\">int</span>, y *<span class=\"keyword\">int</span>)</span></span> &#123;  <span class=\"comment\">//函数定义</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":789,"excerpt":"<h1 id=\"声明指针\"><a href=\"#声明指针\" class=\"headerlink\" title=\"声明指针\"></a>声明指针</h1><p>一个指针变量指向了一个值的内存地址<br>类似于变量和常量，在使用指针前你需要声明指针。指针声明格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> var_name *<span class=\"keyword\">var</span>-<span class=\"keyword\">type</span></span><br></pre></td></tr></table></figure><br>var-type 为指针类型，var_name 为指针变量名，* 号用于指定变量是作为一个指针。以下是有效的指针声明：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ip *<span class=\"keyword\">int</span>        <span class=\"comment\">/* 指向整型*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fp *<span class=\"keyword\">float32</span>    <span class=\"comment\">/* 指向浮点型 */</span></span><br></pre></td></tr></table></figure><br></p>","more":"<p></p>\n<h1 id=\"使用指针\"><a href=\"#使用指针\" class=\"headerlink\" title=\"使用指针\"></a>使用指针</h1><h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><ul>\n<li>定义指针变量。</li>\n<li>为指针变量赋值。</li>\n<li>访问指针变量中指向地址的值。<ul>\n<li>在指针类型前面加上 * 号（前缀）来获取指针所指向的内容。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"例\"><a href=\"#例\" class=\"headerlink\" title=\"例\"></a>例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">int</span>= <span class=\"number\">20</span>   <span class=\"comment\">/* 声明实际变量 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ip *<span class=\"keyword\">int</span>        <span class=\"comment\">/* 声明指针变量 */</span></span><br><span class=\"line\">ip = &amp;a  <span class=\"comment\">/* 指针变量的存储地址 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;a 变量的地址是: %x\\n&quot;</span>, &amp;a  )</span><br><span class=\"line\"><span class=\"comment\">/* 指针变量的存储地址 */</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;ip 变量储存的指针地址: %x\\n&quot;</span>, ip )</span><br><span class=\"line\"><span class=\"comment\">/* 使用指针访问值 */</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;*ip 变量的值: %d\\n&quot;</span>, *ip )</span><br></pre></td></tr></table></figure>\n<h2 id=\"空指针\"><a href=\"#空指针\" class=\"headerlink\" title=\"空指针\"></a>空指针</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  ptr *<span class=\"keyword\">int</span>      <span class=\"comment\">/* 不赋值,ptr=0 */</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(ptr != <span class=\"literal\">nil</span>)     <span class=\"comment\">/* ptr 不是空指针 */</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(ptr == <span class=\"literal\">nil</span>)     <span class=\"comment\">/* ptr 是空指针 */</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"指针数组\"><a href=\"#指针数组\" class=\"headerlink\" title=\"指针数组\"></a>指针数组</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ptr [MAX]*<span class=\"keyword\">int</span>; <span class=\"comment\">//定义</span></span><br><span class=\"line\">ptr[i] = &amp;a[i] <span class=\"comment\">/* 整数地址赋值给指针数组 */</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;a[%d] = %d\\n&quot;</span>, i,*ptr[i] )  <span class=\"comment\">//访问</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Go-语言指针作为函数参数\"><a href=\"#Go-语言指针作为函数参数\" class=\"headerlink\" title=\"Go 语言指针作为函数参数\"></a>Go 语言指针作为函数参数</h1><p>Go 语言允许向函数传递指针，只需要在函数定义的参数上设置为指针类型即可。<br>以下实例演示了如何向函数传递指针，并在函数调用后修改函数内的值：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swap(&amp;a, &amp;b);   <span class=\"comment\">//函数调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swap</span><span class=\"params\">(x *<span class=\"keyword\">int</span>, y *<span class=\"keyword\">int</span>)</span></span> &#123;  <span class=\"comment\">//函数定义</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"深度学习——序列模型介绍","copyright":false,"date":"2021-03-11T08:57:59.000Z","_content":"{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 序列模型\n\n## 序列模型的使用场景\n　　语音识别、语言翻译、句子中名字识别等场景中，输入和输出都是一个具有顺序的序列，在这种情况下循环神经网络（**RNN**）之类的模型具有很好的效果。\n<!-- more -->\n## 序列模型中的符号表示\n　　以识别句子中名字为例\n符号|含义\n:-:|:-:\n$x^{(i)<t>}$|第i个训练样本中，输入序列X的第t个单词\n$y^{(i)<t>}$|第i个训练样本中，输出序列Y的第t个标识符（1代表$x^{(i)<t>}$是名字，0代表不是）\n$T_{x}^{(i)}$|第i个训练样本中，输入序列X的单词数量\n$T_{y}^{(i)}$|第i个训练样本中，输出序列Y的标识符数量\n\n# 循环神经网络\n## 不使用标准神经网络原因\n\t1. 不同样本的输入和输出的长度不同\n\t2. 在神经网络中学习到的内容不能共享\n\n## 循环神经网络定义\n　　每一个时间步$x^{<t>}$按顺序作为神经网络的输入，同时输入也包含上一时间步的激活值$a^{<t-1>}$，同时设置初始激活值$a^{<0>}$如下图所示：\n![循环神经网络示意图](cb041c33b65e17600842ebf87174c4f2.png)\n　　图中有一些参数。我们用$W_{ax}$来表示管理着从$x^{<t>}$到隐藏层的连接的一系列参数，每个时间步使用的都是相同的参数$W_{ax}$。而激活值也就是水平联系是由参数$W_{aa}$决定的，同时每一个时间步都使用相同的参数$W_{aa}$，同样的输出结果由$W_{\\text{ya}}$决定。\n\n　　该神经网络存在的问题：前面单元的预测无法使用后面的单元的信息，这在双向循环神经网络（BRNN）中将会介绍。\n\n## 向前传播\n\n　　一般的情况下，在$t$时刻，\n\n$a^{< t >} = g_{1}(W_{aa}a^{< t - 1 >} + W_{ax}x^{< t >} + b_{a})$\n\n$\\hat y^{< t >} = g_{2}(W_{ya}a^{< t >} + b_{y})$\n\n　　循环神经网络用的激活函数经常是**tanh**，不过有时候也会用**ReLU**，但是**tanh**是更通常的选择，我们有其他方法来避免梯度消失问题，我们将在之后进行讲述。选用哪个激活函数是取决于你的输出$y$，如果它是一个二分问题，那么我猜你会用**sigmoid**函数作为激活函数，如果是$k$类别分类问题的话，那么可以选用**softmax**作为激活函数。不过这里激活函数的类型取决于你有什么样类型的输出$y$，对于命名实体识别来说$y$只可能是0或者1，那我猜这里第二个激活函数$g$可以是**sigmoid**激活函数。\n\n　　接下来为了**简化**这些符号，我要将这部分（$W_{\\text{aa}}a^{<t -1>} +W_{\\text{ax}}x^{<t>}$）以更简单的形式写出来，我把它写做$a^{<t>} =g(W_{a}\\left\\lbrack a^{< t-1 >},x^{<t>} \\right\\rbrack +b_{a})$，那么左右两边划线部分应该是等价的。所以我们定义$W_{a}$的方式是将矩阵$W_{aa}$和矩阵$W_{ax}$水平并列放置，$[ {W}_{aa}\\vdots {W}_{ax}]=W_{a}$。举个例子，如果$a$是100维的，然后延续之前的例子，$x$是10,000维的，那么$W_{aa}$就是个$（100，100）$维的矩阵，$W_{ax}$就是个$（100，10,000）$维的矩阵，因此如果将这两个矩阵堆起来，$W_{a}$就会是个$（100，10,100）$维的矩阵。\n\n　　用这个符号（$\\left\\lbrack a^{< t - 1 >},x^{< t >}\\right\\rbrack$）的意思是将这两个向量堆在一起，我会用这个符号表示，即$\\begin{bmatrix}a^{< t-1 >} \\\\ x^{< t >} \\\\\\end{bmatrix}$，最终这就是个10,100维的向量。你可以自己检查一下，用这个矩阵乘以这个向量，刚好能够得到原来的量，因为此时，矩阵$[ {W}_{aa}\\vdots {W}_{ax}]$乘以$\\begin{bmatrix} a^{< t - 1 >} \\\\ x^{< t >} \\\\ \\end{bmatrix}$，刚好等于$W_{aa}a^{<t-1>} + W_{ax}x^{<t>}$，\n\n　　同样对于这个例子$\\hat y^{<t>} = g(W_{ya}a^{<t>} +b_{y})$，我会用更简单的方式重写，$\\hat y^{< t >} = g(W_{y}a^{< t >} +b_{y})$\n\n　　于是，上述二式子变为：\n\n$a^{<t>} =g(W_{a}\\left\\lbrack a^{< t-1 >},x^{<t>} \\right\\rbrack +b_{a})$\n\n$\\hat y^{< t >} = g(W_{y}a^{< t >} +b_{y})$\n\n## 反向传播\n\n　　单个元素损失函数：$L^{<t>}( \\hat y^{<t>},y^{<t>}) = - y^{<t>}\\log\\hat  y^{<t>}-( 1- y^{<t>})log(1-\\hat y^{<t>})$\n\n　　整个序列损失函数：$L(\\hat y,y) = \\ \\sum_{t = 1}^{T_{x}}{L^{< t >}(\\hat  y^{< t >},y^{< t >})}$\n\n　　过程如下图所示：\n\n![反向传播过程](71a0ed918704f6d35091d8b6d60793e4.png)\n\n\n\n","source":"_posts/dl-9Sequence-Models-introduce.md","raw":"---\ntitle: 深度学习——序列模型介绍\ncopyright: false\ndate: 2021-03-11 16:57:59\ntag:\n- 深度学习\n- 毕设准备\ncategories:\n- 毕设准备\n- 深度学习\n---\n{% note info %}\n课程名称：[吴恩达深度学习课程](https://www.bilibili.com/video/BV1F4411y7BA)\n学习资料：[深度学习教程中文笔记](http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf)\n{% endnote %}\n\n# 序列模型\n\n## 序列模型的使用场景\n　　语音识别、语言翻译、句子中名字识别等场景中，输入和输出都是一个具有顺序的序列，在这种情况下循环神经网络（**RNN**）之类的模型具有很好的效果。\n<!-- more -->\n## 序列模型中的符号表示\n　　以识别句子中名字为例\n符号|含义\n:-:|:-:\n$x^{(i)<t>}$|第i个训练样本中，输入序列X的第t个单词\n$y^{(i)<t>}$|第i个训练样本中，输出序列Y的第t个标识符（1代表$x^{(i)<t>}$是名字，0代表不是）\n$T_{x}^{(i)}$|第i个训练样本中，输入序列X的单词数量\n$T_{y}^{(i)}$|第i个训练样本中，输出序列Y的标识符数量\n\n# 循环神经网络\n## 不使用标准神经网络原因\n\t1. 不同样本的输入和输出的长度不同\n\t2. 在神经网络中学习到的内容不能共享\n\n## 循环神经网络定义\n　　每一个时间步$x^{<t>}$按顺序作为神经网络的输入，同时输入也包含上一时间步的激活值$a^{<t-1>}$，同时设置初始激活值$a^{<0>}$如下图所示：\n![循环神经网络示意图](cb041c33b65e17600842ebf87174c4f2.png)\n　　图中有一些参数。我们用$W_{ax}$来表示管理着从$x^{<t>}$到隐藏层的连接的一系列参数，每个时间步使用的都是相同的参数$W_{ax}$。而激活值也就是水平联系是由参数$W_{aa}$决定的，同时每一个时间步都使用相同的参数$W_{aa}$，同样的输出结果由$W_{\\text{ya}}$决定。\n\n　　该神经网络存在的问题：前面单元的预测无法使用后面的单元的信息，这在双向循环神经网络（BRNN）中将会介绍。\n\n## 向前传播\n\n　　一般的情况下，在$t$时刻，\n\n$a^{< t >} = g_{1}(W_{aa}a^{< t - 1 >} + W_{ax}x^{< t >} + b_{a})$\n\n$\\hat y^{< t >} = g_{2}(W_{ya}a^{< t >} + b_{y})$\n\n　　循环神经网络用的激活函数经常是**tanh**，不过有时候也会用**ReLU**，但是**tanh**是更通常的选择，我们有其他方法来避免梯度消失问题，我们将在之后进行讲述。选用哪个激活函数是取决于你的输出$y$，如果它是一个二分问题，那么我猜你会用**sigmoid**函数作为激活函数，如果是$k$类别分类问题的话，那么可以选用**softmax**作为激活函数。不过这里激活函数的类型取决于你有什么样类型的输出$y$，对于命名实体识别来说$y$只可能是0或者1，那我猜这里第二个激活函数$g$可以是**sigmoid**激活函数。\n\n　　接下来为了**简化**这些符号，我要将这部分（$W_{\\text{aa}}a^{<t -1>} +W_{\\text{ax}}x^{<t>}$）以更简单的形式写出来，我把它写做$a^{<t>} =g(W_{a}\\left\\lbrack a^{< t-1 >},x^{<t>} \\right\\rbrack +b_{a})$，那么左右两边划线部分应该是等价的。所以我们定义$W_{a}$的方式是将矩阵$W_{aa}$和矩阵$W_{ax}$水平并列放置，$[ {W}_{aa}\\vdots {W}_{ax}]=W_{a}$。举个例子，如果$a$是100维的，然后延续之前的例子，$x$是10,000维的，那么$W_{aa}$就是个$（100，100）$维的矩阵，$W_{ax}$就是个$（100，10,000）$维的矩阵，因此如果将这两个矩阵堆起来，$W_{a}$就会是个$（100，10,100）$维的矩阵。\n\n　　用这个符号（$\\left\\lbrack a^{< t - 1 >},x^{< t >}\\right\\rbrack$）的意思是将这两个向量堆在一起，我会用这个符号表示，即$\\begin{bmatrix}a^{< t-1 >} \\\\ x^{< t >} \\\\\\end{bmatrix}$，最终这就是个10,100维的向量。你可以自己检查一下，用这个矩阵乘以这个向量，刚好能够得到原来的量，因为此时，矩阵$[ {W}_{aa}\\vdots {W}_{ax}]$乘以$\\begin{bmatrix} a^{< t - 1 >} \\\\ x^{< t >} \\\\ \\end{bmatrix}$，刚好等于$W_{aa}a^{<t-1>} + W_{ax}x^{<t>}$，\n\n　　同样对于这个例子$\\hat y^{<t>} = g(W_{ya}a^{<t>} +b_{y})$，我会用更简单的方式重写，$\\hat y^{< t >} = g(W_{y}a^{< t >} +b_{y})$\n\n　　于是，上述二式子变为：\n\n$a^{<t>} =g(W_{a}\\left\\lbrack a^{< t-1 >},x^{<t>} \\right\\rbrack +b_{a})$\n\n$\\hat y^{< t >} = g(W_{y}a^{< t >} +b_{y})$\n\n## 反向传播\n\n　　单个元素损失函数：$L^{<t>}( \\hat y^{<t>},y^{<t>}) = - y^{<t>}\\log\\hat  y^{<t>}-( 1- y^{<t>})log(1-\\hat y^{<t>})$\n\n　　整个序列损失函数：$L(\\hat y,y) = \\ \\sum_{t = 1}^{T_{x}}{L^{< t >}(\\hat  y^{< t >},y^{< t >})}$\n\n　　过程如下图所示：\n\n![反向传播过程](71a0ed918704f6d35091d8b6d60793e4.png)\n\n\n\n","slug":"dl-9Sequence-Models-introduce","published":1,"updated":"2021-03-12T07:32:54.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0h3002kc8pvg6pk4rtg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"序列模型\"><a href=\"#序列模型\" class=\"headerlink\" title=\"序列模型\"></a>序列模型</h1><h2 id=\"序列模型的使用场景\"><a href=\"#序列模型的使用场景\" class=\"headerlink\" title=\"序列模型的使用场景\"></a>序列模型的使用场景</h2><p>　　语音识别、语言翻译、句子中名字识别等场景中，输入和输出都是一个具有顺序的序列，在这种情况下循环神经网络（<strong>RNN</strong>）之类的模型具有很好的效果。<br><a id=\"more\"></a></p>\n<h2 id=\"序列模型中的符号表示\"><a href=\"#序列模型中的符号表示\" class=\"headerlink\" title=\"序列模型中的符号表示\"></a>序列模型中的符号表示</h2><p>　　以识别句子中名字为例<br>符号|含义<br>:-:|:-:<br>$x^{(i)<t>}$|第i个训练样本中，输入序列X的第t个单词<br>$y^{(i)<t>}$|第i个训练样本中，输出序列Y的第t个标识符（1代表$x^{(i)<t>}$是名字，0代表不是）<br>$T_{x}^{(i)}$|第i个训练样本中，输入序列X的单词数量<br>$T_{y}^{(i)}$|第i个训练样本中，输出序列Y的标识符数量</t></t></t></p>\n<h1 id=\"循环神经网络\"><a href=\"#循环神经网络\" class=\"headerlink\" title=\"循环神经网络\"></a>循环神经网络</h1><h2 id=\"不使用标准神经网络原因\"><a href=\"#不使用标准神经网络原因\" class=\"headerlink\" title=\"不使用标准神经网络原因\"></a>不使用标准神经网络原因</h2><pre><code>1. 不同样本的输入和输出的长度不同\n2. 在神经网络中学习到的内容不能共享\n</code></pre><h2 id=\"循环神经网络定义\"><a href=\"#循环神经网络定义\" class=\"headerlink\" title=\"循环神经网络定义\"></a>循环神经网络定义</h2><p>　　每一个时间步$x^{<t>}$按顺序作为神经网络的输入，同时输入也包含上一时间步的激活值$a^{<t-1>}$，同时设置初始激活值$a^{<0>}$如下图所示：<br><img src=\"/posts/dl-9Sequence-Models-introduce/cb041c33b65e17600842ebf87174c4f2.png\" alt=\"循环神经网络示意图\"><br>　　图中有一些参数。我们用$W_{ax}$来表示管理着从$x^{<t>}$到隐藏层的连接的一系列参数，每个时间步使用的都是相同的参数$W_{ax}$。而激活值也就是水平联系是由参数$W_{aa}$决定的，同时每一个时间步都使用相同的参数$W_{aa}$，同样的输出结果由$W_{\\text{ya}}$决定。</t></0></t-1></t></p>\n<p>　　该神经网络存在的问题：前面单元的预测无法使用后面的单元的信息，这在双向循环神经网络（BRNN）中将会介绍。</p>\n<h2 id=\"向前传播\"><a href=\"#向前传播\" class=\"headerlink\" title=\"向前传播\"></a>向前传播</h2><p>　　一般的情况下，在$t$时刻，</p>\n<p>$a^{&lt; t &gt;} = g_{1}(W_{aa}a^{&lt; t - 1 &gt;} + W_{ax}x^{&lt; t &gt;} + b_{a})$</p>\n<p>$\\hat y^{&lt; t &gt;} = g_{2}(W_{ya}a^{&lt; t &gt;} + b_{y})$</p>\n<p>　　循环神经网络用的激活函数经常是<strong>tanh</strong>，不过有时候也会用<strong>ReLU</strong>，但是<strong>tanh</strong>是更通常的选择，我们有其他方法来避免梯度消失问题，我们将在之后进行讲述。选用哪个激活函数是取决于你的输出$y$，如果它是一个二分问题，那么我猜你会用<strong>sigmoid</strong>函数作为激活函数，如果是$k$类别分类问题的话，那么可以选用<strong>softmax</strong>作为激活函数。不过这里激活函数的类型取决于你有什么样类型的输出$y$，对于命名实体识别来说$y$只可能是0或者1，那我猜这里第二个激活函数$g$可以是<strong>sigmoid</strong>激活函数。</p>\n<p>　　接下来为了<strong>简化</strong>这些符号，我要将这部分（$W_{\\text{aa}}a^{<t -1>} +W_{\\text{ax}}x^{<t>}$）以更简单的形式写出来，我把它写做$a^{<t>} =g(W_{a}\\left\\lbrack a^{&lt; t-1 &gt;},x^{<t>} \\right\\rbrack +b_{a})$，那么左右两边划线部分应该是等价的。所以我们定义$W_{a}$的方式是将矩阵$W_{aa}$和矩阵$W_{ax}$水平并列放置，$[ {W}_{aa}\\vdots {W}_{ax}]=W_{a}$。举个例子，如果$a$是100维的，然后延续之前的例子，$x$是10,000维的，那么$W_{aa}$就是个$（100，100）$维的矩阵，$W_{ax}$就是个$（100，10,000）$维的矩阵，因此如果将这两个矩阵堆起来，$W_{a}$就会是个$（100，10,100）$维的矩阵。</t></t></t></t></p>\n<p>　　用这个符号（$\\left\\lbrack a^{&lt; t - 1 &gt;},x^{&lt; t &gt;}\\right\\rbrack$）的意思是将这两个向量堆在一起，我会用这个符号表示，即$\\begin{bmatrix}a^{&lt; t-1 &gt;} \\\\ x^{&lt; t &gt;} \\\\\\end{bmatrix}$，最终这就是个10,100维的向量。你可以自己检查一下，用这个矩阵乘以这个向量，刚好能够得到原来的量，因为此时，矩阵$[ {W}_{aa}\\vdots {W}_{ax}]$乘以$\\begin{bmatrix} a^{&lt; t - 1 &gt;} \\\\ x^{&lt; t &gt;} \\\\ \\end{bmatrix}$，刚好等于$W_{aa}a^{<t-1>} + W_{ax}x^{<t>}$，</t></t-1></p>\n<p>　　同样对于这个例子$\\hat y^{<t>} = g(W_{ya}a^{<t>} +b_{y})$，我会用更简单的方式重写，$\\hat y^{&lt; t &gt;} = g(W_{y}a^{&lt; t &gt;} +b_{y})$</t></t></p>\n<p>　　于是，上述二式子变为：</p>\n<p>$a^{<t>} =g(W_{a}\\left\\lbrack a^{&lt; t-1 &gt;},x^{<t>} \\right\\rbrack +b_{a})$</t></t></p>\n<p>$\\hat y^{&lt; t &gt;} = g(W_{y}a^{&lt; t &gt;} +b_{y})$</p>\n<h2 id=\"反向传播\"><a href=\"#反向传播\" class=\"headerlink\" title=\"反向传播\"></a>反向传播</h2><p>　　单个元素损失函数：$L^{<t>}( \\hat y^{<t>},y^{<t>}) = - y^{<t>}\\log\\hat  y^{<t>}-( 1- y^{<t>})log(1-\\hat y^{<t>})$</t></t></t></t></t></t></t></p>\n<p>　　整个序列损失函数：$L(\\hat y,y) = \\ \\sum_{t = 1}^{T_{x}}{L^{&lt; t &gt;}(\\hat  y^{&lt; t &gt;},y^{&lt; t &gt;})}$</p>\n<p>　　过程如下图所示：</p>\n<p><img src=\"/posts/dl-9Sequence-Models-introduce/71a0ed918704f6d35091d8b6d60793e4.png\" alt=\"反向传播过程\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2110,"excerpt":"<div class=\"note info\">\n            <p>课程名称：<a href=\"https://www.bilibili.com/video/BV1F4411y7BA\">吴恩达深度学习课程</a><br>学习资料：<a href=\"http://file.panjiangtao.cn/Deeplearning%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0v5.71.pdf\">深度学习教程中文笔记</a></p>\n          </div>\n<h1 id=\"序列模型\"><a href=\"#序列模型\" class=\"headerlink\" title=\"序列模型\"></a>序列模型</h1><h2 id=\"序列模型的使用场景\"><a href=\"#序列模型的使用场景\" class=\"headerlink\" title=\"序列模型的使用场景\"></a>序列模型的使用场景</h2><p>　　语音识别、语言翻译、句子中名字识别等场景中，输入和输出都是一个具有顺序的序列，在这种情况下循环神经网络（<strong>RNN</strong>）之类的模型具有很好的效果。<br></p>","more":"<p></p>\n<h2 id=\"序列模型中的符号表示\"><a href=\"#序列模型中的符号表示\" class=\"headerlink\" title=\"序列模型中的符号表示\"></a>序列模型中的符号表示</h2><p>　　以识别句子中名字为例<br>符号|含义<br>:-:|:-:<br>$x^{(i)<t>}$|第i个训练样本中，输入序列X的第t个单词<br>$y^{(i)<t>}$|第i个训练样本中，输出序列Y的第t个标识符（1代表$x^{(i)<t>}$是名字，0代表不是）<br>$T_{x}^{(i)}$|第i个训练样本中，输入序列X的单词数量<br>$T_{y}^{(i)}$|第i个训练样本中，输出序列Y的标识符数量</t></t></t></p>\n<h1 id=\"循环神经网络\"><a href=\"#循环神经网络\" class=\"headerlink\" title=\"循环神经网络\"></a>循环神经网络</h1><h2 id=\"不使用标准神经网络原因\"><a href=\"#不使用标准神经网络原因\" class=\"headerlink\" title=\"不使用标准神经网络原因\"></a>不使用标准神经网络原因</h2><pre><code>1. 不同样本的输入和输出的长度不同\n2. 在神经网络中学习到的内容不能共享\n</code></pre><h2 id=\"循环神经网络定义\"><a href=\"#循环神经网络定义\" class=\"headerlink\" title=\"循环神经网络定义\"></a>循环神经网络定义</h2><p>　　每一个时间步$x^{<t>}$按顺序作为神经网络的输入，同时输入也包含上一时间步的激活值$a^{<t-1>}$，同时设置初始激活值$a^{<0>}$如下图所示：<br><img src=\"/posts/dl-9Sequence-Models-introduce/cb041c33b65e17600842ebf87174c4f2.png\" alt=\"循环神经网络示意图\"><br>　　图中有一些参数。我们用$W_{ax}$来表示管理着从$x^{<t>}$到隐藏层的连接的一系列参数，每个时间步使用的都是相同的参数$W_{ax}$。而激活值也就是水平联系是由参数$W_{aa}$决定的，同时每一个时间步都使用相同的参数$W_{aa}$，同样的输出结果由$W_{\\text{ya}}$决定。</t></0></t-1></t></p>\n<p>　　该神经网络存在的问题：前面单元的预测无法使用后面的单元的信息，这在双向循环神经网络（BRNN）中将会介绍。</p>\n<h2 id=\"向前传播\"><a href=\"#向前传播\" class=\"headerlink\" title=\"向前传播\"></a>向前传播</h2><p>　　一般的情况下，在$t$时刻，</p>\n<p>$a^{&lt; t &gt;} = g_{1}(W_{aa}a^{&lt; t - 1 &gt;} + W_{ax}x^{&lt; t &gt;} + b_{a})$</p>\n<p>$\\hat y^{&lt; t &gt;} = g_{2}(W_{ya}a^{&lt; t &gt;} + b_{y})$</p>\n<p>　　循环神经网络用的激活函数经常是<strong>tanh</strong>，不过有时候也会用<strong>ReLU</strong>，但是<strong>tanh</strong>是更通常的选择，我们有其他方法来避免梯度消失问题，我们将在之后进行讲述。选用哪个激活函数是取决于你的输出$y$，如果它是一个二分问题，那么我猜你会用<strong>sigmoid</strong>函数作为激活函数，如果是$k$类别分类问题的话，那么可以选用<strong>softmax</strong>作为激活函数。不过这里激活函数的类型取决于你有什么样类型的输出$y$，对于命名实体识别来说$y$只可能是0或者1，那我猜这里第二个激活函数$g$可以是<strong>sigmoid</strong>激活函数。</p>\n<p>　　接下来为了<strong>简化</strong>这些符号，我要将这部分（$W_{\\text{aa}}a^{<t -1>} +W_{\\text{ax}}x^{<t>}$）以更简单的形式写出来，我把它写做$a^{<t>} =g(W_{a}\\left\\lbrack a^{&lt; t-1 &gt;},x^{<t>} \\right\\rbrack +b_{a})$，那么左右两边划线部分应该是等价的。所以我们定义$W_{a}$的方式是将矩阵$W_{aa}$和矩阵$W_{ax}$水平并列放置，$[ {W}_{aa}\\vdots {W}_{ax}]=W_{a}$。举个例子，如果$a$是100维的，然后延续之前的例子，$x$是10,000维的，那么$W_{aa}$就是个$（100，100）$维的矩阵，$W_{ax}$就是个$（100，10,000）$维的矩阵，因此如果将这两个矩阵堆起来，$W_{a}$就会是个$（100，10,100）$维的矩阵。</t></t></t></t></p>\n<p>　　用这个符号（$\\left\\lbrack a^{&lt; t - 1 &gt;},x^{&lt; t &gt;}\\right\\rbrack$）的意思是将这两个向量堆在一起，我会用这个符号表示，即$\\begin{bmatrix}a^{&lt; t-1 &gt;} \\\\ x^{&lt; t &gt;} \\\\\\end{bmatrix}$，最终这就是个10,100维的向量。你可以自己检查一下，用这个矩阵乘以这个向量，刚好能够得到原来的量，因为此时，矩阵$[ {W}_{aa}\\vdots {W}_{ax}]$乘以$\\begin{bmatrix} a^{&lt; t - 1 &gt;} \\\\ x^{&lt; t &gt;} \\\\ \\end{bmatrix}$，刚好等于$W_{aa}a^{<t-1>} + W_{ax}x^{<t>}$，</t></t-1></p>\n<p>　　同样对于这个例子$\\hat y^{<t>} = g(W_{ya}a^{<t>} +b_{y})$，我会用更简单的方式重写，$\\hat y^{&lt; t &gt;} = g(W_{y}a^{&lt; t &gt;} +b_{y})$</t></t></p>\n<p>　　于是，上述二式子变为：</p>\n<p>$a^{<t>} =g(W_{a}\\left\\lbrack a^{&lt; t-1 &gt;},x^{<t>} \\right\\rbrack +b_{a})$</t></t></p>\n<p>$\\hat y^{&lt; t &gt;} = g(W_{y}a^{&lt; t &gt;} +b_{y})$</p>\n<h2 id=\"反向传播\"><a href=\"#反向传播\" class=\"headerlink\" title=\"反向传播\"></a>反向传播</h2><p>　　单个元素损失函数：$L^{<t>}( \\hat y^{<t>},y^{<t>}) = - y^{<t>}\\log\\hat  y^{<t>}-( 1- y^{<t>})log(1-\\hat y^{<t>})$</t></t></t></t></t></t></t></p>\n<p>　　整个序列损失函数：$L(\\hat y,y) = \\ \\sum_{t = 1}^{T_{x}}{L^{&lt; t &gt;}(\\hat  y^{&lt; t &gt;},y^{&lt; t &gt;})}$</p>\n<p>　　过程如下图所示：</p>\n<p><img src=\"/posts/dl-9Sequence-Models-introduce/71a0ed918704f6d35091d8b6d60793e4.png\" alt=\"反向传播过程\"></p>"},{"title":"go语言结构体","date":"2020-09-24T09:16:20.000Z","_content":"# 定义结构体\n结构体定义需要使用 type 和 struct 语句。struct 语句定义一个新的数据类型，结构体中有一个或多个成员。type 语句设定了结构体的名称。结构体的格式如下：\n```go\ntype Books struct {\n   title string\n   author string\n   subject string\n   book_id int\n}\n```\n<!-- more -->\n一旦定义了结构体类型，它就能用于变量的声明，语法格式如下：\n```go\nBooks{\"Go 语言\", \"www.runoob.com\", \"Go 语言教程\", 6495407}\n或\nBooks{title: \"Go 语言\", author: \"www.runoob.com\", subject: \"Go 语言教程\", book_id: 6495407}\n```\n\n# 访问结构体成员\n```go\n// 结构体.成员名\nBook2.title = \"Python 教程\"\nBook2.author = \"www.runoob.com\"\n```\n\n# 结构体作为函数参数\n```go\nprintBook(Book1) /* 打印 Book1 信息 */\n\nfunc printBook( book Books ) {  \n}\n```\n\n# 结构体指针\n## 定义\n```go\nvar struct_pointer *Books\n```\n以上定义的指针变量可以存储结构体变量的地址。查看结构体变量地址，可以将 & 符号放置于结构体变量前：\n```go\nstruct_pointer = &Book1\n```\n使用结构体指针访问结构体成员，使用 \".\" 操作符：\n```go\nstruct_pointer.title\n```\n\n## 实例\n```go\nvar Book Books  /* Declare Book1 of type Book */\nprintBook(&Book)  //函数调用\n\nfunc printBook( book *Books ) {  //函数定义\n   fmt.Printf( \"Book title : %s\\n\", book.title)\n   fmt.Printf( \"Book author : %s\\n\", book.author)\n   fmt.Printf( \"Book subject : %s\\n\", book.subject)\n   fmt.Printf( \"Book book_id : %d\\n\", book.book_id)\n}\n```","source":"_posts/go-11struct.md","raw":"---\ntitle: go语言结构体\ndate: 2020-09-24 17:16:20\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# 定义结构体\n结构体定义需要使用 type 和 struct 语句。struct 语句定义一个新的数据类型，结构体中有一个或多个成员。type 语句设定了结构体的名称。结构体的格式如下：\n```go\ntype Books struct {\n   title string\n   author string\n   subject string\n   book_id int\n}\n```\n<!-- more -->\n一旦定义了结构体类型，它就能用于变量的声明，语法格式如下：\n```go\nBooks{\"Go 语言\", \"www.runoob.com\", \"Go 语言教程\", 6495407}\n或\nBooks{title: \"Go 语言\", author: \"www.runoob.com\", subject: \"Go 语言教程\", book_id: 6495407}\n```\n\n# 访问结构体成员\n```go\n// 结构体.成员名\nBook2.title = \"Python 教程\"\nBook2.author = \"www.runoob.com\"\n```\n\n# 结构体作为函数参数\n```go\nprintBook(Book1) /* 打印 Book1 信息 */\n\nfunc printBook( book Books ) {  \n}\n```\n\n# 结构体指针\n## 定义\n```go\nvar struct_pointer *Books\n```\n以上定义的指针变量可以存储结构体变量的地址。查看结构体变量地址，可以将 & 符号放置于结构体变量前：\n```go\nstruct_pointer = &Book1\n```\n使用结构体指针访问结构体成员，使用 \".\" 操作符：\n```go\nstruct_pointer.title\n```\n\n## 实例\n```go\nvar Book Books  /* Declare Book1 of type Book */\nprintBook(&Book)  //函数调用\n\nfunc printBook( book *Books ) {  //函数定义\n   fmt.Printf( \"Book title : %s\\n\", book.title)\n   fmt.Printf( \"Book author : %s\\n\", book.author)\n   fmt.Printf( \"Book subject : %s\\n\", book.subject)\n   fmt.Printf( \"Book book_id : %d\\n\", book.book_id)\n}\n```","slug":"go-11struct","published":1,"updated":"2020-09-24T10:43:17.996Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0h5002oc8pvgw6k88x8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"定义结构体\"><a href=\"#定义结构体\" class=\"headerlink\" title=\"定义结构体\"></a>定义结构体</h1><p>结构体定义需要使用 type 和 struct 语句。struct 语句定义一个新的数据类型，结构体中有一个或多个成员。type 语句设定了结构体的名称。结构体的格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Books <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">   title <span class=\"keyword\">string</span></span><br><span class=\"line\">   author <span class=\"keyword\">string</span></span><br><span class=\"line\">   subject <span class=\"keyword\">string</span></span><br><span class=\"line\">   book_id <span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br>一旦定义了结构体类型，它就能用于变量的声明，语法格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Books&#123;<span class=\"string\">&quot;Go 语言&quot;</span>, <span class=\"string\">&quot;www.runoob.com&quot;</span>, <span class=\"string\">&quot;Go 语言教程&quot;</span>, <span class=\"number\">6495407</span>&#125;</span><br><span class=\"line\">或</span><br><span class=\"line\">Books&#123;title: <span class=\"string\">&quot;Go 语言&quot;</span>, author: <span class=\"string\">&quot;www.runoob.com&quot;</span>, subject: <span class=\"string\">&quot;Go 语言教程&quot;</span>, book_id: <span class=\"number\">6495407</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"访问结构体成员\"><a href=\"#访问结构体成员\" class=\"headerlink\" title=\"访问结构体成员\"></a>访问结构体成员</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结构体.成员名</span></span><br><span class=\"line\">Book2.title = <span class=\"string\">&quot;Python 教程&quot;</span></span><br><span class=\"line\">Book2.author = <span class=\"string\">&quot;www.runoob.com&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"结构体作为函数参数\"><a href=\"#结构体作为函数参数\" class=\"headerlink\" title=\"结构体作为函数参数\"></a>结构体作为函数参数</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printBook(Book1) <span class=\"comment\">/* 打印 Book1 信息 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printBook</span><span class=\"params\">( book Books )</span></span> &#123;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结构体指针\"><a href=\"#结构体指针\" class=\"headerlink\" title=\"结构体指针\"></a>结构体指针</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> struct_pointer *Books</span><br></pre></td></tr></table></figure>\n<p>以上定义的指针变量可以存储结构体变量的地址。查看结构体变量地址，可以将 &amp; 符号放置于结构体变量前：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct_pointer = &amp;Book1</span><br></pre></td></tr></table></figure><br>使用结构体指针访问结构体成员，使用 “.” 操作符：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct_pointer.title</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book Books  <span class=\"comment\">/* Declare Book1 of type Book */</span></span><br><span class=\"line\">printBook(&amp;Book)  <span class=\"comment\">//函数调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printBook</span><span class=\"params\">( book *Books )</span></span> &#123;  <span class=\"comment\">//函数定义</span></span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book title : %s\\n&quot;</span>, book.title)</span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book author : %s\\n&quot;</span>, book.author)</span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book subject : %s\\n&quot;</span>, book.subject)</span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book book_id : %d\\n&quot;</span>, book.book_id)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1046,"excerpt":"<h1 id=\"定义结构体\"><a href=\"#定义结构体\" class=\"headerlink\" title=\"定义结构体\"></a>定义结构体</h1><p>结构体定义需要使用 type 和 struct 语句。struct 语句定义一个新的数据类型，结构体中有一个或多个成员。type 语句设定了结构体的名称。结构体的格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Books <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">   title <span class=\"keyword\">string</span></span><br><span class=\"line\">   author <span class=\"keyword\">string</span></span><br><span class=\"line\">   subject <span class=\"keyword\">string</span></span><br><span class=\"line\">   book_id <span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br></p>","more":"<br>一旦定义了结构体类型，它就能用于变量的声明，语法格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Books&#123;<span class=\"string\">&quot;Go 语言&quot;</span>, <span class=\"string\">&quot;www.runoob.com&quot;</span>, <span class=\"string\">&quot;Go 语言教程&quot;</span>, <span class=\"number\">6495407</span>&#125;</span><br><span class=\"line\">或</span><br><span class=\"line\">Books&#123;title: <span class=\"string\">&quot;Go 语言&quot;</span>, author: <span class=\"string\">&quot;www.runoob.com&quot;</span>, subject: <span class=\"string\">&quot;Go 语言教程&quot;</span>, book_id: <span class=\"number\">6495407</span>&#125;</span><br></pre></td></tr></table></figure><p></p>\n<h1 id=\"访问结构体成员\"><a href=\"#访问结构体成员\" class=\"headerlink\" title=\"访问结构体成员\"></a>访问结构体成员</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结构体.成员名</span></span><br><span class=\"line\">Book2.title = <span class=\"string\">&quot;Python 教程&quot;</span></span><br><span class=\"line\">Book2.author = <span class=\"string\">&quot;www.runoob.com&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"结构体作为函数参数\"><a href=\"#结构体作为函数参数\" class=\"headerlink\" title=\"结构体作为函数参数\"></a>结构体作为函数参数</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">printBook(Book1) <span class=\"comment\">/* 打印 Book1 信息 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printBook</span><span class=\"params\">( book Books )</span></span> &#123;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结构体指针\"><a href=\"#结构体指针\" class=\"headerlink\" title=\"结构体指针\"></a>结构体指针</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> struct_pointer *Books</span><br></pre></td></tr></table></figure>\n<p>以上定义的指针变量可以存储结构体变量的地址。查看结构体变量地址，可以将 &amp; 符号放置于结构体变量前：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct_pointer = &amp;Book1</span><br></pre></td></tr></table></figure><br>使用结构体指针访问结构体成员，使用 “.” 操作符：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct_pointer.title</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book Books  <span class=\"comment\">/* Declare Book1 of type Book */</span></span><br><span class=\"line\">printBook(&amp;Book)  <span class=\"comment\">//函数调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printBook</span><span class=\"params\">( book *Books )</span></span> &#123;  <span class=\"comment\">//函数定义</span></span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book title : %s\\n&quot;</span>, book.title)</span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book author : %s\\n&quot;</span>, book.author)</span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book subject : %s\\n&quot;</span>, book.subject)</span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;Book book_id : %d\\n&quot;</span>, book.book_id)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"go语言——切片","date":"2020-09-24T09:40:55.000Z","_content":"# 定义\nGo 语言切片是对数组的抽象。\nGo 数组的长度不可改变，在特定场景中这样的集合就不太适用，Go中提供了一种灵活，功能强悍的内置类型切片(\"动态数组\"),与数组相比切片的长度是不固定的，可以追加元素，在追加时可能使切片的容量增大。\n<!-- more -->\n你可以声明一个未指定大小的数组来定义切片：\n```go\nvar identifier []type;   //切片不需要说明长度,未赋值前identifier==nil\nvar slice1 []type = make([]type, len) //或使用make()函数来创建切片\nslice1 := make([]type, len)  //也可以简写\nmake([]T, length, capacity) // 也可以指定容量，其中capacity为可选参数\n```\n\n# 初始化\n有三中方法\n```go\ns :=make([]int,len,cap) \ns :=[] int {1,2,3 }\ns := arr[startIndex:endIndex] \n```\n\n# 相关函数\n## len() 和 cap() 函数\n切片是可索引的，并且可以由 len() 方法获取长度。\n切片提供了计算容量的方法 cap() 可以测量切片最长可以达到多少。\n```go\nfmt.Printf(\"len=%d cap=%d slice=%v\\n\",len(x),cap(x),x)\n```\n\n## append() 和 copy() 函数\n如果想增加切片的容量，我们必须创建一个新的更大的切片并把原分片的内容都拷贝过来。\n下面的代码描述了从拷贝切片的 copy 方法和向切片追加新元素的 append 方法。\n```go\n/* 向切片添加一个元素 */\nnumbers = append(numbers, 1)\n\n/* 同时添加多个元素 */\nnumbers = append(numbers, 2,3,4)\n\n/* 拷贝 numbers 的内容到 numbers1 */\ncopy(numbers1,numbers)\n```\n\n# 切片截取\n```go\nnumbers := []int{0,1,2,3,4,5,6,7,8}   //len=9 cap=9 slice=[0 1 2 3 4 5 6 7 8]\nnumber3 := numbers[2:5]   //len=3 cap=7 slice=[2 3 4],cap从[start:end]的start开始向后计算\n```","source":"_posts/go-12slice.md","raw":"---\ntitle: go语言——切片\ndate: 2020-09-24 17:40:55\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# 定义\nGo 语言切片是对数组的抽象。\nGo 数组的长度不可改变，在特定场景中这样的集合就不太适用，Go中提供了一种灵活，功能强悍的内置类型切片(\"动态数组\"),与数组相比切片的长度是不固定的，可以追加元素，在追加时可能使切片的容量增大。\n<!-- more -->\n你可以声明一个未指定大小的数组来定义切片：\n```go\nvar identifier []type;   //切片不需要说明长度,未赋值前identifier==nil\nvar slice1 []type = make([]type, len) //或使用make()函数来创建切片\nslice1 := make([]type, len)  //也可以简写\nmake([]T, length, capacity) // 也可以指定容量，其中capacity为可选参数\n```\n\n# 初始化\n有三中方法\n```go\ns :=make([]int,len,cap) \ns :=[] int {1,2,3 }\ns := arr[startIndex:endIndex] \n```\n\n# 相关函数\n## len() 和 cap() 函数\n切片是可索引的，并且可以由 len() 方法获取长度。\n切片提供了计算容量的方法 cap() 可以测量切片最长可以达到多少。\n```go\nfmt.Printf(\"len=%d cap=%d slice=%v\\n\",len(x),cap(x),x)\n```\n\n## append() 和 copy() 函数\n如果想增加切片的容量，我们必须创建一个新的更大的切片并把原分片的内容都拷贝过来。\n下面的代码描述了从拷贝切片的 copy 方法和向切片追加新元素的 append 方法。\n```go\n/* 向切片添加一个元素 */\nnumbers = append(numbers, 1)\n\n/* 同时添加多个元素 */\nnumbers = append(numbers, 2,3,4)\n\n/* 拷贝 numbers 的内容到 numbers1 */\ncopy(numbers1,numbers)\n```\n\n# 切片截取\n```go\nnumbers := []int{0,1,2,3,4,5,6,7,8}   //len=9 cap=9 slice=[0 1 2 3 4 5 6 7 8]\nnumber3 := numbers[2:5]   //len=3 cap=7 slice=[2 3 4],cap从[start:end]的start开始向后计算\n```","slug":"go-12slice","published":1,"updated":"2020-09-24T10:54:34.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0h6002qc8pv2lus88l4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>Go 语言切片是对数组的抽象。<br>Go 数组的长度不可改变，在特定场景中这样的集合就不太适用，Go中提供了一种灵活，功能强悍的内置类型切片(“动态数组”),与数组相比切片的长度是不固定的，可以追加元素，在追加时可能使切片的容量增大。<br><a id=\"more\"></a><br>你可以声明一个未指定大小的数组来定义切片：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> identifier []<span class=\"keyword\">type</span>;   <span class=\"comment\">//切片不需要说明长度,未赋值前identifier==nil</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> slice1 []<span class=\"keyword\">type</span> = <span class=\"built_in\">make</span>([]<span class=\"keyword\">type</span>, <span class=\"built_in\">len</span>) <span class=\"comment\">//或使用make()函数来创建切片</span></span><br><span class=\"line\">slice1 := <span class=\"built_in\">make</span>([]<span class=\"keyword\">type</span>, <span class=\"built_in\">len</span>)  <span class=\"comment\">//也可以简写</span></span><br><span class=\"line\"><span class=\"built_in\">make</span>([]T, length, capacity) <span class=\"comment\">// 也可以指定容量，其中capacity为可选参数</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><p>有三中方法<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s :=<span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>,<span class=\"built_in\">len</span>,<span class=\"built_in\">cap</span>) </span><br><span class=\"line\">s :=[] <span class=\"keyword\">int</span> &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span> &#125;</span><br><span class=\"line\">s := arr[startIndex:endIndex] </span><br></pre></td></tr></table></figure></p>\n<h1 id=\"相关函数\"><a href=\"#相关函数\" class=\"headerlink\" title=\"相关函数\"></a>相关函数</h1><h2 id=\"len-和-cap-函数\"><a href=\"#len-和-cap-函数\" class=\"headerlink\" title=\"len() 和 cap() 函数\"></a>len() 和 cap() 函数</h2><p>切片是可索引的，并且可以由 len() 方法获取长度。<br>切片提供了计算容量的方法 cap() 可以测量切片最长可以达到多少。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;len=%d cap=%d slice=%v\\n&quot;</span>,<span class=\"built_in\">len</span>(x),<span class=\"built_in\">cap</span>(x),x)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"append-和-copy-函数\"><a href=\"#append-和-copy-函数\" class=\"headerlink\" title=\"append() 和 copy() 函数\"></a>append() 和 copy() 函数</h2><p>如果想增加切片的容量，我们必须创建一个新的更大的切片并把原分片的内容都拷贝过来。<br>下面的代码描述了从拷贝切片的 copy 方法和向切片追加新元素的 append 方法。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 向切片添加一个元素 */</span></span><br><span class=\"line\">numbers = <span class=\"built_in\">append</span>(numbers, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 同时添加多个元素 */</span></span><br><span class=\"line\">numbers = <span class=\"built_in\">append</span>(numbers, <span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 拷贝 numbers 的内容到 numbers1 */</span></span><br><span class=\"line\"><span class=\"built_in\">copy</span>(numbers1,numbers)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"切片截取\"><a href=\"#切片截取\" class=\"headerlink\" title=\"切片截取\"></a>切片截取</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers := []<span class=\"keyword\">int</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;   <span class=\"comment\">//len=9 cap=9 slice=[0 1 2 3 4 5 6 7 8]</span></span><br><span class=\"line\">number3 := numbers[<span class=\"number\">2</span>:<span class=\"number\">5</span>]   <span class=\"comment\">//len=3 cap=7 slice=[2 3 4],cap从[start:end]的start开始向后计算</span></span><br></pre></td></tr></table></figure>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":923,"excerpt":"<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>Go 语言切片是对数组的抽象。<br>Go 数组的长度不可改变，在特定场景中这样的集合就不太适用，Go中提供了一种灵活，功能强悍的内置类型切片(“动态数组”),与数组相比切片的长度是不固定的，可以追加元素，在追加时可能使切片的容量增大。<br></p>","more":"<br>你可以声明一个未指定大小的数组来定义切片：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> identifier []<span class=\"keyword\">type</span>;   <span class=\"comment\">//切片不需要说明长度,未赋值前identifier==nil</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> slice1 []<span class=\"keyword\">type</span> = <span class=\"built_in\">make</span>([]<span class=\"keyword\">type</span>, <span class=\"built_in\">len</span>) <span class=\"comment\">//或使用make()函数来创建切片</span></span><br><span class=\"line\">slice1 := <span class=\"built_in\">make</span>([]<span class=\"keyword\">type</span>, <span class=\"built_in\">len</span>)  <span class=\"comment\">//也可以简写</span></span><br><span class=\"line\"><span class=\"built_in\">make</span>([]T, length, capacity) <span class=\"comment\">// 也可以指定容量，其中capacity为可选参数</span></span><br></pre></td></tr></table></figure><p></p>\n<h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><p>有三中方法<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s :=<span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>,<span class=\"built_in\">len</span>,<span class=\"built_in\">cap</span>) </span><br><span class=\"line\">s :=[] <span class=\"keyword\">int</span> &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span> &#125;</span><br><span class=\"line\">s := arr[startIndex:endIndex] </span><br></pre></td></tr></table></figure></p>\n<h1 id=\"相关函数\"><a href=\"#相关函数\" class=\"headerlink\" title=\"相关函数\"></a>相关函数</h1><h2 id=\"len-和-cap-函数\"><a href=\"#len-和-cap-函数\" class=\"headerlink\" title=\"len() 和 cap() 函数\"></a>len() 和 cap() 函数</h2><p>切片是可索引的，并且可以由 len() 方法获取长度。<br>切片提供了计算容量的方法 cap() 可以测量切片最长可以达到多少。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;len=%d cap=%d slice=%v\\n&quot;</span>,<span class=\"built_in\">len</span>(x),<span class=\"built_in\">cap</span>(x),x)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"append-和-copy-函数\"><a href=\"#append-和-copy-函数\" class=\"headerlink\" title=\"append() 和 copy() 函数\"></a>append() 和 copy() 函数</h2><p>如果想增加切片的容量，我们必须创建一个新的更大的切片并把原分片的内容都拷贝过来。<br>下面的代码描述了从拷贝切片的 copy 方法和向切片追加新元素的 append 方法。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 向切片添加一个元素 */</span></span><br><span class=\"line\">numbers = <span class=\"built_in\">append</span>(numbers, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 同时添加多个元素 */</span></span><br><span class=\"line\">numbers = <span class=\"built_in\">append</span>(numbers, <span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 拷贝 numbers 的内容到 numbers1 */</span></span><br><span class=\"line\"><span class=\"built_in\">copy</span>(numbers1,numbers)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"切片截取\"><a href=\"#切片截取\" class=\"headerlink\" title=\"切片截取\"></a>切片截取</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers := []<span class=\"keyword\">int</span>&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;   <span class=\"comment\">//len=9 cap=9 slice=[0 1 2 3 4 5 6 7 8]</span></span><br><span class=\"line\">number3 := numbers[<span class=\"number\">2</span>:<span class=\"number\">5</span>]   <span class=\"comment\">//len=3 cap=7 slice=[2 3 4],cap从[start:end]的start开始向后计算</span></span><br></pre></td></tr></table></figure>"},{"title":"go语言range","date":"2020-09-24T11:25:17.000Z","_content":"Go 语言中 range 关键字用于 for 循环中迭代数组(array)、切片(slice)、通道(channel)或集合(map)的元素。\n* 在数组和切片中它返回元素的索引和索引对应的值，在集合中返回 key-value 对。\n\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n    //这是我们使用range去求一个slice的和。使用数组跟这个很类似\n    nums := []int{2, 3, 4}\n    sum := 0\n    for _, num := range nums {\n        sum += num\n    }\n    fmt.Println(\"sum:\", sum)\n    //在数组上使用range将传入index和值两个变量。上面那个例子我们不需要使用该元素的序号，所以我们使用空白符\"_\"省略了。有时侯我们确实需要知道它的索引。\n    for i, num := range nums {\n        if num == 3 {\n            fmt.Println(\"index:\", i)\n        }\n    }\n    //range也可以用在map的键值对上。\n    kvs := map[string]string{\"a\": \"apple\", \"b\": \"banana\"}\n    for k, v := range kvs {\n        fmt.Printf(\"%s -> %s\\n\", k, v)\n    }\n    //range也可以用来枚举Unicode字符串。第一个参数是字符的索引，第二个是字符（Unicode的值）本身。\n    for i, c := range \"go\" {\n        fmt.Println(i, c)\n    }\n}\n```\n以上运行结果为：\n```\nsum: 9\nindex: 1\na -> apple\nb -> banana\n0 103\n1 111\n```","source":"_posts/go-13range.md","raw":"---\ntitle: go语言range\ndate: 2020-09-24 19:25:17\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\nGo 语言中 range 关键字用于 for 循环中迭代数组(array)、切片(slice)、通道(channel)或集合(map)的元素。\n* 在数组和切片中它返回元素的索引和索引对应的值，在集合中返回 key-value 对。\n\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n    //这是我们使用range去求一个slice的和。使用数组跟这个很类似\n    nums := []int{2, 3, 4}\n    sum := 0\n    for _, num := range nums {\n        sum += num\n    }\n    fmt.Println(\"sum:\", sum)\n    //在数组上使用range将传入index和值两个变量。上面那个例子我们不需要使用该元素的序号，所以我们使用空白符\"_\"省略了。有时侯我们确实需要知道它的索引。\n    for i, num := range nums {\n        if num == 3 {\n            fmt.Println(\"index:\", i)\n        }\n    }\n    //range也可以用在map的键值对上。\n    kvs := map[string]string{\"a\": \"apple\", \"b\": \"banana\"}\n    for k, v := range kvs {\n        fmt.Printf(\"%s -> %s\\n\", k, v)\n    }\n    //range也可以用来枚举Unicode字符串。第一个参数是字符的索引，第二个是字符（Unicode的值）本身。\n    for i, c := range \"go\" {\n        fmt.Println(i, c)\n    }\n}\n```\n以上运行结果为：\n```\nsum: 9\nindex: 1\na -> apple\nb -> banana\n0 103\n1 111\n```","slug":"go-13range","published":1,"updated":"2020-09-24T11:28:23.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0h8002vc8pv3c7z85yx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Go 语言中 range 关键字用于 for 循环中迭代数组(array)、切片(slice)、通道(channel)或集合(map)的元素。</p>\n<ul>\n<li>在数组和切片中它返回元素的索引和索引对应的值，在集合中返回 key-value 对。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//这是我们使用range去求一个slice的和。使用数组跟这个很类似</span></span><br><span class=\"line\">    nums := []<span class=\"keyword\">int</span>&#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br><span class=\"line\">    sum := <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _, num := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">        sum += num</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;sum:&quot;</span>, sum)</span><br><span class=\"line\">    <span class=\"comment\">//在数组上使用range将传入index和值两个变量。上面那个例子我们不需要使用该元素的序号，所以我们使用空白符&quot;_&quot;省略了。有时侯我们确实需要知道它的索引。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, num := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num == <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;index:&quot;</span>, i)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//range也可以用在map的键值对上。</span></span><br><span class=\"line\">    kvs := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>&#123;<span class=\"string\">&quot;a&quot;</span>: <span class=\"string\">&quot;apple&quot;</span>, <span class=\"string\">&quot;b&quot;</span>: <span class=\"string\">&quot;banana&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v := <span class=\"keyword\">range</span> kvs &#123;</span><br><span class=\"line\">        fmt.Printf(<span class=\"string\">&quot;%s -&gt; %s\\n&quot;</span>, k, v)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//range也可以用来枚举Unicode字符串。第一个参数是字符的索引，第二个是字符（Unicode的值）本身。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, c := <span class=\"keyword\">range</span> <span class=\"string\">&quot;go&quot;</span> &#123;</span><br><span class=\"line\">        fmt.Println(i, c)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上运行结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sum: 9</span><br><span class=\"line\">index: 1</span><br><span class=\"line\">a -&gt; apple</span><br><span class=\"line\">b -&gt; banana</span><br><span class=\"line\">0 103</span><br><span class=\"line\">1 111</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":873,"excerpt":"","more":"<p>Go 语言中 range 关键字用于 for 循环中迭代数组(array)、切片(slice)、通道(channel)或集合(map)的元素。</p>\n<ul>\n<li>在数组和切片中它返回元素的索引和索引对应的值，在集合中返回 key-value 对。</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//这是我们使用range去求一个slice的和。使用数组跟这个很类似</span></span><br><span class=\"line\">    nums := []<span class=\"keyword\">int</span>&#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;</span><br><span class=\"line\">    sum := <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _, num := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">        sum += num</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;sum:&quot;</span>, sum)</span><br><span class=\"line\">    <span class=\"comment\">//在数组上使用range将传入index和值两个变量。上面那个例子我们不需要使用该元素的序号，所以我们使用空白符&quot;_&quot;省略了。有时侯我们确实需要知道它的索引。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, num := <span class=\"keyword\">range</span> nums &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num == <span class=\"number\">3</span> &#123;</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;index:&quot;</span>, i)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//range也可以用在map的键值对上。</span></span><br><span class=\"line\">    kvs := <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>&#123;<span class=\"string\">&quot;a&quot;</span>: <span class=\"string\">&quot;apple&quot;</span>, <span class=\"string\">&quot;b&quot;</span>: <span class=\"string\">&quot;banana&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v := <span class=\"keyword\">range</span> kvs &#123;</span><br><span class=\"line\">        fmt.Printf(<span class=\"string\">&quot;%s -&gt; %s\\n&quot;</span>, k, v)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//range也可以用来枚举Unicode字符串。第一个参数是字符的索引，第二个是字符（Unicode的值）本身。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, c := <span class=\"keyword\">range</span> <span class=\"string\">&quot;go&quot;</span> &#123;</span><br><span class=\"line\">        fmt.Println(i, c)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上运行结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sum: 9</span><br><span class=\"line\">index: 1</span><br><span class=\"line\">a -&gt; apple</span><br><span class=\"line\">b -&gt; banana</span><br><span class=\"line\">0 103</span><br><span class=\"line\">1 111</span><br></pre></td></tr></table></figure></p>\n"},{"title":"go语言Map","date":"2020-09-24T12:37:36.000Z","_content":"## 介绍\nMap 是一种无序的键值对的集合。Map 最重要的一点是通过 key 来快速检索数据，key 类似于索引，指向数据的值。\n\nMap 是一种集合，所以我们可以像迭代数组和切片那样迭代它。不过，Map 是无序的，我们无法决定它的返回顺序，这是因为 Map 是使用 hash 表来实现的。\n\n## 定义\n可以使用内建函数 make 也可以使用 map 关键字来定义 Map:\n```go\n/* 声明变量，默认 map 是 nil */\nvar map_variable map[key_data_type]value_data_type\n\n/* 使用 make 函数 */\nmap_variable := make(map[key_data_type]value_data_type)\n```\n<!-- more -->\n{% note info %}\n如果不初始化 map，那么就会创建一个 nil map。nil map 不能用来存放键值对\n{% endnote %}\n\n## 实例\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n    var countryCapitalMap map[string]string /*创建集合 */\n    countryCapitalMap = make(map[string]string)\n\n    /* map插入key - value对,各个国家对应的首都 */\n    countryCapitalMap [ \"France\" ] = \"巴黎\"\n    countryCapitalMap [ \"Italy\" ] = \"罗马\"\n    countryCapitalMap [ \"Japan\" ] = \"东京\"\n    countryCapitalMap [ \"India \" ] = \"新德里\"\n\n    /*使用键输出地图值 */ \n    for country := range countryCapitalMap {\n        fmt.Println(country, \"首都是\", countryCapitalMap [country])\n    }\n\n    /*查看元素在集合中是否存在 */\n    capital, ok := countryCapitalMap [ \"American\" ] /*如果确定是真实的,则存在,否则不存在 */\n    /*fmt.Println(capital) */\n    /*fmt.Println(ok) */\n    if (ok) {\n        fmt.Println(\"American 的首都是\", capital)\n    } else {\n        fmt.Println(\"American 的首都不存在\")\n    }\n}\n```\n\n## delete() 函数\ndelete() 函数用于删除集合的元素, 参数为 map 和其对应的 key。\n```go\n/*删除上例中元素*/ \ndelete(countryCapitalMap, \"France\")\n```","source":"_posts/go-14map.md","raw":"---\ntitle: go语言Map\ndate: 2020-09-24 20:37:36\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n## 介绍\nMap 是一种无序的键值对的集合。Map 最重要的一点是通过 key 来快速检索数据，key 类似于索引，指向数据的值。\n\nMap 是一种集合，所以我们可以像迭代数组和切片那样迭代它。不过，Map 是无序的，我们无法决定它的返回顺序，这是因为 Map 是使用 hash 表来实现的。\n\n## 定义\n可以使用内建函数 make 也可以使用 map 关键字来定义 Map:\n```go\n/* 声明变量，默认 map 是 nil */\nvar map_variable map[key_data_type]value_data_type\n\n/* 使用 make 函数 */\nmap_variable := make(map[key_data_type]value_data_type)\n```\n<!-- more -->\n{% note info %}\n如果不初始化 map，那么就会创建一个 nil map。nil map 不能用来存放键值对\n{% endnote %}\n\n## 实例\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n    var countryCapitalMap map[string]string /*创建集合 */\n    countryCapitalMap = make(map[string]string)\n\n    /* map插入key - value对,各个国家对应的首都 */\n    countryCapitalMap [ \"France\" ] = \"巴黎\"\n    countryCapitalMap [ \"Italy\" ] = \"罗马\"\n    countryCapitalMap [ \"Japan\" ] = \"东京\"\n    countryCapitalMap [ \"India \" ] = \"新德里\"\n\n    /*使用键输出地图值 */ \n    for country := range countryCapitalMap {\n        fmt.Println(country, \"首都是\", countryCapitalMap [country])\n    }\n\n    /*查看元素在集合中是否存在 */\n    capital, ok := countryCapitalMap [ \"American\" ] /*如果确定是真实的,则存在,否则不存在 */\n    /*fmt.Println(capital) */\n    /*fmt.Println(ok) */\n    if (ok) {\n        fmt.Println(\"American 的首都是\", capital)\n    } else {\n        fmt.Println(\"American 的首都不存在\")\n    }\n}\n```\n\n## delete() 函数\ndelete() 函数用于删除集合的元素, 参数为 map 和其对应的 key。\n```go\n/*删除上例中元素*/ \ndelete(countryCapitalMap, \"France\")\n```","slug":"go-14map","published":1,"updated":"2020-09-24T12:49:42.824Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0h9002xc8pvf4waapmi","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Map 是一种无序的键值对的集合。Map 最重要的一点是通过 key 来快速检索数据，key 类似于索引，指向数据的值。</p>\n<p>Map 是一种集合，所以我们可以像迭代数组和切片那样迭代它。不过，Map 是无序的，我们无法决定它的返回顺序，这是因为 Map 是使用 hash 表来实现的。</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>可以使用内建函数 make 也可以使用 map 关键字来定义 Map:<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 声明变量，默认 map 是 nil */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> map_variable <span class=\"keyword\">map</span>[key_data_type]value_data_type</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 使用 make 函数 */</span></span><br><span class=\"line\">map_variable := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[key_data_type]value_data_type)</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br><div class=\"note info\">\n            <p>如果不初始化 map，那么就会创建一个 nil map。nil map 不能用来存放键值对</p>\n          </div></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> countryCapitalMap <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span> <span class=\"comment\">/*创建集合 */</span></span><br><span class=\"line\">    countryCapitalMap = <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* map插入key - value对,各个国家对应的首都 */</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;France&quot;</span> ] = <span class=\"string\">&quot;巴黎&quot;</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;Italy&quot;</span> ] = <span class=\"string\">&quot;罗马&quot;</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;Japan&quot;</span> ] = <span class=\"string\">&quot;东京&quot;</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;India &quot;</span> ] = <span class=\"string\">&quot;新德里&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*使用键输出地图值 */</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> country := <span class=\"keyword\">range</span> countryCapitalMap &#123;</span><br><span class=\"line\">        fmt.Println(country, <span class=\"string\">&quot;首都是&quot;</span>, countryCapitalMap [country])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*查看元素在集合中是否存在 */</span></span><br><span class=\"line\">    capital, ok := countryCapitalMap [ <span class=\"string\">&quot;American&quot;</span> ] <span class=\"comment\">/*如果确定是真实的,则存在,否则不存在 */</span></span><br><span class=\"line\">    <span class=\"comment\">/*fmt.Println(capital) */</span></span><br><span class=\"line\">    <span class=\"comment\">/*fmt.Println(ok) */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ok) &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;American 的首都是&quot;</span>, capital)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;American 的首都不存在&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"delete-函数\"><a href=\"#delete-函数\" class=\"headerlink\" title=\"delete() 函数\"></a>delete() 函数</h2><p>delete() 函数用于删除集合的元素, 参数为 map 和其对应的 key。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*删除上例中元素*/</span> </span><br><span class=\"line\"><span class=\"built_in\">delete</span>(countryCapitalMap, <span class=\"string\">&quot;France&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1233,"excerpt":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Map 是一种无序的键值对的集合。Map 最重要的一点是通过 key 来快速检索数据，key 类似于索引，指向数据的值。</p>\n<p>Map 是一种集合，所以我们可以像迭代数组和切片那样迭代它。不过，Map 是无序的，我们无法决定它的返回顺序，这是因为 Map 是使用 hash 表来实现的。</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>可以使用内建函数 make 也可以使用 map 关键字来定义 Map:<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 声明变量，默认 map 是 nil */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> map_variable <span class=\"keyword\">map</span>[key_data_type]value_data_type</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 使用 make 函数 */</span></span><br><span class=\"line\">map_variable := <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[key_data_type]value_data_type)</span><br></pre></td></tr></table></figure><br></p>","more":"<br><div class=\"note info\">\n            <p>如果不初始化 map，那么就会创建一个 nil map。nil map 不能用来存放键值对</p>\n          </div><p></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> countryCapitalMap <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span> <span class=\"comment\">/*创建集合 */</span></span><br><span class=\"line\">    countryCapitalMap = <span class=\"built_in\">make</span>(<span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">string</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* map插入key - value对,各个国家对应的首都 */</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;France&quot;</span> ] = <span class=\"string\">&quot;巴黎&quot;</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;Italy&quot;</span> ] = <span class=\"string\">&quot;罗马&quot;</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;Japan&quot;</span> ] = <span class=\"string\">&quot;东京&quot;</span></span><br><span class=\"line\">    countryCapitalMap [ <span class=\"string\">&quot;India &quot;</span> ] = <span class=\"string\">&quot;新德里&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*使用键输出地图值 */</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> country := <span class=\"keyword\">range</span> countryCapitalMap &#123;</span><br><span class=\"line\">        fmt.Println(country, <span class=\"string\">&quot;首都是&quot;</span>, countryCapitalMap [country])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*查看元素在集合中是否存在 */</span></span><br><span class=\"line\">    capital, ok := countryCapitalMap [ <span class=\"string\">&quot;American&quot;</span> ] <span class=\"comment\">/*如果确定是真实的,则存在,否则不存在 */</span></span><br><span class=\"line\">    <span class=\"comment\">/*fmt.Println(capital) */</span></span><br><span class=\"line\">    <span class=\"comment\">/*fmt.Println(ok) */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ok) &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;American 的首都是&quot;</span>, capital)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;American 的首都不存在&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"delete-函数\"><a href=\"#delete-函数\" class=\"headerlink\" title=\"delete() 函数\"></a>delete() 函数</h2><p>delete() 函数用于删除集合的元素, 参数为 map 和其对应的 key。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*删除上例中元素*/</span> </span><br><span class=\"line\"><span class=\"built_in\">delete</span>(countryCapitalMap, <span class=\"string\">&quot;France&quot;</span>)</span><br></pre></td></tr></table></figure></p>"},{"title":"go语言接口","date":"2020-09-25T11:21:21.000Z","_content":"Go 语言提供了另外一种数据类型即接口，它把所有的具有共性的方法定义在一起，任何其他类型只要实现了这些方法就是实现了这个接口。\n\n<!-- more -->\n实例\n```go\npackage main\nimport \"fmt\"\n\ntype Phone interface {    //接口定义\n    call()\n}\n\ntype NokiaPhone struct {    //结构体定义\n}\n\nfunc (nokiaPhone NokiaPhone) call() {\n    fmt.Println(\"I am Nokia, I can call you!\")\n}\n\ntype IPhone struct {\n}\n\nfunc (iPhone IPhone) call() {\n    fmt.Println(\"I am iPhone, I can call you!\")\n}\n\nfunc main() {\n    var phone Phone\n\n    phone = new(NokiaPhone)\n    phone.call()\n\n    phone = new(IPhone)\n    phone.call()\n\n}\n```\n\n","source":"_posts/go-15interface.md","raw":"---\ntitle: go语言接口\ndate: 2020-09-25 19:21:21\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\nGo 语言提供了另外一种数据类型即接口，它把所有的具有共性的方法定义在一起，任何其他类型只要实现了这些方法就是实现了这个接口。\n\n<!-- more -->\n实例\n```go\npackage main\nimport \"fmt\"\n\ntype Phone interface {    //接口定义\n    call()\n}\n\ntype NokiaPhone struct {    //结构体定义\n}\n\nfunc (nokiaPhone NokiaPhone) call() {\n    fmt.Println(\"I am Nokia, I can call you!\")\n}\n\ntype IPhone struct {\n}\n\nfunc (iPhone IPhone) call() {\n    fmt.Println(\"I am iPhone, I can call you!\")\n}\n\nfunc main() {\n    var phone Phone\n\n    phone = new(NokiaPhone)\n    phone.call()\n\n    phone = new(IPhone)\n    phone.call()\n\n}\n```\n\n","slug":"go-15interface","published":1,"updated":"2020-09-25T11:24:50.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hb0030c8pvg30j87fw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Go 语言提供了另外一种数据类型即接口，它把所有的具有共性的方法定义在一起，任何其他类型只要实现了这些方法就是实现了这个接口。</p>\n<a id=\"more\"></a>\n<p>实例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Phone <span class=\"keyword\">interface</span> &#123;    <span class=\"comment\">//接口定义</span></span><br><span class=\"line\">    call()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> NokiaPhone <span class=\"keyword\">struct</span> &#123;    <span class=\"comment\">//结构体定义</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(nokiaPhone NokiaPhone)</span> <span class=\"title\">call</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;I am Nokia, I can call you!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> IPhone <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(iPhone IPhone)</span> <span class=\"title\">call</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;I am iPhone, I can call you!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> phone Phone</span><br><span class=\"line\"></span><br><span class=\"line\">    phone = <span class=\"built_in\">new</span>(NokiaPhone)</span><br><span class=\"line\">    phone.call()</span><br><span class=\"line\"></span><br><span class=\"line\">    phone = <span class=\"built_in\">new</span>(IPhone)</span><br><span class=\"line\">    phone.call()</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":528,"excerpt":"<p>Go 语言提供了另外一种数据类型即接口，它把所有的具有共性的方法定义在一起，任何其他类型只要实现了这些方法就是实现了这个接口。</p>","more":"<p>实例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Phone <span class=\"keyword\">interface</span> &#123;    <span class=\"comment\">//接口定义</span></span><br><span class=\"line\">    call()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> NokiaPhone <span class=\"keyword\">struct</span> &#123;    <span class=\"comment\">//结构体定义</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(nokiaPhone NokiaPhone)</span> <span class=\"title\">call</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;I am Nokia, I can call you!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> IPhone <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(iPhone IPhone)</span> <span class=\"title\">call</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;I am iPhone, I can call you!&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> phone Phone</span><br><span class=\"line\"></span><br><span class=\"line\">    phone = <span class=\"built_in\">new</span>(NokiaPhone)</span><br><span class=\"line\">    phone.call()</span><br><span class=\"line\"></span><br><span class=\"line\">    phone = <span class=\"built_in\">new</span>(IPhone)</span><br><span class=\"line\">    phone.call()</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"go语言错误处理","date":"2020-09-25T11:25:13.000Z","_content":"Go 语言通过内置的错误接口提供了非常简单的错误处理机制。\n# 定义\nerror类型是一个接口类型，这是它的定义：\n```go\ntype error interface {\n    Error() string\n}\n```\n<!-- more -->\n\n# 举个栗子\n我们可以在编码中通过实现 error 接口类型来生成错误信息。\n\n函数通常在最后的返回值中返回错误信息。使用errors.New 可返回一个错误信息：\n```go\nfunc Sqrt(f float64) (float64, error) {\n    if f < 0 {\n        return 0, errors.New(\"math: square root of negative number\")\n    }\n    // 实现\n}\n```\n在下面的例子中，我们在调用Sqrt的时候传递的一个负数，然后就得到了non-nil的error对象，将此对象与nil比较，结果为true，所以fmt.Println(fmt包在处理error时会调用Error方法)被调用，以输出错误，请看下面调用的示例代码：\n```go\nresult, err:= Sqrt(-1)\n\nif err != nil {\n   fmt.Println(err)\n}\n```\n\n# 再来个栗子\n```go\npackage main\n\nimport (\n    \"fmt\"\n)\n\n// 定义一个 DivideError 结构\ntype DivideError struct {\n    dividee int\n    divider int\n}\n\n// 实现 `error` 接口\nfunc (de *DivideError) Error() string {\n    strFormat := `\n    Cannot proceed, the divider is zero.\n    dividee: %d\n    divider: 0\n`\n    return fmt.Sprintf(strFormat, de.dividee)\n}\n\n// 定义 `int` 类型除法运算的函数\nfunc Divide(varDividee int, varDivider int) (result int, errorMsg string) {\n    if varDivider == 0 {\n            dData := DivideError{\n                    dividee: varDividee,\n                    divider: varDivider,\n            }\n            errorMsg = dData.Error()\n            return\n    } else {\n            return varDividee / varDivider, \"\"\n    }\n\n}\n\nfunc main() {\n\n    // 正常情况\n    if result, errorMsg := Divide(100, 10); errorMsg == \"\" {\n            fmt.Println(\"100/10 = \", result)\n    }\n    // 当除数为零的时候会返回错误信息\n    if _, errorMsg := Divide(100, 0); errorMsg != \"\" {\n            fmt.Println(\"errorMsg is: \", errorMsg)\n    }\n\n}\n```\n执行以上程序，输出结果为：\n```s\n100/10 =  10\nerrorMsg is:  \n    Cannot proceed, the divider is zero.\n    dividee: 100\n    divider: 0\n```","source":"_posts/go-16error.md","raw":"---\ntitle: go语言错误处理\ndate: 2020-09-25 19:25:13\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\nGo 语言通过内置的错误接口提供了非常简单的错误处理机制。\n# 定义\nerror类型是一个接口类型，这是它的定义：\n```go\ntype error interface {\n    Error() string\n}\n```\n<!-- more -->\n\n# 举个栗子\n我们可以在编码中通过实现 error 接口类型来生成错误信息。\n\n函数通常在最后的返回值中返回错误信息。使用errors.New 可返回一个错误信息：\n```go\nfunc Sqrt(f float64) (float64, error) {\n    if f < 0 {\n        return 0, errors.New(\"math: square root of negative number\")\n    }\n    // 实现\n}\n```\n在下面的例子中，我们在调用Sqrt的时候传递的一个负数，然后就得到了non-nil的error对象，将此对象与nil比较，结果为true，所以fmt.Println(fmt包在处理error时会调用Error方法)被调用，以输出错误，请看下面调用的示例代码：\n```go\nresult, err:= Sqrt(-1)\n\nif err != nil {\n   fmt.Println(err)\n}\n```\n\n# 再来个栗子\n```go\npackage main\n\nimport (\n    \"fmt\"\n)\n\n// 定义一个 DivideError 结构\ntype DivideError struct {\n    dividee int\n    divider int\n}\n\n// 实现 `error` 接口\nfunc (de *DivideError) Error() string {\n    strFormat := `\n    Cannot proceed, the divider is zero.\n    dividee: %d\n    divider: 0\n`\n    return fmt.Sprintf(strFormat, de.dividee)\n}\n\n// 定义 `int` 类型除法运算的函数\nfunc Divide(varDividee int, varDivider int) (result int, errorMsg string) {\n    if varDivider == 0 {\n            dData := DivideError{\n                    dividee: varDividee,\n                    divider: varDivider,\n            }\n            errorMsg = dData.Error()\n            return\n    } else {\n            return varDividee / varDivider, \"\"\n    }\n\n}\n\nfunc main() {\n\n    // 正常情况\n    if result, errorMsg := Divide(100, 10); errorMsg == \"\" {\n            fmt.Println(\"100/10 = \", result)\n    }\n    // 当除数为零的时候会返回错误信息\n    if _, errorMsg := Divide(100, 0); errorMsg != \"\" {\n            fmt.Println(\"errorMsg is: \", errorMsg)\n    }\n\n}\n```\n执行以上程序，输出结果为：\n```s\n100/10 =  10\nerrorMsg is:  \n    Cannot proceed, the divider is zero.\n    dividee: 100\n    divider: 0\n```","slug":"go-16error","published":1,"updated":"2020-09-25T11:30:49.597Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hd0031c8pvgq0lenkv","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Go 语言通过内置的错误接口提供了非常简单的错误处理机制。</p>\n<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>error类型是一个接口类型，这是它的定义：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> error <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">    Error() <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a></p>\n<h1 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h1><p>我们可以在编码中通过实现 error 接口类型来生成错误信息。</p>\n<p>函数通常在最后的返回值中返回错误信息。使用errors.New 可返回一个错误信息：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Sqrt</span><span class=\"params\">(f <span class=\"keyword\">float64</span>)</span> <span class=\"params\">(<span class=\"keyword\">float64</span>, error)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> f &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>, errors.New(<span class=\"string\">&quot;math: square root of negative number&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 实现</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>在下面的例子中，我们在调用Sqrt的时候传递的一个负数，然后就得到了non-nil的error对象，将此对象与nil比较，结果为true，所以fmt.Println(fmt包在处理error时会调用Error方法)被调用，以输出错误，请看下面调用的示例代码：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result, err:= Sqrt(<span class=\"number\">-1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">   fmt.Println(err)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"再来个栗子\"><a href=\"#再来个栗子\" class=\"headerlink\" title=\"再来个栗子\"></a>再来个栗子</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个 DivideError 结构</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> DivideError <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    dividee <span class=\"keyword\">int</span></span><br><span class=\"line\">    divider <span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现 `error` 接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(de *DivideError)</span> <span class=\"title\">Error</span><span class=\"params\">()</span> <span class=\"title\">string</span></span> &#123;</span><br><span class=\"line\">    strFormat := <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    Cannot proceed, the divider is zero.</span></span><br><span class=\"line\"><span class=\"string\">    dividee: %d</span></span><br><span class=\"line\"><span class=\"string\">    divider: 0</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fmt.Sprintf(strFormat, de.dividee)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义 `int` 类型除法运算的函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Divide</span><span class=\"params\">(varDividee <span class=\"keyword\">int</span>, varDivider <span class=\"keyword\">int</span>)</span> <span class=\"params\">(result <span class=\"keyword\">int</span>, errorMsg <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> varDivider == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            dData := DivideError&#123;</span><br><span class=\"line\">                    dividee: varDividee,</span><br><span class=\"line\">                    divider: varDivider,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            errorMsg = dData.Error()</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> varDividee / varDivider, <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 正常情况</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> result, errorMsg := Divide(<span class=\"number\">100</span>, <span class=\"number\">10</span>); errorMsg == <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;100/10 = &quot;</span>, result)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 当除数为零的时候会返回错误信息</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> _, errorMsg := Divide(<span class=\"number\">100</span>, <span class=\"number\">0</span>); errorMsg != <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;errorMsg is: &quot;</span>, errorMsg)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行以上程序，输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100&#x2F;10 &#x3D;  10</span><br><span class=\"line\">errorMsg is:  </span><br><span class=\"line\">    Cannot proceed, the divider is zero.</span><br><span class=\"line\">    dividee: 100</span><br><span class=\"line\">    divider: 0</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1494,"excerpt":"<p>Go 语言通过内置的错误接口提供了非常简单的错误处理机制。</p>\n<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>error类型是一个接口类型，这是它的定义：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> error <span class=\"keyword\">interface</span> &#123;</span><br><span class=\"line\">    Error() <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br></p>","more":"<p></p>\n<h1 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h1><p>我们可以在编码中通过实现 error 接口类型来生成错误信息。</p>\n<p>函数通常在最后的返回值中返回错误信息。使用errors.New 可返回一个错误信息：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Sqrt</span><span class=\"params\">(f <span class=\"keyword\">float64</span>)</span> <span class=\"params\">(<span class=\"keyword\">float64</span>, error)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> f &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>, errors.New(<span class=\"string\">&quot;math: square root of negative number&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 实现</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>在下面的例子中，我们在调用Sqrt的时候传递的一个负数，然后就得到了non-nil的error对象，将此对象与nil比较，结果为true，所以fmt.Println(fmt包在处理error时会调用Error方法)被调用，以输出错误，请看下面调用的示例代码：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result, err:= Sqrt(<span class=\"number\">-1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">   fmt.Println(err)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"再来个栗子\"><a href=\"#再来个栗子\" class=\"headerlink\" title=\"再来个栗子\"></a>再来个栗子</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">    <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个 DivideError 结构</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> DivideError <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">    dividee <span class=\"keyword\">int</span></span><br><span class=\"line\">    divider <span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现 `error` 接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(de *DivideError)</span> <span class=\"title\">Error</span><span class=\"params\">()</span> <span class=\"title\">string</span></span> &#123;</span><br><span class=\"line\">    strFormat := <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    Cannot proceed, the divider is zero.</span></span><br><span class=\"line\"><span class=\"string\">    dividee: %d</span></span><br><span class=\"line\"><span class=\"string\">    divider: 0</span></span><br><span class=\"line\"><span class=\"string\">`</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fmt.Sprintf(strFormat, de.dividee)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义 `int` 类型除法运算的函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Divide</span><span class=\"params\">(varDividee <span class=\"keyword\">int</span>, varDivider <span class=\"keyword\">int</span>)</span> <span class=\"params\">(result <span class=\"keyword\">int</span>, errorMsg <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> varDivider == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            dData := DivideError&#123;</span><br><span class=\"line\">                    dividee: varDividee,</span><br><span class=\"line\">                    divider: varDivider,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            errorMsg = dData.Error()</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> varDividee / varDivider, <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 正常情况</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> result, errorMsg := Divide(<span class=\"number\">100</span>, <span class=\"number\">10</span>); errorMsg == <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;100/10 = &quot;</span>, result)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 当除数为零的时候会返回错误信息</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> _, errorMsg := Divide(<span class=\"number\">100</span>, <span class=\"number\">0</span>); errorMsg != <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;errorMsg is: &quot;</span>, errorMsg)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行以上程序，输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100&#x2F;10 &#x3D;  10</span><br><span class=\"line\">errorMsg is:  </span><br><span class=\"line\">    Cannot proceed, the divider is zero.</span><br><span class=\"line\">    dividee: 100</span><br><span class=\"line\">    divider: 0</span><br></pre></td></tr></table></figure></p>"},{"title":"go语言并发","date":"2020-09-25T11:33:13.000Z","_content":"Go 语言支持并发，我们只需要通过 go 关键字来开启 goroutine 即可。\n# goroutine 语法格式：\n```go\ngo 函数名( 参数列表 )\n```\n<!-- more -->\n\n# 通道（channel）\n通道（channel）是用来传递数据的一个数据结构。\n\n通道可用于两个 goroutine 之间通过传递一个指定类型的值来同步运行和通讯。操作符 <- 用于指定通道的方向，发送或接收。如果未指定方向，则为双向通道。\n```go\nch <- v    // 把 v 发送到通道 ch\nv := <-ch  // 从 ch 接收数据\n           // 并把值赋给 v\n```\n声明一个通道很简单，我们使用chan关键字即可，通道在使用前必须先创建：\n```go\nch := make(chan int)\n```\n\n# 通道缓冲区\n通道可以设置缓冲区，通过 make 的第二个参数指定缓冲区大小：\n```go\nch := make(chan int, 100)\n```\n带缓冲区的通道允许发送端的数据发送和接收端的数据获取处于异步状态，就是说发送端发送的数据可以放在缓冲区里面，可以等待接收端去获取数据，而不是立刻需要接收端去获取数据。\n\n不过由于缓冲区的大小是有限的，所以还是必须有接收端来接收数据的，否则缓冲区一满，数据发送端就无法再发送数据了。\n{% note info %}\n注意：如果通道不带缓冲，发送方会阻塞直到接收方从通道中接收了值。如果通道带缓冲，发送方则会阻塞直到发送的值被拷贝到缓冲区内；如果缓冲区已满，则意味着需要等待直到某个接收方获取到一个值。接收方在有值可以接收之前会一直阻塞。\n{% endnote %}\n\n## 实例\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    // 这里我们定义了一个可以存储整数类型的带缓冲通道\n        // 缓冲区大小为2\n        ch := make(chan int, 2)\n\n        // 因为 ch 是带缓冲的通道，我们可以同时发送两个数据\n        // 而不用立刻需要去同步读取数据\n        ch <- 1\n        ch <- 2\n\n        // 获取这两个数据\n        fmt.Println(<-ch)\n        fmt.Println(<-ch)\n}\n```\n执行输出结果为：\n```\n1\n2\n```\n\n# Go 遍历通道与关闭通道\nGo 通过 range 关键字来实现遍历读取到的数据，类似于与数组或切片。格式如下：\n```go\nv, ok := <-ch\n```\n如果通道接收不到数据后 ok 就为 false，这时通道就可以使用 close() 函数来关闭。\n\n实例\n```go\npackage main\n\nimport (\n        \"fmt\"\n)\n\nfunc fibonacci(n int, c chan int) {\n        x, y := 0, 1\n        for i := 0; i < n; i++ {\n                c <- x\n                x, y = y, x+y\n        }\n        close(c)\n}\n\nfunc main() {\n    c := make(chan int, 10)\n    go fibonacci(cap(c), c)\n    // range 函数遍历每个从通道接收到的数据，因为 c 在发送完 10 个\n    // 数据之后就关闭了通道，所以这里我们 range 函数在接收到 10 个数据\n    // 之后就结束了。如果上面的 c 通道不关闭，那么 range 函数就不\n    // 会结束，从而在接收第 11 个数据的时候就阻塞了。\n    for i := range c {\n            fmt.Println(i)\n    }\n}\n```\n执行输出结果为：\n```\n0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n```","source":"_posts/go-17bingfa.md","raw":"---\ntitle: go语言并发\ndate: 2020-09-25 19:33:13\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\nGo 语言支持并发，我们只需要通过 go 关键字来开启 goroutine 即可。\n# goroutine 语法格式：\n```go\ngo 函数名( 参数列表 )\n```\n<!-- more -->\n\n# 通道（channel）\n通道（channel）是用来传递数据的一个数据结构。\n\n通道可用于两个 goroutine 之间通过传递一个指定类型的值来同步运行和通讯。操作符 <- 用于指定通道的方向，发送或接收。如果未指定方向，则为双向通道。\n```go\nch <- v    // 把 v 发送到通道 ch\nv := <-ch  // 从 ch 接收数据\n           // 并把值赋给 v\n```\n声明一个通道很简单，我们使用chan关键字即可，通道在使用前必须先创建：\n```go\nch := make(chan int)\n```\n\n# 通道缓冲区\n通道可以设置缓冲区，通过 make 的第二个参数指定缓冲区大小：\n```go\nch := make(chan int, 100)\n```\n带缓冲区的通道允许发送端的数据发送和接收端的数据获取处于异步状态，就是说发送端发送的数据可以放在缓冲区里面，可以等待接收端去获取数据，而不是立刻需要接收端去获取数据。\n\n不过由于缓冲区的大小是有限的，所以还是必须有接收端来接收数据的，否则缓冲区一满，数据发送端就无法再发送数据了。\n{% note info %}\n注意：如果通道不带缓冲，发送方会阻塞直到接收方从通道中接收了值。如果通道带缓冲，发送方则会阻塞直到发送的值被拷贝到缓冲区内；如果缓冲区已满，则意味着需要等待直到某个接收方获取到一个值。接收方在有值可以接收之前会一直阻塞。\n{% endnote %}\n\n## 实例\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    // 这里我们定义了一个可以存储整数类型的带缓冲通道\n        // 缓冲区大小为2\n        ch := make(chan int, 2)\n\n        // 因为 ch 是带缓冲的通道，我们可以同时发送两个数据\n        // 而不用立刻需要去同步读取数据\n        ch <- 1\n        ch <- 2\n\n        // 获取这两个数据\n        fmt.Println(<-ch)\n        fmt.Println(<-ch)\n}\n```\n执行输出结果为：\n```\n1\n2\n```\n\n# Go 遍历通道与关闭通道\nGo 通过 range 关键字来实现遍历读取到的数据，类似于与数组或切片。格式如下：\n```go\nv, ok := <-ch\n```\n如果通道接收不到数据后 ok 就为 false，这时通道就可以使用 close() 函数来关闭。\n\n实例\n```go\npackage main\n\nimport (\n        \"fmt\"\n)\n\nfunc fibonacci(n int, c chan int) {\n        x, y := 0, 1\n        for i := 0; i < n; i++ {\n                c <- x\n                x, y = y, x+y\n        }\n        close(c)\n}\n\nfunc main() {\n    c := make(chan int, 10)\n    go fibonacci(cap(c), c)\n    // range 函数遍历每个从通道接收到的数据，因为 c 在发送完 10 个\n    // 数据之后就关闭了通道，所以这里我们 range 函数在接收到 10 个数据\n    // 之后就结束了。如果上面的 c 通道不关闭，那么 range 函数就不\n    // 会结束，从而在接收第 11 个数据的时候就阻塞了。\n    for i := range c {\n            fmt.Println(i)\n    }\n}\n```\n执行输出结果为：\n```\n0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n```","slug":"go-17bingfa","published":1,"updated":"2020-09-25T11:45:07.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0he0034c8pve4o144u7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Go 语言支持并发，我们只需要通过 go 关键字来开启 goroutine 即可。</p>\n<h1 id=\"goroutine-语法格式：\"><a href=\"#goroutine-语法格式：\" class=\"headerlink\" title=\"goroutine 语法格式：\"></a>goroutine 语法格式：</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> 函数名( 参数列表 )</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"通道（channel）\"><a href=\"#通道（channel）\" class=\"headerlink\" title=\"通道（channel）\"></a>通道（channel）</h1><p>通道（channel）是用来传递数据的一个数据结构。</p>\n<p>通道可用于两个 goroutine 之间通过传递一个指定类型的值来同步运行和通讯。操作符 &lt;- 用于指定通道的方向，发送或接收。如果未指定方向，则为双向通道。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ch &lt;- v    <span class=\"comment\">// 把 v 发送到通道 ch</span></span><br><span class=\"line\">v := &lt;-ch  <span class=\"comment\">// 从 ch 接收数据</span></span><br><span class=\"line\">           <span class=\"comment\">// 并把值赋给 v</span></span><br></pre></td></tr></table></figure><br>声明一个通道很简单，我们使用chan关键字即可，通道在使用前必须先创建：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"通道缓冲区\"><a href=\"#通道缓冲区\" class=\"headerlink\" title=\"通道缓冲区\"></a>通道缓冲区</h1><p>通道可以设置缓冲区，通过 make 的第二个参数指定缓冲区大小：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure><br>带缓冲区的通道允许发送端的数据发送和接收端的数据获取处于异步状态，就是说发送端发送的数据可以放在缓冲区里面，可以等待接收端去获取数据，而不是立刻需要接收端去获取数据。</p>\n<p>不过由于缓冲区的大小是有限的，所以还是必须有接收端来接收数据的，否则缓冲区一满，数据发送端就无法再发送数据了。<br><div class=\"note info\">\n            <p>注意：如果通道不带缓冲，发送方会阻塞直到接收方从通道中接收了值。如果通道带缓冲，发送方则会阻塞直到发送的值被拷贝到缓冲区内；如果缓冲区已满，则意味着需要等待直到某个接收方获取到一个值。接收方在有值可以接收之前会一直阻塞。</p>\n          </div></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里我们定义了一个可以存储整数类型的带缓冲通道</span></span><br><span class=\"line\">        <span class=\"comment\">// 缓冲区大小为2</span></span><br><span class=\"line\">        ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 因为 ch 是带缓冲的通道，我们可以同时发送两个数据</span></span><br><span class=\"line\">        <span class=\"comment\">// 而不用立刻需要去同步读取数据</span></span><br><span class=\"line\">        ch &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">        ch &lt;- <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获取这两个数据</span></span><br><span class=\"line\">        fmt.Println(&lt;-ch)</span><br><span class=\"line\">        fmt.Println(&lt;-ch)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Go-遍历通道与关闭通道\"><a href=\"#Go-遍历通道与关闭通道\" class=\"headerlink\" title=\"Go 遍历通道与关闭通道\"></a>Go 遍历通道与关闭通道</h1><p>Go 通过 range 关键字来实现遍历读取到的数据，类似于与数组或切片。格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v, ok := &lt;-ch</span><br></pre></td></tr></table></figure><br>如果通道接收不到数据后 ok 就为 false，这时通道就可以使用 close() 函数来关闭。</p>\n<p>实例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">        <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fibonacci</span><span class=\"params\">(n <span class=\"keyword\">int</span>, c <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">        x, y := <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; n; i++ &#123;</span><br><span class=\"line\">                c &lt;- x</span><br><span class=\"line\">                x, y = y, x+y</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">close</span>(c)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    c := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">go</span> fibonacci(<span class=\"built_in\">cap</span>(c), c)</span><br><span class=\"line\">    <span class=\"comment\">// range 函数遍历每个从通道接收到的数据，因为 c 在发送完 10 个</span></span><br><span class=\"line\">    <span class=\"comment\">// 数据之后就关闭了通道，所以这里我们 range 函数在接收到 10 个数据</span></span><br><span class=\"line\">    <span class=\"comment\">// 之后就结束了。如果上面的 c 通道不关闭，那么 range 函数就不</span></span><br><span class=\"line\">    <span class=\"comment\">// 会结束，从而在接收第 11 个数据的时候就阻塞了。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"keyword\">range</span> c &#123;</span><br><span class=\"line\">            fmt.Println(i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">5</span><br><span class=\"line\">8</span><br><span class=\"line\">13</span><br><span class=\"line\">21</span><br><span class=\"line\">34</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1385,"excerpt":"<p>Go 语言支持并发，我们只需要通过 go 关键字来开启 goroutine 即可。</p>\n<h1 id=\"goroutine-语法格式：\"><a href=\"#goroutine-语法格式：\" class=\"headerlink\" title=\"goroutine 语法格式：\"></a>goroutine 语法格式：</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> 函数名( 参数列表 )</span><br></pre></td></tr></table></figure>","more":"<h1 id=\"通道（channel）\"><a href=\"#通道（channel）\" class=\"headerlink\" title=\"通道（channel）\"></a>通道（channel）</h1><p>通道（channel）是用来传递数据的一个数据结构。</p>\n<p>通道可用于两个 goroutine 之间通过传递一个指定类型的值来同步运行和通讯。操作符 &lt;- 用于指定通道的方向，发送或接收。如果未指定方向，则为双向通道。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ch &lt;- v    <span class=\"comment\">// 把 v 发送到通道 ch</span></span><br><span class=\"line\">v := &lt;-ch  <span class=\"comment\">// 从 ch 接收数据</span></span><br><span class=\"line\">           <span class=\"comment\">// 并把值赋给 v</span></span><br></pre></td></tr></table></figure><br>声明一个通道很简单，我们使用chan关键字即可，通道在使用前必须先创建：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"通道缓冲区\"><a href=\"#通道缓冲区\" class=\"headerlink\" title=\"通道缓冲区\"></a>通道缓冲区</h1><p>通道可以设置缓冲区，通过 make 的第二个参数指定缓冲区大小：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure><br>带缓冲区的通道允许发送端的数据发送和接收端的数据获取处于异步状态，就是说发送端发送的数据可以放在缓冲区里面，可以等待接收端去获取数据，而不是立刻需要接收端去获取数据。</p>\n<p>不过由于缓冲区的大小是有限的，所以还是必须有接收端来接收数据的，否则缓冲区一满，数据发送端就无法再发送数据了。<br><div class=\"note info\">\n            <p>注意：如果通道不带缓冲，发送方会阻塞直到接收方从通道中接收了值。如果通道带缓冲，发送方则会阻塞直到发送的值被拷贝到缓冲区内；如果缓冲区已满，则意味着需要等待直到某个接收方获取到一个值。接收方在有值可以接收之前会一直阻塞。</p>\n          </div></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里我们定义了一个可以存储整数类型的带缓冲通道</span></span><br><span class=\"line\">        <span class=\"comment\">// 缓冲区大小为2</span></span><br><span class=\"line\">        ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 因为 ch 是带缓冲的通道，我们可以同时发送两个数据</span></span><br><span class=\"line\">        <span class=\"comment\">// 而不用立刻需要去同步读取数据</span></span><br><span class=\"line\">        ch &lt;- <span class=\"number\">1</span></span><br><span class=\"line\">        ch &lt;- <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获取这两个数据</span></span><br><span class=\"line\">        fmt.Println(&lt;-ch)</span><br><span class=\"line\">        fmt.Println(&lt;-ch)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Go-遍历通道与关闭通道\"><a href=\"#Go-遍历通道与关闭通道\" class=\"headerlink\" title=\"Go 遍历通道与关闭通道\"></a>Go 遍历通道与关闭通道</h1><p>Go 通过 range 关键字来实现遍历读取到的数据，类似于与数组或切片。格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v, ok := &lt;-ch</span><br></pre></td></tr></table></figure><br>如果通道接收不到数据后 ok 就为 false，这时通道就可以使用 close() 函数来关闭。</p>\n<p>实例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">        <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fibonacci</span><span class=\"params\">(n <span class=\"keyword\">int</span>, c <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">        x, y := <span class=\"number\">0</span>, <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; n; i++ &#123;</span><br><span class=\"line\">                c &lt;- x</span><br><span class=\"line\">                x, y = y, x+y</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">close</span>(c)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    c := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">go</span> fibonacci(<span class=\"built_in\">cap</span>(c), c)</span><br><span class=\"line\">    <span class=\"comment\">// range 函数遍历每个从通道接收到的数据，因为 c 在发送完 10 个</span></span><br><span class=\"line\">    <span class=\"comment\">// 数据之后就关闭了通道，所以这里我们 range 函数在接收到 10 个数据</span></span><br><span class=\"line\">    <span class=\"comment\">// 之后就结束了。如果上面的 c 通道不关闭，那么 range 函数就不</span></span><br><span class=\"line\">    <span class=\"comment\">// 会结束，从而在接收第 11 个数据的时候就阻塞了。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"keyword\">range</span> c &#123;</span><br><span class=\"line\">            fmt.Println(i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br><span class=\"line\">1</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">5</span><br><span class=\"line\">8</span><br><span class=\"line\">13</span><br><span class=\"line\">21</span><br><span class=\"line\">34</span><br></pre></td></tr></table></figure></p>"},{"title":"go语言defer语句","date":"2020-10-12T06:00:56.000Z","_content":"{% note info %}\n本文转载自：\n作者：simpleapples\n链接：https://www.jianshu.com/p/79c029c0bd58\n来源：简书\n{% endnote %}\n\n# 语句介绍\ndefer语句是Go中一个非常有用的特性，可以将一个方法延迟到包裹该方法的方法返回时执行，在实际应用中，defer语句可以充当其他语言中try…catch…的角色，也可以用来处理关闭文件句柄等收尾操作。\n<!-- more -->\n\n# 触发时机\n* 包裹defer的函数返回时\n* 包裹defer的函数执行到末尾时\n* 所在的goroutine发生panic时\n\n# defer执行顺序\n当一个方法中有多个defer时， defer会将要延迟执行的方法“压栈”，当defer被触发时，将所有“压栈”的方法“出栈”并执行。所以defer的执行顺序是LIFO的。\n\n所以下面这段代码的输出不是1 2 3，而是3 2 1。\n```go\nfunc stackingDefers() {\n    defer func() {\n        fmt.Println(\"1\")\n    }()\n    defer func() {\n        fmt.Println(\"2\")\n    }()\n    defer func() {\n        fmt.Println(\"3\")\n    }()\n}\n```\n\n# 注意点\n## 坑1：defer在匿名返回值和命名返回值函数中的不同表现\n先看下面两个方法执行的结果。\n```go\nfunc returnValues() int {\n    var result int\n    defer func() {\n        result++\n        fmt.Println(\"defer\")\n    }()\n    return result\n}\n\nfunc namedReturnValues() (result int) {\n    defer func() {\n        result++\n        fmt.Println(\"defer\")\n    }()\n    return result\n}\n```\n上面的方法会输出0，下面的方法输出1。上面的方法使用了匿名返回值，下面的使用了命名返回值，除此之外其他的逻辑均相同，为什么输出的结果会有区别呢？\n\n要搞清这个问题首先需要了解defer的执行逻辑，文档中说defer语句在方法返回“时”触发，也就是说return和defer是“同时”执行的。以匿名返回值方法举例，过程如下。\n\n* 将result赋值给返回值（可以理解成Go自动创建了一个返回值retValue，相当于执行retValue = result）\n* 然后检查是否有defer，如果有则执行\n* 返回刚才创建的返回值（retValue）\n\n在这种情况下，defer中的修改是对result执行的，而不是retValue，所以defer返回的依然是retValue。在命名返回值方法中，由于返回值在方法定义时已经被定义，所以没有创建retValue的过程，result就是retValue，defer对于result的修改也会被直接返回。\n\n## 坑2：在for循环中使用defer可能导致的性能问题\n看下面的代码\n```go\nfunc deferInLoops() {\n    for i := 0; i < 100; i++ {\n        f, _ := os.Open(\"/etc/hosts\")\n        defer f.Close()\n    }\n}\n```\ndefer在紧邻创建资源的语句后生命力，看上去逻辑没有什么问题。但是和直接调用相比，defer的执行存在着额外的开销，例如defer会对其后需要的参数进行内存拷贝，还需要对defer结构进行压栈出栈操作。所以在循环中定义defer可能导致大量的资源开销，在本例中，可以将f.Close()语句前的defer去掉，来减少大量defer导致的额外资源消耗。\n\n## 坑3：判断执行没有err之后，再defer释放资源\n一些获取资源的操作可能会返回err参数，我们可以选择忽略返回的err参数，但是如果要使用defer进行延迟释放的的话，需要在使用defer之前先判断是否存在err，如果资源没有获取成功，即没有必要也不应该再对资源执行释放操作。如果不判断获取资源是否成功就执行释放操作的话，还有可能导致释放方法执行错误。\n\n正确写法如下。\n```go\nresp, err := http.Get(url)\n// 先判断操作是否成功\nif err != nil {\n    return err\n}\n// 如果操作成功，再进行Close操作\ndefer resp.Body.Close()\n```\n\n## 坑4：调用os.Exit时defer不会被执行\n当发生panic时，所在goroutine的所有defer会被执行，但是当调用os.Exit()方法退出程序时，defer并不会被执行。\n```go\nfunc deferExit() {\n    defer func() {\n        fmt.Println(\"defer\")\n    }()\n    os.Exit(0)\n}\n```\n上面的defer并不会输出。\n","source":"_posts/go-18defer.md","raw":"---\ntitle: go语言defer语句\ndate: 2020-10-12 14:00:56\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n{% note info %}\n本文转载自：\n作者：simpleapples\n链接：https://www.jianshu.com/p/79c029c0bd58\n来源：简书\n{% endnote %}\n\n# 语句介绍\ndefer语句是Go中一个非常有用的特性，可以将一个方法延迟到包裹该方法的方法返回时执行，在实际应用中，defer语句可以充当其他语言中try…catch…的角色，也可以用来处理关闭文件句柄等收尾操作。\n<!-- more -->\n\n# 触发时机\n* 包裹defer的函数返回时\n* 包裹defer的函数执行到末尾时\n* 所在的goroutine发生panic时\n\n# defer执行顺序\n当一个方法中有多个defer时， defer会将要延迟执行的方法“压栈”，当defer被触发时，将所有“压栈”的方法“出栈”并执行。所以defer的执行顺序是LIFO的。\n\n所以下面这段代码的输出不是1 2 3，而是3 2 1。\n```go\nfunc stackingDefers() {\n    defer func() {\n        fmt.Println(\"1\")\n    }()\n    defer func() {\n        fmt.Println(\"2\")\n    }()\n    defer func() {\n        fmt.Println(\"3\")\n    }()\n}\n```\n\n# 注意点\n## 坑1：defer在匿名返回值和命名返回值函数中的不同表现\n先看下面两个方法执行的结果。\n```go\nfunc returnValues() int {\n    var result int\n    defer func() {\n        result++\n        fmt.Println(\"defer\")\n    }()\n    return result\n}\n\nfunc namedReturnValues() (result int) {\n    defer func() {\n        result++\n        fmt.Println(\"defer\")\n    }()\n    return result\n}\n```\n上面的方法会输出0，下面的方法输出1。上面的方法使用了匿名返回值，下面的使用了命名返回值，除此之外其他的逻辑均相同，为什么输出的结果会有区别呢？\n\n要搞清这个问题首先需要了解defer的执行逻辑，文档中说defer语句在方法返回“时”触发，也就是说return和defer是“同时”执行的。以匿名返回值方法举例，过程如下。\n\n* 将result赋值给返回值（可以理解成Go自动创建了一个返回值retValue，相当于执行retValue = result）\n* 然后检查是否有defer，如果有则执行\n* 返回刚才创建的返回值（retValue）\n\n在这种情况下，defer中的修改是对result执行的，而不是retValue，所以defer返回的依然是retValue。在命名返回值方法中，由于返回值在方法定义时已经被定义，所以没有创建retValue的过程，result就是retValue，defer对于result的修改也会被直接返回。\n\n## 坑2：在for循环中使用defer可能导致的性能问题\n看下面的代码\n```go\nfunc deferInLoops() {\n    for i := 0; i < 100; i++ {\n        f, _ := os.Open(\"/etc/hosts\")\n        defer f.Close()\n    }\n}\n```\ndefer在紧邻创建资源的语句后生命力，看上去逻辑没有什么问题。但是和直接调用相比，defer的执行存在着额外的开销，例如defer会对其后需要的参数进行内存拷贝，还需要对defer结构进行压栈出栈操作。所以在循环中定义defer可能导致大量的资源开销，在本例中，可以将f.Close()语句前的defer去掉，来减少大量defer导致的额外资源消耗。\n\n## 坑3：判断执行没有err之后，再defer释放资源\n一些获取资源的操作可能会返回err参数，我们可以选择忽略返回的err参数，但是如果要使用defer进行延迟释放的的话，需要在使用defer之前先判断是否存在err，如果资源没有获取成功，即没有必要也不应该再对资源执行释放操作。如果不判断获取资源是否成功就执行释放操作的话，还有可能导致释放方法执行错误。\n\n正确写法如下。\n```go\nresp, err := http.Get(url)\n// 先判断操作是否成功\nif err != nil {\n    return err\n}\n// 如果操作成功，再进行Close操作\ndefer resp.Body.Close()\n```\n\n## 坑4：调用os.Exit时defer不会被执行\n当发生panic时，所在goroutine的所有defer会被执行，但是当调用os.Exit()方法退出程序时，defer并不会被执行。\n```go\nfunc deferExit() {\n    defer func() {\n        fmt.Println(\"defer\")\n    }()\n    os.Exit(0)\n}\n```\n上面的defer并不会输出。\n","slug":"go-18defer","published":1,"updated":"2020-10-12T06:12:45.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hf0035c8pvhauw80x2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>本文转载自：<br>作者：simpleapples<br>链接：<a href=\"https://www.jianshu.com/p/79c029c0bd58\">https://www.jianshu.com/p/79c029c0bd58</a><br>来源：简书</p>\n          </div>\n<h1 id=\"语句介绍\"><a href=\"#语句介绍\" class=\"headerlink\" title=\"语句介绍\"></a>语句介绍</h1><p>defer语句是Go中一个非常有用的特性，可以将一个方法延迟到包裹该方法的方法返回时执行，在实际应用中，defer语句可以充当其他语言中try…catch…的角色，也可以用来处理关闭文件句柄等收尾操作。<br><a id=\"more\"></a></p>\n<h1 id=\"触发时机\"><a href=\"#触发时机\" class=\"headerlink\" title=\"触发时机\"></a>触发时机</h1><ul>\n<li>包裹defer的函数返回时</li>\n<li>包裹defer的函数执行到末尾时</li>\n<li>所在的goroutine发生panic时</li>\n</ul>\n<h1 id=\"defer执行顺序\"><a href=\"#defer执行顺序\" class=\"headerlink\" title=\"defer执行顺序\"></a>defer执行顺序</h1><p>当一个方法中有多个defer时， defer会将要延迟执行的方法“压栈”，当defer被触发时，将所有“压栈”的方法“出栈”并执行。所以defer的执行顺序是LIFO的。</p>\n<p>所以下面这段代码的输出不是1 2 3，而是3 2 1。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">stackingDefers</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;2&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;3&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h1><h2 id=\"坑1：defer在匿名返回值和命名返回值函数中的不同表现\"><a href=\"#坑1：defer在匿名返回值和命名返回值函数中的不同表现\" class=\"headerlink\" title=\"坑1：defer在匿名返回值和命名返回值函数中的不同表现\"></a>坑1：defer在匿名返回值和命名返回值函数中的不同表现</h2><p>先看下面两个方法执行的结果。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">returnValues</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result <span class=\"keyword\">int</span></span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        result++</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;defer&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">namedReturnValues</span><span class=\"params\">()</span> <span class=\"params\">(result <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        result++</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;defer&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>上面的方法会输出0，下面的方法输出1。上面的方法使用了匿名返回值，下面的使用了命名返回值，除此之外其他的逻辑均相同，为什么输出的结果会有区别呢？</p>\n<p>要搞清这个问题首先需要了解defer的执行逻辑，文档中说defer语句在方法返回“时”触发，也就是说return和defer是“同时”执行的。以匿名返回值方法举例，过程如下。</p>\n<ul>\n<li>将result赋值给返回值（可以理解成Go自动创建了一个返回值retValue，相当于执行retValue = result）</li>\n<li>然后检查是否有defer，如果有则执行</li>\n<li>返回刚才创建的返回值（retValue）</li>\n</ul>\n<p>在这种情况下，defer中的修改是对result执行的，而不是retValue，所以defer返回的依然是retValue。在命名返回值方法中，由于返回值在方法定义时已经被定义，所以没有创建retValue的过程，result就是retValue，defer对于result的修改也会被直接返回。</p>\n<h2 id=\"坑2：在for循环中使用defer可能导致的性能问题\"><a href=\"#坑2：在for循环中使用defer可能导致的性能问题\" class=\"headerlink\" title=\"坑2：在for循环中使用defer可能导致的性能问题\"></a>坑2：在for循环中使用defer可能导致的性能问题</h2><p>看下面的代码<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deferInLoops</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++ &#123;</span><br><span class=\"line\">        f, _ := os.Open(<span class=\"string\">&quot;/etc/hosts&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">defer</span> f.Close()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>defer在紧邻创建资源的语句后生命力，看上去逻辑没有什么问题。但是和直接调用相比，defer的执行存在着额外的开销，例如defer会对其后需要的参数进行内存拷贝，还需要对defer结构进行压栈出栈操作。所以在循环中定义defer可能导致大量的资源开销，在本例中，可以将f.Close()语句前的defer去掉，来减少大量defer导致的额外资源消耗。</p>\n<h2 id=\"坑3：判断执行没有err之后，再defer释放资源\"><a href=\"#坑3：判断执行没有err之后，再defer释放资源\" class=\"headerlink\" title=\"坑3：判断执行没有err之后，再defer释放资源\"></a>坑3：判断执行没有err之后，再defer释放资源</h2><p>一些获取资源的操作可能会返回err参数，我们可以选择忽略返回的err参数，但是如果要使用defer进行延迟释放的的话，需要在使用defer之前先判断是否存在err，如果资源没有获取成功，即没有必要也不应该再对资源执行释放操作。如果不判断获取资源是否成功就执行释放操作的话，还有可能导致释放方法执行错误。</p>\n<p>正确写法如下。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resp, err := http.Get(url)</span><br><span class=\"line\"><span class=\"comment\">// 先判断操作是否成功</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> err</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 如果操作成功，再进行Close操作</span></span><br><span class=\"line\"><span class=\"keyword\">defer</span> resp.Body.Close()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"坑4：调用os-Exit时defer不会被执行\"><a href=\"#坑4：调用os-Exit时defer不会被执行\" class=\"headerlink\" title=\"坑4：调用os.Exit时defer不会被执行\"></a>坑4：调用os.Exit时defer不会被执行</h2><p>当发生panic时，所在goroutine的所有defer会被执行，但是当调用os.Exit()方法退出程序时，defer并不会被执行。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deferExit</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;defer&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    os.Exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>上面的defer并不会输出。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2080,"excerpt":"<div class=\"note info\">\n            <p>本文转载自：<br>作者：simpleapples<br>链接：<a href=\"https://www.jianshu.com/p/79c029c0bd58\">https://www.jianshu.com/p/79c029c0bd58</a><br>来源：简书</p>\n          </div>\n<h1 id=\"语句介绍\"><a href=\"#语句介绍\" class=\"headerlink\" title=\"语句介绍\"></a>语句介绍</h1><p>defer语句是Go中一个非常有用的特性，可以将一个方法延迟到包裹该方法的方法返回时执行，在实际应用中，defer语句可以充当其他语言中try…catch…的角色，也可以用来处理关闭文件句柄等收尾操作。<br></p>","more":"<p></p>\n<h1 id=\"触发时机\"><a href=\"#触发时机\" class=\"headerlink\" title=\"触发时机\"></a>触发时机</h1><ul>\n<li>包裹defer的函数返回时</li>\n<li>包裹defer的函数执行到末尾时</li>\n<li>所在的goroutine发生panic时</li>\n</ul>\n<h1 id=\"defer执行顺序\"><a href=\"#defer执行顺序\" class=\"headerlink\" title=\"defer执行顺序\"></a>defer执行顺序</h1><p>当一个方法中有多个defer时， defer会将要延迟执行的方法“压栈”，当defer被触发时，将所有“压栈”的方法“出栈”并执行。所以defer的执行顺序是LIFO的。</p>\n<p>所以下面这段代码的输出不是1 2 3，而是3 2 1。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">stackingDefers</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;2&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;3&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h1><h2 id=\"坑1：defer在匿名返回值和命名返回值函数中的不同表现\"><a href=\"#坑1：defer在匿名返回值和命名返回值函数中的不同表现\" class=\"headerlink\" title=\"坑1：defer在匿名返回值和命名返回值函数中的不同表现\"></a>坑1：defer在匿名返回值和命名返回值函数中的不同表现</h2><p>先看下面两个方法执行的结果。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">returnValues</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result <span class=\"keyword\">int</span></span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        result++</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;defer&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">namedReturnValues</span><span class=\"params\">()</span> <span class=\"params\">(result <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        result++</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;defer&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>上面的方法会输出0，下面的方法输出1。上面的方法使用了匿名返回值，下面的使用了命名返回值，除此之外其他的逻辑均相同，为什么输出的结果会有区别呢？</p>\n<p>要搞清这个问题首先需要了解defer的执行逻辑，文档中说defer语句在方法返回“时”触发，也就是说return和defer是“同时”执行的。以匿名返回值方法举例，过程如下。</p>\n<ul>\n<li>将result赋值给返回值（可以理解成Go自动创建了一个返回值retValue，相当于执行retValue = result）</li>\n<li>然后检查是否有defer，如果有则执行</li>\n<li>返回刚才创建的返回值（retValue）</li>\n</ul>\n<p>在这种情况下，defer中的修改是对result执行的，而不是retValue，所以defer返回的依然是retValue。在命名返回值方法中，由于返回值在方法定义时已经被定义，所以没有创建retValue的过程，result就是retValue，defer对于result的修改也会被直接返回。</p>\n<h2 id=\"坑2：在for循环中使用defer可能导致的性能问题\"><a href=\"#坑2：在for循环中使用defer可能导致的性能问题\" class=\"headerlink\" title=\"坑2：在for循环中使用defer可能导致的性能问题\"></a>坑2：在for循环中使用defer可能导致的性能问题</h2><p>看下面的代码<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deferInLoops</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++ &#123;</span><br><span class=\"line\">        f, _ := os.Open(<span class=\"string\">&quot;/etc/hosts&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">defer</span> f.Close()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>defer在紧邻创建资源的语句后生命力，看上去逻辑没有什么问题。但是和直接调用相比，defer的执行存在着额外的开销，例如defer会对其后需要的参数进行内存拷贝，还需要对defer结构进行压栈出栈操作。所以在循环中定义defer可能导致大量的资源开销，在本例中，可以将f.Close()语句前的defer去掉，来减少大量defer导致的额外资源消耗。</p>\n<h2 id=\"坑3：判断执行没有err之后，再defer释放资源\"><a href=\"#坑3：判断执行没有err之后，再defer释放资源\" class=\"headerlink\" title=\"坑3：判断执行没有err之后，再defer释放资源\"></a>坑3：判断执行没有err之后，再defer释放资源</h2><p>一些获取资源的操作可能会返回err参数，我们可以选择忽略返回的err参数，但是如果要使用defer进行延迟释放的的话，需要在使用defer之前先判断是否存在err，如果资源没有获取成功，即没有必要也不应该再对资源执行释放操作。如果不判断获取资源是否成功就执行释放操作的话，还有可能导致释放方法执行错误。</p>\n<p>正确写法如下。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resp, err := http.Get(url)</span><br><span class=\"line\"><span class=\"comment\">// 先判断操作是否成功</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> err</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 如果操作成功，再进行Close操作</span></span><br><span class=\"line\"><span class=\"keyword\">defer</span> resp.Body.Close()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"坑4：调用os-Exit时defer不会被执行\"><a href=\"#坑4：调用os-Exit时defer不会被执行\" class=\"headerlink\" title=\"坑4：调用os.Exit时defer不会被执行\"></a>坑4：调用os.Exit时defer不会被执行</h2><p>当发生panic时，所在goroutine的所有defer会被执行，但是当调用os.Exit()方法退出程序时，defer并不会被执行。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deferExit</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        fmt.Println(<span class=\"string\">&quot;defer&quot;</span>)</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">    os.Exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>上面的defer并不会输出。</p>"},{"title":"go语言入门（环境安装）","date":"2020-09-22T07:07:01.000Z","_content":"# go语言简介\n## Go 语言特色\n* 简洁、快速、安全\n* 并行、有趣、开源\n* 内存管理、数组安全、编译迅速\n\n## Go 语言用途\n* Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。\n* 对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。\n<!-- more -->\n\n# 环境搭建\n## go语言环境安装\n* 访问[go语言网站](https://golang.google.cn/dl/)，选择系统并下载\n* 点击.msi文件进行安装\n* 在cmd中输入 `go version` 测试环境是否安装\n\n## 代码测试\n* 在任意位置新建hello.go文件\n```go  \n//  定义了包名package, main表示一个可独立执行的程序\n//  每个文件必须声明包\n//  每个 Go 应用程序都包含一个名为 main 的包。\npackage main\n//  这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数。\nimport \"fmt\"\n//  入口函数\nfunc main(){   //{ 不能在单独的行上\n\t// 打印，最后会换行\n\tfmt.Println(\"hello world\")\n}\n```\n* cmd定位到当前文件夹输入 `go run hello.go`\n* 输出结果为 `hello world`\n* `go build hello.go` 可以将代码打包成exe文件\n\n## VSCode插件安装\n### 安装下图两个插件\n![go插件](go插件.jpg)\n![代码运行插件](coderunner.jpg)\n### 编写代码，右键run code运行\n{% note info %}\nvscode需要以管理员身份运行\n{% endnote %}\n\n\n","source":"_posts/go-1intruduct.md","raw":"---\ntitle: go语言入门（环境安装）\ndate: 2020-09-22 15:07:01\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# go语言简介\n## Go 语言特色\n* 简洁、快速、安全\n* 并行、有趣、开源\n* 内存管理、数组安全、编译迅速\n\n## Go 语言用途\n* Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。\n* 对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。\n<!-- more -->\n\n# 环境搭建\n## go语言环境安装\n* 访问[go语言网站](https://golang.google.cn/dl/)，选择系统并下载\n* 点击.msi文件进行安装\n* 在cmd中输入 `go version` 测试环境是否安装\n\n## 代码测试\n* 在任意位置新建hello.go文件\n```go  \n//  定义了包名package, main表示一个可独立执行的程序\n//  每个文件必须声明包\n//  每个 Go 应用程序都包含一个名为 main 的包。\npackage main\n//  这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数。\nimport \"fmt\"\n//  入口函数\nfunc main(){   //{ 不能在单独的行上\n\t// 打印，最后会换行\n\tfmt.Println(\"hello world\")\n}\n```\n* cmd定位到当前文件夹输入 `go run hello.go`\n* 输出结果为 `hello world`\n* `go build hello.go` 可以将代码打包成exe文件\n\n## VSCode插件安装\n### 安装下图两个插件\n![go插件](go插件.jpg)\n![代码运行插件](coderunner.jpg)\n### 编写代码，右键run code运行\n{% note info %}\nvscode需要以管理员身份运行\n{% endnote %}\n\n\n","slug":"go-1intruduct","published":1,"updated":"2020-09-22T09:01:15.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hg0038c8pv1qwig7n5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"go语言简介\"><a href=\"#go语言简介\" class=\"headerlink\" title=\"go语言简介\"></a>go语言简介</h1><h2 id=\"Go-语言特色\"><a href=\"#Go-语言特色\" class=\"headerlink\" title=\"Go 语言特色\"></a>Go 语言特色</h2><ul>\n<li>简洁、快速、安全</li>\n<li>并行、有趣、开源</li>\n<li>内存管理、数组安全、编译迅速</li>\n</ul>\n<h2 id=\"Go-语言用途\"><a href=\"#Go-语言用途\" class=\"headerlink\" title=\"Go 语言用途\"></a>Go 语言用途</h2><ul>\n<li>Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。</li>\n<li>对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。<a id=\"more\"></a>\n</li>\n</ul>\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><h2 id=\"go语言环境安装\"><a href=\"#go语言环境安装\" class=\"headerlink\" title=\"go语言环境安装\"></a>go语言环境安装</h2><ul>\n<li>访问<a href=\"https://golang.google.cn/dl/\">go语言网站</a>，选择系统并下载</li>\n<li>点击.msi文件进行安装</li>\n<li>在cmd中输入 <code>go version</code> 测试环境是否安装</li>\n</ul>\n<h2 id=\"代码测试\"><a href=\"#代码测试\" class=\"headerlink\" title=\"代码测试\"></a>代码测试</h2><ul>\n<li>在任意位置新建hello.go文件<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  定义了包名package, main表示一个可独立执行的程序</span></span><br><span class=\"line\"><span class=\"comment\">//  每个文件必须声明包</span></span><br><span class=\"line\"><span class=\"comment\">//  每个 Go 应用程序都包含一个名为 main 的包。</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"comment\">//  这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数。</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//  入口函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;   <span class=\"comment\">//&#123; 不能在单独的行上</span></span><br><span class=\"line\">\t<span class=\"comment\">// 打印，最后会换行</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;hello world&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>cmd定位到当前文件夹输入 <code>go run hello.go</code></li>\n<li>输出结果为 <code>hello world</code></li>\n<li><code>go build hello.go</code> 可以将代码打包成exe文件</li>\n</ul>\n<h2 id=\"VSCode插件安装\"><a href=\"#VSCode插件安装\" class=\"headerlink\" title=\"VSCode插件安装\"></a>VSCode插件安装</h2><h3 id=\"安装下图两个插件\"><a href=\"#安装下图两个插件\" class=\"headerlink\" title=\"安装下图两个插件\"></a>安装下图两个插件</h3><p><img src=\"/posts/go-1intruduct/go插件.jpg\" alt=\"go插件\"><br><img src=\"/posts/go-1intruduct/coderunner.jpg\" alt=\"代码运行插件\"></p>\n<h3 id=\"编写代码，右键run-code运行\"><a href=\"#编写代码，右键run-code运行\" class=\"headerlink\" title=\"编写代码，右键run code运行\"></a>编写代码，右键run code运行</h3><div class=\"note info\">\n            <p>vscode需要以管理员身份运行</p>\n          </div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":619,"excerpt":"<h1 id=\"go语言简介\"><a href=\"#go语言简介\" class=\"headerlink\" title=\"go语言简介\"></a>go语言简介</h1><h2 id=\"Go-语言特色\"><a href=\"#Go-语言特色\" class=\"headerlink\" title=\"Go 语言特色\"></a>Go 语言特色</h2><ul>\n<li>简洁、快速、安全</li>\n<li>并行、有趣、开源</li>\n<li>内存管理、数组安全、编译迅速</li>\n</ul>\n<h2 id=\"Go-语言用途\"><a href=\"#Go-语言用途\" class=\"headerlink\" title=\"Go 语言用途\"></a>Go 语言用途</h2><ul>\n<li>Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。</li>\n<li>对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。</li></ul>","more":"\n\n<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><h2 id=\"go语言环境安装\"><a href=\"#go语言环境安装\" class=\"headerlink\" title=\"go语言环境安装\"></a>go语言环境安装</h2><ul>\n<li>访问<a href=\"https://golang.google.cn/dl/\">go语言网站</a>，选择系统并下载</li>\n<li>点击.msi文件进行安装</li>\n<li>在cmd中输入 <code>go version</code> 测试环境是否安装</li>\n</ul>\n<h2 id=\"代码测试\"><a href=\"#代码测试\" class=\"headerlink\" title=\"代码测试\"></a>代码测试</h2><ul>\n<li>在任意位置新建hello.go文件<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  定义了包名package, main表示一个可独立执行的程序</span></span><br><span class=\"line\"><span class=\"comment\">//  每个文件必须声明包</span></span><br><span class=\"line\"><span class=\"comment\">//  每个 Go 应用程序都包含一个名为 main 的包。</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"comment\">//  这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数。</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//  入口函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;   <span class=\"comment\">//&#123; 不能在单独的行上</span></span><br><span class=\"line\">\t<span class=\"comment\">// 打印，最后会换行</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;hello world&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>cmd定位到当前文件夹输入 <code>go run hello.go</code></li>\n<li>输出结果为 <code>hello world</code></li>\n<li><code>go build hello.go</code> 可以将代码打包成exe文件</li>\n</ul>\n<h2 id=\"VSCode插件安装\"><a href=\"#VSCode插件安装\" class=\"headerlink\" title=\"VSCode插件安装\"></a>VSCode插件安装</h2><h3 id=\"安装下图两个插件\"><a href=\"#安装下图两个插件\" class=\"headerlink\" title=\"安装下图两个插件\"></a>安装下图两个插件</h3><p><img src=\"/posts/go-1intruduct/go插件.jpg\" alt=\"go插件\"><br><img src=\"/posts/go-1intruduct/coderunner.jpg\" alt=\"代码运行插件\"></p>\n<h3 id=\"编写代码，右键run-code运行\"><a href=\"#编写代码，右键run-code运行\" class=\"headerlink\" title=\"编写代码，右键run code运行\"></a>编写代码，右键run code运行</h3><div class=\"note info\">\n            <p>vscode需要以管理员身份运行</p>\n          </div>"},{"title":"go语言基础语法","date":"2020-09-22T08:15:09.000Z","_content":"## 注释\n注释不会被编译，每一个包应该有相关注释。\n单行注释是最常见的注释形式，你可以在任何地方使用以 // 开头的单行注释。多行注释也叫块注释，均已以 /* 开头，并以 */ 结尾。如：\n```\n// 单行注释\n/*\n Author by 菜鸟教程\n 我是多行注释\n */\n```\n<!-- more -->\n\n## 标识符\n标识符用来命名变量、类型等程序实体。一个标识符实际上就是一个或是多个字母(A~Z和a~z)数字(0~9)、下划线_组成的序列，但是第一个字符必须是字母或下划线而不能是数字。\n以下是有效的标识符：\n```\nmahesh   kumar   abc   move_name   a_123\nmyname50   _temp   j   a23b9   retVal\n```\n## 字符串连接\nGo 语言的字符串可以通过'+'实现\n\n## 关键字\n下面列举了 Go 代码中会使用到的 25 个关键字或保留字：\n\n|  break   | default     | func   | interface | select |\n| :------: | :---------: | :----: | :-------: | :----: |\n|   case   | defer       | go     | map       | struct |\n|   chan   | else        | goto   | package   | switch |\n|  const   | fallthrough | if     | range     | type   |\n| continue | for         | import | return    | var    |\n\n除了以上介绍的这些关键字，Go 语言还有 36 个预定义标识符：\n\n| append | bool    | byte    | cap     | close  | complex | complex64 | complex128 | uint16  |\n| ------ | ------- | ------- | ------- | ------ | ------- | --------- | ---------- | ------- |\n| copy   | false   | float32 | float64 | imag   | int     | int8      | int16      | uint32  |\n| int32  | int64   | iota    | len     | make   | new     | nil       | panic      | uint64  |\n| print  | println | real    | recover | string | true    | uint      | uint8      | uintptr |\n\n## Go 语言中变量的声明必须使用空格隔开，如：\n\n```\nvar age int;\n```\n\n## Go 语言数据类型\n在 Go 编程语言中，数据类型用于声明函数和变量。\n数据类型的出现是为了把数据分成所需内存大小不同的数据，编程的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。\nGo 语言按类别有以下几种数据类型：\n\n| 序号 | 类型和描述                                                   |\n| ---- | ------------------------------------------------------------ |\n| 1    | **布尔型** 布尔型的值只可以是常量 true 或者 false。一个简单的例子：var b bool = true。 |\n| 2    | **数字类型** 整型 int 和浮点型 float32、float64，Go 语言支持整型和浮点型数字，并且支持复数，其中位的运算采用补码。 |\n| 3    | **字符串类型:** 字符串就是一串固定长度的字符连接起来的字符序列。Go 的字符串是由单个字节连接起来的。Go 语言的字符串的字节使用 UTF-8 编码标识 Unicode 文本。 |\n| 4    | **派生类型:** 包括：(a) 指针类型（Pointer）(b) 数组类型(c) 结构化类型(struct)(d) Channel 类型(e) 函数类型(f) 切片类型(g) 接口类型（interface）(h) Map 类型 |\n\n","source":"_posts/go-2basic.md","raw":"---\ntitle: go语言基础语法\ndate: 2020-09-22 16:15:09\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n## 注释\n注释不会被编译，每一个包应该有相关注释。\n单行注释是最常见的注释形式，你可以在任何地方使用以 // 开头的单行注释。多行注释也叫块注释，均已以 /* 开头，并以 */ 结尾。如：\n```\n// 单行注释\n/*\n Author by 菜鸟教程\n 我是多行注释\n */\n```\n<!-- more -->\n\n## 标识符\n标识符用来命名变量、类型等程序实体。一个标识符实际上就是一个或是多个字母(A~Z和a~z)数字(0~9)、下划线_组成的序列，但是第一个字符必须是字母或下划线而不能是数字。\n以下是有效的标识符：\n```\nmahesh   kumar   abc   move_name   a_123\nmyname50   _temp   j   a23b9   retVal\n```\n## 字符串连接\nGo 语言的字符串可以通过'+'实现\n\n## 关键字\n下面列举了 Go 代码中会使用到的 25 个关键字或保留字：\n\n|  break   | default     | func   | interface | select |\n| :------: | :---------: | :----: | :-------: | :----: |\n|   case   | defer       | go     | map       | struct |\n|   chan   | else        | goto   | package   | switch |\n|  const   | fallthrough | if     | range     | type   |\n| continue | for         | import | return    | var    |\n\n除了以上介绍的这些关键字，Go 语言还有 36 个预定义标识符：\n\n| append | bool    | byte    | cap     | close  | complex | complex64 | complex128 | uint16  |\n| ------ | ------- | ------- | ------- | ------ | ------- | --------- | ---------- | ------- |\n| copy   | false   | float32 | float64 | imag   | int     | int8      | int16      | uint32  |\n| int32  | int64   | iota    | len     | make   | new     | nil       | panic      | uint64  |\n| print  | println | real    | recover | string | true    | uint      | uint8      | uintptr |\n\n## Go 语言中变量的声明必须使用空格隔开，如：\n\n```\nvar age int;\n```\n\n## Go 语言数据类型\n在 Go 编程语言中，数据类型用于声明函数和变量。\n数据类型的出现是为了把数据分成所需内存大小不同的数据，编程的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。\nGo 语言按类别有以下几种数据类型：\n\n| 序号 | 类型和描述                                                   |\n| ---- | ------------------------------------------------------------ |\n| 1    | **布尔型** 布尔型的值只可以是常量 true 或者 false。一个简单的例子：var b bool = true。 |\n| 2    | **数字类型** 整型 int 和浮点型 float32、float64，Go 语言支持整型和浮点型数字，并且支持复数，其中位的运算采用补码。 |\n| 3    | **字符串类型:** 字符串就是一串固定长度的字符连接起来的字符序列。Go 的字符串是由单个字节连接起来的。Go 语言的字符串的字节使用 UTF-8 编码标识 Unicode 文本。 |\n| 4    | **派生类型:** 包括：(a) 指针类型（Pointer）(b) 数组类型(c) 结构化类型(struct)(d) Channel 类型(e) 函数类型(f) 切片类型(g) 接口类型（interface）(h) Map 类型 |\n\n","slug":"go-2basic","published":1,"updated":"2020-09-22T10:03:12.289Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hh003ac8pv8k6c1jge","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>注释不会被编译，每一个包应该有相关注释。<br>单行注释是最常见的注释形式，你可以在任何地方使用以 // 开头的单行注释。多行注释也叫块注释，均已以 /<em> 开头，并以 </em>/ 结尾。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 单行注释</span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\"> Author by 菜鸟教程</span><br><span class=\"line\"> 我是多行注释</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a></p>\n<h2 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h2><p>标识符用来命名变量、类型等程序实体。一个标识符实际上就是一个或是多个字母(A~Z和a~z)数字(0~9)、下划线_组成的序列，但是第一个字符必须是字母或下划线而不能是数字。<br>以下是有效的标识符：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mahesh   kumar   abc   move_name   a_123</span><br><span class=\"line\">myname50   _temp   j   a23b9   retVal</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"字符串连接\"><a href=\"#字符串连接\" class=\"headerlink\" title=\"字符串连接\"></a>字符串连接</h2><p>Go 语言的字符串可以通过’+’实现</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p>下面列举了 Go 代码中会使用到的 25 个关键字或保留字：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">break</th>\n<th style=\"text-align:center\">default</th>\n<th style=\"text-align:center\">func</th>\n<th style=\"text-align:center\">interface</th>\n<th style=\"text-align:center\">select</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">case</td>\n<td style=\"text-align:center\">defer</td>\n<td style=\"text-align:center\">go</td>\n<td style=\"text-align:center\">map</td>\n<td style=\"text-align:center\">struct</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">chan</td>\n<td style=\"text-align:center\">else</td>\n<td style=\"text-align:center\">goto</td>\n<td style=\"text-align:center\">package</td>\n<td style=\"text-align:center\">switch</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">const</td>\n<td style=\"text-align:center\">fallthrough</td>\n<td style=\"text-align:center\">if</td>\n<td style=\"text-align:center\">range</td>\n<td style=\"text-align:center\">type</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">continue</td>\n<td style=\"text-align:center\">for</td>\n<td style=\"text-align:center\">import</td>\n<td style=\"text-align:center\">return</td>\n<td style=\"text-align:center\">var</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>除了以上介绍的这些关键字，Go 语言还有 36 个预定义标识符：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>append</th>\n<th>bool</th>\n<th>byte</th>\n<th>cap</th>\n<th>close</th>\n<th>complex</th>\n<th>complex64</th>\n<th>complex128</th>\n<th>uint16</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>copy</td>\n<td>false</td>\n<td>float32</td>\n<td>float64</td>\n<td>imag</td>\n<td>int</td>\n<td>int8</td>\n<td>int16</td>\n<td>uint32</td>\n</tr>\n<tr>\n<td>int32</td>\n<td>int64</td>\n<td>iota</td>\n<td>len</td>\n<td>make</td>\n<td>new</td>\n<td>nil</td>\n<td>panic</td>\n<td>uint64</td>\n</tr>\n<tr>\n<td>print</td>\n<td>println</td>\n<td>real</td>\n<td>recover</td>\n<td>string</td>\n<td>true</td>\n<td>uint</td>\n<td>uint8</td>\n<td>uintptr</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"Go-语言中变量的声明必须使用空格隔开，如：\"><a href=\"#Go-语言中变量的声明必须使用空格隔开，如：\" class=\"headerlink\" title=\"Go 语言中变量的声明必须使用空格隔开，如：\"></a>Go 语言中变量的声明必须使用空格隔开，如：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var age int;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Go-语言数据类型\"><a href=\"#Go-语言数据类型\" class=\"headerlink\" title=\"Go 语言数据类型\"></a>Go 语言数据类型</h2><p>在 Go 编程语言中，数据类型用于声明函数和变量。<br>数据类型的出现是为了把数据分成所需内存大小不同的数据，编程的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。<br>Go 语言按类别有以下几种数据类型：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>类型和描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><strong>布尔型</strong> 布尔型的值只可以是常量 true 或者 false。一个简单的例子：var b bool = true。</td>\n</tr>\n<tr>\n<td>2</td>\n<td><strong>数字类型</strong> 整型 int 和浮点型 float32、float64，Go 语言支持整型和浮点型数字，并且支持复数，其中位的运算采用补码。</td>\n</tr>\n<tr>\n<td>3</td>\n<td><strong>字符串类型:</strong> 字符串就是一串固定长度的字符连接起来的字符序列。Go 的字符串是由单个字节连接起来的。Go 语言的字符串的字节使用 UTF-8 编码标识 Unicode 文本。</td>\n</tr>\n<tr>\n<td>4</td>\n<td><strong>派生类型:</strong> 包括：(a) 指针类型（Pointer）(b) 数组类型(c) 结构化类型(struct)(d) Channel 类型(e) 函数类型(f) 切片类型(g) 接口类型（interface）(h) Map 类型</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1124,"excerpt":"<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>注释不会被编译，每一个包应该有相关注释。<br>单行注释是最常见的注释形式，你可以在任何地方使用以 // 开头的单行注释。多行注释也叫块注释，均已以 /<em> 开头，并以 </em>/ 结尾。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 单行注释</span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\"> Author by 菜鸟教程</span><br><span class=\"line\"> 我是多行注释</span><br><span class=\"line\"> *&#x2F;</span><br></pre></td></tr></table></figure><br></p>","more":"<p></p>\n<h2 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h2><p>标识符用来命名变量、类型等程序实体。一个标识符实际上就是一个或是多个字母(A~Z和a~z)数字(0~9)、下划线_组成的序列，但是第一个字符必须是字母或下划线而不能是数字。<br>以下是有效的标识符：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mahesh   kumar   abc   move_name   a_123</span><br><span class=\"line\">myname50   _temp   j   a23b9   retVal</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"字符串连接\"><a href=\"#字符串连接\" class=\"headerlink\" title=\"字符串连接\"></a>字符串连接</h2><p>Go 语言的字符串可以通过’+’实现</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p>下面列举了 Go 代码中会使用到的 25 个关键字或保留字：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">break</th>\n<th style=\"text-align:center\">default</th>\n<th style=\"text-align:center\">func</th>\n<th style=\"text-align:center\">interface</th>\n<th style=\"text-align:center\">select</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">case</td>\n<td style=\"text-align:center\">defer</td>\n<td style=\"text-align:center\">go</td>\n<td style=\"text-align:center\">map</td>\n<td style=\"text-align:center\">struct</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">chan</td>\n<td style=\"text-align:center\">else</td>\n<td style=\"text-align:center\">goto</td>\n<td style=\"text-align:center\">package</td>\n<td style=\"text-align:center\">switch</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">const</td>\n<td style=\"text-align:center\">fallthrough</td>\n<td style=\"text-align:center\">if</td>\n<td style=\"text-align:center\">range</td>\n<td style=\"text-align:center\">type</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">continue</td>\n<td style=\"text-align:center\">for</td>\n<td style=\"text-align:center\">import</td>\n<td style=\"text-align:center\">return</td>\n<td style=\"text-align:center\">var</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>除了以上介绍的这些关键字，Go 语言还有 36 个预定义标识符：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>append</th>\n<th>bool</th>\n<th>byte</th>\n<th>cap</th>\n<th>close</th>\n<th>complex</th>\n<th>complex64</th>\n<th>complex128</th>\n<th>uint16</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>copy</td>\n<td>false</td>\n<td>float32</td>\n<td>float64</td>\n<td>imag</td>\n<td>int</td>\n<td>int8</td>\n<td>int16</td>\n<td>uint32</td>\n</tr>\n<tr>\n<td>int32</td>\n<td>int64</td>\n<td>iota</td>\n<td>len</td>\n<td>make</td>\n<td>new</td>\n<td>nil</td>\n<td>panic</td>\n<td>uint64</td>\n</tr>\n<tr>\n<td>print</td>\n<td>println</td>\n<td>real</td>\n<td>recover</td>\n<td>string</td>\n<td>true</td>\n<td>uint</td>\n<td>uint8</td>\n<td>uintptr</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"Go-语言中变量的声明必须使用空格隔开，如：\"><a href=\"#Go-语言中变量的声明必须使用空格隔开，如：\" class=\"headerlink\" title=\"Go 语言中变量的声明必须使用空格隔开，如：\"></a>Go 语言中变量的声明必须使用空格隔开，如：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var age int;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Go-语言数据类型\"><a href=\"#Go-语言数据类型\" class=\"headerlink\" title=\"Go 语言数据类型\"></a>Go 语言数据类型</h2><p>在 Go 编程语言中，数据类型用于声明函数和变量。<br>数据类型的出现是为了把数据分成所需内存大小不同的数据，编程的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。<br>Go 语言按类别有以下几种数据类型：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>类型和描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><strong>布尔型</strong> 布尔型的值只可以是常量 true 或者 false。一个简单的例子：var b bool = true。</td>\n</tr>\n<tr>\n<td>2</td>\n<td><strong>数字类型</strong> 整型 int 和浮点型 float32、float64，Go 语言支持整型和浮点型数字，并且支持复数，其中位的运算采用补码。</td>\n</tr>\n<tr>\n<td>3</td>\n<td><strong>字符串类型:</strong> 字符串就是一串固定长度的字符连接起来的字符序列。Go 的字符串是由单个字节连接起来的。Go 语言的字符串的字节使用 UTF-8 编码标识 Unicode 文本。</td>\n</tr>\n<tr>\n<td>4</td>\n<td><strong>派生类型:</strong> 包括：(a) 指针类型（Pointer）(b) 数组类型(c) 结构化类型(struct)(d) Channel 类型(e) 函数类型(f) 切片类型(g) 接口类型（interface）(h) Map 类型</td>\n</tr>\n</tbody>\n</table>\n</div>"},{"title":"go语言变量","date":"2020-09-22T08:41:26.000Z","_content":"# Go 语言变量\n## 一般形式\n变量来源于数学，是计算机语言中能储存计算结果或能表示值抽象概念。\n变量可以通过变量名访问。\n\nGo 语言变量名由字母、数字、下划线组成，其中首个字符不能为数字。\n声明变量的一般形式是使用 var 关键字：\n```go\nvar identifier type\n```\n<!-- more -->\n可以一次声明多个变量：\n```go\nvar identifier1, identifier2 type\n```\n\n## 变量声明\n### 第一种，指定变量类型，如果没有初始化，则变量默认为零值。\n```go\n// 声明一个变量并初始化，零值为\"\"\nvar a string = \"RUNOOB\"\n\n// 数值类型没有初始化就为0\nvar b int\n\n// bool 零值为 false\nvar c bool\n\n//以下几种类型零值为 nil：\nvar a *int\nvar a []int\nvar a map[string] int\nvar a chan int\nvar a func(string) int\nvar a error // error 是接口\n```\n### 第二种，根据值自行判定变量类型。\n```go\nvar v_name = value\n```\n### 第三种，省略 var, 注意 := 左侧如果没有声明新的变量，就产生编译错误，格式：\n```go\nv_name := value\n```\n例\n```go\nvar intVal int \nintVal :=1 // 这时候会产生编译错误\nintVal,intVal1 := 1,2 // 此时不会产生编译错误，因为有声明新的变量，因为 := 是一个声明语句,支持多变量声明\n```\n### 全局声明\n```go\nvar (  // 这种因式分解关键字的写法一般用于声明全局变量\n    a int\n    b bool\n)\n```\n\n## 变量赋值\n```go\nvar a, b int\nvar c string\na, b, c = 5, 7, \"abc\"\n```\n上面这行假设了变量 a，b 和 c 都已经被声明，否则的话应该这样使用：\n```go\na, b, c := 5, 7, \"abc\"\n```\n{% note info %}\n单纯地给变量赋值是不够的，这个值必须被使用\n{% endnote %}\n如果你想要交换两个变量的值，则可以简单地使用` a, b = b, a`，两个变量的类型必须是相同。\n","source":"_posts/go-3bianliang.md","raw":"---\ntitle: go语言变量\ndate: 2020-09-22 16:41:26\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# Go 语言变量\n## 一般形式\n变量来源于数学，是计算机语言中能储存计算结果或能表示值抽象概念。\n变量可以通过变量名访问。\n\nGo 语言变量名由字母、数字、下划线组成，其中首个字符不能为数字。\n声明变量的一般形式是使用 var 关键字：\n```go\nvar identifier type\n```\n<!-- more -->\n可以一次声明多个变量：\n```go\nvar identifier1, identifier2 type\n```\n\n## 变量声明\n### 第一种，指定变量类型，如果没有初始化，则变量默认为零值。\n```go\n// 声明一个变量并初始化，零值为\"\"\nvar a string = \"RUNOOB\"\n\n// 数值类型没有初始化就为0\nvar b int\n\n// bool 零值为 false\nvar c bool\n\n//以下几种类型零值为 nil：\nvar a *int\nvar a []int\nvar a map[string] int\nvar a chan int\nvar a func(string) int\nvar a error // error 是接口\n```\n### 第二种，根据值自行判定变量类型。\n```go\nvar v_name = value\n```\n### 第三种，省略 var, 注意 := 左侧如果没有声明新的变量，就产生编译错误，格式：\n```go\nv_name := value\n```\n例\n```go\nvar intVal int \nintVal :=1 // 这时候会产生编译错误\nintVal,intVal1 := 1,2 // 此时不会产生编译错误，因为有声明新的变量，因为 := 是一个声明语句,支持多变量声明\n```\n### 全局声明\n```go\nvar (  // 这种因式分解关键字的写法一般用于声明全局变量\n    a int\n    b bool\n)\n```\n\n## 变量赋值\n```go\nvar a, b int\nvar c string\na, b, c = 5, 7, \"abc\"\n```\n上面这行假设了变量 a，b 和 c 都已经被声明，否则的话应该这样使用：\n```go\na, b, c := 5, 7, \"abc\"\n```\n{% note info %}\n单纯地给变量赋值是不够的，这个值必须被使用\n{% endnote %}\n如果你想要交换两个变量的值，则可以简单地使用` a, b = b, a`，两个变量的类型必须是相同。\n","slug":"go-3bianliang","published":1,"updated":"2020-09-22T10:55:20.985Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hi003ec8pv5mbz4jtr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"Go-语言变量\"><a href=\"#Go-语言变量\" class=\"headerlink\" title=\"Go 语言变量\"></a>Go 语言变量</h1><h2 id=\"一般形式\"><a href=\"#一般形式\" class=\"headerlink\" title=\"一般形式\"></a>一般形式</h2><p>变量来源于数学，是计算机语言中能储存计算结果或能表示值抽象概念。<br>变量可以通过变量名访问。</p>\n<p>Go 语言变量名由字母、数字、下划线组成，其中首个字符不能为数字。<br>声明变量的一般形式是使用 var 关键字：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> identifier <span class=\"keyword\">type</span></span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br>可以一次声明多个变量：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> identifier1, identifier2 <span class=\"keyword\">type</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h2><h3 id=\"第一种，指定变量类型，如果没有初始化，则变量默认为零值。\"><a href=\"#第一种，指定变量类型，如果没有初始化，则变量默认为零值。\" class=\"headerlink\" title=\"第一种，指定变量类型，如果没有初始化，则变量默认为零值。\"></a>第一种，指定变量类型，如果没有初始化，则变量默认为零值。</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个变量并初始化，零值为&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">string</span> = <span class=\"string\">&quot;RUNOOB&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数值类型没有初始化就为0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bool 零值为 false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c <span class=\"keyword\">bool</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以下几种类型零值为 nil：</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a *<span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a []<span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>] <span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(<span class=\"keyword\">string</span>)</span> <span class=\"title\">int</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a error <span class=\"comment\">// error 是接口</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种，根据值自行判定变量类型。\"><a href=\"#第二种，根据值自行判定变量类型。\" class=\"headerlink\" title=\"第二种，根据值自行判定变量类型。\"></a>第二种，根据值自行判定变量类型。</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> v_name = value</span><br></pre></td></tr></table></figure>\n<h3 id=\"第三种，省略-var-注意-左侧如果没有声明新的变量，就产生编译错误，格式：\"><a href=\"#第三种，省略-var-注意-左侧如果没有声明新的变量，就产生编译错误，格式：\" class=\"headerlink\" title=\"第三种，省略 var, 注意 := 左侧如果没有声明新的变量，就产生编译错误，格式：\"></a>第三种，省略 var, 注意 := 左侧如果没有声明新的变量，就产生编译错误，格式：</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v_name := value</span><br></pre></td></tr></table></figure>\n<p>例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> intVal <span class=\"keyword\">int</span> </span><br><span class=\"line\">intVal :=<span class=\"number\">1</span> <span class=\"comment\">// 这时候会产生编译错误</span></span><br><span class=\"line\">intVal,intVal1 := <span class=\"number\">1</span>,<span class=\"number\">2</span> <span class=\"comment\">// 此时不会产生编译错误，因为有声明新的变量，因为 := 是一个声明语句,支持多变量声明</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"全局声明\"><a href=\"#全局声明\" class=\"headerlink\" title=\"全局声明\"></a>全局声明</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> (  <span class=\"comment\">// 这种因式分解关键字的写法一般用于声明全局变量</span></span><br><span class=\"line\">    a <span class=\"keyword\">int</span></span><br><span class=\"line\">    b <span class=\"keyword\">bool</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h2 id=\"变量赋值\"><a href=\"#变量赋值\" class=\"headerlink\" title=\"变量赋值\"></a>变量赋值</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a, b <span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c <span class=\"keyword\">string</span></span><br><span class=\"line\">a, b, c = <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"string\">&quot;abc&quot;</span></span><br></pre></td></tr></table></figure>\n<p>上面这行假设了变量 a，b 和 c 都已经被声明，否则的话应该这样使用：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a, b, c := <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"string\">&quot;abc&quot;</span></span><br></pre></td></tr></table></figure><br><div class=\"note info\">\n            <p>单纯地给变量赋值是不够的，这个值必须被使用</p>\n          </div><br>如果你想要交换两个变量的值，则可以简单地使用<code>a, b = b, a</code>，两个变量的类型必须是相同。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":821,"excerpt":"<h1 id=\"Go-语言变量\"><a href=\"#Go-语言变量\" class=\"headerlink\" title=\"Go 语言变量\"></a>Go 语言变量</h1><h2 id=\"一般形式\"><a href=\"#一般形式\" class=\"headerlink\" title=\"一般形式\"></a>一般形式</h2><p>变量来源于数学，是计算机语言中能储存计算结果或能表示值抽象概念。<br>变量可以通过变量名访问。</p>\n<p>Go 语言变量名由字母、数字、下划线组成，其中首个字符不能为数字。<br>声明变量的一般形式是使用 var 关键字：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> identifier <span class=\"keyword\">type</span></span><br></pre></td></tr></table></figure><br></p>","more":"<br>可以一次声明多个变量：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> identifier1, identifier2 <span class=\"keyword\">type</span></span><br></pre></td></tr></table></figure><p></p>\n<h2 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h2><h3 id=\"第一种，指定变量类型，如果没有初始化，则变量默认为零值。\"><a href=\"#第一种，指定变量类型，如果没有初始化，则变量默认为零值。\" class=\"headerlink\" title=\"第一种，指定变量类型，如果没有初始化，则变量默认为零值。\"></a>第一种，指定变量类型，如果没有初始化，则变量默认为零值。</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个变量并初始化，零值为&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">string</span> = <span class=\"string\">&quot;RUNOOB&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数值类型没有初始化就为0</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bool 零值为 false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c <span class=\"keyword\">bool</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以下几种类型零值为 nil：</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a *<span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a []<span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>] <span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(<span class=\"keyword\">string</span>)</span> <span class=\"title\">int</span></span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a error <span class=\"comment\">// error 是接口</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种，根据值自行判定变量类型。\"><a href=\"#第二种，根据值自行判定变量类型。\" class=\"headerlink\" title=\"第二种，根据值自行判定变量类型。\"></a>第二种，根据值自行判定变量类型。</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> v_name = value</span><br></pre></td></tr></table></figure>\n<h3 id=\"第三种，省略-var-注意-左侧如果没有声明新的变量，就产生编译错误，格式：\"><a href=\"#第三种，省略-var-注意-左侧如果没有声明新的变量，就产生编译错误，格式：\" class=\"headerlink\" title=\"第三种，省略 var, 注意 := 左侧如果没有声明新的变量，就产生编译错误，格式：\"></a>第三种，省略 var, 注意 := 左侧如果没有声明新的变量，就产生编译错误，格式：</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v_name := value</span><br></pre></td></tr></table></figure>\n<p>例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> intVal <span class=\"keyword\">int</span> </span><br><span class=\"line\">intVal :=<span class=\"number\">1</span> <span class=\"comment\">// 这时候会产生编译错误</span></span><br><span class=\"line\">intVal,intVal1 := <span class=\"number\">1</span>,<span class=\"number\">2</span> <span class=\"comment\">// 此时不会产生编译错误，因为有声明新的变量，因为 := 是一个声明语句,支持多变量声明</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"全局声明\"><a href=\"#全局声明\" class=\"headerlink\" title=\"全局声明\"></a>全局声明</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> (  <span class=\"comment\">// 这种因式分解关键字的写法一般用于声明全局变量</span></span><br><span class=\"line\">    a <span class=\"keyword\">int</span></span><br><span class=\"line\">    b <span class=\"keyword\">bool</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h2 id=\"变量赋值\"><a href=\"#变量赋值\" class=\"headerlink\" title=\"变量赋值\"></a>变量赋值</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a, b <span class=\"keyword\">int</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c <span class=\"keyword\">string</span></span><br><span class=\"line\">a, b, c = <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"string\">&quot;abc&quot;</span></span><br></pre></td></tr></table></figure>\n<p>上面这行假设了变量 a，b 和 c 都已经被声明，否则的话应该这样使用：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a, b, c := <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"string\">&quot;abc&quot;</span></span><br></pre></td></tr></table></figure><br><div class=\"note info\">\n            <p>单纯地给变量赋值是不够的，这个值必须被使用</p>\n          </div><br>如果你想要交换两个变量的值，则可以简单地使用<code>a, b = b, a</code>，两个变量的类型必须是相同。</p>"},{"title":"go语言常量","date":"2020-09-22T09:15:20.000Z","_content":"# 常量的定义格式：\n## 一般格式\n```go\nconst identifier [type] = value\n```\n你可以省略类型说明符 [type]，因为编译器可以根据变量的值来推断其类型。\n\n* 显式类型定义： `const b string = \"abc\"`\n* 隐式类型定义： `const b = \"abc\"`\n<!-- more -->\n\n## 多个相同类型的声明可以简写为：\n```go\nconst c_name1, c_name2 = value1, value2\n```\n\n## 常量还可以用作枚举：\n(常量若未赋值，取值和上一个相同)\n```go\nconst (\n    Unknown = 0\n    Female = 1\n    Male = 2\n)\n```\n\n# iota\n* iota，特殊常量，可以认为是一个可以被编译器修改的常量。\n* iota 在 const关键字出现时将被重置为 0(const 内部的第一行之前)，const 中每新增一行常量声明将使 iota 计数一次(iota 可理解为 const 语句块中的行索引)。\niota 可以被用作枚举值：\n```go\nconst (\n    a = iota\n    b = iota\n    c = iota\n)\n```\n第一个 iota 等于 0，每当 iota 在新的一行被使用时，它的值都会自动加 1；所以 a=0, b=1, c=2 \n举例：\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    const (\n        a = iota   //0\n        b          //1\n        c          //2\n        d = \"ha\"   //独立值，iota += 1\n        e          //\"ha\"   iota += 1\n        f = 100    //iota +=1\n        g          //100  iota +=1\n        h = iota   //7,恢复计数\n        i          //8\n    )\n    fmt.Println(a,b,c,d,e,f,g,h,i)\n}\n```\n结果为`0 1 2 ha ha 100 100 7 8`\n\n\n\n","source":"_posts/go-4changliang.md","raw":"---\ntitle: go语言常量\ndate: 2020-09-22 17:15:20\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# 常量的定义格式：\n## 一般格式\n```go\nconst identifier [type] = value\n```\n你可以省略类型说明符 [type]，因为编译器可以根据变量的值来推断其类型。\n\n* 显式类型定义： `const b string = \"abc\"`\n* 隐式类型定义： `const b = \"abc\"`\n<!-- more -->\n\n## 多个相同类型的声明可以简写为：\n```go\nconst c_name1, c_name2 = value1, value2\n```\n\n## 常量还可以用作枚举：\n(常量若未赋值，取值和上一个相同)\n```go\nconst (\n    Unknown = 0\n    Female = 1\n    Male = 2\n)\n```\n\n# iota\n* iota，特殊常量，可以认为是一个可以被编译器修改的常量。\n* iota 在 const关键字出现时将被重置为 0(const 内部的第一行之前)，const 中每新增一行常量声明将使 iota 计数一次(iota 可理解为 const 语句块中的行索引)。\niota 可以被用作枚举值：\n```go\nconst (\n    a = iota\n    b = iota\n    c = iota\n)\n```\n第一个 iota 等于 0，每当 iota 在新的一行被使用时，它的值都会自动加 1；所以 a=0, b=1, c=2 \n举例：\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    const (\n        a = iota   //0\n        b          //1\n        c          //2\n        d = \"ha\"   //独立值，iota += 1\n        e          //\"ha\"   iota += 1\n        f = 100    //iota +=1\n        g          //100  iota +=1\n        h = iota   //7,恢复计数\n        i          //8\n    )\n    fmt.Println(a,b,c,d,e,f,g,h,i)\n}\n```\n结果为`0 1 2 ha ha 100 100 7 8`\n\n\n\n","slug":"go-4changliang","published":1,"updated":"2020-09-22T09:56:45.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hi003gc8pv2qgp4767","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"常量的定义格式：\"><a href=\"#常量的定义格式：\" class=\"headerlink\" title=\"常量的定义格式：\"></a>常量的定义格式：</h1><h2 id=\"一般格式\"><a href=\"#一般格式\" class=\"headerlink\" title=\"一般格式\"></a>一般格式</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> identifier [<span class=\"keyword\">type</span>] = value</span><br></pre></td></tr></table></figure>\n<p>你可以省略类型说明符 [type]，因为编译器可以根据变量的值来推断其类型。</p>\n<ul>\n<li>显式类型定义： <code>const b string = &quot;abc&quot;</code></li>\n<li>隐式类型定义： <code>const b = &quot;abc&quot;</code><a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"多个相同类型的声明可以简写为：\"><a href=\"#多个相同类型的声明可以简写为：\" class=\"headerlink\" title=\"多个相同类型的声明可以简写为：\"></a>多个相同类型的声明可以简写为：</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> c_name1, c_name2 = value1, value2</span><br></pre></td></tr></table></figure>\n<h2 id=\"常量还可以用作枚举：\"><a href=\"#常量还可以用作枚举：\" class=\"headerlink\" title=\"常量还可以用作枚举：\"></a>常量还可以用作枚举：</h2><p>(常量若未赋值，取值和上一个相同)<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">    Unknown = <span class=\"number\">0</span></span><br><span class=\"line\">    Female = <span class=\"number\">1</span></span><br><span class=\"line\">    Male = <span class=\"number\">2</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"iota\"><a href=\"#iota\" class=\"headerlink\" title=\"iota\"></a>iota</h1><ul>\n<li>iota，特殊常量，可以认为是一个可以被编译器修改的常量。</li>\n<li>iota 在 const关键字出现时将被重置为 0(const 内部的第一行之前)，const 中每新增一行常量声明将使 iota 计数一次(iota 可理解为 const 语句块中的行索引)。<br>iota 可以被用作枚举值：<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">    a = <span class=\"literal\">iota</span></span><br><span class=\"line\">    b = <span class=\"literal\">iota</span></span><br><span class=\"line\">    c = <span class=\"literal\">iota</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n第一个 iota 等于 0，每当 iota 在新的一行被使用时，它的值都会自动加 1；所以 a=0, b=1, c=2<br>举例：<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> (</span><br><span class=\"line\">        a = <span class=\"literal\">iota</span>   <span class=\"comment\">//0</span></span><br><span class=\"line\">        b          <span class=\"comment\">//1</span></span><br><span class=\"line\">        c          <span class=\"comment\">//2</span></span><br><span class=\"line\">        d = <span class=\"string\">&quot;ha&quot;</span>   <span class=\"comment\">//独立值，iota += 1</span></span><br><span class=\"line\">        e          <span class=\"comment\">//&quot;ha&quot;   iota += 1</span></span><br><span class=\"line\">        f = <span class=\"number\">100</span>    <span class=\"comment\">//iota +=1</span></span><br><span class=\"line\">        g          <span class=\"comment\">//100  iota +=1</span></span><br><span class=\"line\">        h = <span class=\"literal\">iota</span>   <span class=\"comment\">//7,恢复计数</span></span><br><span class=\"line\">        i          <span class=\"comment\">//8</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    fmt.Println(a,b,c,d,e,f,g,h,i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n结果为<code>0 1 2 ha ha 100 100 7 8</code></li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":720,"excerpt":"<h1 id=\"常量的定义格式：\"><a href=\"#常量的定义格式：\" class=\"headerlink\" title=\"常量的定义格式：\"></a>常量的定义格式：</h1><h2 id=\"一般格式\"><a href=\"#一般格式\" class=\"headerlink\" title=\"一般格式\"></a>一般格式</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> identifier [<span class=\"keyword\">type</span>] = value</span><br></pre></td></tr></table></figure>\n<p>你可以省略类型说明符 [type]，因为编译器可以根据变量的值来推断其类型。</p>\n<ul>\n<li>显式类型定义： <code>const b string = &quot;abc&quot;</code></li>\n<li>隐式类型定义： <code>const b = &quot;abc&quot;</code></li></ul>","more":"\n\n<h2 id=\"多个相同类型的声明可以简写为：\"><a href=\"#多个相同类型的声明可以简写为：\" class=\"headerlink\" title=\"多个相同类型的声明可以简写为：\"></a>多个相同类型的声明可以简写为：</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> c_name1, c_name2 = value1, value2</span><br></pre></td></tr></table></figure>\n<h2 id=\"常量还可以用作枚举：\"><a href=\"#常量还可以用作枚举：\" class=\"headerlink\" title=\"常量还可以用作枚举：\"></a>常量还可以用作枚举：</h2><p>(常量若未赋值，取值和上一个相同)<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">    Unknown = <span class=\"number\">0</span></span><br><span class=\"line\">    Female = <span class=\"number\">1</span></span><br><span class=\"line\">    Male = <span class=\"number\">2</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"iota\"><a href=\"#iota\" class=\"headerlink\" title=\"iota\"></a>iota</h1><ul>\n<li>iota，特殊常量，可以认为是一个可以被编译器修改的常量。</li>\n<li>iota 在 const关键字出现时将被重置为 0(const 内部的第一行之前)，const 中每新增一行常量声明将使 iota 计数一次(iota 可理解为 const 语句块中的行索引)。<br>iota 可以被用作枚举值：<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">    a = <span class=\"literal\">iota</span></span><br><span class=\"line\">    b = <span class=\"literal\">iota</span></span><br><span class=\"line\">    c = <span class=\"literal\">iota</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n第一个 iota 等于 0，每当 iota 在新的一行被使用时，它的值都会自动加 1；所以 a=0, b=1, c=2<br>举例：<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> (</span><br><span class=\"line\">        a = <span class=\"literal\">iota</span>   <span class=\"comment\">//0</span></span><br><span class=\"line\">        b          <span class=\"comment\">//1</span></span><br><span class=\"line\">        c          <span class=\"comment\">//2</span></span><br><span class=\"line\">        d = <span class=\"string\">&quot;ha&quot;</span>   <span class=\"comment\">//独立值，iota += 1</span></span><br><span class=\"line\">        e          <span class=\"comment\">//&quot;ha&quot;   iota += 1</span></span><br><span class=\"line\">        f = <span class=\"number\">100</span>    <span class=\"comment\">//iota +=1</span></span><br><span class=\"line\">        g          <span class=\"comment\">//100  iota +=1</span></span><br><span class=\"line\">        h = <span class=\"literal\">iota</span>   <span class=\"comment\">//7,恢复计数</span></span><br><span class=\"line\">        i          <span class=\"comment\">//8</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    fmt.Println(a,b,c,d,e,f,g,h,i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n结果为<code>0 1 2 ha ha 100 100 7 8</code></li>\n</ul>"},{"title":"go语言运算符","date":"2020-09-22T10:07:47.000Z","_content":"# Go 语言运算符\n运算符用于在程序运行时执行数学或逻辑运算。\nGo 语言内置的运算符有：\n\n* 算术运算符(与C语言相同，不加赘述)\n* 关系运算符(与C语言相同，不加赘述)\n* 逻辑运算符(与C语言相同，不加赘述)\n* 位运算符(与C语言相同，不加赘述)\n* 赋值运算符\n* 其他运算符\n\n接下来让我们来详细看看各个运算符的介绍。\n<!-- more -->\n\n## 赋值运算符\n下表列出了所有Go语言的赋值运算符。\n| 运算符 | 描述                                           | 实例                                  |\n| :---: | :-------------------------------------------: | :----------------------------------: |\n| =      | 简单的赋值运算符，将一个表达式的值赋给一个左值 | C = A + B 将 A + B 表达式结果赋值给 C |\n| +=     | 相加后再赋值                                   | C += A 等于 C = C + A                 |\n| -=     | 相减后再赋值                                   | C -= A 等于 C = C - A                 |\n| \\*=     | 相乘后再赋值                                   | C \\*= A 等于 C = C \\* A                 |\n| /=     | 相除后再赋值                                   | C /= A 等于 C = C / A                 |\n| %=     | 求余后再赋值                                   | C %= A 等于 C = C % A                 |\n| <<=    | 左移后赋值                                     | C <<= 2 等于 C = C << 2               |\n| >>=    | 右移后赋值                                     | C >>= 2 等于 C = C >> 2               |\n| &=     | 按位与后赋值                                   | C &= 2 等于 C = C & 2                 |\n| ^=     | 按位异或后赋值                                 | C ^= 2 等于 C = C ^ 2                 |\n| \\|=    | 按位或后赋值                                   | C \\|= 2 等于 C = C \\| 2               |\n\n## 其他运算符\n下表列出了Go语言的其他运算符。\n| 运算符 |       描述       |            实例            |\n| :----: | :--------------: | :------------------------: |\n|   &    | 返回变量存储地址 | &a; 将给出变量的实际地址。 |\n|   *    |    指针变量。    |     \\*a; 是一个指针变量     |\n\n## 运算符优先级\n\n有些运算符拥有较高的优先级，二元运算符的运算方向均是从左至右。下表列出了所有运算符以及它们的优先级，由上至下代表优先级由高到低：\n\n| 优先级 |      运算符      |\n| :----: | :--------------: |\n|   5    | * / % << >> & &^ |\n|   4    |     + - \\| ^     |\n|   3    | == != < <= > >=  |\n|   2    |        &&        |\n|   1    |       \\|\\|       |","source":"_posts/go-5yunsuanfu.md","raw":"---\ntitle: go语言运算符\ndate: 2020-09-22 18:07:47\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# Go 语言运算符\n运算符用于在程序运行时执行数学或逻辑运算。\nGo 语言内置的运算符有：\n\n* 算术运算符(与C语言相同，不加赘述)\n* 关系运算符(与C语言相同，不加赘述)\n* 逻辑运算符(与C语言相同，不加赘述)\n* 位运算符(与C语言相同，不加赘述)\n* 赋值运算符\n* 其他运算符\n\n接下来让我们来详细看看各个运算符的介绍。\n<!-- more -->\n\n## 赋值运算符\n下表列出了所有Go语言的赋值运算符。\n| 运算符 | 描述                                           | 实例                                  |\n| :---: | :-------------------------------------------: | :----------------------------------: |\n| =      | 简单的赋值运算符，将一个表达式的值赋给一个左值 | C = A + B 将 A + B 表达式结果赋值给 C |\n| +=     | 相加后再赋值                                   | C += A 等于 C = C + A                 |\n| -=     | 相减后再赋值                                   | C -= A 等于 C = C - A                 |\n| \\*=     | 相乘后再赋值                                   | C \\*= A 等于 C = C \\* A                 |\n| /=     | 相除后再赋值                                   | C /= A 等于 C = C / A                 |\n| %=     | 求余后再赋值                                   | C %= A 等于 C = C % A                 |\n| <<=    | 左移后赋值                                     | C <<= 2 等于 C = C << 2               |\n| >>=    | 右移后赋值                                     | C >>= 2 等于 C = C >> 2               |\n| &=     | 按位与后赋值                                   | C &= 2 等于 C = C & 2                 |\n| ^=     | 按位异或后赋值                                 | C ^= 2 等于 C = C ^ 2                 |\n| \\|=    | 按位或后赋值                                   | C \\|= 2 等于 C = C \\| 2               |\n\n## 其他运算符\n下表列出了Go语言的其他运算符。\n| 运算符 |       描述       |            实例            |\n| :----: | :--------------: | :------------------------: |\n|   &    | 返回变量存储地址 | &a; 将给出变量的实际地址。 |\n|   *    |    指针变量。    |     \\*a; 是一个指针变量     |\n\n## 运算符优先级\n\n有些运算符拥有较高的优先级，二元运算符的运算方向均是从左至右。下表列出了所有运算符以及它们的优先级，由上至下代表优先级由高到低：\n\n| 优先级 |      运算符      |\n| :----: | :--------------: |\n|   5    | * / % << >> & &^ |\n|   4    |     + - \\| ^     |\n|   3    | == != < <= > >=  |\n|   2    |        &&        |\n|   1    |       \\|\\|       |","slug":"go-5yunsuanfu","published":1,"updated":"2020-10-12T08:34:39.140Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hk003lc8pvgm348nls","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"Go-语言运算符\"><a href=\"#Go-语言运算符\" class=\"headerlink\" title=\"Go 语言运算符\"></a>Go 语言运算符</h1><p>运算符用于在程序运行时执行数学或逻辑运算。<br>Go 语言内置的运算符有：</p>\n<ul>\n<li>算术运算符(与C语言相同，不加赘述)</li>\n<li>关系运算符(与C语言相同，不加赘述)</li>\n<li>逻辑运算符(与C语言相同，不加赘述)</li>\n<li>位运算符(与C语言相同，不加赘述)</li>\n<li>赋值运算符</li>\n<li>其他运算符</li>\n</ul>\n<p>接下来让我们来详细看看各个运算符的介绍。<br><a id=\"more\"></a></p>\n<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2><p>下表列出了所有Go语言的赋值运算符。<br>| 运算符 | 描述                                           | 实例                                  |<br>| :—-: | :—————————————————————-: | :—————————————————: |<br>| =      | 简单的赋值运算符，将一个表达式的值赋给一个左值 | C = A + B 将 A + B 表达式结果赋值给 C |<br>| +=     | 相加后再赋值                                   | C += A 等于 C = C + A                 |<br>| -=     | 相减后再赋值                                   | C -= A 等于 C = C - A                 |<br>| *=     | 相乘后再赋值                                   | C *= A 等于 C = C * A                 |<br>| /=     | 相除后再赋值                                   | C /= A 等于 C = C / A                 |<br>| %=     | 求余后再赋值                                   | C %= A 等于 C = C % A                 |<br>| &lt;&lt;=    | 左移后赋值                                     | C &lt;&lt;= 2 等于 C = C &lt;&lt; 2               |<br>| &gt;&gt;=    | 右移后赋值                                     | C &gt;&gt;= 2 等于 C = C &gt;&gt; 2               |<br>| &amp;=     | 按位与后赋值                                   | C &amp;= 2 等于 C = C &amp; 2                 |<br>| ^=     | 按位异或后赋值                                 | C ^= 2 等于 C = C ^ 2                 |<br>| |=    | 按位或后赋值                                   | C |= 2 等于 C = C | 2               |</p>\n<h2 id=\"其他运算符\"><a href=\"#其他运算符\" class=\"headerlink\" title=\"其他运算符\"></a>其他运算符</h2><p>下表列出了Go语言的其他运算符。<br>| 运算符 |       描述       |            实例            |<br>| :——: | :———————: | :————————————: |<br>|   &amp;    | 返回变量存储地址 | &a; 将给出变量的实际地址。 |<br>|   <em>    |    指针变量。    |     \\</em>a; 是一个指针变量     |</p>\n<h2 id=\"运算符优先级\"><a href=\"#运算符优先级\" class=\"headerlink\" title=\"运算符优先级\"></a>运算符优先级</h2><p>有些运算符拥有较高的优先级，二元运算符的运算方向均是从左至右。下表列出了所有运算符以及它们的优先级，由上至下代表优先级由高到低：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">优先级</th>\n<th style=\"text-align:center\">运算符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">* / % &lt;&lt; &gt;&gt; &amp; &amp;^</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">+ - \\</td>\n<td>^</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">== != &lt; &lt;= &gt; &gt;=</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">&amp;&amp;</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">\\</td>\n<td>\\</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":817,"excerpt":"<h1 id=\"Go-语言运算符\"><a href=\"#Go-语言运算符\" class=\"headerlink\" title=\"Go 语言运算符\"></a>Go 语言运算符</h1><p>运算符用于在程序运行时执行数学或逻辑运算。<br>Go 语言内置的运算符有：</p>\n<ul>\n<li>算术运算符(与C语言相同，不加赘述)</li>\n<li>关系运算符(与C语言相同，不加赘述)</li>\n<li>逻辑运算符(与C语言相同，不加赘述)</li>\n<li>位运算符(与C语言相同，不加赘述)</li>\n<li>赋值运算符</li>\n<li>其他运算符</li>\n</ul>\n<p>接下来让我们来详细看看各个运算符的介绍。<br></p>","more":"<p></p>\n<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2><p>下表列出了所有Go语言的赋值运算符。<br>| 运算符 | 描述                                           | 实例                                  |<br>| :—-: | :—————————————————————-: | :—————————————————: |<br>| =      | 简单的赋值运算符，将一个表达式的值赋给一个左值 | C = A + B 将 A + B 表达式结果赋值给 C |<br>| +=     | 相加后再赋值                                   | C += A 等于 C = C + A                 |<br>| -=     | 相减后再赋值                                   | C -= A 等于 C = C - A                 |<br>| *=     | 相乘后再赋值                                   | C *= A 等于 C = C * A                 |<br>| /=     | 相除后再赋值                                   | C /= A 等于 C = C / A                 |<br>| %=     | 求余后再赋值                                   | C %= A 等于 C = C % A                 |<br>| &lt;&lt;=    | 左移后赋值                                     | C &lt;&lt;= 2 等于 C = C &lt;&lt; 2               |<br>| &gt;&gt;=    | 右移后赋值                                     | C &gt;&gt;= 2 等于 C = C &gt;&gt; 2               |<br>| &amp;=     | 按位与后赋值                                   | C &amp;= 2 等于 C = C &amp; 2                 |<br>| ^=     | 按位异或后赋值                                 | C ^= 2 等于 C = C ^ 2                 |<br>| |=    | 按位或后赋值                                   | C |= 2 等于 C = C | 2               |</p>\n<h2 id=\"其他运算符\"><a href=\"#其他运算符\" class=\"headerlink\" title=\"其他运算符\"></a>其他运算符</h2><p>下表列出了Go语言的其他运算符。<br>| 运算符 |       描述       |            实例            |<br>| :——: | :———————: | :————————————: |<br>|   &amp;    | 返回变量存储地址 | &a; 将给出变量的实际地址。 |<br>|   <em>    |    指针变量。    |     \\</em>a; 是一个指针变量     |</p>\n<h2 id=\"运算符优先级\"><a href=\"#运算符优先级\" class=\"headerlink\" title=\"运算符优先级\"></a>运算符优先级</h2><p>有些运算符拥有较高的优先级，二元运算符的运算方向均是从左至右。下表列出了所有运算符以及它们的优先级，由上至下代表优先级由高到低：</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">优先级</th>\n<th style=\"text-align:center\">运算符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">* / % &lt;&lt; &gt;&gt; &amp; &amp;^</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">+ - \\</td>\n<td>^</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">== != &lt; &lt;= &gt; &gt;=</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">&amp;&amp;</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">\\</td>\n<td>\\</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>"},{"title":"go语言条件语句","date":"2020-09-22T11:03:55.000Z","_content":"# Go 语言条件语句\n条件语句需要开发者通过指定一个或多个条件，并通过测试条件是否为 true 来决定是否执行指定语句，并在条件为 false 的情况在执行另外的语句。\n\n| 语句                                                         | 描述                                                         |\n| :----------------------------------------------------------- | :----------------------------------------------------------- |\n| [if 语句](https://www.runoob.com/go/go-if-statement.html)    | **if 语句** 由一个布尔表达式后紧跟一个或多个语句组成。       |\n| [if...else 语句](https://www.runoob.com/go/go-if-else-statement.html) | **if 语句** 后可以使用可选的 **else 语句**, else 语句中的表达式在布尔表达式为 false 时执行。 |\n| [if 嵌套语句](https://www.runoob.com/go/go-nested-if-statements.html) | 你可以在 **if** 或 **else if** 语句中嵌入一个或多个 **if** 或 **else if** 语句。 |\n| [switch 语句](https://www.runoob.com/go/go-switch-statement.html) | **switch** 语句用于基于不同条件执行不同动作。                |\n| [select 语句](https://www.runoob.com/go/go-select-statement.html) | **select** 语句类似于 **switch** 语句，但是select会随机执行一个可运行的case。如果没有case可运行，它将阻塞，直到有case可运行。 |\n<!-- more -->\n\nif 语句、if...else 语句、if 嵌套语句与C语言一致，不加赘述\n\n## Go 语言 switch 语句\n\n* switch 语句用于基于不同条件执行不同动作，每一个 case 分支都是唯一的，从上至下逐一测试，直到匹配为止。\n* switch 语句执行的过程从上至下，直到找到匹配项，匹配项后面也不需要再加 break。\n* switch 默认情况下 case 最后自带 break 语句，匹配成功后就不会执行其他 case，如果我们需要执行后面的 case，可以使用 fallthrough 。\n\n### 基本语法\n可以加break语句\n```go\nswitch var1 {\n    case val1:\n        ...\n    case val2:\n        ...\n    default:\n        ...\n}\n```\n### Type Switch\nswitch 语句还可以被用于 type-switch 来判断某个 interface 变量中实际存储的变量类型。\n\nType Switch 语法格式如下：\n```go\nswitch x.(type){\n    case type:\n       statement(s);      \n    case type:\n       statement(s); \n    /* 你可以定义任意个数的case */\n    default: /* 可选 */\n       statement(s);\n}\n```\n### fallthrough\n使用 fallthrough 会强制执行后面的 case 语句，fallthrough 不会判断下一条 case 的表达式结果是否为 true。\n举例\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\n    switch {\n    case false:\n            fmt.Println(\"1、case 条件语句为 false\")\n            fallthrough\n    case true:\n            fmt.Println(\"2、case 条件语句为 true\")\n            fallthrough\n    case false:\n            fmt.Println(\"3、case 条件语句为 false\")\n            fallthrough\n    case true:\n            fmt.Println(\"4、case 条件语句为 true\")\n    case false:\n            fmt.Println(\"5、case 条件语句为 false\")\n            fallthrough\n    default:\n            fmt.Println(\"6、默认 case\")\n    }\n}\n```\n结果为\n```\n2、case 条件语句为 true\n3、case 条件语句为 false\n4、case 条件语句为 true\n```\n\n## Go 语言 select 语句\n\nselect 是 Go 中的一个控制结构，类似于用于通信的 switch 语句。每个 case 必须是一个通信操作，要么是发送要么是接收。\nselect 随机执行一个可运行的 case。如果没有 case 可运行，它将阻塞，直到有 case 可运行。一个默认的子句应该总是可运行的。\n\n### 基本语法\n\n* 每个 case 都必须是一个通信\n* 所有 channel 表达式都会被求值\n* 所有被发送的表达式都会被求值\n* 如果任意某个通信可以进行，它就执行，其他被忽略。\n* 如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。 \n* 若没有case可以运行：\n    1. 如果有 default 子句，则执行该语句。\n    2. 如果没有 default 子句，select 将阻塞，直到某个通信可以运行；Go 不会重新对 channel 或值进行求值。\n    \n```go\nselect {\n    case communication clause  :\n       statement(s);      \n    case communication clause  :\n       statement(s); \n    /* 你可以定义任意数量的 case */\n    default : /* 可选 */\n       statement(s);\n}\n```\n\n### 举例\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc fibonacci(c, quit chan int) {\n\tx, y := 1, 1\n\tfor {\n\t\tselect {\n            case c <- x:\n                x, y = y, x+y\n            case <-quit:\n                fmt.Println(\"quit\")\n                return\n\t\t}\n\t}\n}\n\nfunc main() {\n\tc := make(chan int)\n\tquit := make(chan int)\n\n\tgo func() {\n\t\tfor i := 0; i < 6; i++ {\n\t\t\tfmt.Println(<-c)\n\t\t}\n\t\tquit <- 0\n\t}()\n\n\tfibonacci(c, quit)\n}\n```\n运行结果,自己品\n```\n1\n1\n2\n3\n5\n8\nquit\n```\n","source":"_posts/go-6tiaojian.md","raw":"---\ntitle: go语言条件语句\ndate: 2020-09-22 19:03:55\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# Go 语言条件语句\n条件语句需要开发者通过指定一个或多个条件，并通过测试条件是否为 true 来决定是否执行指定语句，并在条件为 false 的情况在执行另外的语句。\n\n| 语句                                                         | 描述                                                         |\n| :----------------------------------------------------------- | :----------------------------------------------------------- |\n| [if 语句](https://www.runoob.com/go/go-if-statement.html)    | **if 语句** 由一个布尔表达式后紧跟一个或多个语句组成。       |\n| [if...else 语句](https://www.runoob.com/go/go-if-else-statement.html) | **if 语句** 后可以使用可选的 **else 语句**, else 语句中的表达式在布尔表达式为 false 时执行。 |\n| [if 嵌套语句](https://www.runoob.com/go/go-nested-if-statements.html) | 你可以在 **if** 或 **else if** 语句中嵌入一个或多个 **if** 或 **else if** 语句。 |\n| [switch 语句](https://www.runoob.com/go/go-switch-statement.html) | **switch** 语句用于基于不同条件执行不同动作。                |\n| [select 语句](https://www.runoob.com/go/go-select-statement.html) | **select** 语句类似于 **switch** 语句，但是select会随机执行一个可运行的case。如果没有case可运行，它将阻塞，直到有case可运行。 |\n<!-- more -->\n\nif 语句、if...else 语句、if 嵌套语句与C语言一致，不加赘述\n\n## Go 语言 switch 语句\n\n* switch 语句用于基于不同条件执行不同动作，每一个 case 分支都是唯一的，从上至下逐一测试，直到匹配为止。\n* switch 语句执行的过程从上至下，直到找到匹配项，匹配项后面也不需要再加 break。\n* switch 默认情况下 case 最后自带 break 语句，匹配成功后就不会执行其他 case，如果我们需要执行后面的 case，可以使用 fallthrough 。\n\n### 基本语法\n可以加break语句\n```go\nswitch var1 {\n    case val1:\n        ...\n    case val2:\n        ...\n    default:\n        ...\n}\n```\n### Type Switch\nswitch 语句还可以被用于 type-switch 来判断某个 interface 变量中实际存储的变量类型。\n\nType Switch 语法格式如下：\n```go\nswitch x.(type){\n    case type:\n       statement(s);      \n    case type:\n       statement(s); \n    /* 你可以定义任意个数的case */\n    default: /* 可选 */\n       statement(s);\n}\n```\n### fallthrough\n使用 fallthrough 会强制执行后面的 case 语句，fallthrough 不会判断下一条 case 的表达式结果是否为 true。\n举例\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\n    switch {\n    case false:\n            fmt.Println(\"1、case 条件语句为 false\")\n            fallthrough\n    case true:\n            fmt.Println(\"2、case 条件语句为 true\")\n            fallthrough\n    case false:\n            fmt.Println(\"3、case 条件语句为 false\")\n            fallthrough\n    case true:\n            fmt.Println(\"4、case 条件语句为 true\")\n    case false:\n            fmt.Println(\"5、case 条件语句为 false\")\n            fallthrough\n    default:\n            fmt.Println(\"6、默认 case\")\n    }\n}\n```\n结果为\n```\n2、case 条件语句为 true\n3、case 条件语句为 false\n4、case 条件语句为 true\n```\n\n## Go 语言 select 语句\n\nselect 是 Go 中的一个控制结构，类似于用于通信的 switch 语句。每个 case 必须是一个通信操作，要么是发送要么是接收。\nselect 随机执行一个可运行的 case。如果没有 case 可运行，它将阻塞，直到有 case 可运行。一个默认的子句应该总是可运行的。\n\n### 基本语法\n\n* 每个 case 都必须是一个通信\n* 所有 channel 表达式都会被求值\n* 所有被发送的表达式都会被求值\n* 如果任意某个通信可以进行，它就执行，其他被忽略。\n* 如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。 \n* 若没有case可以运行：\n    1. 如果有 default 子句，则执行该语句。\n    2. 如果没有 default 子句，select 将阻塞，直到某个通信可以运行；Go 不会重新对 channel 或值进行求值。\n    \n```go\nselect {\n    case communication clause  :\n       statement(s);      \n    case communication clause  :\n       statement(s); \n    /* 你可以定义任意数量的 case */\n    default : /* 可选 */\n       statement(s);\n}\n```\n\n### 举例\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc fibonacci(c, quit chan int) {\n\tx, y := 1, 1\n\tfor {\n\t\tselect {\n            case c <- x:\n                x, y = y, x+y\n            case <-quit:\n                fmt.Println(\"quit\")\n                return\n\t\t}\n\t}\n}\n\nfunc main() {\n\tc := make(chan int)\n\tquit := make(chan int)\n\n\tgo func() {\n\t\tfor i := 0; i < 6; i++ {\n\t\t\tfmt.Println(<-c)\n\t\t}\n\t\tquit <- 0\n\t}()\n\n\tfibonacci(c, quit)\n}\n```\n运行结果,自己品\n```\n1\n1\n2\n3\n5\n8\nquit\n```\n","slug":"go-6tiaojian","published":1,"updated":"2020-09-23T08:41:53.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hl003mc8pvhetpa6hp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"Go-语言条件语句\"><a href=\"#Go-语言条件语句\" class=\"headerlink\" title=\"Go 语言条件语句\"></a>Go 语言条件语句</h1><p>条件语句需要开发者通过指定一个或多个条件，并通过测试条件是否为 true 来决定是否执行指定语句，并在条件为 false 的情况在执行另外的语句。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">语句</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-if-statement.html\">if 语句</a></td>\n<td style=\"text-align:left\"><strong>if 语句</strong> 由一个布尔表达式后紧跟一个或多个语句组成。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-if-else-statement.html\">if…else 语句</a></td>\n<td style=\"text-align:left\"><strong>if 语句</strong> 后可以使用可选的 <strong>else 语句</strong>, else 语句中的表达式在布尔表达式为 false 时执行。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-nested-if-statements.html\">if 嵌套语句</a></td>\n<td style=\"text-align:left\">你可以在 <strong>if</strong> 或 <strong>else if</strong> 语句中嵌入一个或多个 <strong>if</strong> 或 <strong>else if</strong> 语句。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-switch-statement.html\">switch 语句</a></td>\n<td style=\"text-align:left\"><strong>switch</strong> 语句用于基于不同条件执行不同动作。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-select-statement.html\">select 语句</a></td>\n<td style=\"text-align:left\"><strong>select</strong> 语句类似于 <strong>switch</strong> 语句，但是select会随机执行一个可运行的case。如果没有case可运行，它将阻塞，直到有case可运行。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<a id=\"more\"></a>\n<p>if 语句、if…else 语句、if 嵌套语句与C语言一致，不加赘述</p>\n<h2 id=\"Go-语言-switch-语句\"><a href=\"#Go-语言-switch-语句\" class=\"headerlink\" title=\"Go 语言 switch 语句\"></a>Go 语言 switch 语句</h2><ul>\n<li>switch 语句用于基于不同条件执行不同动作，每一个 case 分支都是唯一的，从上至下逐一测试，直到匹配为止。</li>\n<li>switch 语句执行的过程从上至下，直到找到匹配项，匹配项后面也不需要再加 break。</li>\n<li>switch 默认情况下 case 最后自带 break 语句，匹配成功后就不会执行其他 case，如果我们需要执行后面的 case，可以使用 fallthrough 。</li>\n</ul>\n<h3 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h3><p>可以加break语句<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> var1 &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> val1:</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"keyword\">case</span> val2:</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Type-Switch\"><a href=\"#Type-Switch\" class=\"headerlink\" title=\"Type Switch\"></a>Type Switch</h3><p>switch 语句还可以被用于 type-switch 来判断某个 interface 变量中实际存储的变量类型。</p>\n<p>Type Switch 语法格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> x.(<span class=\"keyword\">type</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">type</span>:</span><br><span class=\"line\">       statement(s);      </span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">type</span>:</span><br><span class=\"line\">       statement(s); </span><br><span class=\"line\">    <span class=\"comment\">/* 你可以定义任意个数的case */</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"comment\">/* 可选 */</span></span><br><span class=\"line\">       statement(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"fallthrough\"><a href=\"#fallthrough\" class=\"headerlink\" title=\"fallthrough\"></a>fallthrough</h3><p>使用 fallthrough 会强制执行后面的 case 语句，fallthrough 不会判断下一条 case 的表达式结果是否为 true。<br>举例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;1、case 条件语句为 false&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">true</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;2、case 条件语句为 true&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;3、case 条件语句为 false&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">true</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;4、case 条件语句为 true&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;5、case 条件语句为 false&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;6、默认 case&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>结果为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2、case 条件语句为 true</span><br><span class=\"line\">3、case 条件语句为 false</span><br><span class=\"line\">4、case 条件语句为 true</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Go-语言-select-语句\"><a href=\"#Go-语言-select-语句\" class=\"headerlink\" title=\"Go 语言 select 语句\"></a>Go 语言 select 语句</h2><p>select 是 Go 中的一个控制结构，类似于用于通信的 switch 语句。每个 case 必须是一个通信操作，要么是发送要么是接收。<br>select 随机执行一个可运行的 case。如果没有 case 可运行，它将阻塞，直到有 case 可运行。一个默认的子句应该总是可运行的。</p>\n<h3 id=\"基本语法-1\"><a href=\"#基本语法-1\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h3><ul>\n<li>每个 case 都必须是一个通信</li>\n<li>所有 channel 表达式都会被求值</li>\n<li>所有被发送的表达式都会被求值</li>\n<li>如果任意某个通信可以进行，它就执行，其他被忽略。</li>\n<li>如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。 </li>\n<li>若没有case可以运行：<ol>\n<li>如果有 default 子句，则执行该语句。</li>\n<li>如果没有 default 子句，select 将阻塞，直到某个通信可以运行；Go 不会重新对 channel 或值进行求值。</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> communication clause  :</span><br><span class=\"line\">       statement(s);      </span><br><span class=\"line\">    <span class=\"keyword\">case</span> communication clause  :</span><br><span class=\"line\">       statement(s); </span><br><span class=\"line\">    <span class=\"comment\">/* 你可以定义任意数量的 case */</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span> : <span class=\"comment\">/* 可选 */</span></span><br><span class=\"line\">       statement(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fibonacci</span><span class=\"params\">(c, quit <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tx, y := <span class=\"number\">1</span>, <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> c &lt;- x:</span><br><span class=\"line\">                x, y = y, x+y</span><br><span class=\"line\">            <span class=\"keyword\">case</span> &lt;-quit:</span><br><span class=\"line\">                fmt.Println(<span class=\"string\">&quot;quit&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tc := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\">\tquit := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++ &#123;</span><br><span class=\"line\">\t\t\tfmt.Println(&lt;-c)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tquit &lt;- <span class=\"number\">0</span></span><br><span class=\"line\">\t&#125;()</span><br><span class=\"line\"></span><br><span class=\"line\">\tfibonacci(c, quit)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果,自己品<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">5</span><br><span class=\"line\">8</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2303,"excerpt":"<h1 id=\"Go-语言条件语句\"><a href=\"#Go-语言条件语句\" class=\"headerlink\" title=\"Go 语言条件语句\"></a>Go 语言条件语句</h1><p>条件语句需要开发者通过指定一个或多个条件，并通过测试条件是否为 true 来决定是否执行指定语句，并在条件为 false 的情况在执行另外的语句。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">语句</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-if-statement.html\">if 语句</a></td>\n<td style=\"text-align:left\"><strong>if 语句</strong> 由一个布尔表达式后紧跟一个或多个语句组成。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-if-else-statement.html\">if…else 语句</a></td>\n<td style=\"text-align:left\"><strong>if 语句</strong> 后可以使用可选的 <strong>else 语句</strong>, else 语句中的表达式在布尔表达式为 false 时执行。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-nested-if-statements.html\">if 嵌套语句</a></td>\n<td style=\"text-align:left\">你可以在 <strong>if</strong> 或 <strong>else if</strong> 语句中嵌入一个或多个 <strong>if</strong> 或 <strong>else if</strong> 语句。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-switch-statement.html\">switch 语句</a></td>\n<td style=\"text-align:left\"><strong>switch</strong> 语句用于基于不同条件执行不同动作。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://www.runoob.com/go/go-select-statement.html\">select 语句</a></td>\n<td style=\"text-align:left\"><strong>select</strong> 语句类似于 <strong>switch</strong> 语句，但是select会随机执行一个可运行的case。如果没有case可运行，它将阻塞，直到有case可运行。</td>\n</tr>\n</tbody>\n</table>\n</div>","more":"<p>if 语句、if…else 语句、if 嵌套语句与C语言一致，不加赘述</p>\n<h2 id=\"Go-语言-switch-语句\"><a href=\"#Go-语言-switch-语句\" class=\"headerlink\" title=\"Go 语言 switch 语句\"></a>Go 语言 switch 语句</h2><ul>\n<li>switch 语句用于基于不同条件执行不同动作，每一个 case 分支都是唯一的，从上至下逐一测试，直到匹配为止。</li>\n<li>switch 语句执行的过程从上至下，直到找到匹配项，匹配项后面也不需要再加 break。</li>\n<li>switch 默认情况下 case 最后自带 break 语句，匹配成功后就不会执行其他 case，如果我们需要执行后面的 case，可以使用 fallthrough 。</li>\n</ul>\n<h3 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h3><p>可以加break语句<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> var1 &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> val1:</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"keyword\">case</span> val2:</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Type-Switch\"><a href=\"#Type-Switch\" class=\"headerlink\" title=\"Type Switch\"></a>Type Switch</h3><p>switch 语句还可以被用于 type-switch 来判断某个 interface 变量中实际存储的变量类型。</p>\n<p>Type Switch 语法格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> x.(<span class=\"keyword\">type</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">type</span>:</span><br><span class=\"line\">       statement(s);      </span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">type</span>:</span><br><span class=\"line\">       statement(s); </span><br><span class=\"line\">    <span class=\"comment\">/* 你可以定义任意个数的case */</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"comment\">/* 可选 */</span></span><br><span class=\"line\">       statement(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"fallthrough\"><a href=\"#fallthrough\" class=\"headerlink\" title=\"fallthrough\"></a>fallthrough</h3><p>使用 fallthrough 会强制执行后面的 case 语句，fallthrough 不会判断下一条 case 的表达式结果是否为 true。<br>举例<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;1、case 条件语句为 false&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">true</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;2、case 条件语句为 true&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;3、case 条件语句为 false&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">true</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;4、case 条件语句为 true&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"literal\">false</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;5、case 条件语句为 false&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">fallthrough</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            fmt.Println(<span class=\"string\">&quot;6、默认 case&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>结果为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2、case 条件语句为 true</span><br><span class=\"line\">3、case 条件语句为 false</span><br><span class=\"line\">4、case 条件语句为 true</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Go-语言-select-语句\"><a href=\"#Go-语言-select-语句\" class=\"headerlink\" title=\"Go 语言 select 语句\"></a>Go 语言 select 语句</h2><p>select 是 Go 中的一个控制结构，类似于用于通信的 switch 语句。每个 case 必须是一个通信操作，要么是发送要么是接收。<br>select 随机执行一个可运行的 case。如果没有 case 可运行，它将阻塞，直到有 case 可运行。一个默认的子句应该总是可运行的。</p>\n<h3 id=\"基本语法-1\"><a href=\"#基本语法-1\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h3><ul>\n<li>每个 case 都必须是一个通信</li>\n<li>所有 channel 表达式都会被求值</li>\n<li>所有被发送的表达式都会被求值</li>\n<li>如果任意某个通信可以进行，它就执行，其他被忽略。</li>\n<li>如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。 </li>\n<li>若没有case可以运行：<ol>\n<li>如果有 default 子句，则执行该语句。</li>\n<li>如果没有 default 子句，select 将阻塞，直到某个通信可以运行；Go 不会重新对 channel 或值进行求值。</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> communication clause  :</span><br><span class=\"line\">       statement(s);      </span><br><span class=\"line\">    <span class=\"keyword\">case</span> communication clause  :</span><br><span class=\"line\">       statement(s); </span><br><span class=\"line\">    <span class=\"comment\">/* 你可以定义任意数量的 case */</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span> : <span class=\"comment\">/* 可选 */</span></span><br><span class=\"line\">       statement(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fibonacci</span><span class=\"params\">(c, quit <span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tx, y := <span class=\"number\">1</span>, <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">select</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> c &lt;- x:</span><br><span class=\"line\">                x, y = y, x+y</span><br><span class=\"line\">            <span class=\"keyword\">case</span> &lt;-quit:</span><br><span class=\"line\">                fmt.Println(<span class=\"string\">&quot;quit&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tc := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\">\tquit := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"keyword\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">go</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++ &#123;</span><br><span class=\"line\">\t\t\tfmt.Println(&lt;-c)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tquit &lt;- <span class=\"number\">0</span></span><br><span class=\"line\">\t&#125;()</span><br><span class=\"line\"></span><br><span class=\"line\">\tfibonacci(c, quit)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果,自己品<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">5</span><br><span class=\"line\">8</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure></p>"},{"title":"go语言循环语句","date":"2020-09-23T05:48:29.000Z","_content":"# for循环\n## 基础语法\n1. 和 C 语言的 for 一样：\n\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n        sum := 0\n        for i := 0; i <= 10; i++ {\n                sum += i\n        }\n        fmt.Println(sum)\n}\n```\n<!-- more -->\n\n2. 和 C 的 while 一样：\n\n```go\npackage main\nimport \"fmt\"\n\nfunc main() {\n        sum := 1\n        for sum <= 10{\n                sum += sum\n        }\n        fmt.Println(sum)\n}\n```\n\n3. 和 C 的 for(;;) 一样：\n\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n        sum := 0\n        for {\n            sum++ // 无限循环下去\n        }\n        fmt.Println(sum) // 无法输出\n}\n```\n\n## For-each range 循环\n这种格式的循环可以对字符串、数组、切片等进行迭代输出元素。\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n        strings := []string{\"google\", \"runoob\"}\n        for i, s := range strings {\n                fmt.Println(i, s)\n        }\n\n        numbers := [6]int{1, 2, 3, 5} \n        for i,x:= range numbers {\n                fmt.Printf(\"第 %d 位 x 的值 = %d\\n\", i,x)\n        }  \n}\n```\n\n# 循环控制语句\n## break语句\n### Go 语言中 break 语句用于以下两方面：\n* 用于循环语句中跳出循环，并开始执行循环之后的语句。\n  （在多重循环中，可以用标号 label 标出想 break 的循环。）\n* break 在 switch（开关语句）中在执行一条 case 后跳出语句的作用。\n\n### label标号举例\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n\n    // 不使用标记\n    fmt.Println(\"---- break ----\")\n    for i := 1; i <= 3; i++ {\n        fmt.Printf(\"i: %d\\n\", i)\n                for i2 := 11; i2 <= 13; i2++ {\n                        fmt.Printf(\"i2: %d\\n\", i2)\n                        break //跳出最近一层循环\n                }\n        }\n\n    // 使用标记\n    fmt.Println(\"---- break label ----\")\n    re:\n        for i := 1; i <= 3; i++ {\n            fmt.Printf(\"i: %d\\n\", i)\n            for i2 := 11; i2 <= 13; i2++ {\n                fmt.Printf(\"i2: %d\\n\", i2)\n                break re  //直接结束re语句\n            }\n        }\n}\n```\n\n## continue 语句\n### 使用情况\n* for 循环中，执行 continue 语句会触发 for 增量语句的执行。\n* 在多重循环中，可以用标号 label 标出想 continue 的循环。\n\n### 举例\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n    // 不使用标记\n    fmt.Println(\"---- continue ---- \")\n    for i := 1; i <= 3; i++ {\n        fmt.Printf(\"i: %d\\n\", i)\n            for i2 := 11; i2 <= 13; i2++ {\n                fmt.Printf(\"i2: %d\\n\", i2)\n                continue  //i2++\n            }\n    }\n\n    // 使用标记\n    fmt.Println(\"---- continue label ----\")\n    re:\n        for i := 1; i <= 3; i++ {\n            fmt.Printf(\"i: %d\\n\", i)\n                for i2 := 11; i2 <= 13; i2++ {\n                    fmt.Printf(\"i2: %d\\n\", i2)\n                    continue re //i++\n                }\n        }\n}\n```\n\n## goto语句\nGo 语言的 goto 语句可以无条件地转移到过程中指定的行。\n### 举例\ngoto配合label LOOP使用，相当于for配合continue\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n   /* 定义局部变量 */\n   var a int = 10\n\n   /* 循环 */\n   LOOP: for a < 20 {\n      if a == 15 {\n         /* 跳过迭代 */\n         a = a + 1\n         goto LOOP\n      }\n      fmt.Printf(\"a的值为 : %d\\n\", a)\n      a++     \n   }  \n}\n```","source":"_posts/go-7xunhuan.md","raw":"---\ntitle: go语言循环语句\ndate: 2020-09-23 13:48:29\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# for循环\n## 基础语法\n1. 和 C 语言的 for 一样：\n\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n        sum := 0\n        for i := 0; i <= 10; i++ {\n                sum += i\n        }\n        fmt.Println(sum)\n}\n```\n<!-- more -->\n\n2. 和 C 的 while 一样：\n\n```go\npackage main\nimport \"fmt\"\n\nfunc main() {\n        sum := 1\n        for sum <= 10{\n                sum += sum\n        }\n        fmt.Println(sum)\n}\n```\n\n3. 和 C 的 for(;;) 一样：\n\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n        sum := 0\n        for {\n            sum++ // 无限循环下去\n        }\n        fmt.Println(sum) // 无法输出\n}\n```\n\n## For-each range 循环\n这种格式的循环可以对字符串、数组、切片等进行迭代输出元素。\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n        strings := []string{\"google\", \"runoob\"}\n        for i, s := range strings {\n                fmt.Println(i, s)\n        }\n\n        numbers := [6]int{1, 2, 3, 5} \n        for i,x:= range numbers {\n                fmt.Printf(\"第 %d 位 x 的值 = %d\\n\", i,x)\n        }  \n}\n```\n\n# 循环控制语句\n## break语句\n### Go 语言中 break 语句用于以下两方面：\n* 用于循环语句中跳出循环，并开始执行循环之后的语句。\n  （在多重循环中，可以用标号 label 标出想 break 的循环。）\n* break 在 switch（开关语句）中在执行一条 case 后跳出语句的作用。\n\n### label标号举例\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n\n    // 不使用标记\n    fmt.Println(\"---- break ----\")\n    for i := 1; i <= 3; i++ {\n        fmt.Printf(\"i: %d\\n\", i)\n                for i2 := 11; i2 <= 13; i2++ {\n                        fmt.Printf(\"i2: %d\\n\", i2)\n                        break //跳出最近一层循环\n                }\n        }\n\n    // 使用标记\n    fmt.Println(\"---- break label ----\")\n    re:\n        for i := 1; i <= 3; i++ {\n            fmt.Printf(\"i: %d\\n\", i)\n            for i2 := 11; i2 <= 13; i2++ {\n                fmt.Printf(\"i2: %d\\n\", i2)\n                break re  //直接结束re语句\n            }\n        }\n}\n```\n\n## continue 语句\n### 使用情况\n* for 循环中，执行 continue 语句会触发 for 增量语句的执行。\n* 在多重循环中，可以用标号 label 标出想 continue 的循环。\n\n### 举例\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n    // 不使用标记\n    fmt.Println(\"---- continue ---- \")\n    for i := 1; i <= 3; i++ {\n        fmt.Printf(\"i: %d\\n\", i)\n            for i2 := 11; i2 <= 13; i2++ {\n                fmt.Printf(\"i2: %d\\n\", i2)\n                continue  //i2++\n            }\n    }\n\n    // 使用标记\n    fmt.Println(\"---- continue label ----\")\n    re:\n        for i := 1; i <= 3; i++ {\n            fmt.Printf(\"i: %d\\n\", i)\n                for i2 := 11; i2 <= 13; i2++ {\n                    fmt.Printf(\"i2: %d\\n\", i2)\n                    continue re //i++\n                }\n        }\n}\n```\n\n## goto语句\nGo 语言的 goto 语句可以无条件地转移到过程中指定的行。\n### 举例\ngoto配合label LOOP使用，相当于for配合continue\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n   /* 定义局部变量 */\n   var a int = 10\n\n   /* 循环 */\n   LOOP: for a < 20 {\n      if a == 15 {\n         /* 跳过迭代 */\n         a = a + 1\n         goto LOOP\n      }\n      fmt.Printf(\"a的值为 : %d\\n\", a)\n      a++     \n   }  \n}\n```","slug":"go-7xunhuan","published":1,"updated":"2020-09-23T08:58:49.368Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hm003pc8pv5w2m0k9n","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h1><h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><ol>\n<li>和 C 语言的 for 一样：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        sum := <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt;= <span class=\"number\">10</span>; i++ &#123;</span><br><span class=\"line\">                sum += i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fmt.Println(sum)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ol>\n<li>和 C 的 while 一样：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        sum := <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> sum &lt;= <span class=\"number\">10</span>&#123;</span><br><span class=\"line\">                sum += sum</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fmt.Println(sum)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>和 C 的 for(;;) 一样：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        sum := <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">            sum++ <span class=\"comment\">// 无限循环下去</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fmt.Println(sum) <span class=\"comment\">// 无法输出</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"For-each-range-循环\"><a href=\"#For-each-range-循环\" class=\"headerlink\" title=\"For-each range 循环\"></a>For-each range 循环</h2><p>这种格式的循环可以对字符串、数组、切片等进行迭代输出元素。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        strings := []<span class=\"keyword\">string</span>&#123;<span class=\"string\">&quot;google&quot;</span>, <span class=\"string\">&quot;runoob&quot;</span>&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, s := <span class=\"keyword\">range</span> strings &#123;</span><br><span class=\"line\">                fmt.Println(i, s)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        numbers := [<span class=\"number\">6</span>]<span class=\"keyword\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>&#125; </span><br><span class=\"line\">        <span class=\"keyword\">for</span> i,x:= <span class=\"keyword\">range</span> numbers &#123;</span><br><span class=\"line\">                fmt.Printf(<span class=\"string\">&quot;第 %d 位 x 的值 = %d\\n&quot;</span>, i,x)</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"循环控制语句\"><a href=\"#循环控制语句\" class=\"headerlink\" title=\"循环控制语句\"></a>循环控制语句</h1><h2 id=\"break语句\"><a href=\"#break语句\" class=\"headerlink\" title=\"break语句\"></a>break语句</h2><h3 id=\"Go-语言中-break-语句用于以下两方面：\"><a href=\"#Go-语言中-break-语句用于以下两方面：\" class=\"headerlink\" title=\"Go 语言中 break 语句用于以下两方面：\"></a>Go 语言中 break 语句用于以下两方面：</h3><ul>\n<li>用于循环语句中跳出循环，并开始执行循环之后的语句。<br>（在多重循环中，可以用标号 label 标出想 break 的循环。）</li>\n<li>break 在 switch（开关语句）中在执行一条 case 后跳出语句的作用。</li>\n</ul>\n<h3 id=\"label标号举例\"><a href=\"#label标号举例\" class=\"headerlink\" title=\"label标号举例\"></a>label标号举例</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 不使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- break ----&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">        fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                        fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                        <span class=\"keyword\">break</span> <span class=\"comment\">//跳出最近一层循环</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- break label ----&quot;</span>)</span><br><span class=\"line\">    re:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                <span class=\"keyword\">break</span> re  <span class=\"comment\">//直接结束re语句</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"continue-语句\"><a href=\"#continue-语句\" class=\"headerlink\" title=\"continue 语句\"></a>continue 语句</h2><h3 id=\"使用情况\"><a href=\"#使用情况\" class=\"headerlink\" title=\"使用情况\"></a>使用情况</h3><ul>\n<li>for 循环中，执行 continue 语句会触发 for 增量语句的执行。</li>\n<li>在多重循环中，可以用标号 label 标出想 continue 的循环。</li>\n</ul>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 不使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- continue ---- &quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">        fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>  <span class=\"comment\">//i2++</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- continue label ----&quot;</span>)</span><br><span class=\"line\">    re:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                    fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span> re <span class=\"comment\">//i++</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"goto语句\"><a href=\"#goto语句\" class=\"headerlink\" title=\"goto语句\"></a>goto语句</h2><p>Go 语言的 goto 语句可以无条件地转移到过程中指定的行。</p>\n<h3 id=\"举例-1\"><a href=\"#举例-1\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>goto配合label LOOP使用，相当于for配合continue<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 定义局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> a <span class=\"keyword\">int</span> = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 循环 */</span></span><br><span class=\"line\">   LOOP: <span class=\"keyword\">for</span> a &lt; <span class=\"number\">20</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> a == <span class=\"number\">15</span> &#123;</span><br><span class=\"line\">         <span class=\"comment\">/* 跳过迭代 */</span></span><br><span class=\"line\">         a = a + <span class=\"number\">1</span></span><br><span class=\"line\">         <span class=\"keyword\">goto</span> LOOP</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      fmt.Printf(<span class=\"string\">&quot;a的值为 : %d\\n&quot;</span>, a)</span><br><span class=\"line\">      a++     </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2218,"excerpt":"<h1 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h1><h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><ol>\n<li>和 C 语言的 for 一样：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        sum := <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt;= <span class=\"number\">10</span>; i++ &#123;</span><br><span class=\"line\">                sum += i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fmt.Println(sum)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<ol>\n<li>和 C 的 while 一样：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        sum := <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> sum &lt;= <span class=\"number\">10</span>&#123;</span><br><span class=\"line\">                sum += sum</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fmt.Println(sum)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>和 C 的 for(;;) 一样：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        sum := <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">            sum++ <span class=\"comment\">// 无限循环下去</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fmt.Println(sum) <span class=\"comment\">// 无法输出</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"For-each-range-循环\"><a href=\"#For-each-range-循环\" class=\"headerlink\" title=\"For-each range 循环\"></a>For-each range 循环</h2><p>这种格式的循环可以对字符串、数组、切片等进行迭代输出元素。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        strings := []<span class=\"keyword\">string</span>&#123;<span class=\"string\">&quot;google&quot;</span>, <span class=\"string\">&quot;runoob&quot;</span>&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, s := <span class=\"keyword\">range</span> strings &#123;</span><br><span class=\"line\">                fmt.Println(i, s)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        numbers := [<span class=\"number\">6</span>]<span class=\"keyword\">int</span>&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>&#125; </span><br><span class=\"line\">        <span class=\"keyword\">for</span> i,x:= <span class=\"keyword\">range</span> numbers &#123;</span><br><span class=\"line\">                fmt.Printf(<span class=\"string\">&quot;第 %d 位 x 的值 = %d\\n&quot;</span>, i,x)</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"循环控制语句\"><a href=\"#循环控制语句\" class=\"headerlink\" title=\"循环控制语句\"></a>循环控制语句</h1><h2 id=\"break语句\"><a href=\"#break语句\" class=\"headerlink\" title=\"break语句\"></a>break语句</h2><h3 id=\"Go-语言中-break-语句用于以下两方面：\"><a href=\"#Go-语言中-break-语句用于以下两方面：\" class=\"headerlink\" title=\"Go 语言中 break 语句用于以下两方面：\"></a>Go 语言中 break 语句用于以下两方面：</h3><ul>\n<li>用于循环语句中跳出循环，并开始执行循环之后的语句。<br>（在多重循环中，可以用标号 label 标出想 break 的循环。）</li>\n<li>break 在 switch（开关语句）中在执行一条 case 后跳出语句的作用。</li>\n</ul>\n<h3 id=\"label标号举例\"><a href=\"#label标号举例\" class=\"headerlink\" title=\"label标号举例\"></a>label标号举例</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 不使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- break ----&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">        fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                        fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                        <span class=\"keyword\">break</span> <span class=\"comment\">//跳出最近一层循环</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- break label ----&quot;</span>)</span><br><span class=\"line\">    re:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                <span class=\"keyword\">break</span> re  <span class=\"comment\">//直接结束re语句</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"continue-语句\"><a href=\"#continue-语句\" class=\"headerlink\" title=\"continue 语句\"></a>continue 语句</h2><h3 id=\"使用情况\"><a href=\"#使用情况\" class=\"headerlink\" title=\"使用情况\"></a>使用情况</h3><ul>\n<li>for 循环中，执行 continue 语句会触发 for 增量语句的执行。</li>\n<li>在多重循环中，可以用标号 label 标出想 continue 的循环。</li>\n</ul>\n<h3 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 不使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- continue ---- &quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">        fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>  <span class=\"comment\">//i2++</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用标记</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;---- continue label ----&quot;</span>)</span><br><span class=\"line\">    re:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i := <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++ &#123;</span><br><span class=\"line\">            fmt.Printf(<span class=\"string\">&quot;i: %d\\n&quot;</span>, i)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> i2 := <span class=\"number\">11</span>; i2 &lt;= <span class=\"number\">13</span>; i2++ &#123;</span><br><span class=\"line\">                    fmt.Printf(<span class=\"string\">&quot;i2: %d\\n&quot;</span>, i2)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span> re <span class=\"comment\">//i++</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"goto语句\"><a href=\"#goto语句\" class=\"headerlink\" title=\"goto语句\"></a>goto语句</h2><p>Go 语言的 goto 语句可以无条件地转移到过程中指定的行。</p>\n<h3 id=\"举例-1\"><a href=\"#举例-1\" class=\"headerlink\" title=\"举例\"></a>举例</h3><p>goto配合label LOOP使用，相当于for配合continue<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 定义局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> a <span class=\"keyword\">int</span> = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 循环 */</span></span><br><span class=\"line\">   LOOP: <span class=\"keyword\">for</span> a &lt; <span class=\"number\">20</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> a == <span class=\"number\">15</span> &#123;</span><br><span class=\"line\">         <span class=\"comment\">/* 跳过迭代 */</span></span><br><span class=\"line\">         a = a + <span class=\"number\">1</span></span><br><span class=\"line\">         <span class=\"keyword\">goto</span> LOOP</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      fmt.Printf(<span class=\"string\">&quot;a的值为 : %d\\n&quot;</span>, a)</span><br><span class=\"line\">      a++     </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"go语言数组","date":"2020-09-24T08:01:14.000Z","_content":"# 声明数组\nGo 语言数组声明需要指定元素类型及元素个数，语法格式如下：\n```go\nvar variable_name [SIZE] variable_type\n```\n以上为一维数组的定义方式。例如以下定义了数组 balance 长度为 10 类型为 float32：\n```go\nvar balance [10] float32\n```\n<!-- more -->\n\n# 初始化数组\n```go\nvar balance = [5]float32{1000.0, 2.0, 3.4, 7.0, 50.0}\n//忽略 [] 中的数字不设置数组大小\n var balance = [...]float32{1000.0, 2.0, 3.4, 7.0, 50.0}\n ```\n\n# 二维数组\n## 定义\n二维数组是最简单的多维数组，二维数组本质上是由一维数组组成的。二维数组定义方式如下：\n```go\nvar arrayName [ x ][ y ] variable_type\n```\n## 初始化\n多维数组可通过大括号来初始值。以下实例为一个 3 行 4 列的二维数组：\n```go\na = [3][4]int{  \n {0, 1, 2, 3} ,   /*  第一行索引为 0 */\n {4, 5, 6, 7} ,   /*  第二行索引为 1 */\n {8, 9, 10, 11},   /* 第三行索引为 2 */\n}\n```\n\n# 向函数传数组\n1. 形参设定数组大小：`void myFunction(param [10]int)`\n\n2. 形参未设定数组大小：`void myFunction(param []int)`","source":"_posts/go-9array.md","raw":"---\ntitle: go语言数组\ndate: 2020-09-24 16:01:14\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# 声明数组\nGo 语言数组声明需要指定元素类型及元素个数，语法格式如下：\n```go\nvar variable_name [SIZE] variable_type\n```\n以上为一维数组的定义方式。例如以下定义了数组 balance 长度为 10 类型为 float32：\n```go\nvar balance [10] float32\n```\n<!-- more -->\n\n# 初始化数组\n```go\nvar balance = [5]float32{1000.0, 2.0, 3.4, 7.0, 50.0}\n//忽略 [] 中的数字不设置数组大小\n var balance = [...]float32{1000.0, 2.0, 3.4, 7.0, 50.0}\n ```\n\n# 二维数组\n## 定义\n二维数组是最简单的多维数组，二维数组本质上是由一维数组组成的。二维数组定义方式如下：\n```go\nvar arrayName [ x ][ y ] variable_type\n```\n## 初始化\n多维数组可通过大括号来初始值。以下实例为一个 3 行 4 列的二维数组：\n```go\na = [3][4]int{  \n {0, 1, 2, 3} ,   /*  第一行索引为 0 */\n {4, 5, 6, 7} ,   /*  第二行索引为 1 */\n {8, 9, 10, 11},   /* 第三行索引为 2 */\n}\n```\n\n# 向函数传数组\n1. 形参设定数组大小：`void myFunction(param [10]int)`\n\n2. 形参未设定数组大小：`void myFunction(param []int)`","slug":"go-9array","published":1,"updated":"2020-09-24T08:10:41.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hn003rc8pv9fho8l90","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"声明数组\"><a href=\"#声明数组\" class=\"headerlink\" title=\"声明数组\"></a>声明数组</h1><p>Go 语言数组声明需要指定元素类型及元素个数，语法格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> variable_name [SIZE] variable_type</span><br></pre></td></tr></table></figure><br>以上为一维数组的定义方式。例如以下定义了数组 balance 长度为 10 类型为 float32：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> balance [<span class=\"number\">10</span>] <span class=\"keyword\">float32</span></span><br></pre></td></tr></table></figure><br><a id=\"more\"></a></p>\n<h1 id=\"初始化数组\"><a href=\"#初始化数组\" class=\"headerlink\" title=\"初始化数组\"></a>初始化数组</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> balance = [<span class=\"number\">5</span>]<span class=\"keyword\">float32</span>&#123;<span class=\"number\">1000.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.4</span>, <span class=\"number\">7.0</span>, <span class=\"number\">50.0</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">//忽略 [] 中的数字不设置数组大小</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> balance = [...]<span class=\"keyword\">float32</span>&#123;<span class=\"number\">1000.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.4</span>, <span class=\"number\">7.0</span>, <span class=\"number\">50.0</span>&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"二维数组\"><a href=\"#二维数组\" class=\"headerlink\" title=\"二维数组\"></a>二维数组</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>二维数组是最简单的多维数组，二维数组本质上是由一维数组组成的。二维数组定义方式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arrayName [ x ][ y ] variable_type</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>多维数组可通过大括号来初始值。以下实例为一个 3 行 4 列的二维数组：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">3</span>][<span class=\"number\">4</span>]<span class=\"keyword\">int</span>&#123;  </span><br><span class=\"line\"> &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125; ,   <span class=\"comment\">/*  第一行索引为 0 */</span></span><br><span class=\"line\"> &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>&#125; ,   <span class=\"comment\">/*  第二行索引为 1 */</span></span><br><span class=\"line\"> &#123;<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>&#125;,   <span class=\"comment\">/* 第三行索引为 2 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"向函数传数组\"><a href=\"#向函数传数组\" class=\"headerlink\" title=\"向函数传数组\"></a>向函数传数组</h1><ol>\n<li><p>形参设定数组大小：<code>void myFunction(param [10]int)</code></p>\n</li>\n<li><p>形参未设定数组大小：<code>void myFunction(param []int)</code></p>\n</li>\n</ol>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":592,"excerpt":"<h1 id=\"声明数组\"><a href=\"#声明数组\" class=\"headerlink\" title=\"声明数组\"></a>声明数组</h1><p>Go 语言数组声明需要指定元素类型及元素个数，语法格式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> variable_name [SIZE] variable_type</span><br></pre></td></tr></table></figure><br>以上为一维数组的定义方式。例如以下定义了数组 balance 长度为 10 类型为 float32：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> balance [<span class=\"number\">10</span>] <span class=\"keyword\">float32</span></span><br></pre></td></tr></table></figure><br></p>","more":"<p></p>\n<h1 id=\"初始化数组\"><a href=\"#初始化数组\" class=\"headerlink\" title=\"初始化数组\"></a>初始化数组</h1><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> balance = [<span class=\"number\">5</span>]<span class=\"keyword\">float32</span>&#123;<span class=\"number\">1000.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.4</span>, <span class=\"number\">7.0</span>, <span class=\"number\">50.0</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">//忽略 [] 中的数字不设置数组大小</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> balance = [...]<span class=\"keyword\">float32</span>&#123;<span class=\"number\">1000.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.4</span>, <span class=\"number\">7.0</span>, <span class=\"number\">50.0</span>&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"二维数组\"><a href=\"#二维数组\" class=\"headerlink\" title=\"二维数组\"></a>二维数组</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>二维数组是最简单的多维数组，二维数组本质上是由一维数组组成的。二维数组定义方式如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arrayName [ x ][ y ] variable_type</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>多维数组可通过大括号来初始值。以下实例为一个 3 行 4 列的二维数组：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">3</span>][<span class=\"number\">4</span>]<span class=\"keyword\">int</span>&#123;  </span><br><span class=\"line\"> &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125; ,   <span class=\"comment\">/*  第一行索引为 0 */</span></span><br><span class=\"line\"> &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>&#125; ,   <span class=\"comment\">/*  第二行索引为 1 */</span></span><br><span class=\"line\"> &#123;<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>&#125;,   <span class=\"comment\">/* 第三行索引为 2 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"向函数传数组\"><a href=\"#向函数传数组\" class=\"headerlink\" title=\"向函数传数组\"></a>向函数传数组</h1><ol>\n<li><p>形参设定数组大小：<code>void myFunction(param [10]int)</code></p>\n</li>\n<li><p>形参未设定数组大小：<code>void myFunction(param []int)</code></p>\n</li>\n</ol>"},{"title":"go语言函数","date":"2020-09-23T10:48:58.000Z","_content":"# 函数定义\n## Go 语言函数定义格式如下：\n```go\nfunc function_name( [parameter list] ) [return_types] {\n   函数体\n}\n```\n<!-- more -->\n\n## 函数定义解析：\n\n* func：函数由 func 开始声明\n* function_name：函数名称，函数名和参数列表一起构成了函数签名。\n* parameter list：参数列表，参数就像一个占位符，当函数被调用时，你可以将值传递给参数，这个值被称为实际参数。参数列表指定的是参数类型、顺序、及参数个数。参数是可选的，也就是说函数也可以不包含参数。\n* return_types：返回类型，函数返回一列值。return_types 是该列值的数据类型。有些功能不需要返回值，这种情况下 return_types 不是必须的。\n* 函数体：函数定义的代码集合。\n\n## 举例\n以下实例为 max() 函数的代码，该函数传入两个整型参数 num1 和 num2，并返回这两个参数的最大值：\n```go\n/* 函数返回两个数的最大值 */\nfunc max(num1, num2 int) int {\n   /* 声明局部变量 */\n   var result int\n\n   if (num1 > num2) {\n      result = num1\n   } else {\n      result = num2\n   }\n   return result \n}\n```\n\n## 函数调用\n当创建函数时，你定义了函数需要做什么，通过调用该函数来执行指定任务。\n调用函数，向函数传递参数，并返回值，例如：\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n   /* 定义局部变量 */\n   var a int = 100\n   var b int = 200\n   var ret int\n\n   /* 调用函数并返回最大值 */\n   ret = max(a, b)\n\n   fmt.Printf( \"最大值是 : %d\\n\", ret )\n}\n\n/* 函数返回两个数的最大值 */\nfunc max(num1, num2 int) int {\n   /* 定义局部变量 */\n   var result int\n\n   if (num1 > num2) {\n      result = num1\n   } else {\n      result = num2\n   }\n   return result \n}\n```\n\n## 函数返回多个值\n```go\nfunc swap(x, y string) (string, string) {\n   return y, x\n}\n```\n\n# 函数参数\n## 值传递\n传递是指在调用函数时将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。\n\n## 引用传递\n引用传递是指在调用函数时将实际参数的地址传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。\n```go\n/* 定义交换值函数*/\nfunc swap(x *int, y *int) {\n   var temp int\n   temp = *x    /* 保持 x 地址上的值 */\n   *x = *y      /* 将 y 值赋给 x */\n   *y = temp    /* 将 temp 值赋给 y */\n}\n\n//调用\nswap(&a, &b)\n```\n\n# 函数用法\n## 函数作为另外一个函数的实参\t\n函数定义后可作为另外一个函数的实参数传入\n```go\nfunc main(){\n   /* 声明函数变量 */\n   getSquareRoot := func(x float64) float64 {\n      return math.Sqrt(x)\n   }\n\n   /* 使用函数 */\n   fmt.Println(getSquareRoot(9))\n\n}\n```\n\n## 闭包\t\n闭包是匿名函数，可在动态编程中使用。\n以下实例中，我们创建了函数 getSequence() ，返回另外一个函数。该函数的目的是在闭包中递增 i 变量，代码如下：\n```go\npackage main\nimport \"fmt\"\nfunc getSequence() func() int {\n   i:=0\n   return func() int {\n      i+=1\n     return i  \n   }\n}\n\nfunc main(){\n   /* nextNumber 为一个函数，函数 i 为 0 */\n   nextNumber := getSequence()  \n\n   /* 调用 nextNumber 函数，i 变量自增 1 并返回 */\n   fmt.Println(nextNumber())\n   fmt.Println(nextNumber())\n   fmt.Println(nextNumber())\n   \n   /* 创建新的函数 nextNumber1，并查看结果 */\n   nextNumber1 := getSequence()  \n   fmt.Println(nextNumber1())\n   fmt.Println(nextNumber1())\n}\n```\n\n## 方法\n方法就是一个包含了接受者的函数\n```go\nfunc (variable_name variable_data_type) function_name() [return_type]{\n   /* 函数体*/\n}\n```\n下面定义一个结构体类型和该类型的一个方法：\n```go\npackage main\n\nimport (\n   \"fmt\"  \n)\n\n/* 定义结构体 */\ntype Circle struct {\n  radius float64\n}\n\nfunc main() {\n  var c1 Circle\n  c1.radius = 10.00\n  fmt.Println(\"圆的面积 = \", c1.getArea())\n}\n\n//该 method 属于 Circle 类型对象中的方法\nfunc (c Circle) getArea() float64 {\n  //c.radius 即为 Circle 类型对象中的属性\n  return 3.14 * c.radius * c.radius\n}\n```","source":"_posts/go-8func.md","raw":"---\ntitle: go语言函数\ndate: 2020-09-23 18:48:58\ntags:\n- go语言\ncategories: \n- backend\n- go语言\n---\n# 函数定义\n## Go 语言函数定义格式如下：\n```go\nfunc function_name( [parameter list] ) [return_types] {\n   函数体\n}\n```\n<!-- more -->\n\n## 函数定义解析：\n\n* func：函数由 func 开始声明\n* function_name：函数名称，函数名和参数列表一起构成了函数签名。\n* parameter list：参数列表，参数就像一个占位符，当函数被调用时，你可以将值传递给参数，这个值被称为实际参数。参数列表指定的是参数类型、顺序、及参数个数。参数是可选的，也就是说函数也可以不包含参数。\n* return_types：返回类型，函数返回一列值。return_types 是该列值的数据类型。有些功能不需要返回值，这种情况下 return_types 不是必须的。\n* 函数体：函数定义的代码集合。\n\n## 举例\n以下实例为 max() 函数的代码，该函数传入两个整型参数 num1 和 num2，并返回这两个参数的最大值：\n```go\n/* 函数返回两个数的最大值 */\nfunc max(num1, num2 int) int {\n   /* 声明局部变量 */\n   var result int\n\n   if (num1 > num2) {\n      result = num1\n   } else {\n      result = num2\n   }\n   return result \n}\n```\n\n## 函数调用\n当创建函数时，你定义了函数需要做什么，通过调用该函数来执行指定任务。\n调用函数，向函数传递参数，并返回值，例如：\n```go\npackage main\nimport \"fmt\"\nfunc main() {\n   /* 定义局部变量 */\n   var a int = 100\n   var b int = 200\n   var ret int\n\n   /* 调用函数并返回最大值 */\n   ret = max(a, b)\n\n   fmt.Printf( \"最大值是 : %d\\n\", ret )\n}\n\n/* 函数返回两个数的最大值 */\nfunc max(num1, num2 int) int {\n   /* 定义局部变量 */\n   var result int\n\n   if (num1 > num2) {\n      result = num1\n   } else {\n      result = num2\n   }\n   return result \n}\n```\n\n## 函数返回多个值\n```go\nfunc swap(x, y string) (string, string) {\n   return y, x\n}\n```\n\n# 函数参数\n## 值传递\n传递是指在调用函数时将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。\n\n## 引用传递\n引用传递是指在调用函数时将实际参数的地址传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。\n```go\n/* 定义交换值函数*/\nfunc swap(x *int, y *int) {\n   var temp int\n   temp = *x    /* 保持 x 地址上的值 */\n   *x = *y      /* 将 y 值赋给 x */\n   *y = temp    /* 将 temp 值赋给 y */\n}\n\n//调用\nswap(&a, &b)\n```\n\n# 函数用法\n## 函数作为另外一个函数的实参\t\n函数定义后可作为另外一个函数的实参数传入\n```go\nfunc main(){\n   /* 声明函数变量 */\n   getSquareRoot := func(x float64) float64 {\n      return math.Sqrt(x)\n   }\n\n   /* 使用函数 */\n   fmt.Println(getSquareRoot(9))\n\n}\n```\n\n## 闭包\t\n闭包是匿名函数，可在动态编程中使用。\n以下实例中，我们创建了函数 getSequence() ，返回另外一个函数。该函数的目的是在闭包中递增 i 变量，代码如下：\n```go\npackage main\nimport \"fmt\"\nfunc getSequence() func() int {\n   i:=0\n   return func() int {\n      i+=1\n     return i  \n   }\n}\n\nfunc main(){\n   /* nextNumber 为一个函数，函数 i 为 0 */\n   nextNumber := getSequence()  \n\n   /* 调用 nextNumber 函数，i 变量自增 1 并返回 */\n   fmt.Println(nextNumber())\n   fmt.Println(nextNumber())\n   fmt.Println(nextNumber())\n   \n   /* 创建新的函数 nextNumber1，并查看结果 */\n   nextNumber1 := getSequence()  \n   fmt.Println(nextNumber1())\n   fmt.Println(nextNumber1())\n}\n```\n\n## 方法\n方法就是一个包含了接受者的函数\n```go\nfunc (variable_name variable_data_type) function_name() [return_type]{\n   /* 函数体*/\n}\n```\n下面定义一个结构体类型和该类型的一个方法：\n```go\npackage main\n\nimport (\n   \"fmt\"  \n)\n\n/* 定义结构体 */\ntype Circle struct {\n  radius float64\n}\n\nfunc main() {\n  var c1 Circle\n  c1.radius = 10.00\n  fmt.Println(\"圆的面积 = \", c1.getArea())\n}\n\n//该 method 属于 Circle 类型对象中的方法\nfunc (c Circle) getArea() float64 {\n  //c.radius 即为 Circle 类型对象中的属性\n  return 3.14 * c.radius * c.radius\n}\n```","slug":"go-8func","published":1,"updated":"2020-09-23T11:06:19.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hq003vc8pvcuxa3m3j","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h1><h2 id=\"Go-语言函数定义格式如下：\"><a href=\"#Go-语言函数定义格式如下：\" class=\"headerlink\" title=\"Go 语言函数定义格式如下：\"></a>Go 语言函数定义格式如下：</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">function_name</span><span class=\"params\">( [parameter list] )</span> [<span class=\"title\">return_types</span>]</span> &#123;</span><br><span class=\"line\">   函数体</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"函数定义解析：\"><a href=\"#函数定义解析：\" class=\"headerlink\" title=\"函数定义解析：\"></a>函数定义解析：</h2><ul>\n<li>func：函数由 func 开始声明</li>\n<li>function_name：函数名称，函数名和参数列表一起构成了函数签名。</li>\n<li>parameter list：参数列表，参数就像一个占位符，当函数被调用时，你可以将值传递给参数，这个值被称为实际参数。参数列表指定的是参数类型、顺序、及参数个数。参数是可选的，也就是说函数也可以不包含参数。</li>\n<li>return_types：返回类型，函数返回一列值。return_types 是该列值的数据类型。有些功能不需要返回值，这种情况下 return_types 不是必须的。</li>\n<li>函数体：函数定义的代码集合。</li>\n</ul>\n<h2 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h2><p>以下实例为 max() 函数的代码，该函数传入两个整型参数 num1 和 num2，并返回这两个参数的最大值：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 函数返回两个数的最大值 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(num1, num2 <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 声明局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> result <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (num1 &gt; num2) &#123;</span><br><span class=\"line\">      result = num1</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      result = num2</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> result </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h2><p>当创建函数时，你定义了函数需要做什么，通过调用该函数来执行指定任务。<br>调用函数，向函数传递参数，并返回值，例如：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 定义局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> a <span class=\"keyword\">int</span> = <span class=\"number\">100</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> b <span class=\"keyword\">int</span> = <span class=\"number\">200</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> ret <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 调用函数并返回最大值 */</span></span><br><span class=\"line\">   ret = max(a, b)</span><br><span class=\"line\"></span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;最大值是 : %d\\n&quot;</span>, ret )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 函数返回两个数的最大值 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(num1, num2 <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 定义局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> result <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (num1 &gt; num2) &#123;</span><br><span class=\"line\">      result = num1</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      result = num2</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> result </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数返回多个值\"><a href=\"#函数返回多个值\" class=\"headerlink\" title=\"函数返回多个值\"></a>函数返回多个值</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swap</span><span class=\"params\">(x, y <span class=\"keyword\">string</span>)</span> <span class=\"params\">(<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> y, x</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"函数参数\"><a href=\"#函数参数\" class=\"headerlink\" title=\"函数参数\"></a>函数参数</h1><h2 id=\"值传递\"><a href=\"#值传递\" class=\"headerlink\" title=\"值传递\"></a>值传递</h2><p>传递是指在调用函数时将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。</p>\n<h2 id=\"引用传递\"><a href=\"#引用传递\" class=\"headerlink\" title=\"引用传递\"></a>引用传递</h2><p>引用传递是指在调用函数时将实际参数的地址传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 定义交换值函数*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swap</span><span class=\"params\">(x *<span class=\"keyword\">int</span>, y *<span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> temp <span class=\"keyword\">int</span></span><br><span class=\"line\">   temp = *x    <span class=\"comment\">/* 保持 x 地址上的值 */</span></span><br><span class=\"line\">   *x = *y      <span class=\"comment\">/* 将 y 值赋给 x */</span></span><br><span class=\"line\">   *y = temp    <span class=\"comment\">/* 将 temp 值赋给 y */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\">swap(&amp;a, &amp;b)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"函数用法\"><a href=\"#函数用法\" class=\"headerlink\" title=\"函数用法\"></a>函数用法</h1><h2 id=\"函数作为另外一个函数的实参\"><a href=\"#函数作为另外一个函数的实参\" class=\"headerlink\" title=\"函数作为另外一个函数的实参\"></a>函数作为另外一个函数的实参</h2><p>函数定义后可作为另外一个函数的实参数传入<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 声明函数变量 */</span></span><br><span class=\"line\">   getSquareRoot := <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(x <span class=\"keyword\">float64</span>)</span> <span class=\"title\">float64</span></span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> math.Sqrt(x)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 使用函数 */</span></span><br><span class=\"line\">   fmt.Println(getSquareRoot(<span class=\"number\">9</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>闭包是匿名函数，可在动态编程中使用。<br>以下实例中，我们创建了函数 getSequence() ，返回另外一个函数。该函数的目的是在闭包中递增 i 变量，代码如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getSequence</span><span class=\"params\">()</span> <span class=\"title\">func</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">   i:=<span class=\"number\">0</span></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">      i+=<span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"keyword\">return</span> i  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* nextNumber 为一个函数，函数 i 为 0 */</span></span><br><span class=\"line\">   nextNumber := getSequence()  </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 调用 nextNumber 函数，i 变量自增 1 并返回 */</span></span><br><span class=\"line\">   fmt.Println(nextNumber())</span><br><span class=\"line\">   fmt.Println(nextNumber())</span><br><span class=\"line\">   fmt.Println(nextNumber())</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">/* 创建新的函数 nextNumber1，并查看结果 */</span></span><br><span class=\"line\">   nextNumber1 := getSequence()  </span><br><span class=\"line\">   fmt.Println(nextNumber1())</span><br><span class=\"line\">   fmt.Println(nextNumber1())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>方法就是一个包含了接受者的函数<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(variable_name variable_data_type)</span> <span class=\"title\">function_name</span><span class=\"params\">()</span> [<span class=\"title\">return_type</span>]</span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 函数体*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>下面定义一个结构体类型和该类型的一个方法：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">   <span class=\"string\">&quot;fmt&quot;</span>  </span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 定义结构体 */</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Circle <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">  radius <span class=\"keyword\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c1 Circle</span><br><span class=\"line\">  c1.radius = <span class=\"number\">10.00</span></span><br><span class=\"line\">  fmt.Println(<span class=\"string\">&quot;圆的面积 = &quot;</span>, c1.getArea())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//该 method 属于 Circle 类型对象中的方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(c Circle)</span> <span class=\"title\">getArea</span><span class=\"params\">()</span> <span class=\"title\">float64</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//c.radius 即为 Circle 类型对象中的属性</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">3.14</span> * c.radius * c.radius</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2441,"excerpt":"<h1 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h1><h2 id=\"Go-语言函数定义格式如下：\"><a href=\"#Go-语言函数定义格式如下：\" class=\"headerlink\" title=\"Go 语言函数定义格式如下：\"></a>Go 语言函数定义格式如下：</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">function_name</span><span class=\"params\">( [parameter list] )</span> [<span class=\"title\">return_types</span>]</span> &#123;</span><br><span class=\"line\">   函数体</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"函数定义解析：\"><a href=\"#函数定义解析：\" class=\"headerlink\" title=\"函数定义解析：\"></a>函数定义解析：</h2><ul>\n<li>func：函数由 func 开始声明</li>\n<li>function_name：函数名称，函数名和参数列表一起构成了函数签名。</li>\n<li>parameter list：参数列表，参数就像一个占位符，当函数被调用时，你可以将值传递给参数，这个值被称为实际参数。参数列表指定的是参数类型、顺序、及参数个数。参数是可选的，也就是说函数也可以不包含参数。</li>\n<li>return_types：返回类型，函数返回一列值。return_types 是该列值的数据类型。有些功能不需要返回值，这种情况下 return_types 不是必须的。</li>\n<li>函数体：函数定义的代码集合。</li>\n</ul>\n<h2 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h2><p>以下实例为 max() 函数的代码，该函数传入两个整型参数 num1 和 num2，并返回这两个参数的最大值：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 函数返回两个数的最大值 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(num1, num2 <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 声明局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> result <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (num1 &gt; num2) &#123;</span><br><span class=\"line\">      result = num1</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      result = num2</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> result </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h2><p>当创建函数时，你定义了函数需要做什么，通过调用该函数来执行指定任务。<br>调用函数，向函数传递参数，并返回值，例如：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 定义局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> a <span class=\"keyword\">int</span> = <span class=\"number\">100</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> b <span class=\"keyword\">int</span> = <span class=\"number\">200</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> ret <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 调用函数并返回最大值 */</span></span><br><span class=\"line\">   ret = max(a, b)</span><br><span class=\"line\"></span><br><span class=\"line\">   fmt.Printf( <span class=\"string\">&quot;最大值是 : %d\\n&quot;</span>, ret )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 函数返回两个数的最大值 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(num1, num2 <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 定义局部变量 */</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> result <span class=\"keyword\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (num1 &gt; num2) &#123;</span><br><span class=\"line\">      result = num1</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      result = num2</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> result </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数返回多个值\"><a href=\"#函数返回多个值\" class=\"headerlink\" title=\"函数返回多个值\"></a>函数返回多个值</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swap</span><span class=\"params\">(x, y <span class=\"keyword\">string</span>)</span> <span class=\"params\">(<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> y, x</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"函数参数\"><a href=\"#函数参数\" class=\"headerlink\" title=\"函数参数\"></a>函数参数</h1><h2 id=\"值传递\"><a href=\"#值传递\" class=\"headerlink\" title=\"值传递\"></a>值传递</h2><p>传递是指在调用函数时将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。</p>\n<h2 id=\"引用传递\"><a href=\"#引用传递\" class=\"headerlink\" title=\"引用传递\"></a>引用传递</h2><p>引用传递是指在调用函数时将实际参数的地址传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 定义交换值函数*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swap</span><span class=\"params\">(x *<span class=\"keyword\">int</span>, y *<span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> temp <span class=\"keyword\">int</span></span><br><span class=\"line\">   temp = *x    <span class=\"comment\">/* 保持 x 地址上的值 */</span></span><br><span class=\"line\">   *x = *y      <span class=\"comment\">/* 将 y 值赋给 x */</span></span><br><span class=\"line\">   *y = temp    <span class=\"comment\">/* 将 temp 值赋给 y */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\">swap(&amp;a, &amp;b)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"函数用法\"><a href=\"#函数用法\" class=\"headerlink\" title=\"函数用法\"></a>函数用法</h1><h2 id=\"函数作为另外一个函数的实参\"><a href=\"#函数作为另外一个函数的实参\" class=\"headerlink\" title=\"函数作为另外一个函数的实参\"></a>函数作为另外一个函数的实参</h2><p>函数定义后可作为另外一个函数的实参数传入<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 声明函数变量 */</span></span><br><span class=\"line\">   getSquareRoot := <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(x <span class=\"keyword\">float64</span>)</span> <span class=\"title\">float64</span></span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> math.Sqrt(x)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 使用函数 */</span></span><br><span class=\"line\">   fmt.Println(getSquareRoot(<span class=\"number\">9</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>闭包是匿名函数，可在动态编程中使用。<br>以下实例中，我们创建了函数 getSequence() ，返回另外一个函数。该函数的目的是在闭包中递增 i 变量，代码如下：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">getSequence</span><span class=\"params\">()</span> <span class=\"title\">func</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">   i:=<span class=\"number\">0</span></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">      i+=<span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"keyword\">return</span> i  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* nextNumber 为一个函数，函数 i 为 0 */</span></span><br><span class=\"line\">   nextNumber := getSequence()  </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/* 调用 nextNumber 函数，i 变量自增 1 并返回 */</span></span><br><span class=\"line\">   fmt.Println(nextNumber())</span><br><span class=\"line\">   fmt.Println(nextNumber())</span><br><span class=\"line\">   fmt.Println(nextNumber())</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">/* 创建新的函数 nextNumber1，并查看结果 */</span></span><br><span class=\"line\">   nextNumber1 := getSequence()  </span><br><span class=\"line\">   fmt.Println(nextNumber1())</span><br><span class=\"line\">   fmt.Println(nextNumber1())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>方法就是一个包含了接受者的函数<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(variable_name variable_data_type)</span> <span class=\"title\">function_name</span><span class=\"params\">()</span> [<span class=\"title\">return_type</span>]</span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 函数体*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>下面定义一个结构体类型和该类型的一个方法：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">   <span class=\"string\">&quot;fmt&quot;</span>  </span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 定义结构体 */</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Circle <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">  radius <span class=\"keyword\">float64</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c1 Circle</span><br><span class=\"line\">  c1.radius = <span class=\"number\">10.00</span></span><br><span class=\"line\">  fmt.Println(<span class=\"string\">&quot;圆的面积 = &quot;</span>, c1.getArea())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//该 method 属于 Circle 类型对象中的方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(c Circle)</span> <span class=\"title\">getArea</span><span class=\"params\">()</span> <span class=\"title\">float64</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//c.radius 即为 Circle 类型对象中的属性</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">3.14</span> * c.radius * c.radius</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"贯口","date":"2020-09-22T13:33:08.000Z","_content":"> 对口相声中常见的表现形式，也叫“背口”。“贯口”的“贯”字，是一气呵成，一贯到底的意思。常见的段子如《报菜名》《八扇屏 》《地理图》《白事会》都含有大段的贯口。\n> 贯口分为大贯儿和小贯儿两种。大贯儿一般上百句，例如《报菜名》、《地理图》（并称“两大贯儿”）。小贯儿一般十几句到几十句不等，例如《白事会》中就有一些小贯儿。\n<!-- more -->\n\n## 报菜名\n\n蒸羊羔，蒸熊掌，蒸鹿尾儿，烧花鸭，烧雏鸡儿，烧子鹅。\n卤猪卤鸭，酱鸡腊肉，松花小肚儿，晾肉香肠。\n什锦苏盘，熏鸡白肚儿，清蒸八宝-猪，江米酿鸭子。\n罐儿野鸡，罐儿鹌鹑,\n卤什件儿，卤子鹅,山鸡兔脯菜蟒银鱼,清蒸哈什蚂。\n烩鸭丝烩鸭腰烩鸭条,清拌腰丝儿黄心管儿,\n焖白鳝焖黄鳝,豆鼓鲇鱼,锅烧鲤鱼，锅烧鲇鱼，清蒸甲鱼，抓炒鲤鱼,抓炒对虾。\n软炸里脊软炸鸡, \n什锦套肠,麻酥油卷儿熘肘寒尖。\n熘鲜蘑，熘鱼脯儿熘鱼肚儿熘鱼片儿，醋熘肉片儿。\n烩三鲜,烩白蘑，烩鸽子蛋,炒银丝烩鳗鱼,炒白虾炝青蛤,炒面鱼炝芦笋,\n芙蓉燕菜,炒虾仁烩虾仁，烩腰花烩海参，锅烧海参,锅烧白菜,\n炸太耳，炒田鸡，\n桂花翅子，清蒸翅子，清蒸江瑶柱，糖溜芡实米,\n拌鸡丝儿拌肚丝儿，什锦豆腐什锦丁儿，\n糟虾糟蟹糟鱼，糟熘鱼片儿，\n熘蟹肉炒蟹肉，蒸南瓜，爙倭瓜，炒丝瓜，爙冬瓜，\n焖鸡掌,焖鸭掌,焖笋,烩茭白,\n茄干儿涮羊肉,鸭羹,蟹肉羹,是三鲜木樨汤,\n红丸子,白丸子,熘丸子,炸丸子,南涧丸子,木樨丸子,三鲜丸子，四喜丸子，龟炸丸子，豆腐丸子,鲜炸丸子,玉腐丸子，氽丸子,\n一品肉,樱桃肉,马牙肉,红闷肉,黄闷肉，坛子肉，\n糊肉扣肉,松肉厚肉，烧肉烤肉,腊肉白肉,酱豆腐肉,\n红肘子,白肘子,水晶肘子,蜜蜡肘子,酱豆腐肘子\n蒸羊肉,酱羊肉，烧羊肉,烤羊肉，五香羊肉,爆羊肉.\n氽三样儿,爆三样儿,烩银丝，烩散丹,油焖杂碎三鲜鱼翅栗子鸡,尖氽活鲤鱼,是板鸭筒子鸡。\n\n---\n<video src=\"http://file.panjiangtao.cn/baocaiming.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/baocaiming.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n## 八扇屏之莽撞人\n\n　　后汉三国年间，有一位莽撞人。自桃园三结义以来，大爷姓刘名备字玄德，家住大树楼桑。二弟姓关名羽字云长，家住山西蒲州解梁县。三弟姓张名飞字翼德，家住涿州范阳郡。后续四弟，姓赵名云字子龙，家住真定府常山县，百战百胜，号称为常胜将军。\n\n　　只皆因长坂坡前，一场鏖战。那赵云，单枪匹马，闯入曹营。砍倒大蠹两杆，夺槊三条。马落陷坑，堪堪废命。曹孟德，在山头之上观瞧，见一穿白小将，白盔白甲白旗靠，胯下白龙马，掌中亮银枪，实乃一员勇将。\n\n　　当下就有爱将之意。旁有徐庶暗中保护赵云，那徐庶，自进得曹营以来，一语未发。今见赵将军马落陷坑，堪堪废命，口尊丞相，莫非有爱将之意？ 曹操言道，正是。徐庶言道，何不收留此将。\n\n　　曹操闻听，急忙传令，令出山摇动，三军听分明，我要活赵云，不要死子龙。倘有一兵一将 伤损赵将军之性命，八十三万人马，五十一员战将，与他一人抵命。众将闻听，不敢上前，唯有后退。那赵云，一仗怀揣幼主，二仗常胜将军之特勇。\n\n　　杀了个七进七出，这才闯出重围。曹操一见，这样勇将，焉能放走。在后面紧紧追赶。追至在当阳桥前，张飞赶到， 高叫四弟不必惊慌，某家在此，料也无妨！让过赵云的人马，曹操赶到，不见赵云，见一黑脸大汉，立于桥头之上。\n\n　　曹操忙问夏侯憞， 这黑脸大汉，他是何人？夏侯憞道，此乃是张飞，一莽撞人。曹操闻听，大吃一惊。想当初关公在白马坡斩颜良诛文丑之时，曾对某家言道，他有一结拜三弟，姓张名飞字翼德，百万军中取上将之首级如探囊取物，反掌观纹。\n\n　　今日一见，果然英勇，来呀，撤去某家青罗伞盖，观一观莽撞人的武艺如何？青罗伞盖撤下，但见张飞豹头环眼，面如润铁，黑中透亮，亮中透黑。颏下扎里扎沙一部黑钢髯，犹如钢针，恰似铁线。头戴镔铁盔，二龙斗宝，朱缨飘洒，上嵌八宝云罗伞盖，花冠云长。\n\n　　身披锁子大叶连环甲，内衬皂罗袍。足蹬虎头战靴，跨下马，万里烟云兽，掌中丈八蛇矛。立于桥头之上，咬牙切齿，捶胸愤恨。大骂，曹操听真，呔！今有你家张三爷在此，尔或攻，或战或进或退或争或斗，不攻不战不进不退不争不斗，尔乃匹夫之辈。\n\n　　大喊一声，曹兵吓退。大喊二声，顺水横流。大喊三声，把当阳桥吓断。后人有诗赞之曰，长坂桥前救赵云，吓退曹操百万军，姓张名飞字翼德，万古留芳莽撞人。\n\n---\n<video src=\"http://file.panjiangtao.cn/mangzhuangren.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/mangzhuangren.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n## 十八愁\n\n数九寒天，冷风嗖\n年～年春打六九头\n正月十五是个龙灯会，有一对狮～子滚绣球啊\n三月三，王母娘娘蟠桃会\n大闹天宫啊孙猴又把那个仙桃偷\n五月单五是端阳日啊，白蛇许仙不到头\n七月七，传说天河配啊，牛郎织女泪双流\n八月十五啊云遮月，月里的嫦娥～犯～了忧愁\n要说愁，净说愁啊，您听我唱上一回绕口令儿十八愁\n虎也愁，狼也愁\n象也愁，鹿也愁啊\n骡子也愁马也愁\n羊也愁，牛也愁，狗也愁，猪也愁啊\n鸭子也愁鹅也愁\n蛤蟆愁，蛤蜊愁，螃蟹也愁，乌龟愁啊，\n鱼愁虾愁～，各有分由\n虎愁，不敢把那高山下\n狼愁的野心不改耍滑头\n象愁那脸憨皮又厚啊\n鹿也愁，脑袋上七叉八叉地长犄角\n马愁鞴鞍行千里呐，骡子愁得一世休\n羊愁从小把胡子长呐，牛愁愁得犯牛轴\n狗愁改不了那净吃屎呐，猪愁离不开那臭水沟\n鸭子愁呢扁了它的嘴，鹅愁得脑袋上它愁了一个奔儿了头\n蛤蟆愁，长了一身脓疱疥呐，螃蟹愁得净横搂啊\n蛤蜊也愁，闭关自守啊，那乌龟愁得～不敢出头\n那个鱼愁离水不能够走呢，虾米愁得，空枪乱扎～没有准头\n这个绕口令儿最难唱\n我唱～的是\n前门楼子九丈九，四门三桥五牌楼，出了便门儿往东走啊，离城四十到通州\n通州倒有啊，六十六条胡同口\n在里边住～着一个六十六岁刘老六啊，六十六岁六老刘啊，六十六岁的刘老头这么老哥儿仨\n盖了那，六十六间好高楼\n在楼里头有啊，六十六篓桂花油啊\n在篓上面蒙着六～十六匹罗缎绸\n在绸上面绣着六～十六个狮子滚绣球\n在楼外头，栽了那，六十六根儿檀木轴\n在轴上面拴着六～十六头大牤牛\n在牛上面驮着六十六个大马猴\n刘老六六老刘啊刘老头这么老哥仨\n倒坐～在门口啃骨头\n打南边来～了一条狗，这条狗好眼熟啊\n它好像那大～大妈家，大大眉毛、大～大眼睛、大～大鼻子，大大耳朵、大大口啊、大～大妈家的大号挠头狮子狗\n打北边又来一条狗啊，这条狗它也眼熟啊\n它好像那二～大妈妈家、二大眉毛、二～大眼睛、二～大鼻子，二大耳朵、二大口啊、二～大妈家的二号挠头狮子狗\n这两条狗啊抢骨头，它为抢骨～头抢成了仇\n从南头跑到北头，撞倒了\n六十六间好高楼，撞洒～了六十六篓桂花油\n油了六十六匹罗缎绸啊，脏了六～十六个狮～子滚绣球，在楼外头，\n砸倒了，六十六根儿檀木轴啊，砸惊了六十六头大牤牛，砸跑了六～十六个大马猴\n打南边儿来个气～不休，手里头拿了个土坯头它去打狗的头\n也不知气不休的土坯头啊打了狗～的头啊，还是那狗～的头，撞坏～了气不休的土坯头\n打北边儿来了个秃妞妞，手里拿着个油篓口她去套狗～的头啊\n也不知秃妞妞的油篓口啊，套上狗的头啊，还是那狗的头啊，钻进～了秃妞妞的油篓口啊\n刘老六六老刘啊刘老头这么老哥仨\n打跑了狗啊，他盖起来，六～十六间好高楼啊\n收起来六十六篓桂花油，洗干净六～十六匹罗缎绸\n他洗净了，六十六个狮～子滚绣球\n在楼外头，栽起来，六十六棵儿檀木轴\n牵回来六十六头大牤牛，逮回来六～十六个大马猴\n刘老六六老刘啊刘老头这么老哥仨，他又看到那个鸡奔碎米墩漏豆，这个狗啃油篓篓油漏\n鸡不奔这碎米墩不漏豆，这个狗不啃的油篓篓不漏油啊\n绕口令儿最难唱\n我唱～的是，正月里正月正有姐妹二人去逛灯\n大～姑娘名叫粉红女，二～姑娘名叫女粉红啊\n粉红女啊身穿一件粉红袄啊，女粉红她身穿一件袄粉红啊\n粉红女，怀抱～着一瓶粉红酒啊，女粉红她怀抱一瓶酒粉红\n粉红女女粉红啊，姐儿俩来到了无人处啊，推杯换盏饮刘伶\n女粉红喝～了粉红女的粉红酒，粉红女饮了女粉红的酒粉红\n粉红女喝了个酩酊醉，女粉红喝了个醉酩酊\n女粉红见～着粉红女就打，粉红女揪～着女粉红就拧\n女粉红撕～了粉红女的粉红袄，粉红女扯～了女粉红的袄粉红\n姐儿俩打罢停了手啊，自己买线自己缝\n粉红女买～了一条粉红线，女粉红买了那么一条线粉红啊\n粉红女她反缝缝缝粉红袄，女粉红她缝反缝缝袄粉红\n出前门，奔正南\n有一个面铺面门面冲南\n这个面铺挂着个蓝布棉门帘\n摘～了蓝布棉门帘，我敲了敲这个面铺面门面冲南\n挂上个蓝布棉门帘，我瞧了瞧啊，䁖了䁖啊，把了把啊，看了看啊，\n这～个面铺面门还是面冲南\n说出西门～走七步，拾块麂皮补皮裤\n是麂皮补皮裤，不是麂皮不必补我的麂皮裤\n说揭着窗户撕字纸，是字纸撕字纸，不是字纸不必撕字纸，在字纸里\n裹～着一包细银丝，银丝上趴着四千四百四十四个似死似不死的死涩小死虱子皮儿啊\n说我家有个肥净白净八斤鸡，飞到～了张家后院里\n张家后院有个肥净白净八斤狗啊，咬了我的肥净白净八斤鸡\n卖～了他的肥净白净八斤狗啊，赔了我的肥净白净八斤鸡\n鸡登八八登鸡，鸡不登篱～笆，篱笆也不登鸡啊\n说苏州有一个苏胡子，这个湖州有一个胡梳子\n苏州的苏胡子找湖州的胡梳子借梳胡子的梳子梳胡子\n山前住着一个严圆眼，山后边儿住了个严眼圆\n二人山前来比眼\n也不知严圆眼比严眼圆的眼圆，还是严眼圆比严圆眼的圆眼\n山前，住了一个崔粗腿，山后～边儿住了个崔腿粗\n二位山前来比腿，也～不知\n崔粗腿，比崔腿粗的腿粗，还是崔腿粗比崔粗腿的粗腿\n山前有四十四个小狮子，山后有四十四棵死涩柿子树\n山前那四十四个小狮子，吃了山后边儿，四十四棵死涩柿子树的涩柿子\n山前那四十四个小狮子，让山后边儿，四十四棵死涩柿子树的涩柿子给涩死了\n说你会炖我的炖冻豆腐，来炖我的炖冻豆腐\n你不会炖我的炖冻豆腐，比胡炖乱炖假充会炖～炖坏～了我的炖冻豆腐\n说扁担长～板凳宽呐，板凳没有扁担长啊，扁担没有板凳宽\n这个扁担绑在了板凳上，这个板凳不让这个扁担绑在了板凳上\n扁担偏要扁担绑在了板凳上，这个板凳偏不让那个扁担绑在了板凳上\n扁担偏要扁担绑在了板凳上\n闲来没事儿，出趟城西啊\n树～木琅琳呐数高低\n一二三，三二一，一二三四五六七七六五四三二一,\n六五四三二一啊，五四三二一啊，四三二一，三二一啊，二一一呀一个一啊\n我数了半天一棵树，一棵树长着七个枝儿\n一个枝儿结着一样果子， 结～的是那槟子橙子桔子柿子李子栗子梨啊\n这就是绕口令儿，一个小段儿，我祝大家～身体健康～寿比天齐～\n\n---\n<video src=\"http://file.panjiangtao.cn/shibachou.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/shibachou.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>","source":"_posts/guanko.md","raw":"---\ntitle: 贯口\ndate: 2020-09-22 21:33:08\ntags:\n- 贯口\ncategories: \n- 相声\n---\n> 对口相声中常见的表现形式，也叫“背口”。“贯口”的“贯”字，是一气呵成，一贯到底的意思。常见的段子如《报菜名》《八扇屏 》《地理图》《白事会》都含有大段的贯口。\n> 贯口分为大贯儿和小贯儿两种。大贯儿一般上百句，例如《报菜名》、《地理图》（并称“两大贯儿”）。小贯儿一般十几句到几十句不等，例如《白事会》中就有一些小贯儿。\n<!-- more -->\n\n## 报菜名\n\n蒸羊羔，蒸熊掌，蒸鹿尾儿，烧花鸭，烧雏鸡儿，烧子鹅。\n卤猪卤鸭，酱鸡腊肉，松花小肚儿，晾肉香肠。\n什锦苏盘，熏鸡白肚儿，清蒸八宝-猪，江米酿鸭子。\n罐儿野鸡，罐儿鹌鹑,\n卤什件儿，卤子鹅,山鸡兔脯菜蟒银鱼,清蒸哈什蚂。\n烩鸭丝烩鸭腰烩鸭条,清拌腰丝儿黄心管儿,\n焖白鳝焖黄鳝,豆鼓鲇鱼,锅烧鲤鱼，锅烧鲇鱼，清蒸甲鱼，抓炒鲤鱼,抓炒对虾。\n软炸里脊软炸鸡, \n什锦套肠,麻酥油卷儿熘肘寒尖。\n熘鲜蘑，熘鱼脯儿熘鱼肚儿熘鱼片儿，醋熘肉片儿。\n烩三鲜,烩白蘑，烩鸽子蛋,炒银丝烩鳗鱼,炒白虾炝青蛤,炒面鱼炝芦笋,\n芙蓉燕菜,炒虾仁烩虾仁，烩腰花烩海参，锅烧海参,锅烧白菜,\n炸太耳，炒田鸡，\n桂花翅子，清蒸翅子，清蒸江瑶柱，糖溜芡实米,\n拌鸡丝儿拌肚丝儿，什锦豆腐什锦丁儿，\n糟虾糟蟹糟鱼，糟熘鱼片儿，\n熘蟹肉炒蟹肉，蒸南瓜，爙倭瓜，炒丝瓜，爙冬瓜，\n焖鸡掌,焖鸭掌,焖笋,烩茭白,\n茄干儿涮羊肉,鸭羹,蟹肉羹,是三鲜木樨汤,\n红丸子,白丸子,熘丸子,炸丸子,南涧丸子,木樨丸子,三鲜丸子，四喜丸子，龟炸丸子，豆腐丸子,鲜炸丸子,玉腐丸子，氽丸子,\n一品肉,樱桃肉,马牙肉,红闷肉,黄闷肉，坛子肉，\n糊肉扣肉,松肉厚肉，烧肉烤肉,腊肉白肉,酱豆腐肉,\n红肘子,白肘子,水晶肘子,蜜蜡肘子,酱豆腐肘子\n蒸羊肉,酱羊肉，烧羊肉,烤羊肉，五香羊肉,爆羊肉.\n氽三样儿,爆三样儿,烩银丝，烩散丹,油焖杂碎三鲜鱼翅栗子鸡,尖氽活鲤鱼,是板鸭筒子鸡。\n\n---\n<video src=\"http://file.panjiangtao.cn/baocaiming.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/baocaiming.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n## 八扇屏之莽撞人\n\n　　后汉三国年间，有一位莽撞人。自桃园三结义以来，大爷姓刘名备字玄德，家住大树楼桑。二弟姓关名羽字云长，家住山西蒲州解梁县。三弟姓张名飞字翼德，家住涿州范阳郡。后续四弟，姓赵名云字子龙，家住真定府常山县，百战百胜，号称为常胜将军。\n\n　　只皆因长坂坡前，一场鏖战。那赵云，单枪匹马，闯入曹营。砍倒大蠹两杆，夺槊三条。马落陷坑，堪堪废命。曹孟德，在山头之上观瞧，见一穿白小将，白盔白甲白旗靠，胯下白龙马，掌中亮银枪，实乃一员勇将。\n\n　　当下就有爱将之意。旁有徐庶暗中保护赵云，那徐庶，自进得曹营以来，一语未发。今见赵将军马落陷坑，堪堪废命，口尊丞相，莫非有爱将之意？ 曹操言道，正是。徐庶言道，何不收留此将。\n\n　　曹操闻听，急忙传令，令出山摇动，三军听分明，我要活赵云，不要死子龙。倘有一兵一将 伤损赵将军之性命，八十三万人马，五十一员战将，与他一人抵命。众将闻听，不敢上前，唯有后退。那赵云，一仗怀揣幼主，二仗常胜将军之特勇。\n\n　　杀了个七进七出，这才闯出重围。曹操一见，这样勇将，焉能放走。在后面紧紧追赶。追至在当阳桥前，张飞赶到， 高叫四弟不必惊慌，某家在此，料也无妨！让过赵云的人马，曹操赶到，不见赵云，见一黑脸大汉，立于桥头之上。\n\n　　曹操忙问夏侯憞， 这黑脸大汉，他是何人？夏侯憞道，此乃是张飞，一莽撞人。曹操闻听，大吃一惊。想当初关公在白马坡斩颜良诛文丑之时，曾对某家言道，他有一结拜三弟，姓张名飞字翼德，百万军中取上将之首级如探囊取物，反掌观纹。\n\n　　今日一见，果然英勇，来呀，撤去某家青罗伞盖，观一观莽撞人的武艺如何？青罗伞盖撤下，但见张飞豹头环眼，面如润铁，黑中透亮，亮中透黑。颏下扎里扎沙一部黑钢髯，犹如钢针，恰似铁线。头戴镔铁盔，二龙斗宝，朱缨飘洒，上嵌八宝云罗伞盖，花冠云长。\n\n　　身披锁子大叶连环甲，内衬皂罗袍。足蹬虎头战靴，跨下马，万里烟云兽，掌中丈八蛇矛。立于桥头之上，咬牙切齿，捶胸愤恨。大骂，曹操听真，呔！今有你家张三爷在此，尔或攻，或战或进或退或争或斗，不攻不战不进不退不争不斗，尔乃匹夫之辈。\n\n　　大喊一声，曹兵吓退。大喊二声，顺水横流。大喊三声，把当阳桥吓断。后人有诗赞之曰，长坂桥前救赵云，吓退曹操百万军，姓张名飞字翼德，万古留芳莽撞人。\n\n---\n<video src=\"http://file.panjiangtao.cn/mangzhuangren.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/mangzhuangren.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n## 十八愁\n\n数九寒天，冷风嗖\n年～年春打六九头\n正月十五是个龙灯会，有一对狮～子滚绣球啊\n三月三，王母娘娘蟠桃会\n大闹天宫啊孙猴又把那个仙桃偷\n五月单五是端阳日啊，白蛇许仙不到头\n七月七，传说天河配啊，牛郎织女泪双流\n八月十五啊云遮月，月里的嫦娥～犯～了忧愁\n要说愁，净说愁啊，您听我唱上一回绕口令儿十八愁\n虎也愁，狼也愁\n象也愁，鹿也愁啊\n骡子也愁马也愁\n羊也愁，牛也愁，狗也愁，猪也愁啊\n鸭子也愁鹅也愁\n蛤蟆愁，蛤蜊愁，螃蟹也愁，乌龟愁啊，\n鱼愁虾愁～，各有分由\n虎愁，不敢把那高山下\n狼愁的野心不改耍滑头\n象愁那脸憨皮又厚啊\n鹿也愁，脑袋上七叉八叉地长犄角\n马愁鞴鞍行千里呐，骡子愁得一世休\n羊愁从小把胡子长呐，牛愁愁得犯牛轴\n狗愁改不了那净吃屎呐，猪愁离不开那臭水沟\n鸭子愁呢扁了它的嘴，鹅愁得脑袋上它愁了一个奔儿了头\n蛤蟆愁，长了一身脓疱疥呐，螃蟹愁得净横搂啊\n蛤蜊也愁，闭关自守啊，那乌龟愁得～不敢出头\n那个鱼愁离水不能够走呢，虾米愁得，空枪乱扎～没有准头\n这个绕口令儿最难唱\n我唱～的是\n前门楼子九丈九，四门三桥五牌楼，出了便门儿往东走啊，离城四十到通州\n通州倒有啊，六十六条胡同口\n在里边住～着一个六十六岁刘老六啊，六十六岁六老刘啊，六十六岁的刘老头这么老哥儿仨\n盖了那，六十六间好高楼\n在楼里头有啊，六十六篓桂花油啊\n在篓上面蒙着六～十六匹罗缎绸\n在绸上面绣着六～十六个狮子滚绣球\n在楼外头，栽了那，六十六根儿檀木轴\n在轴上面拴着六～十六头大牤牛\n在牛上面驮着六十六个大马猴\n刘老六六老刘啊刘老头这么老哥仨\n倒坐～在门口啃骨头\n打南边来～了一条狗，这条狗好眼熟啊\n它好像那大～大妈家，大大眉毛、大～大眼睛、大～大鼻子，大大耳朵、大大口啊、大～大妈家的大号挠头狮子狗\n打北边又来一条狗啊，这条狗它也眼熟啊\n它好像那二～大妈妈家、二大眉毛、二～大眼睛、二～大鼻子，二大耳朵、二大口啊、二～大妈家的二号挠头狮子狗\n这两条狗啊抢骨头，它为抢骨～头抢成了仇\n从南头跑到北头，撞倒了\n六十六间好高楼，撞洒～了六十六篓桂花油\n油了六十六匹罗缎绸啊，脏了六～十六个狮～子滚绣球，在楼外头，\n砸倒了，六十六根儿檀木轴啊，砸惊了六十六头大牤牛，砸跑了六～十六个大马猴\n打南边儿来个气～不休，手里头拿了个土坯头它去打狗的头\n也不知气不休的土坯头啊打了狗～的头啊，还是那狗～的头，撞坏～了气不休的土坯头\n打北边儿来了个秃妞妞，手里拿着个油篓口她去套狗～的头啊\n也不知秃妞妞的油篓口啊，套上狗的头啊，还是那狗的头啊，钻进～了秃妞妞的油篓口啊\n刘老六六老刘啊刘老头这么老哥仨\n打跑了狗啊，他盖起来，六～十六间好高楼啊\n收起来六十六篓桂花油，洗干净六～十六匹罗缎绸\n他洗净了，六十六个狮～子滚绣球\n在楼外头，栽起来，六十六棵儿檀木轴\n牵回来六十六头大牤牛，逮回来六～十六个大马猴\n刘老六六老刘啊刘老头这么老哥仨，他又看到那个鸡奔碎米墩漏豆，这个狗啃油篓篓油漏\n鸡不奔这碎米墩不漏豆，这个狗不啃的油篓篓不漏油啊\n绕口令儿最难唱\n我唱～的是，正月里正月正有姐妹二人去逛灯\n大～姑娘名叫粉红女，二～姑娘名叫女粉红啊\n粉红女啊身穿一件粉红袄啊，女粉红她身穿一件袄粉红啊\n粉红女，怀抱～着一瓶粉红酒啊，女粉红她怀抱一瓶酒粉红\n粉红女女粉红啊，姐儿俩来到了无人处啊，推杯换盏饮刘伶\n女粉红喝～了粉红女的粉红酒，粉红女饮了女粉红的酒粉红\n粉红女喝了个酩酊醉，女粉红喝了个醉酩酊\n女粉红见～着粉红女就打，粉红女揪～着女粉红就拧\n女粉红撕～了粉红女的粉红袄，粉红女扯～了女粉红的袄粉红\n姐儿俩打罢停了手啊，自己买线自己缝\n粉红女买～了一条粉红线，女粉红买了那么一条线粉红啊\n粉红女她反缝缝缝粉红袄，女粉红她缝反缝缝袄粉红\n出前门，奔正南\n有一个面铺面门面冲南\n这个面铺挂着个蓝布棉门帘\n摘～了蓝布棉门帘，我敲了敲这个面铺面门面冲南\n挂上个蓝布棉门帘，我瞧了瞧啊，䁖了䁖啊，把了把啊，看了看啊，\n这～个面铺面门还是面冲南\n说出西门～走七步，拾块麂皮补皮裤\n是麂皮补皮裤，不是麂皮不必补我的麂皮裤\n说揭着窗户撕字纸，是字纸撕字纸，不是字纸不必撕字纸，在字纸里\n裹～着一包细银丝，银丝上趴着四千四百四十四个似死似不死的死涩小死虱子皮儿啊\n说我家有个肥净白净八斤鸡，飞到～了张家后院里\n张家后院有个肥净白净八斤狗啊，咬了我的肥净白净八斤鸡\n卖～了他的肥净白净八斤狗啊，赔了我的肥净白净八斤鸡\n鸡登八八登鸡，鸡不登篱～笆，篱笆也不登鸡啊\n说苏州有一个苏胡子，这个湖州有一个胡梳子\n苏州的苏胡子找湖州的胡梳子借梳胡子的梳子梳胡子\n山前住着一个严圆眼，山后边儿住了个严眼圆\n二人山前来比眼\n也不知严圆眼比严眼圆的眼圆，还是严眼圆比严圆眼的圆眼\n山前，住了一个崔粗腿，山后～边儿住了个崔腿粗\n二位山前来比腿，也～不知\n崔粗腿，比崔腿粗的腿粗，还是崔腿粗比崔粗腿的粗腿\n山前有四十四个小狮子，山后有四十四棵死涩柿子树\n山前那四十四个小狮子，吃了山后边儿，四十四棵死涩柿子树的涩柿子\n山前那四十四个小狮子，让山后边儿，四十四棵死涩柿子树的涩柿子给涩死了\n说你会炖我的炖冻豆腐，来炖我的炖冻豆腐\n你不会炖我的炖冻豆腐，比胡炖乱炖假充会炖～炖坏～了我的炖冻豆腐\n说扁担长～板凳宽呐，板凳没有扁担长啊，扁担没有板凳宽\n这个扁担绑在了板凳上，这个板凳不让这个扁担绑在了板凳上\n扁担偏要扁担绑在了板凳上，这个板凳偏不让那个扁担绑在了板凳上\n扁担偏要扁担绑在了板凳上\n闲来没事儿，出趟城西啊\n树～木琅琳呐数高低\n一二三，三二一，一二三四五六七七六五四三二一,\n六五四三二一啊，五四三二一啊，四三二一，三二一啊，二一一呀一个一啊\n我数了半天一棵树，一棵树长着七个枝儿\n一个枝儿结着一样果子， 结～的是那槟子橙子桔子柿子李子栗子梨啊\n这就是绕口令儿，一个小段儿，我祝大家～身体健康～寿比天齐～\n\n---\n<video src=\"http://file.panjiangtao.cn/shibachou.mp4\" type=\"video/mp4\"  poster=\"http://file.panjiangtao.cn/shibachou.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>","slug":"guanko","published":1,"updated":"2020-12-02T07:53:50.147Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hs003xc8pv4l584hgp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p>对口相声中常见的表现形式，也叫“背口”。“贯口”的“贯”字，是一气呵成，一贯到底的意思。常见的段子如《报菜名》《八扇屏 》《地理图》《白事会》都含有大段的贯口。<br>贯口分为大贯儿和小贯儿两种。大贯儿一般上百句，例如《报菜名》、《地理图》（并称“两大贯儿”）。小贯儿一般十几句到几十句不等，例如《白事会》中就有一些小贯儿。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"报菜名\"><a href=\"#报菜名\" class=\"headerlink\" title=\"报菜名\"></a>报菜名</h2><p>蒸羊羔，蒸熊掌，蒸鹿尾儿，烧花鸭，烧雏鸡儿，烧子鹅。<br>卤猪卤鸭，酱鸡腊肉，松花小肚儿，晾肉香肠。<br>什锦苏盘，熏鸡白肚儿，清蒸八宝-猪，江米酿鸭子。<br>罐儿野鸡，罐儿鹌鹑,<br>卤什件儿，卤子鹅,山鸡兔脯菜蟒银鱼,清蒸哈什蚂。<br>烩鸭丝烩鸭腰烩鸭条,清拌腰丝儿黄心管儿,<br>焖白鳝焖黄鳝,豆鼓鲇鱼,锅烧鲤鱼，锅烧鲇鱼，清蒸甲鱼，抓炒鲤鱼,抓炒对虾。<br>软炸里脊软炸鸡,<br>什锦套肠,麻酥油卷儿熘肘寒尖。<br>熘鲜蘑，熘鱼脯儿熘鱼肚儿熘鱼片儿，醋熘肉片儿。<br>烩三鲜,烩白蘑，烩鸽子蛋,炒银丝烩鳗鱼,炒白虾炝青蛤,炒面鱼炝芦笋,<br>芙蓉燕菜,炒虾仁烩虾仁，烩腰花烩海参，锅烧海参,锅烧白菜,<br>炸太耳，炒田鸡，<br>桂花翅子，清蒸翅子，清蒸江瑶柱，糖溜芡实米,<br>拌鸡丝儿拌肚丝儿，什锦豆腐什锦丁儿，<br>糟虾糟蟹糟鱼，糟熘鱼片儿，<br>熘蟹肉炒蟹肉，蒸南瓜，爙倭瓜，炒丝瓜，爙冬瓜，<br>焖鸡掌,焖鸭掌,焖笋,烩茭白,<br>茄干儿涮羊肉,鸭羹,蟹肉羹,是三鲜木樨汤,<br>红丸子,白丸子,熘丸子,炸丸子,南涧丸子,木樨丸子,三鲜丸子，四喜丸子，龟炸丸子，豆腐丸子,鲜炸丸子,玉腐丸子，氽丸子,<br>一品肉,樱桃肉,马牙肉,红闷肉,黄闷肉，坛子肉，<br>糊肉扣肉,松肉厚肉，烧肉烤肉,腊肉白肉,酱豆腐肉,<br>红肘子,白肘子,水晶肘子,蜜蜡肘子,酱豆腐肘子<br>蒸羊肉,酱羊肉，烧羊肉,烤羊肉，五香羊肉,爆羊肉.<br>氽三样儿,爆三样儿,烩银丝，烩散丹,油焖杂碎三鲜鱼翅栗子鸡,尖氽活鲤鱼,是板鸭筒子鸡。</p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/baocaiming.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/baocaiming.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n<h2 id=\"八扇屏之莽撞人\"><a href=\"#八扇屏之莽撞人\" class=\"headerlink\" title=\"八扇屏之莽撞人\"></a>八扇屏之莽撞人</h2><p>　　后汉三国年间，有一位莽撞人。自桃园三结义以来，大爷姓刘名备字玄德，家住大树楼桑。二弟姓关名羽字云长，家住山西蒲州解梁县。三弟姓张名飞字翼德，家住涿州范阳郡。后续四弟，姓赵名云字子龙，家住真定府常山县，百战百胜，号称为常胜将军。</p>\n<p>　　只皆因长坂坡前，一场鏖战。那赵云，单枪匹马，闯入曹营。砍倒大蠹两杆，夺槊三条。马落陷坑，堪堪废命。曹孟德，在山头之上观瞧，见一穿白小将，白盔白甲白旗靠，胯下白龙马，掌中亮银枪，实乃一员勇将。</p>\n<p>　　当下就有爱将之意。旁有徐庶暗中保护赵云，那徐庶，自进得曹营以来，一语未发。今见赵将军马落陷坑，堪堪废命，口尊丞相，莫非有爱将之意？ 曹操言道，正是。徐庶言道，何不收留此将。</p>\n<p>　　曹操闻听，急忙传令，令出山摇动，三军听分明，我要活赵云，不要死子龙。倘有一兵一将 伤损赵将军之性命，八十三万人马，五十一员战将，与他一人抵命。众将闻听，不敢上前，唯有后退。那赵云，一仗怀揣幼主，二仗常胜将军之特勇。</p>\n<p>　　杀了个七进七出，这才闯出重围。曹操一见，这样勇将，焉能放走。在后面紧紧追赶。追至在当阳桥前，张飞赶到， 高叫四弟不必惊慌，某家在此，料也无妨！让过赵云的人马，曹操赶到，不见赵云，见一黑脸大汉，立于桥头之上。</p>\n<p>　　曹操忙问夏侯憞， 这黑脸大汉，他是何人？夏侯憞道，此乃是张飞，一莽撞人。曹操闻听，大吃一惊。想当初关公在白马坡斩颜良诛文丑之时，曾对某家言道，他有一结拜三弟，姓张名飞字翼德，百万军中取上将之首级如探囊取物，反掌观纹。</p>\n<p>　　今日一见，果然英勇，来呀，撤去某家青罗伞盖，观一观莽撞人的武艺如何？青罗伞盖撤下，但见张飞豹头环眼，面如润铁，黑中透亮，亮中透黑。颏下扎里扎沙一部黑钢髯，犹如钢针，恰似铁线。头戴镔铁盔，二龙斗宝，朱缨飘洒，上嵌八宝云罗伞盖，花冠云长。</p>\n<p>　　身披锁子大叶连环甲，内衬皂罗袍。足蹬虎头战靴，跨下马，万里烟云兽，掌中丈八蛇矛。立于桥头之上，咬牙切齿，捶胸愤恨。大骂，曹操听真，呔！今有你家张三爷在此，尔或攻，或战或进或退或争或斗，不攻不战不进不退不争不斗，尔乃匹夫之辈。</p>\n<p>　　大喊一声，曹兵吓退。大喊二声，顺水横流。大喊三声，把当阳桥吓断。后人有诗赞之曰，长坂桥前救赵云，吓退曹操百万军，姓张名飞字翼德，万古留芳莽撞人。</p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/mangzhuangren.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/mangzhuangren.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n<h2 id=\"十八愁\"><a href=\"#十八愁\" class=\"headerlink\" title=\"十八愁\"></a>十八愁</h2><p>数九寒天，冷风嗖<br>年～年春打六九头<br>正月十五是个龙灯会，有一对狮～子滚绣球啊<br>三月三，王母娘娘蟠桃会<br>大闹天宫啊孙猴又把那个仙桃偷<br>五月单五是端阳日啊，白蛇许仙不到头<br>七月七，传说天河配啊，牛郎织女泪双流<br>八月十五啊云遮月，月里的嫦娥～犯～了忧愁<br>要说愁，净说愁啊，您听我唱上一回绕口令儿十八愁<br>虎也愁，狼也愁<br>象也愁，鹿也愁啊<br>骡子也愁马也愁<br>羊也愁，牛也愁，狗也愁，猪也愁啊<br>鸭子也愁鹅也愁<br>蛤蟆愁，蛤蜊愁，螃蟹也愁，乌龟愁啊，<br>鱼愁虾愁～，各有分由<br>虎愁，不敢把那高山下<br>狼愁的野心不改耍滑头<br>象愁那脸憨皮又厚啊<br>鹿也愁，脑袋上七叉八叉地长犄角<br>马愁鞴鞍行千里呐，骡子愁得一世休<br>羊愁从小把胡子长呐，牛愁愁得犯牛轴<br>狗愁改不了那净吃屎呐，猪愁离不开那臭水沟<br>鸭子愁呢扁了它的嘴，鹅愁得脑袋上它愁了一个奔儿了头<br>蛤蟆愁，长了一身脓疱疥呐，螃蟹愁得净横搂啊<br>蛤蜊也愁，闭关自守啊，那乌龟愁得～不敢出头<br>那个鱼愁离水不能够走呢，虾米愁得，空枪乱扎～没有准头<br>这个绕口令儿最难唱<br>我唱～的是<br>前门楼子九丈九，四门三桥五牌楼，出了便门儿往东走啊，离城四十到通州<br>通州倒有啊，六十六条胡同口<br>在里边住～着一个六十六岁刘老六啊，六十六岁六老刘啊，六十六岁的刘老头这么老哥儿仨<br>盖了那，六十六间好高楼<br>在楼里头有啊，六十六篓桂花油啊<br>在篓上面蒙着六～十六匹罗缎绸<br>在绸上面绣着六～十六个狮子滚绣球<br>在楼外头，栽了那，六十六根儿檀木轴<br>在轴上面拴着六～十六头大牤牛<br>在牛上面驮着六十六个大马猴<br>刘老六六老刘啊刘老头这么老哥仨<br>倒坐～在门口啃骨头<br>打南边来～了一条狗，这条狗好眼熟啊<br>它好像那大～大妈家，大大眉毛、大～大眼睛、大～大鼻子，大大耳朵、大大口啊、大～大妈家的大号挠头狮子狗<br>打北边又来一条狗啊，这条狗它也眼熟啊<br>它好像那二～大妈妈家、二大眉毛、二～大眼睛、二～大鼻子，二大耳朵、二大口啊、二～大妈家的二号挠头狮子狗<br>这两条狗啊抢骨头，它为抢骨～头抢成了仇<br>从南头跑到北头，撞倒了<br>六十六间好高楼，撞洒～了六十六篓桂花油<br>油了六十六匹罗缎绸啊，脏了六～十六个狮～子滚绣球，在楼外头，<br>砸倒了，六十六根儿檀木轴啊，砸惊了六十六头大牤牛，砸跑了六～十六个大马猴<br>打南边儿来个气～不休，手里头拿了个土坯头它去打狗的头<br>也不知气不休的土坯头啊打了狗～的头啊，还是那狗～的头，撞坏～了气不休的土坯头<br>打北边儿来了个秃妞妞，手里拿着个油篓口她去套狗～的头啊<br>也不知秃妞妞的油篓口啊，套上狗的头啊，还是那狗的头啊，钻进～了秃妞妞的油篓口啊<br>刘老六六老刘啊刘老头这么老哥仨<br>打跑了狗啊，他盖起来，六～十六间好高楼啊<br>收起来六十六篓桂花油，洗干净六～十六匹罗缎绸<br>他洗净了，六十六个狮～子滚绣球<br>在楼外头，栽起来，六十六棵儿檀木轴<br>牵回来六十六头大牤牛，逮回来六～十六个大马猴<br>刘老六六老刘啊刘老头这么老哥仨，他又看到那个鸡奔碎米墩漏豆，这个狗啃油篓篓油漏<br>鸡不奔这碎米墩不漏豆，这个狗不啃的油篓篓不漏油啊<br>绕口令儿最难唱<br>我唱～的是，正月里正月正有姐妹二人去逛灯<br>大～姑娘名叫粉红女，二～姑娘名叫女粉红啊<br>粉红女啊身穿一件粉红袄啊，女粉红她身穿一件袄粉红啊<br>粉红女，怀抱～着一瓶粉红酒啊，女粉红她怀抱一瓶酒粉红<br>粉红女女粉红啊，姐儿俩来到了无人处啊，推杯换盏饮刘伶<br>女粉红喝～了粉红女的粉红酒，粉红女饮了女粉红的酒粉红<br>粉红女喝了个酩酊醉，女粉红喝了个醉酩酊<br>女粉红见～着粉红女就打，粉红女揪～着女粉红就拧<br>女粉红撕～了粉红女的粉红袄，粉红女扯～了女粉红的袄粉红<br>姐儿俩打罢停了手啊，自己买线自己缝<br>粉红女买～了一条粉红线，女粉红买了那么一条线粉红啊<br>粉红女她反缝缝缝粉红袄，女粉红她缝反缝缝袄粉红<br>出前门，奔正南<br>有一个面铺面门面冲南<br>这个面铺挂着个蓝布棉门帘<br>摘～了蓝布棉门帘，我敲了敲这个面铺面门面冲南<br>挂上个蓝布棉门帘，我瞧了瞧啊，䁖了䁖啊，把了把啊，看了看啊，<br>这～个面铺面门还是面冲南<br>说出西门～走七步，拾块麂皮补皮裤<br>是麂皮补皮裤，不是麂皮不必补我的麂皮裤<br>说揭着窗户撕字纸，是字纸撕字纸，不是字纸不必撕字纸，在字纸里<br>裹～着一包细银丝，银丝上趴着四千四百四十四个似死似不死的死涩小死虱子皮儿啊<br>说我家有个肥净白净八斤鸡，飞到～了张家后院里<br>张家后院有个肥净白净八斤狗啊，咬了我的肥净白净八斤鸡<br>卖～了他的肥净白净八斤狗啊，赔了我的肥净白净八斤鸡<br>鸡登八八登鸡，鸡不登篱～笆，篱笆也不登鸡啊<br>说苏州有一个苏胡子，这个湖州有一个胡梳子<br>苏州的苏胡子找湖州的胡梳子借梳胡子的梳子梳胡子<br>山前住着一个严圆眼，山后边儿住了个严眼圆<br>二人山前来比眼<br>也不知严圆眼比严眼圆的眼圆，还是严眼圆比严圆眼的圆眼<br>山前，住了一个崔粗腿，山后～边儿住了个崔腿粗<br>二位山前来比腿，也～不知<br>崔粗腿，比崔腿粗的腿粗，还是崔腿粗比崔粗腿的粗腿<br>山前有四十四个小狮子，山后有四十四棵死涩柿子树<br>山前那四十四个小狮子，吃了山后边儿，四十四棵死涩柿子树的涩柿子<br>山前那四十四个小狮子，让山后边儿，四十四棵死涩柿子树的涩柿子给涩死了<br>说你会炖我的炖冻豆腐，来炖我的炖冻豆腐<br>你不会炖我的炖冻豆腐，比胡炖乱炖假充会炖～炖坏～了我的炖冻豆腐<br>说扁担长～板凳宽呐，板凳没有扁担长啊，扁担没有板凳宽<br>这个扁担绑在了板凳上，这个板凳不让这个扁担绑在了板凳上<br>扁担偏要扁担绑在了板凳上，这个板凳偏不让那个扁担绑在了板凳上<br>扁担偏要扁担绑在了板凳上<br>闲来没事儿，出趟城西啊<br>树～木琅琳呐数高低<br>一二三，三二一，一二三四五六七七六五四三二一,<br>六五四三二一啊，五四三二一啊，四三二一，三二一啊，二一一呀一个一啊<br>我数了半天一棵树，一棵树长着七个枝儿<br>一个枝儿结着一样果子， 结～的是那槟子橙子桔子柿子李子栗子梨啊<br>这就是绕口令儿，一个小段儿，我祝大家～身体健康～寿比天齐～</p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/shibachou.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/shibachou.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":4018,"excerpt":"<blockquote>\n<p>对口相声中常见的表现形式，也叫“背口”。“贯口”的“贯”字，是一气呵成，一贯到底的意思。常见的段子如《报菜名》《八扇屏 》《地理图》《白事会》都含有大段的贯口。<br>贯口分为大贯儿和小贯儿两种。大贯儿一般上百句，例如《报菜名》、《地理图》（并称“两大贯儿”）。小贯儿一般十几句到几十句不等，例如《白事会》中就有一些小贯儿。<br></p></blockquote>","more":"<p></p>\n\n<h2 id=\"报菜名\"><a href=\"#报菜名\" class=\"headerlink\" title=\"报菜名\"></a>报菜名</h2><p>蒸羊羔，蒸熊掌，蒸鹿尾儿，烧花鸭，烧雏鸡儿，烧子鹅。<br>卤猪卤鸭，酱鸡腊肉，松花小肚儿，晾肉香肠。<br>什锦苏盘，熏鸡白肚儿，清蒸八宝-猪，江米酿鸭子。<br>罐儿野鸡，罐儿鹌鹑,<br>卤什件儿，卤子鹅,山鸡兔脯菜蟒银鱼,清蒸哈什蚂。<br>烩鸭丝烩鸭腰烩鸭条,清拌腰丝儿黄心管儿,<br>焖白鳝焖黄鳝,豆鼓鲇鱼,锅烧鲤鱼，锅烧鲇鱼，清蒸甲鱼，抓炒鲤鱼,抓炒对虾。<br>软炸里脊软炸鸡,<br>什锦套肠,麻酥油卷儿熘肘寒尖。<br>熘鲜蘑，熘鱼脯儿熘鱼肚儿熘鱼片儿，醋熘肉片儿。<br>烩三鲜,烩白蘑，烩鸽子蛋,炒银丝烩鳗鱼,炒白虾炝青蛤,炒面鱼炝芦笋,<br>芙蓉燕菜,炒虾仁烩虾仁，烩腰花烩海参，锅烧海参,锅烧白菜,<br>炸太耳，炒田鸡，<br>桂花翅子，清蒸翅子，清蒸江瑶柱，糖溜芡实米,<br>拌鸡丝儿拌肚丝儿，什锦豆腐什锦丁儿，<br>糟虾糟蟹糟鱼，糟熘鱼片儿，<br>熘蟹肉炒蟹肉，蒸南瓜，爙倭瓜，炒丝瓜，爙冬瓜，<br>焖鸡掌,焖鸭掌,焖笋,烩茭白,<br>茄干儿涮羊肉,鸭羹,蟹肉羹,是三鲜木樨汤,<br>红丸子,白丸子,熘丸子,炸丸子,南涧丸子,木樨丸子,三鲜丸子，四喜丸子，龟炸丸子，豆腐丸子,鲜炸丸子,玉腐丸子，氽丸子,<br>一品肉,樱桃肉,马牙肉,红闷肉,黄闷肉，坛子肉，<br>糊肉扣肉,松肉厚肉，烧肉烤肉,腊肉白肉,酱豆腐肉,<br>红肘子,白肘子,水晶肘子,蜜蜡肘子,酱豆腐肘子<br>蒸羊肉,酱羊肉，烧羊肉,烤羊肉，五香羊肉,爆羊肉.<br>氽三样儿,爆三样儿,烩银丝，烩散丹,油焖杂碎三鲜鱼翅栗子鸡,尖氽活鲤鱼,是板鸭筒子鸡。</p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/baocaiming.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/baocaiming.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n<h2 id=\"八扇屏之莽撞人\"><a href=\"#八扇屏之莽撞人\" class=\"headerlink\" title=\"八扇屏之莽撞人\"></a>八扇屏之莽撞人</h2><p>　　后汉三国年间，有一位莽撞人。自桃园三结义以来，大爷姓刘名备字玄德，家住大树楼桑。二弟姓关名羽字云长，家住山西蒲州解梁县。三弟姓张名飞字翼德，家住涿州范阳郡。后续四弟，姓赵名云字子龙，家住真定府常山县，百战百胜，号称为常胜将军。</p>\n<p>　　只皆因长坂坡前，一场鏖战。那赵云，单枪匹马，闯入曹营。砍倒大蠹两杆，夺槊三条。马落陷坑，堪堪废命。曹孟德，在山头之上观瞧，见一穿白小将，白盔白甲白旗靠，胯下白龙马，掌中亮银枪，实乃一员勇将。</p>\n<p>　　当下就有爱将之意。旁有徐庶暗中保护赵云，那徐庶，自进得曹营以来，一语未发。今见赵将军马落陷坑，堪堪废命，口尊丞相，莫非有爱将之意？ 曹操言道，正是。徐庶言道，何不收留此将。</p>\n<p>　　曹操闻听，急忙传令，令出山摇动，三军听分明，我要活赵云，不要死子龙。倘有一兵一将 伤损赵将军之性命，八十三万人马，五十一员战将，与他一人抵命。众将闻听，不敢上前，唯有后退。那赵云，一仗怀揣幼主，二仗常胜将军之特勇。</p>\n<p>　　杀了个七进七出，这才闯出重围。曹操一见，这样勇将，焉能放走。在后面紧紧追赶。追至在当阳桥前，张飞赶到， 高叫四弟不必惊慌，某家在此，料也无妨！让过赵云的人马，曹操赶到，不见赵云，见一黑脸大汉，立于桥头之上。</p>\n<p>　　曹操忙问夏侯憞， 这黑脸大汉，他是何人？夏侯憞道，此乃是张飞，一莽撞人。曹操闻听，大吃一惊。想当初关公在白马坡斩颜良诛文丑之时，曾对某家言道，他有一结拜三弟，姓张名飞字翼德，百万军中取上将之首级如探囊取物，反掌观纹。</p>\n<p>　　今日一见，果然英勇，来呀，撤去某家青罗伞盖，观一观莽撞人的武艺如何？青罗伞盖撤下，但见张飞豹头环眼，面如润铁，黑中透亮，亮中透黑。颏下扎里扎沙一部黑钢髯，犹如钢针，恰似铁线。头戴镔铁盔，二龙斗宝，朱缨飘洒，上嵌八宝云罗伞盖，花冠云长。</p>\n<p>　　身披锁子大叶连环甲，内衬皂罗袍。足蹬虎头战靴，跨下马，万里烟云兽，掌中丈八蛇矛。立于桥头之上，咬牙切齿，捶胸愤恨。大骂，曹操听真，呔！今有你家张三爷在此，尔或攻，或战或进或退或争或斗，不攻不战不进不退不争不斗，尔乃匹夫之辈。</p>\n<p>　　大喊一声，曹兵吓退。大喊二声，顺水横流。大喊三声，把当阳桥吓断。后人有诗赞之曰，长坂桥前救赵云，吓退曹操百万军，姓张名飞字翼德，万古留芳莽撞人。</p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/mangzhuangren.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/mangzhuangren.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>\n\n<h2 id=\"十八愁\"><a href=\"#十八愁\" class=\"headerlink\" title=\"十八愁\"></a>十八愁</h2><p>数九寒天，冷风嗖<br>年～年春打六九头<br>正月十五是个龙灯会，有一对狮～子滚绣球啊<br>三月三，王母娘娘蟠桃会<br>大闹天宫啊孙猴又把那个仙桃偷<br>五月单五是端阳日啊，白蛇许仙不到头<br>七月七，传说天河配啊，牛郎织女泪双流<br>八月十五啊云遮月，月里的嫦娥～犯～了忧愁<br>要说愁，净说愁啊，您听我唱上一回绕口令儿十八愁<br>虎也愁，狼也愁<br>象也愁，鹿也愁啊<br>骡子也愁马也愁<br>羊也愁，牛也愁，狗也愁，猪也愁啊<br>鸭子也愁鹅也愁<br>蛤蟆愁，蛤蜊愁，螃蟹也愁，乌龟愁啊，<br>鱼愁虾愁～，各有分由<br>虎愁，不敢把那高山下<br>狼愁的野心不改耍滑头<br>象愁那脸憨皮又厚啊<br>鹿也愁，脑袋上七叉八叉地长犄角<br>马愁鞴鞍行千里呐，骡子愁得一世休<br>羊愁从小把胡子长呐，牛愁愁得犯牛轴<br>狗愁改不了那净吃屎呐，猪愁离不开那臭水沟<br>鸭子愁呢扁了它的嘴，鹅愁得脑袋上它愁了一个奔儿了头<br>蛤蟆愁，长了一身脓疱疥呐，螃蟹愁得净横搂啊<br>蛤蜊也愁，闭关自守啊，那乌龟愁得～不敢出头<br>那个鱼愁离水不能够走呢，虾米愁得，空枪乱扎～没有准头<br>这个绕口令儿最难唱<br>我唱～的是<br>前门楼子九丈九，四门三桥五牌楼，出了便门儿往东走啊，离城四十到通州<br>通州倒有啊，六十六条胡同口<br>在里边住～着一个六十六岁刘老六啊，六十六岁六老刘啊，六十六岁的刘老头这么老哥儿仨<br>盖了那，六十六间好高楼<br>在楼里头有啊，六十六篓桂花油啊<br>在篓上面蒙着六～十六匹罗缎绸<br>在绸上面绣着六～十六个狮子滚绣球<br>在楼外头，栽了那，六十六根儿檀木轴<br>在轴上面拴着六～十六头大牤牛<br>在牛上面驮着六十六个大马猴<br>刘老六六老刘啊刘老头这么老哥仨<br>倒坐～在门口啃骨头<br>打南边来～了一条狗，这条狗好眼熟啊<br>它好像那大～大妈家，大大眉毛、大～大眼睛、大～大鼻子，大大耳朵、大大口啊、大～大妈家的大号挠头狮子狗<br>打北边又来一条狗啊，这条狗它也眼熟啊<br>它好像那二～大妈妈家、二大眉毛、二～大眼睛、二～大鼻子，二大耳朵、二大口啊、二～大妈家的二号挠头狮子狗<br>这两条狗啊抢骨头，它为抢骨～头抢成了仇<br>从南头跑到北头，撞倒了<br>六十六间好高楼，撞洒～了六十六篓桂花油<br>油了六十六匹罗缎绸啊，脏了六～十六个狮～子滚绣球，在楼外头，<br>砸倒了，六十六根儿檀木轴啊，砸惊了六十六头大牤牛，砸跑了六～十六个大马猴<br>打南边儿来个气～不休，手里头拿了个土坯头它去打狗的头<br>也不知气不休的土坯头啊打了狗～的头啊，还是那狗～的头，撞坏～了气不休的土坯头<br>打北边儿来了个秃妞妞，手里拿着个油篓口她去套狗～的头啊<br>也不知秃妞妞的油篓口啊，套上狗的头啊，还是那狗的头啊，钻进～了秃妞妞的油篓口啊<br>刘老六六老刘啊刘老头这么老哥仨<br>打跑了狗啊，他盖起来，六～十六间好高楼啊<br>收起来六十六篓桂花油，洗干净六～十六匹罗缎绸<br>他洗净了，六十六个狮～子滚绣球<br>在楼外头，栽起来，六十六棵儿檀木轴<br>牵回来六十六头大牤牛，逮回来六～十六个大马猴<br>刘老六六老刘啊刘老头这么老哥仨，他又看到那个鸡奔碎米墩漏豆，这个狗啃油篓篓油漏<br>鸡不奔这碎米墩不漏豆，这个狗不啃的油篓篓不漏油啊<br>绕口令儿最难唱<br>我唱～的是，正月里正月正有姐妹二人去逛灯<br>大～姑娘名叫粉红女，二～姑娘名叫女粉红啊<br>粉红女啊身穿一件粉红袄啊，女粉红她身穿一件袄粉红啊<br>粉红女，怀抱～着一瓶粉红酒啊，女粉红她怀抱一瓶酒粉红<br>粉红女女粉红啊，姐儿俩来到了无人处啊，推杯换盏饮刘伶<br>女粉红喝～了粉红女的粉红酒，粉红女饮了女粉红的酒粉红<br>粉红女喝了个酩酊醉，女粉红喝了个醉酩酊<br>女粉红见～着粉红女就打，粉红女揪～着女粉红就拧<br>女粉红撕～了粉红女的粉红袄，粉红女扯～了女粉红的袄粉红<br>姐儿俩打罢停了手啊，自己买线自己缝<br>粉红女买～了一条粉红线，女粉红买了那么一条线粉红啊<br>粉红女她反缝缝缝粉红袄，女粉红她缝反缝缝袄粉红<br>出前门，奔正南<br>有一个面铺面门面冲南<br>这个面铺挂着个蓝布棉门帘<br>摘～了蓝布棉门帘，我敲了敲这个面铺面门面冲南<br>挂上个蓝布棉门帘，我瞧了瞧啊，䁖了䁖啊，把了把啊，看了看啊，<br>这～个面铺面门还是面冲南<br>说出西门～走七步，拾块麂皮补皮裤<br>是麂皮补皮裤，不是麂皮不必补我的麂皮裤<br>说揭着窗户撕字纸，是字纸撕字纸，不是字纸不必撕字纸，在字纸里<br>裹～着一包细银丝，银丝上趴着四千四百四十四个似死似不死的死涩小死虱子皮儿啊<br>说我家有个肥净白净八斤鸡，飞到～了张家后院里<br>张家后院有个肥净白净八斤狗啊，咬了我的肥净白净八斤鸡<br>卖～了他的肥净白净八斤狗啊，赔了我的肥净白净八斤鸡<br>鸡登八八登鸡，鸡不登篱～笆，篱笆也不登鸡啊<br>说苏州有一个苏胡子，这个湖州有一个胡梳子<br>苏州的苏胡子找湖州的胡梳子借梳胡子的梳子梳胡子<br>山前住着一个严圆眼，山后边儿住了个严眼圆<br>二人山前来比眼<br>也不知严圆眼比严眼圆的眼圆，还是严眼圆比严圆眼的圆眼<br>山前，住了一个崔粗腿，山后～边儿住了个崔腿粗<br>二位山前来比腿，也～不知<br>崔粗腿，比崔腿粗的腿粗，还是崔腿粗比崔粗腿的粗腿<br>山前有四十四个小狮子，山后有四十四棵死涩柿子树<br>山前那四十四个小狮子，吃了山后边儿，四十四棵死涩柿子树的涩柿子<br>山前那四十四个小狮子，让山后边儿，四十四棵死涩柿子树的涩柿子给涩死了<br>说你会炖我的炖冻豆腐，来炖我的炖冻豆腐<br>你不会炖我的炖冻豆腐，比胡炖乱炖假充会炖～炖坏～了我的炖冻豆腐<br>说扁担长～板凳宽呐，板凳没有扁担长啊，扁担没有板凳宽<br>这个扁担绑在了板凳上，这个板凳不让这个扁担绑在了板凳上<br>扁担偏要扁担绑在了板凳上，这个板凳偏不让那个扁担绑在了板凳上<br>扁担偏要扁担绑在了板凳上<br>闲来没事儿，出趟城西啊<br>树～木琅琳呐数高低<br>一二三，三二一，一二三四五六七七六五四三二一,<br>六五四三二一啊，五四三二一啊，四三二一，三二一啊，二一一呀一个一啊<br>我数了半天一棵树，一棵树长着七个枝儿<br>一个枝儿结着一样果子， 结～的是那槟子橙子桔子柿子李子栗子梨啊<br>这就是绕口令儿，一个小段儿，我祝大家～身体健康～寿比天齐～</p>\n<hr>\n<video src=\"http://file.panjiangtao.cn/shibachou.mp4\" type=\"video/mp4\" poster=\"http://file.panjiangtao.cn/shibachou.jpg\" controls=\"controls\">\n 4     <p>你的浏览器不支持video标签.</p>\n 5 </video>"},{"title":"Hello World","date":"2020-09-16T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n<!-- more -->\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2020-09-17\ntags:\n- Hexo\ncategories:\n- Hexo\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n<!-- more -->\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2020-09-17T11:55:51.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hu0040c8pv909h7k7a","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<a id=\"more\"></a>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":367,"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>","more":"<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>"},{"title":"入门harmony鸿蒙的第一个程序","date":"2020-09-20T07:57:22.000Z","_content":"> 视频教程链接：https://www.bilibili.com/video/BV1mv411179B\n\n# 开发工具\n## 安装\n上[华为鸿蒙官网](https://developer.harmonyos.com/cn/develop/deveco-studio#download)下载DevEco Studio开发工具\n\n## 配置\n阅读[官方配置文档](https://developer.harmonyos.com/cn/docs/documentation/doc-guides/environment_config-0000001052902427)进行配置，根据需要下载java，js和c/c++的SDK\n<!-- more -->\n\n# 项目启动\n\n## 创建项目\n\n### 选择应用类型和语言\n我选择的是电视项目，使用java语言\n![选择应用类型和语言](create.jpg)\n\n### 选择项目名称和路径\n![选择项目名称和路径](create2.jpg)\n\n## 安装模拟器\n### 点开hdv manager\n![点开hdv manager](hvd.jpg)\n{% note info %}\n千万不要用谷歌浏览器\n{% endnote %}\n\n### 登录华为账号\n\n### 选择电视模拟器\n\n## 运行项目\n点击右上方运行箭头，选择在电视模拟器上运行，即可显示hello world\n![运行结果](hello.jpg)\n","source":"_posts/harmony-start.md","raw":"---\ntitle: 入门harmony鸿蒙的第一个程序\ndate: 2020-09-20 15:57:22\ntags: \n- harmony\ncategories:\n- frontend\n- harmony\n---\n> 视频教程链接：https://www.bilibili.com/video/BV1mv411179B\n\n# 开发工具\n## 安装\n上[华为鸿蒙官网](https://developer.harmonyos.com/cn/develop/deveco-studio#download)下载DevEco Studio开发工具\n\n## 配置\n阅读[官方配置文档](https://developer.harmonyos.com/cn/docs/documentation/doc-guides/environment_config-0000001052902427)进行配置，根据需要下载java，js和c/c++的SDK\n<!-- more -->\n\n# 项目启动\n\n## 创建项目\n\n### 选择应用类型和语言\n我选择的是电视项目，使用java语言\n![选择应用类型和语言](create.jpg)\n\n### 选择项目名称和路径\n![选择项目名称和路径](create2.jpg)\n\n## 安装模拟器\n### 点开hdv manager\n![点开hdv manager](hvd.jpg)\n{% note info %}\n千万不要用谷歌浏览器\n{% endnote %}\n\n### 登录华为账号\n\n### 选择电视模拟器\n\n## 运行项目\n点击右上方运行箭头，选择在电视模拟器上运行，即可显示hello world\n![运行结果](hello.jpg)\n","slug":"harmony-start","published":1,"updated":"2020-09-20T09:09:53.826Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hw0043c8pv3wgp7o6g","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p>视频教程链接：<a href=\"https://www.bilibili.com/video/BV1mv411179B\">https://www.bilibili.com/video/BV1mv411179B</a></p>\n</blockquote>\n<h1 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>上<a href=\"https://developer.harmonyos.com/cn/develop/deveco-studio#download\">华为鸿蒙官网</a>下载DevEco Studio开发工具</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>阅读<a href=\"https://developer.harmonyos.com/cn/docs/documentation/doc-guides/environment_config-0000001052902427\">官方配置文档</a>进行配置，根据需要下载java，js和c/c++的SDK<br><a id=\"more\"></a></p>\n<h1 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><h3 id=\"选择应用类型和语言\"><a href=\"#选择应用类型和语言\" class=\"headerlink\" title=\"选择应用类型和语言\"></a>选择应用类型和语言</h3><p>我选择的是电视项目，使用java语言<br><img src=\"/posts/harmony-start/create.jpg\" alt=\"选择应用类型和语言\"></p>\n<h3 id=\"选择项目名称和路径\"><a href=\"#选择项目名称和路径\" class=\"headerlink\" title=\"选择项目名称和路径\"></a>选择项目名称和路径</h3><p><img src=\"/posts/harmony-start/create2.jpg\" alt=\"选择项目名称和路径\"></p>\n<h2 id=\"安装模拟器\"><a href=\"#安装模拟器\" class=\"headerlink\" title=\"安装模拟器\"></a>安装模拟器</h2><h3 id=\"点开hdv-manager\"><a href=\"#点开hdv-manager\" class=\"headerlink\" title=\"点开hdv manager\"></a>点开hdv manager</h3><p><img src=\"/posts/harmony-start/hvd.jpg\" alt=\"点开hdv manager\"><br><div class=\"note info\">\n            <p>千万不要用谷歌浏览器</p>\n          </div></p>\n<h3 id=\"登录华为账号\"><a href=\"#登录华为账号\" class=\"headerlink\" title=\"登录华为账号\"></a>登录华为账号</h3><h3 id=\"选择电视模拟器\"><a href=\"#选择电视模拟器\" class=\"headerlink\" title=\"选择电视模拟器\"></a>选择电视模拟器</h3><h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>点击右上方运行箭头，选择在电视模拟器上运行，即可显示hello world<br><img src=\"/posts/harmony-start/hello.jpg\" alt=\"运行结果\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":243,"excerpt":"<blockquote>\n<p>视频教程链接：<a href=\"https://www.bilibili.com/video/BV1mv411179B\">https://www.bilibili.com/video/BV1mv411179B</a></p>\n</blockquote>\n<h1 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>上<a href=\"https://developer.harmonyos.com/cn/develop/deveco-studio#download\">华为鸿蒙官网</a>下载DevEco Studio开发工具</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>阅读<a href=\"https://developer.harmonyos.com/cn/docs/documentation/doc-guides/environment_config-0000001052902427\">官方配置文档</a>进行配置，根据需要下载java，js和c/c++的SDK<br></p>","more":"<p></p>\n<h1 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><h3 id=\"选择应用类型和语言\"><a href=\"#选择应用类型和语言\" class=\"headerlink\" title=\"选择应用类型和语言\"></a>选择应用类型和语言</h3><p>我选择的是电视项目，使用java语言<br><img src=\"/posts/harmony-start/create.jpg\" alt=\"选择应用类型和语言\"></p>\n<h3 id=\"选择项目名称和路径\"><a href=\"#选择项目名称和路径\" class=\"headerlink\" title=\"选择项目名称和路径\"></a>选择项目名称和路径</h3><p><img src=\"/posts/harmony-start/create2.jpg\" alt=\"选择项目名称和路径\"></p>\n<h2 id=\"安装模拟器\"><a href=\"#安装模拟器\" class=\"headerlink\" title=\"安装模拟器\"></a>安装模拟器</h2><h3 id=\"点开hdv-manager\"><a href=\"#点开hdv-manager\" class=\"headerlink\" title=\"点开hdv manager\"></a>点开hdv manager</h3><p><img src=\"/posts/harmony-start/hvd.jpg\" alt=\"点开hdv manager\"><br><div class=\"note info\">\n            <p>千万不要用谷歌浏览器</p>\n          </div></p>\n<h3 id=\"登录华为账号\"><a href=\"#登录华为账号\" class=\"headerlink\" title=\"登录华为账号\"></a>登录华为账号</h3><h3 id=\"选择电视模拟器\"><a href=\"#选择电视模拟器\" class=\"headerlink\" title=\"选择电视模拟器\"></a>选择电视模拟器</h3><h2 id=\"运行项目\"><a href=\"#运行项目\" class=\"headerlink\" title=\"运行项目\"></a>运行项目</h2><p>点击右上方运行箭头，选择在电视模拟器上运行，即可显示hello world<br><img src=\"/posts/harmony-start/hello.jpg\" alt=\"运行结果\"></p>"},{"title":"计算机组成课堂笔记","date":"2020-09-21T08:49:55.000Z","_content":"# 软件工程专业计算机组成课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E8%AE%A1%E7%BB%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>","source":"_posts/jizu.md","raw":"---\ntitle: 计算机组成课堂笔记\ndate: 2020-09-21 16:49:55\ntags:\n- 笔记\n- 计算机组成\ncategories:\n- 笔记\n- 计算机组成\n---\n# 软件工程专业计算机组成课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E8%AE%A1%E7%BB%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>","slug":"jizu","published":1,"updated":"2020-10-27T08:20:09.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hy0045c8pvckp5bxlk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"软件工程专业计算机组成课程笔记\"><a href=\"#软件工程专业计算机组成课程笔记\" class=\"headerlink\" title=\"软件工程专业计算机组成课程笔记\"></a>软件工程专业计算机组成课程笔记</h1><a id=\"more\"></a>\n<iframe src=\"http://file.panjiangtao.cn/%E8%AE%A1%E7%BB%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":15,"excerpt":"<h1 id=\"软件工程专业计算机组成课程笔记\"><a href=\"#软件工程专业计算机组成课程笔记\" class=\"headerlink\" title=\"软件工程专业计算机组成课程笔记\"></a>软件工程专业计算机组成课程笔记</h1>","more":"<iframe src=\"http://file.panjiangtao.cn/%E8%AE%A1%E7%BB%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>"},{"title":"数据通信与网络","date":"2020-09-21T08:50:02.000Z","_content":"# 软件工程专业数据通信与网络课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%BD%91%E7%BB%9C.pdf\" width=\"100%\" height=\"1000px\"></iframe>\n","source":"_posts/jiwang.md","raw":"---\ntitle: 数据通信与网络\ndate: 2020-09-21 16:50:02\ntags:\n- 笔记\n- 数据通信与网络\ncategories:\n- 笔记\n- 数据通信与网络\n---\n# 软件工程专业数据通信与网络课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%BD%91%E7%BB%9C.pdf\" width=\"100%\" height=\"1000px\"></iframe>\n","slug":"jiwang","published":1,"updated":"2020-10-27T08:20:09.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0hz0048c8pvhs84hfqg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"软件工程专业数据通信与网络课程笔记\"><a href=\"#软件工程专业数据通信与网络课程笔记\" class=\"headerlink\" title=\"软件工程专业数据通信与网络课程笔记\"></a>软件工程专业数据通信与网络课程笔记</h1><a id=\"more\"></a>\n<iframe src=\"http://file.panjiangtao.cn/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%BD%91%E7%BB%9C.pdf\" width=\"100%\" height=\"1000px\"></iframe>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":17,"excerpt":"<h1 id=\"软件工程专业数据通信与网络课程笔记\"><a href=\"#软件工程专业数据通信与网络课程笔记\" class=\"headerlink\" title=\"软件工程专业数据通信与网络课程笔记\"></a>软件工程专业数据通信与网络课程笔记</h1>","more":"<iframe src=\"http://file.panjiangtao.cn/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E4%B8%8E%E7%BD%91%E7%BB%9C.pdf\" width=\"100%\" height=\"1000px\"></iframe>"},{"title":"网络货运优惠政策","copyright":false,"date":"2021-10-28T13:57:03.000Z","_content":"# 网络货运优惠政策\n　　网络货运是在利用互联网技术开发的车货匹配平台的基础上发展起来的，通过互联网平台加数字化技术引用，在大数据的介入下，促使货运全网互联互通，借助智慧物流模式进行行业升级。\n　　交通部重点强调全面贯彻、坚持发展的“互联网+”高效物流，通过发展网络货运，推动解决道路货运行业多年来积累的深层次矛盾和问题，有效解决货运经营者在配货理货方面的操心事、运费结算方面的烦心事、税收保险方面的揪心事。\n　　从事网络货运经营的，是指经营者依托互联网平台整合配置运输资源，以承运人身份与托运人签订运输合同，委托实际承运人完成道路货物运输，承担承运人责任的道路货物运输经营活动\n<!-- more -->\n\n## 1.甘肃金昌\n\n　　近日，甘肃省印发了**《网络平台道路货物运输经营管理实施细则（暂行）》**（以下简称《细则》），对网络货运经营许可的准入和退出程序、管理部门的监督检查等提出了明确要求，给新业态规范健康发展创造良好的制度环境。\n\n　　此前全国已有18省2市相继出台了网络货运相关政策，各地为抢抓机遇，不少地方政府出台了很多前所未有的支持政策，比如贵州省将网络货运列为“交通强国”的试点项目重点扶持；甘肃省金昌市专门建设了网络货运线上数字产业园；天津市为网络货运上线了一个税务合规平台……\n\n　　值得关注的是，金昌在甘肃省《细则》出台之前就已启动了线上网络货运数字产业园建设，针对网络货运企业的优惠扶持力度也已出台，以其优质的服务和扶持政策，拉开了西部地区网络货运的大幕。\n\n　　金昌市位于甘肃省河西走廊东段，处于西部五省的核心位置，是甘肃省发展物流产业的重要节点和连接国家东、西部重要物流通道，地理位置优越。另外，金昌市地质灾害少，气候低温少雨，有适合大数据产业和网络货运新业态发展的先天优势。\n\n　　而金昌早在2017年就已经开始大数据产业布局，建设了紫金云大数据中心，近期又与阿帕数字共同建设了线上数字产业园项目。\n\n　　金昌作为资源型城市，有着巨大的运输需求的同时，也存在着运输“出多进少”的不均衡问题，而通过网络货运不但可以解决这个问题，同时还把数字产业引入了金昌，将来可依托数字产业园，实现“车在线上、货在云中”。\n\n　　**金昌市投巨资建设了“骠骑网络货运管理系统”，免费提供给入驻企业使用。**同时，应用区块链技术研发的“星水大数据监管平台”，打通了市场监管、交通、税务、财政等系统数据，对接省部级监管平台，缩短企业单独对接时长，实现税款的缴纳、统计与返还，对相关信息进行查询追踪、设立风险指标监控风险情况，可以极大地优化申报流程、减少对接时长、提高办理效率、节约申报成本，为企业省心、省力、更省钱！\n\n　　根据网络货运管理办法，一家物流企业想要正式转型网络货运平台，从系统开发、技术储备、资料整理、与政府部门沟通对接到获得网络货运许可证，完全按此流程跑一遍，时间大约需要3-6个月，投入一般在50万-100万。\n\n![img](https://pic3.zhimg.com/80/v2-313531c847e1c07f96173cdf45280d4a_720w.jpg)网络货运办理流程\n\n　　金昌数字产业园把等保认证企业、ICP办理企业都联系入园，实现在线服务，入驻企业3个工作日便可以拿到营业执照，30天就能拿到网络货运许可证。更值得一提的是，园区对年营业额超亿元的网络货运企业给予ICP、等保三级最高补贴100%的优惠政策。\n\n　　同时，所有办公场所、设备、桌椅等全部免费为企业提供，这对企业来说，金昌可谓是为其准备了“一桌大餐”。\n\n　　财税合规物流企业在网络货运上最敏感的神经还是在财税方面：如何实现财税合规？最终企业实际税负是多少？\n\n　　**金昌市对于入园企业给予5年培育期，发展数字产业，实行增值税、企业及个人所得税返还市区两级财政留存部分最高可达98%，司机个人所得税按照国家最低税率0.25%征收。**\n\n　　同时，公司财务记账、发票代开、税务处理等日常财务代理，园区更是提供一站式服务。\n\n### 运营支持\n\n　　为方便前期项目接洽，**金昌数字产业园在北京成立了招商中心，成立专业的招商服务队伍，针对网络货运企业定向服务，实行一套班子两个职能，面对企业进行招商，面对人才提供服务。**\n\n　　截止目前，已成功举办了两次金昌网络货运招商视频会议，参会企业达到152家，十余家企业正在积极洽谈沟通。\n\n　　在我国，制约物流企业做大做强的重要因素之一在于绝大多数民营物流企业普遍存在资金链偏紧，特别是上游押款严重、账期越来越长，而下游又需要即时支付甚至提前支付，这使得资金链紧张的局面又进一步加剧。\n\n　　与此同时，与制造企业相比，中小民营物流企业又因为固定资产少、可抵（质）押物受限、经营风险高、信用低且征信难等特性难以获得金融机构融资，导致最需要周转资金的中小物流企业反而最难获取周转资金融。\n\n　　**对此，金昌数字产业园联合蚂蚁金服、普洛斯金融以及当地金融机构通过区块链监管平台帮助物流企业进行运费垫付、运费保理、ETC垫资、油费垫资。**\n\n　　目前可为每家物流企业最高授信额度运费保理2亿元、运费垫付500万、过路费垫付50万、ETC垫资50万、油气垫资20万，可有效解决物流企业融资难、融资贵的问题。\n\n　　不得不说，金昌市为了推动网络货运新业态的发展，可谓下足了功夫、用足了真心。毕竟，政府只有搭好了“梧桐树”，才能留得住“金凤凰”。\n\n\n\n## ２.湖北\n\n　　从湖北省运管局获悉，目前，湖北省普通货运车辆超过40万辆，道路货运是综合交通运输体系的重要组成部分，在国民经济发展中起着重要的基础服务作用。近日（18.12.04），湖北省运管局制定出台了**《关于促进道路货运行业健康发展的八条意见》**，以切实减轻道路货运经营者负担，改善从业环境，促进降本增效，努力推动道路货运行业健康稳定发展。\n\n　　一是优化货运行政许可。实行“三取消一限时”：从2019年1月1日起，取消道路货运站场经营许可、取消总质量4.5吨及以下普通货物运输车辆《道路运输证》、取消总质量4.5吨及以下普通货物运输车辆驾驶员《从业资格证》，普通货物运输经营许可审批在15个工作日内限时办结。\n\n　　二是优化货运车辆管理。全面实施本省籍道路货物运输车辆安检、综检、环保检“三检合一”；全面推进本省籍普通货物运输车辆省内异地年审。\n\n　　三是优化货运从业人员管理。推行普通货运道路运输驾驶员从业线上线下及异地考试；全面推进本省籍货运道路运输驾驶员异地考核；全面公开普通货运道路运输驾驶员从业考试题库；鼓励社会化平台开展从业人员继续教育服务。\n\n　　四是落实货运企业主体责任。督促道路货运企业建立健全企业管理制度，规范相关合同，强化车辆、人员等日常管理，落实安全生产主体责任，落实从业人员的管理与服务责任，落实规范经营行为、保障合法权益的社会责任。充分发挥道路运输行业社会中介组织的行业自律作用。\n\n　　**五是支持无车承运人发展。支持国内无车承运人平台落户本省。鼓励本省普通货物运输经营者加入无车承运人平台。支持无车承运人平台为普货运输经营者提供货源、仓储、线路等大数据信息和全链条服务。**\n\n　　六是鼓励应用智能视频监控技术。鼓励货运企业应用4G视频监控、高级驾驶辅助、驾驶行为分析等车载新技术、新设备，加强对车辆运行状况、驾驶员驾驶行为、承运货物在途情况的监督管理，为社会提供更加优质、安全的货运服务。\n\n　　七是推进诚信体系建设。结合“信用交通省”创建工作,推进道路货运行业诚信建设，实行道路运输行业信用红黑名单制度，形成“守信时时便利、失信处处受限”的良好经营环境。\n\n　　八是自觉接受社会监督。加强道路货运行业政策法规宣传，全面公开道路货运经营许可政策、行业管理政策，主动公示审批程序、受理条件和办理时限，全面推行网上办事、实行限时办结、主动做好服务、接受社会监督。构建亲清新型政商关系，严禁运管机构私设门槛、引导个体司机挂靠经营、隐性变相“吃拿卡要”等行为，严肃问责相关责任人，维护公平公正市场环境。\n\n　　省运管局要求，全省各级运管机构提高思想认识、加强政策宣传、切实履行职责，及时将八条意见传达到货运企业和广大驾驶员，做好服务指导，确保执行到位。\n\n \n\n## 3. 湖南长沙\n\n　　湖南日报·新湖南客户端2月20日讯（记者 陈新）为支持长沙市道路货运企业复工复产，促进网络货运业发展壮大，记者今天从长沙市交通运输局获悉，近日长沙市交通运输局会同该市财政局、市税务局联合制发了**[《支持网络货运业发展的财税奖补政策实施办法》](http://jtt.hunan.gov.cn/xxgk/gzdt/szdt1/202002/t20200224_11189518.html)**，支持长沙市网络货运经营企业规模化发展，提升货物运输组织效率，降低物流成本，促进货运物流行业转型升级，提升道路货运业对经济增长的支撑作用，服务货运物流畅通和稳岗经济发展大局。\n\n　　《办法》规定，支持网络货运经营企业开展代开增值税发票试点。指导企业申报和获得“互联网物流平台企业代开增值税专用发票”资质。根据企业网络货运经营业务实缴税收规模情况，实施奖励，支持企业扩大再生产和规模化经营。同时，支持网络货运经营企业为小规模纳税人代缴税收。为网络货运经营企业提供实际货物运输服务的会员（小规模纳税人），鼓励网络货运经营企业代其向主管税务机关缴纳运输业务增值税，申请代开专用发票，并据以抵扣相应运输业务的进项税额。根据代缴税收情况，实施奖励，支持小规模货运经营业户稳定发展。\n\n　　另外，《办法》支持网络货运经营企业规模化发展。针对取得网络货运经营许可资质的原部省“无车承运人”试点企业等给予10万元至30万元的奖励。针对取得交通运输部门颁发的经营范围为“网络货运”的道路运输经营许可企业，经年度考核合格，且综合监测评估排名进入国家、省、市前列的，给予5万元至30万元的奖励。\n\n\n\n## 4.陕西西安\n\n　　3月11日，市发改委印发《西安市大力发展“三个经济”支持政策实施细则》的通知（以下简称细则），包括21条支持政策\n\n　　**第5条：对在西安市注册且接入省道路货物运输监管平台的无车承运人试点企业(网络平台道路货物运输经营者)，给予其所缴纳增值税35%的等额资金奖励。(牵头单位：市交通局配合单位：市商务局、市财政局)**\n\n　\n\n","source":"_posts/net-freight.md","raw":"---\ntitle: 网络货运优惠政策\ncopyright: false\ndate: 2021-10-28 21:57:03\ntags: 网络货运\ncategories:\n- 物流管理\n- 网络货运\n---\n# 网络货运优惠政策\n　　网络货运是在利用互联网技术开发的车货匹配平台的基础上发展起来的，通过互联网平台加数字化技术引用，在大数据的介入下，促使货运全网互联互通，借助智慧物流模式进行行业升级。\n　　交通部重点强调全面贯彻、坚持发展的“互联网+”高效物流，通过发展网络货运，推动解决道路货运行业多年来积累的深层次矛盾和问题，有效解决货运经营者在配货理货方面的操心事、运费结算方面的烦心事、税收保险方面的揪心事。\n　　从事网络货运经营的，是指经营者依托互联网平台整合配置运输资源，以承运人身份与托运人签订运输合同，委托实际承运人完成道路货物运输，承担承运人责任的道路货物运输经营活动\n<!-- more -->\n\n## 1.甘肃金昌\n\n　　近日，甘肃省印发了**《网络平台道路货物运输经营管理实施细则（暂行）》**（以下简称《细则》），对网络货运经营许可的准入和退出程序、管理部门的监督检查等提出了明确要求，给新业态规范健康发展创造良好的制度环境。\n\n　　此前全国已有18省2市相继出台了网络货运相关政策，各地为抢抓机遇，不少地方政府出台了很多前所未有的支持政策，比如贵州省将网络货运列为“交通强国”的试点项目重点扶持；甘肃省金昌市专门建设了网络货运线上数字产业园；天津市为网络货运上线了一个税务合规平台……\n\n　　值得关注的是，金昌在甘肃省《细则》出台之前就已启动了线上网络货运数字产业园建设，针对网络货运企业的优惠扶持力度也已出台，以其优质的服务和扶持政策，拉开了西部地区网络货运的大幕。\n\n　　金昌市位于甘肃省河西走廊东段，处于西部五省的核心位置，是甘肃省发展物流产业的重要节点和连接国家东、西部重要物流通道，地理位置优越。另外，金昌市地质灾害少，气候低温少雨，有适合大数据产业和网络货运新业态发展的先天优势。\n\n　　而金昌早在2017年就已经开始大数据产业布局，建设了紫金云大数据中心，近期又与阿帕数字共同建设了线上数字产业园项目。\n\n　　金昌作为资源型城市，有着巨大的运输需求的同时，也存在着运输“出多进少”的不均衡问题，而通过网络货运不但可以解决这个问题，同时还把数字产业引入了金昌，将来可依托数字产业园，实现“车在线上、货在云中”。\n\n　　**金昌市投巨资建设了“骠骑网络货运管理系统”，免费提供给入驻企业使用。**同时，应用区块链技术研发的“星水大数据监管平台”，打通了市场监管、交通、税务、财政等系统数据，对接省部级监管平台，缩短企业单独对接时长，实现税款的缴纳、统计与返还，对相关信息进行查询追踪、设立风险指标监控风险情况，可以极大地优化申报流程、减少对接时长、提高办理效率、节约申报成本，为企业省心、省力、更省钱！\n\n　　根据网络货运管理办法，一家物流企业想要正式转型网络货运平台，从系统开发、技术储备、资料整理、与政府部门沟通对接到获得网络货运许可证，完全按此流程跑一遍，时间大约需要3-6个月，投入一般在50万-100万。\n\n![img](https://pic3.zhimg.com/80/v2-313531c847e1c07f96173cdf45280d4a_720w.jpg)网络货运办理流程\n\n　　金昌数字产业园把等保认证企业、ICP办理企业都联系入园，实现在线服务，入驻企业3个工作日便可以拿到营业执照，30天就能拿到网络货运许可证。更值得一提的是，园区对年营业额超亿元的网络货运企业给予ICP、等保三级最高补贴100%的优惠政策。\n\n　　同时，所有办公场所、设备、桌椅等全部免费为企业提供，这对企业来说，金昌可谓是为其准备了“一桌大餐”。\n\n　　财税合规物流企业在网络货运上最敏感的神经还是在财税方面：如何实现财税合规？最终企业实际税负是多少？\n\n　　**金昌市对于入园企业给予5年培育期，发展数字产业，实行增值税、企业及个人所得税返还市区两级财政留存部分最高可达98%，司机个人所得税按照国家最低税率0.25%征收。**\n\n　　同时，公司财务记账、发票代开、税务处理等日常财务代理，园区更是提供一站式服务。\n\n### 运营支持\n\n　　为方便前期项目接洽，**金昌数字产业园在北京成立了招商中心，成立专业的招商服务队伍，针对网络货运企业定向服务，实行一套班子两个职能，面对企业进行招商，面对人才提供服务。**\n\n　　截止目前，已成功举办了两次金昌网络货运招商视频会议，参会企业达到152家，十余家企业正在积极洽谈沟通。\n\n　　在我国，制约物流企业做大做强的重要因素之一在于绝大多数民营物流企业普遍存在资金链偏紧，特别是上游押款严重、账期越来越长，而下游又需要即时支付甚至提前支付，这使得资金链紧张的局面又进一步加剧。\n\n　　与此同时，与制造企业相比，中小民营物流企业又因为固定资产少、可抵（质）押物受限、经营风险高、信用低且征信难等特性难以获得金融机构融资，导致最需要周转资金的中小物流企业反而最难获取周转资金融。\n\n　　**对此，金昌数字产业园联合蚂蚁金服、普洛斯金融以及当地金融机构通过区块链监管平台帮助物流企业进行运费垫付、运费保理、ETC垫资、油费垫资。**\n\n　　目前可为每家物流企业最高授信额度运费保理2亿元、运费垫付500万、过路费垫付50万、ETC垫资50万、油气垫资20万，可有效解决物流企业融资难、融资贵的问题。\n\n　　不得不说，金昌市为了推动网络货运新业态的发展，可谓下足了功夫、用足了真心。毕竟，政府只有搭好了“梧桐树”，才能留得住“金凤凰”。\n\n\n\n## ２.湖北\n\n　　从湖北省运管局获悉，目前，湖北省普通货运车辆超过40万辆，道路货运是综合交通运输体系的重要组成部分，在国民经济发展中起着重要的基础服务作用。近日（18.12.04），湖北省运管局制定出台了**《关于促进道路货运行业健康发展的八条意见》**，以切实减轻道路货运经营者负担，改善从业环境，促进降本增效，努力推动道路货运行业健康稳定发展。\n\n　　一是优化货运行政许可。实行“三取消一限时”：从2019年1月1日起，取消道路货运站场经营许可、取消总质量4.5吨及以下普通货物运输车辆《道路运输证》、取消总质量4.5吨及以下普通货物运输车辆驾驶员《从业资格证》，普通货物运输经营许可审批在15个工作日内限时办结。\n\n　　二是优化货运车辆管理。全面实施本省籍道路货物运输车辆安检、综检、环保检“三检合一”；全面推进本省籍普通货物运输车辆省内异地年审。\n\n　　三是优化货运从业人员管理。推行普通货运道路运输驾驶员从业线上线下及异地考试；全面推进本省籍货运道路运输驾驶员异地考核；全面公开普通货运道路运输驾驶员从业考试题库；鼓励社会化平台开展从业人员继续教育服务。\n\n　　四是落实货运企业主体责任。督促道路货运企业建立健全企业管理制度，规范相关合同，强化车辆、人员等日常管理，落实安全生产主体责任，落实从业人员的管理与服务责任，落实规范经营行为、保障合法权益的社会责任。充分发挥道路运输行业社会中介组织的行业自律作用。\n\n　　**五是支持无车承运人发展。支持国内无车承运人平台落户本省。鼓励本省普通货物运输经营者加入无车承运人平台。支持无车承运人平台为普货运输经营者提供货源、仓储、线路等大数据信息和全链条服务。**\n\n　　六是鼓励应用智能视频监控技术。鼓励货运企业应用4G视频监控、高级驾驶辅助、驾驶行为分析等车载新技术、新设备，加强对车辆运行状况、驾驶员驾驶行为、承运货物在途情况的监督管理，为社会提供更加优质、安全的货运服务。\n\n　　七是推进诚信体系建设。结合“信用交通省”创建工作,推进道路货运行业诚信建设，实行道路运输行业信用红黑名单制度，形成“守信时时便利、失信处处受限”的良好经营环境。\n\n　　八是自觉接受社会监督。加强道路货运行业政策法规宣传，全面公开道路货运经营许可政策、行业管理政策，主动公示审批程序、受理条件和办理时限，全面推行网上办事、实行限时办结、主动做好服务、接受社会监督。构建亲清新型政商关系，严禁运管机构私设门槛、引导个体司机挂靠经营、隐性变相“吃拿卡要”等行为，严肃问责相关责任人，维护公平公正市场环境。\n\n　　省运管局要求，全省各级运管机构提高思想认识、加强政策宣传、切实履行职责，及时将八条意见传达到货运企业和广大驾驶员，做好服务指导，确保执行到位。\n\n \n\n## 3. 湖南长沙\n\n　　湖南日报·新湖南客户端2月20日讯（记者 陈新）为支持长沙市道路货运企业复工复产，促进网络货运业发展壮大，记者今天从长沙市交通运输局获悉，近日长沙市交通运输局会同该市财政局、市税务局联合制发了**[《支持网络货运业发展的财税奖补政策实施办法》](http://jtt.hunan.gov.cn/xxgk/gzdt/szdt1/202002/t20200224_11189518.html)**，支持长沙市网络货运经营企业规模化发展，提升货物运输组织效率，降低物流成本，促进货运物流行业转型升级，提升道路货运业对经济增长的支撑作用，服务货运物流畅通和稳岗经济发展大局。\n\n　　《办法》规定，支持网络货运经营企业开展代开增值税发票试点。指导企业申报和获得“互联网物流平台企业代开增值税专用发票”资质。根据企业网络货运经营业务实缴税收规模情况，实施奖励，支持企业扩大再生产和规模化经营。同时，支持网络货运经营企业为小规模纳税人代缴税收。为网络货运经营企业提供实际货物运输服务的会员（小规模纳税人），鼓励网络货运经营企业代其向主管税务机关缴纳运输业务增值税，申请代开专用发票，并据以抵扣相应运输业务的进项税额。根据代缴税收情况，实施奖励，支持小规模货运经营业户稳定发展。\n\n　　另外，《办法》支持网络货运经营企业规模化发展。针对取得网络货运经营许可资质的原部省“无车承运人”试点企业等给予10万元至30万元的奖励。针对取得交通运输部门颁发的经营范围为“网络货运”的道路运输经营许可企业，经年度考核合格，且综合监测评估排名进入国家、省、市前列的，给予5万元至30万元的奖励。\n\n\n\n## 4.陕西西安\n\n　　3月11日，市发改委印发《西安市大力发展“三个经济”支持政策实施细则》的通知（以下简称细则），包括21条支持政策\n\n　　**第5条：对在西安市注册且接入省道路货物运输监管平台的无车承运人试点企业(网络平台道路货物运输经营者)，给予其所缴纳增值税35%的等额资金奖励。(牵头单位：市交通局配合单位：市商务局、市财政局)**\n\n　\n\n","slug":"net-freight","published":1,"updated":"2021-10-28T14:00:57.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0i0004cc8pva4qog0v4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"网络货运优惠政策\"><a href=\"#网络货运优惠政策\" class=\"headerlink\" title=\"网络货运优惠政策\"></a>网络货运优惠政策</h1><p>　　网络货运是在利用互联网技术开发的车货匹配平台的基础上发展起来的，通过互联网平台加数字化技术引用，在大数据的介入下，促使货运全网互联互通，借助智慧物流模式进行行业升级。<br>　　交通部重点强调全面贯彻、坚持发展的“互联网+”高效物流，通过发展网络货运，推动解决道路货运行业多年来积累的深层次矛盾和问题，有效解决货运经营者在配货理货方面的操心事、运费结算方面的烦心事、税收保险方面的揪心事。<br>　　从事网络货运经营的，是指经营者依托互联网平台整合配置运输资源，以承运人身份与托运人签订运输合同，委托实际承运人完成道路货物运输，承担承运人责任的道路货物运输经营活动<br><a id=\"more\"></a></p>\n<h2 id=\"1-甘肃金昌\"><a href=\"#1-甘肃金昌\" class=\"headerlink\" title=\"1.甘肃金昌\"></a>1.甘肃金昌</h2><p>　　近日，甘肃省印发了<strong>《网络平台道路货物运输经营管理实施细则（暂行）》</strong>（以下简称《细则》），对网络货运经营许可的准入和退出程序、管理部门的监督检查等提出了明确要求，给新业态规范健康发展创造良好的制度环境。</p>\n<p>　　此前全国已有18省2市相继出台了网络货运相关政策，各地为抢抓机遇，不少地方政府出台了很多前所未有的支持政策，比如贵州省将网络货运列为“交通强国”的试点项目重点扶持；甘肃省金昌市专门建设了网络货运线上数字产业园；天津市为网络货运上线了一个税务合规平台……</p>\n<p>　　值得关注的是，金昌在甘肃省《细则》出台之前就已启动了线上网络货运数字产业园建设，针对网络货运企业的优惠扶持力度也已出台，以其优质的服务和扶持政策，拉开了西部地区网络货运的大幕。</p>\n<p>　　金昌市位于甘肃省河西走廊东段，处于西部五省的核心位置，是甘肃省发展物流产业的重要节点和连接国家东、西部重要物流通道，地理位置优越。另外，金昌市地质灾害少，气候低温少雨，有适合大数据产业和网络货运新业态发展的先天优势。</p>\n<p>　　而金昌早在2017年就已经开始大数据产业布局，建设了紫金云大数据中心，近期又与阿帕数字共同建设了线上数字产业园项目。</p>\n<p>　　金昌作为资源型城市，有着巨大的运输需求的同时，也存在着运输“出多进少”的不均衡问题，而通过网络货运不但可以解决这个问题，同时还把数字产业引入了金昌，将来可依托数字产业园，实现“车在线上、货在云中”。</p>\n<p>　　<strong>金昌市投巨资建设了“骠骑网络货运管理系统”，免费提供给入驻企业使用。</strong>同时，应用区块链技术研发的“星水大数据监管平台”，打通了市场监管、交通、税务、财政等系统数据，对接省部级监管平台，缩短企业单独对接时长，实现税款的缴纳、统计与返还，对相关信息进行查询追踪、设立风险指标监控风险情况，可以极大地优化申报流程、减少对接时长、提高办理效率、节约申报成本，为企业省心、省力、更省钱！</p>\n<p>　　根据网络货运管理办法，一家物流企业想要正式转型网络货运平台，从系统开发、技术储备、资料整理、与政府部门沟通对接到获得网络货运许可证，完全按此流程跑一遍，时间大约需要3-6个月，投入一般在50万-100万。</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-313531c847e1c07f96173cdf45280d4a_720w.jpg\" alt=\"img\">网络货运办理流程</p>\n<p>　　金昌数字产业园把等保认证企业、ICP办理企业都联系入园，实现在线服务，入驻企业3个工作日便可以拿到营业执照，30天就能拿到网络货运许可证。更值得一提的是，园区对年营业额超亿元的网络货运企业给予ICP、等保三级最高补贴100%的优惠政策。</p>\n<p>　　同时，所有办公场所、设备、桌椅等全部免费为企业提供，这对企业来说，金昌可谓是为其准备了“一桌大餐”。</p>\n<p>　　财税合规物流企业在网络货运上最敏感的神经还是在财税方面：如何实现财税合规？最终企业实际税负是多少？</p>\n<p>　　<strong>金昌市对于入园企业给予5年培育期，发展数字产业，实行增值税、企业及个人所得税返还市区两级财政留存部分最高可达98%，司机个人所得税按照国家最低税率0.25%征收。</strong></p>\n<p>　　同时，公司财务记账、发票代开、税务处理等日常财务代理，园区更是提供一站式服务。</p>\n<h3 id=\"运营支持\"><a href=\"#运营支持\" class=\"headerlink\" title=\"运营支持\"></a>运营支持</h3><p>　　为方便前期项目接洽，<strong>金昌数字产业园在北京成立了招商中心，成立专业的招商服务队伍，针对网络货运企业定向服务，实行一套班子两个职能，面对企业进行招商，面对人才提供服务。</strong></p>\n<p>　　截止目前，已成功举办了两次金昌网络货运招商视频会议，参会企业达到152家，十余家企业正在积极洽谈沟通。</p>\n<p>　　在我国，制约物流企业做大做强的重要因素之一在于绝大多数民营物流企业普遍存在资金链偏紧，特别是上游押款严重、账期越来越长，而下游又需要即时支付甚至提前支付，这使得资金链紧张的局面又进一步加剧。</p>\n<p>　　与此同时，与制造企业相比，中小民营物流企业又因为固定资产少、可抵（质）押物受限、经营风险高、信用低且征信难等特性难以获得金融机构融资，导致最需要周转资金的中小物流企业反而最难获取周转资金融。</p>\n<p>　　<strong>对此，金昌数字产业园联合蚂蚁金服、普洛斯金融以及当地金融机构通过区块链监管平台帮助物流企业进行运费垫付、运费保理、ETC垫资、油费垫资。</strong></p>\n<p>　　目前可为每家物流企业最高授信额度运费保理2亿元、运费垫付500万、过路费垫付50万、ETC垫资50万、油气垫资20万，可有效解决物流企业融资难、融资贵的问题。</p>\n<p>　　不得不说，金昌市为了推动网络货运新业态的发展，可谓下足了功夫、用足了真心。毕竟，政府只有搭好了“梧桐树”，才能留得住“金凤凰”。</p>\n<h2 id=\"２-湖北\"><a href=\"#２-湖北\" class=\"headerlink\" title=\"２.湖北\"></a>２.湖北</h2><p>　　从湖北省运管局获悉，目前，湖北省普通货运车辆超过40万辆，道路货运是综合交通运输体系的重要组成部分，在国民经济发展中起着重要的基础服务作用。近日（18.12.04），湖北省运管局制定出台了<strong>《关于促进道路货运行业健康发展的八条意见》</strong>，以切实减轻道路货运经营者负担，改善从业环境，促进降本增效，努力推动道路货运行业健康稳定发展。</p>\n<p>　　一是优化货运行政许可。实行“三取消一限时”：从2019年1月1日起，取消道路货运站场经营许可、取消总质量4.5吨及以下普通货物运输车辆《道路运输证》、取消总质量4.5吨及以下普通货物运输车辆驾驶员《从业资格证》，普通货物运输经营许可审批在15个工作日内限时办结。</p>\n<p>　　二是优化货运车辆管理。全面实施本省籍道路货物运输车辆安检、综检、环保检“三检合一”；全面推进本省籍普通货物运输车辆省内异地年审。</p>\n<p>　　三是优化货运从业人员管理。推行普通货运道路运输驾驶员从业线上线下及异地考试；全面推进本省籍货运道路运输驾驶员异地考核；全面公开普通货运道路运输驾驶员从业考试题库；鼓励社会化平台开展从业人员继续教育服务。</p>\n<p>　　四是落实货运企业主体责任。督促道路货运企业建立健全企业管理制度，规范相关合同，强化车辆、人员等日常管理，落实安全生产主体责任，落实从业人员的管理与服务责任，落实规范经营行为、保障合法权益的社会责任。充分发挥道路运输行业社会中介组织的行业自律作用。</p>\n<p>　　<strong>五是支持无车承运人发展。支持国内无车承运人平台落户本省。鼓励本省普通货物运输经营者加入无车承运人平台。支持无车承运人平台为普货运输经营者提供货源、仓储、线路等大数据信息和全链条服务。</strong></p>\n<p>　　六是鼓励应用智能视频监控技术。鼓励货运企业应用4G视频监控、高级驾驶辅助、驾驶行为分析等车载新技术、新设备，加强对车辆运行状况、驾驶员驾驶行为、承运货物在途情况的监督管理，为社会提供更加优质、安全的货运服务。</p>\n<p>　　七是推进诚信体系建设。结合“信用交通省”创建工作,推进道路货运行业诚信建设，实行道路运输行业信用红黑名单制度，形成“守信时时便利、失信处处受限”的良好经营环境。</p>\n<p>　　八是自觉接受社会监督。加强道路货运行业政策法规宣传，全面公开道路货运经营许可政策、行业管理政策，主动公示审批程序、受理条件和办理时限，全面推行网上办事、实行限时办结、主动做好服务、接受社会监督。构建亲清新型政商关系，严禁运管机构私设门槛、引导个体司机挂靠经营、隐性变相“吃拿卡要”等行为，严肃问责相关责任人，维护公平公正市场环境。</p>\n<p>　　省运管局要求，全省各级运管机构提高思想认识、加强政策宣传、切实履行职责，及时将八条意见传达到货运企业和广大驾驶员，做好服务指导，确保执行到位。</p>\n<h2 id=\"3-湖南长沙\"><a href=\"#3-湖南长沙\" class=\"headerlink\" title=\"3. 湖南长沙\"></a>3. 湖南长沙</h2><p>　　湖南日报·新湖南客户端2月20日讯（记者 陈新）为支持长沙市道路货运企业复工复产，促进网络货运业发展壮大，记者今天从长沙市交通运输局获悉，近日长沙市交通运输局会同该市财政局、市税务局联合制发了<strong><a href=\"http://jtt.hunan.gov.cn/xxgk/gzdt/szdt1/202002/t20200224_11189518.html\">《支持网络货运业发展的财税奖补政策实施办法》</a></strong>，支持长沙市网络货运经营企业规模化发展，提升货物运输组织效率，降低物流成本，促进货运物流行业转型升级，提升道路货运业对经济增长的支撑作用，服务货运物流畅通和稳岗经济发展大局。</p>\n<p>　　《办法》规定，支持网络货运经营企业开展代开增值税发票试点。指导企业申报和获得“互联网物流平台企业代开增值税专用发票”资质。根据企业网络货运经营业务实缴税收规模情况，实施奖励，支持企业扩大再生产和规模化经营。同时，支持网络货运经营企业为小规模纳税人代缴税收。为网络货运经营企业提供实际货物运输服务的会员（小规模纳税人），鼓励网络货运经营企业代其向主管税务机关缴纳运输业务增值税，申请代开专用发票，并据以抵扣相应运输业务的进项税额。根据代缴税收情况，实施奖励，支持小规模货运经营业户稳定发展。</p>\n<p>　　另外，《办法》支持网络货运经营企业规模化发展。针对取得网络货运经营许可资质的原部省“无车承运人”试点企业等给予10万元至30万元的奖励。针对取得交通运输部门颁发的经营范围为“网络货运”的道路运输经营许可企业，经年度考核合格，且综合监测评估排名进入国家、省、市前列的，给予5万元至30万元的奖励。</p>\n<h2 id=\"4-陕西西安\"><a href=\"#4-陕西西安\" class=\"headerlink\" title=\"4.陕西西安\"></a>4.陕西西安</h2><p>　　3月11日，市发改委印发《西安市大力发展“三个经济”支持政策实施细则》的通知（以下简称细则），包括21条支持政策</p>\n<p>　　<strong>第5条：对在西安市注册且接入省道路货物运输监管平台的无车承运人试点企业(网络平台道路货物运输经营者)，给予其所缴纳增值税35%的等额资金奖励。(牵头单位：市交通局配合单位：市商务局、市财政局)</strong></p>\n<p>　</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":3890,"excerpt":"<h1 id=\"网络货运优惠政策\"><a href=\"#网络货运优惠政策\" class=\"headerlink\" title=\"网络货运优惠政策\"></a>网络货运优惠政策</h1><p>　　网络货运是在利用互联网技术开发的车货匹配平台的基础上发展起来的，通过互联网平台加数字化技术引用，在大数据的介入下，促使货运全网互联互通，借助智慧物流模式进行行业升级。<br>　　交通部重点强调全面贯彻、坚持发展的“互联网+”高效物流，通过发展网络货运，推动解决道路货运行业多年来积累的深层次矛盾和问题，有效解决货运经营者在配货理货方面的操心事、运费结算方面的烦心事、税收保险方面的揪心事。<br>　　从事网络货运经营的，是指经营者依托互联网平台整合配置运输资源，以承运人身份与托运人签订运输合同，委托实际承运人完成道路货物运输，承担承运人责任的道路货物运输经营活动<br></p>","more":"<p></p>\n<h2 id=\"1-甘肃金昌\"><a href=\"#1-甘肃金昌\" class=\"headerlink\" title=\"1.甘肃金昌\"></a>1.甘肃金昌</h2><p>　　近日，甘肃省印发了<strong>《网络平台道路货物运输经营管理实施细则（暂行）》</strong>（以下简称《细则》），对网络货运经营许可的准入和退出程序、管理部门的监督检查等提出了明确要求，给新业态规范健康发展创造良好的制度环境。</p>\n<p>　　此前全国已有18省2市相继出台了网络货运相关政策，各地为抢抓机遇，不少地方政府出台了很多前所未有的支持政策，比如贵州省将网络货运列为“交通强国”的试点项目重点扶持；甘肃省金昌市专门建设了网络货运线上数字产业园；天津市为网络货运上线了一个税务合规平台……</p>\n<p>　　值得关注的是，金昌在甘肃省《细则》出台之前就已启动了线上网络货运数字产业园建设，针对网络货运企业的优惠扶持力度也已出台，以其优质的服务和扶持政策，拉开了西部地区网络货运的大幕。</p>\n<p>　　金昌市位于甘肃省河西走廊东段，处于西部五省的核心位置，是甘肃省发展物流产业的重要节点和连接国家东、西部重要物流通道，地理位置优越。另外，金昌市地质灾害少，气候低温少雨，有适合大数据产业和网络货运新业态发展的先天优势。</p>\n<p>　　而金昌早在2017年就已经开始大数据产业布局，建设了紫金云大数据中心，近期又与阿帕数字共同建设了线上数字产业园项目。</p>\n<p>　　金昌作为资源型城市，有着巨大的运输需求的同时，也存在着运输“出多进少”的不均衡问题，而通过网络货运不但可以解决这个问题，同时还把数字产业引入了金昌，将来可依托数字产业园，实现“车在线上、货在云中”。</p>\n<p>　　<strong>金昌市投巨资建设了“骠骑网络货运管理系统”，免费提供给入驻企业使用。</strong>同时，应用区块链技术研发的“星水大数据监管平台”，打通了市场监管、交通、税务、财政等系统数据，对接省部级监管平台，缩短企业单独对接时长，实现税款的缴纳、统计与返还，对相关信息进行查询追踪、设立风险指标监控风险情况，可以极大地优化申报流程、减少对接时长、提高办理效率、节约申报成本，为企业省心、省力、更省钱！</p>\n<p>　　根据网络货运管理办法，一家物流企业想要正式转型网络货运平台，从系统开发、技术储备、资料整理、与政府部门沟通对接到获得网络货运许可证，完全按此流程跑一遍，时间大约需要3-6个月，投入一般在50万-100万。</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-313531c847e1c07f96173cdf45280d4a_720w.jpg\" alt=\"img\">网络货运办理流程</p>\n<p>　　金昌数字产业园把等保认证企业、ICP办理企业都联系入园，实现在线服务，入驻企业3个工作日便可以拿到营业执照，30天就能拿到网络货运许可证。更值得一提的是，园区对年营业额超亿元的网络货运企业给予ICP、等保三级最高补贴100%的优惠政策。</p>\n<p>　　同时，所有办公场所、设备、桌椅等全部免费为企业提供，这对企业来说，金昌可谓是为其准备了“一桌大餐”。</p>\n<p>　　财税合规物流企业在网络货运上最敏感的神经还是在财税方面：如何实现财税合规？最终企业实际税负是多少？</p>\n<p>　　<strong>金昌市对于入园企业给予5年培育期，发展数字产业，实行增值税、企业及个人所得税返还市区两级财政留存部分最高可达98%，司机个人所得税按照国家最低税率0.25%征收。</strong></p>\n<p>　　同时，公司财务记账、发票代开、税务处理等日常财务代理，园区更是提供一站式服务。</p>\n<h3 id=\"运营支持\"><a href=\"#运营支持\" class=\"headerlink\" title=\"运营支持\"></a>运营支持</h3><p>　　为方便前期项目接洽，<strong>金昌数字产业园在北京成立了招商中心，成立专业的招商服务队伍，针对网络货运企业定向服务，实行一套班子两个职能，面对企业进行招商，面对人才提供服务。</strong></p>\n<p>　　截止目前，已成功举办了两次金昌网络货运招商视频会议，参会企业达到152家，十余家企业正在积极洽谈沟通。</p>\n<p>　　在我国，制约物流企业做大做强的重要因素之一在于绝大多数民营物流企业普遍存在资金链偏紧，特别是上游押款严重、账期越来越长，而下游又需要即时支付甚至提前支付，这使得资金链紧张的局面又进一步加剧。</p>\n<p>　　与此同时，与制造企业相比，中小民营物流企业又因为固定资产少、可抵（质）押物受限、经营风险高、信用低且征信难等特性难以获得金融机构融资，导致最需要周转资金的中小物流企业反而最难获取周转资金融。</p>\n<p>　　<strong>对此，金昌数字产业园联合蚂蚁金服、普洛斯金融以及当地金融机构通过区块链监管平台帮助物流企业进行运费垫付、运费保理、ETC垫资、油费垫资。</strong></p>\n<p>　　目前可为每家物流企业最高授信额度运费保理2亿元、运费垫付500万、过路费垫付50万、ETC垫资50万、油气垫资20万，可有效解决物流企业融资难、融资贵的问题。</p>\n<p>　　不得不说，金昌市为了推动网络货运新业态的发展，可谓下足了功夫、用足了真心。毕竟，政府只有搭好了“梧桐树”，才能留得住“金凤凰”。</p>\n<h2 id=\"２-湖北\"><a href=\"#２-湖北\" class=\"headerlink\" title=\"２.湖北\"></a>２.湖北</h2><p>　　从湖北省运管局获悉，目前，湖北省普通货运车辆超过40万辆，道路货运是综合交通运输体系的重要组成部分，在国民经济发展中起着重要的基础服务作用。近日（18.12.04），湖北省运管局制定出台了<strong>《关于促进道路货运行业健康发展的八条意见》</strong>，以切实减轻道路货运经营者负担，改善从业环境，促进降本增效，努力推动道路货运行业健康稳定发展。</p>\n<p>　　一是优化货运行政许可。实行“三取消一限时”：从2019年1月1日起，取消道路货运站场经营许可、取消总质量4.5吨及以下普通货物运输车辆《道路运输证》、取消总质量4.5吨及以下普通货物运输车辆驾驶员《从业资格证》，普通货物运输经营许可审批在15个工作日内限时办结。</p>\n<p>　　二是优化货运车辆管理。全面实施本省籍道路货物运输车辆安检、综检、环保检“三检合一”；全面推进本省籍普通货物运输车辆省内异地年审。</p>\n<p>　　三是优化货运从业人员管理。推行普通货运道路运输驾驶员从业线上线下及异地考试；全面推进本省籍货运道路运输驾驶员异地考核；全面公开普通货运道路运输驾驶员从业考试题库；鼓励社会化平台开展从业人员继续教育服务。</p>\n<p>　　四是落实货运企业主体责任。督促道路货运企业建立健全企业管理制度，规范相关合同，强化车辆、人员等日常管理，落实安全生产主体责任，落实从业人员的管理与服务责任，落实规范经营行为、保障合法权益的社会责任。充分发挥道路运输行业社会中介组织的行业自律作用。</p>\n<p>　　<strong>五是支持无车承运人发展。支持国内无车承运人平台落户本省。鼓励本省普通货物运输经营者加入无车承运人平台。支持无车承运人平台为普货运输经营者提供货源、仓储、线路等大数据信息和全链条服务。</strong></p>\n<p>　　六是鼓励应用智能视频监控技术。鼓励货运企业应用4G视频监控、高级驾驶辅助、驾驶行为分析等车载新技术、新设备，加强对车辆运行状况、驾驶员驾驶行为、承运货物在途情况的监督管理，为社会提供更加优质、安全的货运服务。</p>\n<p>　　七是推进诚信体系建设。结合“信用交通省”创建工作,推进道路货运行业诚信建设，实行道路运输行业信用红黑名单制度，形成“守信时时便利、失信处处受限”的良好经营环境。</p>\n<p>　　八是自觉接受社会监督。加强道路货运行业政策法规宣传，全面公开道路货运经营许可政策、行业管理政策，主动公示审批程序、受理条件和办理时限，全面推行网上办事、实行限时办结、主动做好服务、接受社会监督。构建亲清新型政商关系，严禁运管机构私设门槛、引导个体司机挂靠经营、隐性变相“吃拿卡要”等行为，严肃问责相关责任人，维护公平公正市场环境。</p>\n<p>　　省运管局要求，全省各级运管机构提高思想认识、加强政策宣传、切实履行职责，及时将八条意见传达到货运企业和广大驾驶员，做好服务指导，确保执行到位。</p>\n<h2 id=\"3-湖南长沙\"><a href=\"#3-湖南长沙\" class=\"headerlink\" title=\"3. 湖南长沙\"></a>3. 湖南长沙</h2><p>　　湖南日报·新湖南客户端2月20日讯（记者 陈新）为支持长沙市道路货运企业复工复产，促进网络货运业发展壮大，记者今天从长沙市交通运输局获悉，近日长沙市交通运输局会同该市财政局、市税务局联合制发了<strong><a href=\"http://jtt.hunan.gov.cn/xxgk/gzdt/szdt1/202002/t20200224_11189518.html\">《支持网络货运业发展的财税奖补政策实施办法》</a></strong>，支持长沙市网络货运经营企业规模化发展，提升货物运输组织效率，降低物流成本，促进货运物流行业转型升级，提升道路货运业对经济增长的支撑作用，服务货运物流畅通和稳岗经济发展大局。</p>\n<p>　　《办法》规定，支持网络货运经营企业开展代开增值税发票试点。指导企业申报和获得“互联网物流平台企业代开增值税专用发票”资质。根据企业网络货运经营业务实缴税收规模情况，实施奖励，支持企业扩大再生产和规模化经营。同时，支持网络货运经营企业为小规模纳税人代缴税收。为网络货运经营企业提供实际货物运输服务的会员（小规模纳税人），鼓励网络货运经营企业代其向主管税务机关缴纳运输业务增值税，申请代开专用发票，并据以抵扣相应运输业务的进项税额。根据代缴税收情况，实施奖励，支持小规模货运经营业户稳定发展。</p>\n<p>　　另外，《办法》支持网络货运经营企业规模化发展。针对取得网络货运经营许可资质的原部省“无车承运人”试点企业等给予10万元至30万元的奖励。针对取得交通运输部门颁发的经营范围为“网络货运”的道路运输经营许可企业，经年度考核合格，且综合监测评估排名进入国家、省、市前列的，给予5万元至30万元的奖励。</p>\n<h2 id=\"4-陕西西安\"><a href=\"#4-陕西西安\" class=\"headerlink\" title=\"4.陕西西安\"></a>4.陕西西安</h2><p>　　3月11日，市发改委印发《西安市大力发展“三个经济”支持政策实施细则》的通知（以下简称细则），包括21条支持政策</p>\n<p>　　<strong>第5条：对在西安市注册且接入省道路货物运输监管平台的无车承运人试点企业(网络平台道路货物运输经营者)，给予其所缴纳增值税35%的等额资金奖励。(牵头单位：市交通局配合单位：市商务局、市财政局)</strong></p>\n<p>　</p>"},{"title":"php变量和常量","date":"2020-10-16T06:45:15.000Z","_content":"# PHP 变量作用域\n变量的作用域是脚本中变量可被引用/使用的部分。\nPHP 有四种不同的变量作用域：\n* local\n* global\n* static\n* parameter\n<!-- more -->\n\n## local\n　　默认情况下函数内部声明的变量皆为局部变量，仅在函数内部访问。\n\n## global\n1. global 关键字用于函数内访问全局变量。\n\n　　在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字：\n```php\n<?php\n$x=5;\n$y=10;\n\nfunction myTest()\n{\n    global $x,$y;\n    $y=$x+$y;\n}\n \nmyTest();\necho $y; // 输出 15\n?>\n```\n\n2. PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。\n\n　　上面的实例可以写成这样：\n```php\n<?php\n$x=5;\n$y=10;\n \nfunction myTest()\n{\n    $GLOBALS['y']=$GLOBALS['x']+$GLOBALS['y'];\n} \n \nmyTest();\necho $y;\n?>\n```\n\n## static\n局部变量在函数结束后不删除，且static语句只执行一次。\n\n## parameter\n参数在函数调用时被传递进函数内。\n\n# 字符串变量\n* 字符串连接用'.'\n* strlen() 函数返回字符串长度\n* strpos() 函数在字符串内查找一个字符或一段指定的文本，strpos(\"Hello world!\",\"world\")返回6。\n\n[字符串函数](https://www.runoob.com/php/php-ref-string.html)\n\n# 常量\n## 设置常量，使用 define() 函数，函数语法如下：\n```php\nbool define ( string $name , mixed $value [, bool $case_insensitive = false ] )\n```\n该函数有三个参数:\n\n* name：必选参数，常量名称，即标志符。\n* value：必选参数，常量的值。\n* case_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。\n\n以下实例我们创建一个 区分大小写的常量, 常量值为 \"欢迎访问 Runoob.com\"：\n```php\n<?php\n// 区分大小写的常量名\ndefine(\"GREETING\", \"欢迎访问 Runoob.com\");\necho GREETING;    // 输出 \"欢迎访问 Runoob.com\"\necho '<br>';\necho greeting;   // 输出 \"greeting\"\n?>\n```\n\n## 常量是全局的\n可以在整个脚本的任何地方使用","source":"_posts/php-1var.md","raw":"---\ntitle: php变量和常量\ndate: 2020-10-16 14:45:15\ntags:\n- php\ncategories: \n- frontend\n- php\n---\n# PHP 变量作用域\n变量的作用域是脚本中变量可被引用/使用的部分。\nPHP 有四种不同的变量作用域：\n* local\n* global\n* static\n* parameter\n<!-- more -->\n\n## local\n　　默认情况下函数内部声明的变量皆为局部变量，仅在函数内部访问。\n\n## global\n1. global 关键字用于函数内访问全局变量。\n\n　　在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字：\n```php\n<?php\n$x=5;\n$y=10;\n\nfunction myTest()\n{\n    global $x,$y;\n    $y=$x+$y;\n}\n \nmyTest();\necho $y; // 输出 15\n?>\n```\n\n2. PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。\n\n　　上面的实例可以写成这样：\n```php\n<?php\n$x=5;\n$y=10;\n \nfunction myTest()\n{\n    $GLOBALS['y']=$GLOBALS['x']+$GLOBALS['y'];\n} \n \nmyTest();\necho $y;\n?>\n```\n\n## static\n局部变量在函数结束后不删除，且static语句只执行一次。\n\n## parameter\n参数在函数调用时被传递进函数内。\n\n# 字符串变量\n* 字符串连接用'.'\n* strlen() 函数返回字符串长度\n* strpos() 函数在字符串内查找一个字符或一段指定的文本，strpos(\"Hello world!\",\"world\")返回6。\n\n[字符串函数](https://www.runoob.com/php/php-ref-string.html)\n\n# 常量\n## 设置常量，使用 define() 函数，函数语法如下：\n```php\nbool define ( string $name , mixed $value [, bool $case_insensitive = false ] )\n```\n该函数有三个参数:\n\n* name：必选参数，常量名称，即标志符。\n* value：必选参数，常量的值。\n* case_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。\n\n以下实例我们创建一个 区分大小写的常量, 常量值为 \"欢迎访问 Runoob.com\"：\n```php\n<?php\n// 区分大小写的常量名\ndefine(\"GREETING\", \"欢迎访问 Runoob.com\");\necho GREETING;    // 输出 \"欢迎访问 Runoob.com\"\necho '<br>';\necho greeting;   // 输出 \"greeting\"\n?>\n```\n\n## 常量是全局的\n可以在整个脚本的任何地方使用","slug":"php-1var","published":1,"updated":"2020-10-16T08:41:10.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0i1004fc8pv481ehx8i","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"PHP-变量作用域\"><a href=\"#PHP-变量作用域\" class=\"headerlink\" title=\"PHP 变量作用域\"></a>PHP 变量作用域</h1><p>变量的作用域是脚本中变量可被引用/使用的部分。<br>PHP 有四种不同的变量作用域：</p>\n<ul>\n<li>local</li>\n<li>global</li>\n<li>static</li>\n<li>parameter<a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"local\"><a href=\"#local\" class=\"headerlink\" title=\"local\"></a>local</h2><p>　　默认情况下函数内部声明的变量皆为局部变量，仅在函数内部访问。</p>\n<h2 id=\"global\"><a href=\"#global\" class=\"headerlink\" title=\"global\"></a>global</h2><ol>\n<li>global 关键字用于函数内访问全局变量。</li>\n</ol>\n<p>　　在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$x=<span class=\"number\">5</span>;</span><br><span class=\"line\">$y=<span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myTest</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $x,$y;</span><br><span class=\"line\">    $y=$x+$y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">myTest();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $y; <span class=\"comment\">// 输出 15</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。</li>\n</ol>\n<p>　　上面的实例可以写成这样：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$x=<span class=\"number\">5</span>;</span><br><span class=\"line\">$y=<span class=\"number\">10</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myTest</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">&#x27;y&#x27;</span>]=$GLOBALS[<span class=\"string\">&#x27;x&#x27;</span>]+$GLOBALS[<span class=\"string\">&#x27;y&#x27;</span>];</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">myTest();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $y;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p>局部变量在函数结束后不删除，且static语句只执行一次。</p>\n<h2 id=\"parameter\"><a href=\"#parameter\" class=\"headerlink\" title=\"parameter\"></a>parameter</h2><p>参数在函数调用时被传递进函数内。</p>\n<h1 id=\"字符串变量\"><a href=\"#字符串变量\" class=\"headerlink\" title=\"字符串变量\"></a>字符串变量</h1><ul>\n<li>字符串连接用’.’</li>\n<li>strlen() 函数返回字符串长度</li>\n<li>strpos() 函数在字符串内查找一个字符或一段指定的文本，strpos(“Hello world!”,”world”)返回6。</li>\n</ul>\n<p><a href=\"https://www.runoob.com/php/php-ref-string.html\">字符串函数</a></p>\n<h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><h2 id=\"设置常量，使用-define-函数，函数语法如下：\"><a href=\"#设置常量，使用-define-函数，函数语法如下：\" class=\"headerlink\" title=\"设置常量，使用 define() 函数，函数语法如下：\"></a>设置常量，使用 define() 函数，函数语法如下：</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">bool</span> define ( <span class=\"keyword\">string</span> $name , mixed $value [, <span class=\"keyword\">bool</span> $case_insensitive = <span class=\"literal\">false</span> ] )</span><br></pre></td></tr></table></figure>\n<p>该函数有三个参数:</p>\n<ul>\n<li>name：必选参数，常量名称，即标志符。</li>\n<li>value：必选参数，常量的值。</li>\n<li>case_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</li>\n</ul>\n<p>以下实例我们创建一个 区分大小写的常量, 常量值为 “欢迎访问 Runoob.com”：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 区分大小写的常量名</span></span><br><span class=\"line\">define(<span class=\"string\">&quot;GREETING&quot;</span>, <span class=\"string\">&quot;欢迎访问 Runoob.com&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> GREETING;    <span class=\"comment\">// 输出 &quot;欢迎访问 Runoob.com&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> greeting;   <span class=\"comment\">// 输出 &quot;greeting&quot;</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"常量是全局的\"><a href=\"#常量是全局的\" class=\"headerlink\" title=\"常量是全局的\"></a>常量是全局的</h2><p>可以在整个脚本的任何地方使用</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1136,"excerpt":"<h1 id=\"PHP-变量作用域\"><a href=\"#PHP-变量作用域\" class=\"headerlink\" title=\"PHP 变量作用域\"></a>PHP 变量作用域</h1><p>变量的作用域是脚本中变量可被引用/使用的部分。<br>PHP 有四种不同的变量作用域：</p>\n<ul>\n<li>local</li>\n<li>global</li>\n<li>static</li>\n<li>parameter</li></ul>","more":"\n\n<h2 id=\"local\"><a href=\"#local\" class=\"headerlink\" title=\"local\"></a>local</h2><p>　　默认情况下函数内部声明的变量皆为局部变量，仅在函数内部访问。</p>\n<h2 id=\"global\"><a href=\"#global\" class=\"headerlink\" title=\"global\"></a>global</h2><ol>\n<li>global 关键字用于函数内访问全局变量。</li>\n</ol>\n<p>　　在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$x=<span class=\"number\">5</span>;</span><br><span class=\"line\">$y=<span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myTest</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $x,$y;</span><br><span class=\"line\">    $y=$x+$y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">myTest();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $y; <span class=\"comment\">// 输出 15</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。</li>\n</ol>\n<p>　　上面的实例可以写成这样：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$x=<span class=\"number\">5</span>;</span><br><span class=\"line\">$y=<span class=\"number\">10</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myTest</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $GLOBALS[<span class=\"string\">&#x27;y&#x27;</span>]=$GLOBALS[<span class=\"string\">&#x27;x&#x27;</span>]+$GLOBALS[<span class=\"string\">&#x27;y&#x27;</span>];</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">myTest();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $y;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p>局部变量在函数结束后不删除，且static语句只执行一次。</p>\n<h2 id=\"parameter\"><a href=\"#parameter\" class=\"headerlink\" title=\"parameter\"></a>parameter</h2><p>参数在函数调用时被传递进函数内。</p>\n<h1 id=\"字符串变量\"><a href=\"#字符串变量\" class=\"headerlink\" title=\"字符串变量\"></a>字符串变量</h1><ul>\n<li>字符串连接用’.’</li>\n<li>strlen() 函数返回字符串长度</li>\n<li>strpos() 函数在字符串内查找一个字符或一段指定的文本，strpos(“Hello world!”,”world”)返回6。</li>\n</ul>\n<p><a href=\"https://www.runoob.com/php/php-ref-string.html\">字符串函数</a></p>\n<h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><h2 id=\"设置常量，使用-define-函数，函数语法如下：\"><a href=\"#设置常量，使用-define-函数，函数语法如下：\" class=\"headerlink\" title=\"设置常量，使用 define() 函数，函数语法如下：\"></a>设置常量，使用 define() 函数，函数语法如下：</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">bool</span> define ( <span class=\"keyword\">string</span> $name , mixed $value [, <span class=\"keyword\">bool</span> $case_insensitive = <span class=\"literal\">false</span> ] )</span><br></pre></td></tr></table></figure>\n<p>该函数有三个参数:</p>\n<ul>\n<li>name：必选参数，常量名称，即标志符。</li>\n<li>value：必选参数，常量的值。</li>\n<li>case_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</li>\n</ul>\n<p>以下实例我们创建一个 区分大小写的常量, 常量值为 “欢迎访问 Runoob.com”：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// 区分大小写的常量名</span></span><br><span class=\"line\">define(<span class=\"string\">&quot;GREETING&quot;</span>, <span class=\"string\">&quot;欢迎访问 Runoob.com&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> GREETING;    <span class=\"comment\">// 输出 &quot;欢迎访问 Runoob.com&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> greeting;   <span class=\"comment\">// 输出 &quot;greeting&quot;</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"常量是全局的\"><a href=\"#常量是全局的\" class=\"headerlink\" title=\"常量是全局的\"></a>常量是全局的</h2><p>可以在整个脚本的任何地方使用</p>"},{"title":"php运算符","date":"2020-10-16T08:10:42.000Z","_content":"# 比较运算符\n> 大多与c语言相同\n## 不同点：\n### ===\n绝对等于，如果 x 等于 y，且它们类型相同，则返回true。如5===\"5\" 返回 false\n### <>\n不等于，如果 x 不等于 y，则返回 true。如5<>8 返回 true \n### !==\n绝对不等于，如果 x 不等于 y，或它们类型不相同，则返回 true。5!==\"5\" 返回 true\n<!-- more -->\n\n# 三元运算符\n## 语法格式\n```php\n(expr1) ? (expr2) : (expr3) \n```\n　　对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。\n\n　　自 PHP 5.3 起，可以省略三元运算符中间那部分。表达式 expr1 ?: expr3 在 expr1 求值为 TRUE 时返回 expr1，否则返回 expr3。\n\n## 实例\n　　以下实例中通过判断 $_GET 请求中含有 user 值，如果有返回 $_GET['user']，否则返回 nobody：\n```php\n<?php\n$test = '菜鸟教程';\n// 普通写法\n$username = isset($test) ? $test : 'nobody';\necho $username, PHP_EOL;　//注意：PHP_EOL 是一个换行符，兼容更大平台。\n \n// PHP 5.3+ 版本写法\n$username = $test ?: 'nobody';\necho $username, PHP_EOL;\n?>\n```\n\n# 组合比较符(PHP7+)\n　　PHP7+ 支持组合比较符（combined comparison operator）也称之为太空船操作符，符号为 <=>。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较。\n\n语法格式如下：\n```php\n$c = $a <=> $b;\n```\n解析如下：\n\n如果 $a > $b, 则 $c 的值为 1。\n如果 $a == $b, 则 $c 的值为 0。\n如果 $a < $b, 则 $c 的值为 -1。","source":"_posts/php-3oprator.md","raw":"---\ntitle: php运算符\ndate: 2020-10-16 16:10:42\ntags:\n- php\ncategories: \n- frontend\n- php\n---\n# 比较运算符\n> 大多与c语言相同\n## 不同点：\n### ===\n绝对等于，如果 x 等于 y，且它们类型相同，则返回true。如5===\"5\" 返回 false\n### <>\n不等于，如果 x 不等于 y，则返回 true。如5<>8 返回 true \n### !==\n绝对不等于，如果 x 不等于 y，或它们类型不相同，则返回 true。5!==\"5\" 返回 true\n<!-- more -->\n\n# 三元运算符\n## 语法格式\n```php\n(expr1) ? (expr2) : (expr3) \n```\n　　对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。\n\n　　自 PHP 5.3 起，可以省略三元运算符中间那部分。表达式 expr1 ?: expr3 在 expr1 求值为 TRUE 时返回 expr1，否则返回 expr3。\n\n## 实例\n　　以下实例中通过判断 $_GET 请求中含有 user 值，如果有返回 $_GET['user']，否则返回 nobody：\n```php\n<?php\n$test = '菜鸟教程';\n// 普通写法\n$username = isset($test) ? $test : 'nobody';\necho $username, PHP_EOL;　//注意：PHP_EOL 是一个换行符，兼容更大平台。\n \n// PHP 5.3+ 版本写法\n$username = $test ?: 'nobody';\necho $username, PHP_EOL;\n?>\n```\n\n# 组合比较符(PHP7+)\n　　PHP7+ 支持组合比较符（combined comparison operator）也称之为太空船操作符，符号为 <=>。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较。\n\n语法格式如下：\n```php\n$c = $a <=> $b;\n```\n解析如下：\n\n如果 $a > $b, 则 $c 的值为 1。\n如果 $a == $b, 则 $c 的值为 0。\n如果 $a < $b, 则 $c 的值为 -1。","slug":"php-3oprator","published":1,"updated":"2020-10-16T08:30:48.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0i2004hc8pvb53fgaao","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h1><blockquote>\n<p>大多与c语言相同</p>\n<h2 id=\"不同点：\"><a href=\"#不同点：\" class=\"headerlink\" title=\"不同点：\"></a>不同点：</h2><h3 id><a href=\"#\" class=\"headerlink\" title=\"===\"></a>===</h3><p>绝对等于，如果 x 等于 y，且它们类型相同，则返回true。如5===”5” 返回 false</p>\n<h3 id=\"lt-gt\"><a href=\"#lt-gt\" class=\"headerlink\" title=\"&lt;&gt;\"></a>&lt;&gt;</h3><p>不等于，如果 x 不等于 y，则返回 true。如5&lt;&gt;8 返回 true </p>\n<h3 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"!==\"></a>!==</h3><p>绝对不等于，如果 x 不等于 y，或它们类型不相同，则返回 true。5!==”5” 返回 true<br><a id=\"more\"></a></p>\n</blockquote>\n<h1 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h1><h2 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(expr1) ? (expr2) : (expr3) </span><br></pre></td></tr></table></figure>\n<p>　　对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。</p>\n<p>　　自 PHP 5.3 起，可以省略三元运算符中间那部分。表达式 expr1 ?: expr3 在 expr1 求值为 TRUE 时返回 expr1，否则返回 expr3。</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>　　以下实例中通过判断 $_GET 请求中含有 user 值，如果有返回 $_GET[‘user’]，否则返回 nobody：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$test = <span class=\"string\">&#x27;菜鸟教程&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 普通写法</span></span><br><span class=\"line\">$username = <span class=\"keyword\">isset</span>($test) ? $test : <span class=\"string\">&#x27;nobody&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $username, PHP_EOL;　<span class=\"comment\">//注意：PHP_EOL 是一个换行符，兼容更大平台。</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// PHP 5.3+ 版本写法</span></span><br><span class=\"line\">$username = $test ?: <span class=\"string\">&#x27;nobody&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $username, PHP_EOL;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"组合比较符-PHP7\"><a href=\"#组合比较符-PHP7\" class=\"headerlink\" title=\"组合比较符(PHP7+)\"></a>组合比较符(PHP7+)</h1><p>　　PHP7+ 支持组合比较符（combined comparison operator）也称之为太空船操作符，符号为 &lt;=&gt;。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较。</p>\n<p>语法格式如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$c = $a &lt;=&gt; $b;</span><br></pre></td></tr></table></figure><br>解析如下：</p>\n<p>如果 $a &gt; $b, 则 $c 的值为 1。<br>如果 $a == $b, 则 $c 的值为 0。<br>如果 $a &lt; $b, 则 $c 的值为 -1。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":781,"excerpt":"<h1 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h1><blockquote>\n<p>大多与c语言相同</p>\n<h2 id=\"不同点：\"><a href=\"#不同点：\" class=\"headerlink\" title=\"不同点：\"></a>不同点：</h2><h3 id><a href=\"#\" class=\"headerlink\" title=\"===\"></a>===</h3><p>绝对等于，如果 x 等于 y，且它们类型相同，则返回true。如5===”5” 返回 false</p>\n<h3 id=\"lt-gt\"><a href=\"#lt-gt\" class=\"headerlink\" title=\"&lt;&gt;\"></a>&lt;&gt;</h3><p>不等于，如果 x 不等于 y，则返回 true。如5&lt;&gt;8 返回 true </p>\n<h3 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"!==\"></a>!==</h3><p>绝对不等于，如果 x 不等于 y，或它们类型不相同，则返回 true。5!==”5” 返回 true<br></p></blockquote>","more":"<p></p>\n\n<h1 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h1><h2 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(expr1) ? (expr2) : (expr3) </span><br></pre></td></tr></table></figure>\n<p>　　对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。</p>\n<p>　　自 PHP 5.3 起，可以省略三元运算符中间那部分。表达式 expr1 ?: expr3 在 expr1 求值为 TRUE 时返回 expr1，否则返回 expr3。</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>　　以下实例中通过判断 $_GET 请求中含有 user 值，如果有返回 $_GET[‘user’]，否则返回 nobody：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$test = <span class=\"string\">&#x27;菜鸟教程&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 普通写法</span></span><br><span class=\"line\">$username = <span class=\"keyword\">isset</span>($test) ? $test : <span class=\"string\">&#x27;nobody&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $username, PHP_EOL;　<span class=\"comment\">//注意：PHP_EOL 是一个换行符，兼容更大平台。</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// PHP 5.3+ 版本写法</span></span><br><span class=\"line\">$username = $test ?: <span class=\"string\">&#x27;nobody&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $username, PHP_EOL;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"组合比较符-PHP7\"><a href=\"#组合比较符-PHP7\" class=\"headerlink\" title=\"组合比较符(PHP7+)\"></a>组合比较符(PHP7+)</h1><p>　　PHP7+ 支持组合比较符（combined comparison operator）也称之为太空船操作符，符号为 &lt;=&gt;。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较。</p>\n<p>语法格式如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$c = $a &lt;=&gt; $b;</span><br></pre></td></tr></table></figure><br>解析如下：</p>\n<p>如果 $a &gt; $b, 则 $c 的值为 1。<br>如果 $a == $b, 则 $c 的值为 0。<br>如果 $a &lt; $b, 则 $c 的值为 -1。</p>"},{"title":"php EOF的使用","date":"2020-10-16T07:37:33.000Z","_content":">　　PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。\n<!-- more -->\n\n使用概述：\n\n1. 必须后接分号，否则编译通不过。\n2. EOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。\n3. 结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。\n4. 开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。\n5. 当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。\n\n实例\n```php\n<?php\necho <<<JK //JK可以用任何字符串代替，需要与后面一致\n        <h1>我的第一个标题</h1>\n        <p>我的第一个段落。</p>\nJK;\n// 结束需要独立一行且前后不能空格\n?>\n```","source":"_posts/php-2EOF.md","raw":"---\ntitle: php EOF的使用\ndate: 2020-10-16 15:37:33\ntags:\n- php\ncategories: \n- frontend\n- php\n---\n>　　PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。\n<!-- more -->\n\n使用概述：\n\n1. 必须后接分号，否则编译通不过。\n2. EOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。\n3. 结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。\n4. 开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。\n5. 当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。\n\n实例\n```php\n<?php\necho <<<JK //JK可以用任何字符串代替，需要与后面一致\n        <h1>我的第一个标题</h1>\n        <p>我的第一个段落。</p>\nJK;\n// 结束需要独立一行且前后不能空格\n?>\n```","slug":"php-2EOF","published":1,"updated":"2020-10-16T07:50:56.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0i3004lc8pv56s77d28","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p>　　PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。<br><a id=\"more\"></a></p>\n</blockquote>\n<p>使用概述：</p>\n<ol>\n<li>必须后接分号，否则编译通不过。</li>\n<li>EOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。</li>\n<li>结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。</li>\n<li>开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。</li>\n<li>当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。</li>\n</ol>\n<p>实例<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> &lt;&lt;&lt;JK <span class=\"comment\">//JK可以用任何字符串代替，需要与后面一致</span></span><br><span class=\"line\">        &lt;h1&gt;我的第一个标题&lt;/h1&gt;</span><br><span class=\"line\">        &lt;p&gt;我的第一个段落。&lt;/p&gt;</span><br><span class=\"line\">JK;</span><br><span class=\"line\"><span class=\"comment\">// 结束需要独立一行且前后不能空格</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":440,"excerpt":"<blockquote>\n<p>　　PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。<br></p></blockquote>","more":"<p></p>\n\n<p>使用概述：</p>\n<ol>\n<li>必须后接分号，否则编译通不过。</li>\n<li>EOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。</li>\n<li>结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。</li>\n<li>开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。</li>\n<li>当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。</li>\n</ol>\n<p>实例<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> &lt;&lt;&lt;JK <span class=\"comment\">//JK可以用任何字符串代替，需要与后面一致</span></span><br><span class=\"line\">        &lt;h1&gt;我的第一个标题&lt;/h1&gt;</span><br><span class=\"line\">        &lt;p&gt;我的第一个段落。&lt;/p&gt;</span><br><span class=\"line\">JK;</span><br><span class=\"line\"><span class=\"comment\">// 结束需要独立一行且前后不能空格</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>"},{"title":"php数组","date":"2020-10-16T08:41:50.000Z","_content":"{% note info %}\n[数组相关函数](https://www.runoob.com/php/php-ref-array.html)\n{% endnote %}\n# 分类\n* 数值数组 - 带有数字 ID 键的数组\n* 关联数组 - 带有指定的键的数组，每个键关联一个值\n* 多维数组 - 包含一个或多个数组的数组\n<!-- more -->\n\n## 数值数组\n### 定义\n1. 自动分配 ID 键\n```php\n$cars=array(\"Volvo\",\"BMW\",\"Toyota\");\n```\n2. 人工分配 ID 键：\n```php\n$cars[0]=\"Volvo\";\n$cars[1]=\"BMW\";\n$cars[2]=\"Toyota\";\n```\n\n### count() 函数\n返回数组元素数量\n\n## 关联数组\n### 定义\n1. \n```php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\n```\n2. \n```php\n$age['Peter']=\"35\";\n$age['Ben']=\"37\";\n$age['Joe']=\"43\";\n```\n### 遍历关联数组\n遍历并打印关联数组中的所有值，您可以使用 foreach 循环，如下所示：\n```php\n<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\n \nforeach($age as $x=>$x_value)\n{\n    echo \"Key=\" . $x . \", Value=\" . $x_value . PHP_EOL;\n}\n?>\n```\n\n# 数组排序\n* sort() - 对数组进行升序排列\n* rsort() - 对数组进行降序排列\n* asort() - 根据关联数组的值，对数组进行升序排列\n* ksort() - 根据关联数组的键，对数组进行升序排列\n* arsort() - 根据关联数组的值，对数组进行降序排列\n* krsort() - 根据关联数组的键，对数组进行降序排列\n\n","source":"_posts/php-4array.md","raw":"---\ntitle: php数组\ndate: 2020-10-16 16:41:50\ntags:\n- php\ncategories: \n- frontend\n- php\n---\n{% note info %}\n[数组相关函数](https://www.runoob.com/php/php-ref-array.html)\n{% endnote %}\n# 分类\n* 数值数组 - 带有数字 ID 键的数组\n* 关联数组 - 带有指定的键的数组，每个键关联一个值\n* 多维数组 - 包含一个或多个数组的数组\n<!-- more -->\n\n## 数值数组\n### 定义\n1. 自动分配 ID 键\n```php\n$cars=array(\"Volvo\",\"BMW\",\"Toyota\");\n```\n2. 人工分配 ID 键：\n```php\n$cars[0]=\"Volvo\";\n$cars[1]=\"BMW\";\n$cars[2]=\"Toyota\";\n```\n\n### count() 函数\n返回数组元素数量\n\n## 关联数组\n### 定义\n1. \n```php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\n```\n2. \n```php\n$age['Peter']=\"35\";\n$age['Ben']=\"37\";\n$age['Joe']=\"43\";\n```\n### 遍历关联数组\n遍历并打印关联数组中的所有值，您可以使用 foreach 循环，如下所示：\n```php\n<?php\n$age=array(\"Peter\"=>\"35\",\"Ben\"=>\"37\",\"Joe\"=>\"43\");\n \nforeach($age as $x=>$x_value)\n{\n    echo \"Key=\" . $x . \", Value=\" . $x_value . PHP_EOL;\n}\n?>\n```\n\n# 数组排序\n* sort() - 对数组进行升序排列\n* rsort() - 对数组进行降序排列\n* asort() - 根据关联数组的值，对数组进行升序排列\n* ksort() - 根据关联数组的键，对数组进行升序排列\n* arsort() - 根据关联数组的值，对数组进行降序排列\n* krsort() - 根据关联数组的键，对数组进行降序排列\n\n","slug":"php-4array","published":1,"updated":"2020-10-18T06:13:21.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0i5004mc8pvb8z7bq60","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p><a href=\"https://www.runoob.com/php/php-ref-array.html\">数组相关函数</a></p>\n          </div>\n<h1 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h1><ul>\n<li>数值数组 - 带有数字 ID 键的数组</li>\n<li>关联数组 - 带有指定的键的数组，每个键关联一个值</li>\n<li>多维数组 - 包含一个或多个数组的数组<a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"数值数组\"><a href=\"#数值数组\" class=\"headerlink\" title=\"数值数组\"></a>数值数组</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ol>\n<li>自动分配 ID 键<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$cars=<span class=\"keyword\">array</span>(<span class=\"string\">&quot;Volvo&quot;</span>,<span class=\"string\">&quot;BMW&quot;</span>,<span class=\"string\">&quot;Toyota&quot;</span>);</span><br></pre></td></tr></table></figure></li>\n<li>人工分配 ID 键：<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$cars[<span class=\"number\">0</span>]=<span class=\"string\">&quot;Volvo&quot;</span>;</span><br><span class=\"line\">$cars[<span class=\"number\">1</span>]=<span class=\"string\">&quot;BMW&quot;</span>;</span><br><span class=\"line\">$cars[<span class=\"number\">2</span>]=<span class=\"string\">&quot;Toyota&quot;</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"count-函数\"><a href=\"#count-函数\" class=\"headerlink\" title=\"count() 函数\"></a>count() 函数</h3><p>返回数组元素数量</p>\n<h2 id=\"关联数组\"><a href=\"#关联数组\" class=\"headerlink\" title=\"关联数组\"></a>关联数组</h2><h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ol>\n<li><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$age=<span class=\"keyword\">array</span>(<span class=\"string\">&quot;Peter&quot;</span>=&gt;<span class=\"string\">&quot;35&quot;</span>,<span class=\"string\">&quot;Ben&quot;</span>=&gt;<span class=\"string\">&quot;37&quot;</span>,<span class=\"string\">&quot;Joe&quot;</span>=&gt;<span class=\"string\">&quot;43&quot;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$age[<span class=\"string\">&#x27;Peter&#x27;</span>]=<span class=\"string\">&quot;35&quot;</span>;</span><br><span class=\"line\">$age[<span class=\"string\">&#x27;Ben&#x27;</span>]=<span class=\"string\">&quot;37&quot;</span>;</span><br><span class=\"line\">$age[<span class=\"string\">&#x27;Joe&#x27;</span>]=<span class=\"string\">&quot;43&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"遍历关联数组\"><a href=\"#遍历关联数组\" class=\"headerlink\" title=\"遍历关联数组\"></a>遍历关联数组</h3>遍历并打印关联数组中的所有值，您可以使用 foreach 循环，如下所示：<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$age=<span class=\"keyword\">array</span>(<span class=\"string\">&quot;Peter&quot;</span>=&gt;<span class=\"string\">&quot;35&quot;</span>,<span class=\"string\">&quot;Ben&quot;</span>=&gt;<span class=\"string\">&quot;37&quot;</span>,<span class=\"string\">&quot;Joe&quot;</span>=&gt;<span class=\"string\">&quot;43&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($age <span class=\"keyword\">as</span> $x=&gt;$x_value)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Key=&quot;</span> . $x . <span class=\"string\">&quot;, Value=&quot;</span> . $x_value . PHP_EOL;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"数组排序\"><a href=\"#数组排序\" class=\"headerlink\" title=\"数组排序\"></a>数组排序</h1><ul>\n<li>sort() - 对数组进行升序排列</li>\n<li>rsort() - 对数组进行降序排列</li>\n<li>asort() - 根据关联数组的值，对数组进行升序排列</li>\n<li>ksort() - 根据关联数组的键，对数组进行升序排列</li>\n<li>arsort() - 根据关联数组的值，对数组进行降序排列</li>\n<li>krsort() - 根据关联数组的键，对数组进行降序排列</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":920,"excerpt":"<div class=\"note info\">\n            <p><a href=\"https://www.runoob.com/php/php-ref-array.html\">数组相关函数</a></p>\n          </div>\n<h1 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h1><ul>\n<li>数值数组 - 带有数字 ID 键的数组</li>\n<li>关联数组 - 带有指定的键的数组，每个键关联一个值</li>\n<li>多维数组 - 包含一个或多个数组的数组</li></ul>","more":"\n\n<h2 id=\"数值数组\"><a href=\"#数值数组\" class=\"headerlink\" title=\"数值数组\"></a>数值数组</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ol>\n<li>自动分配 ID 键<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$cars=<span class=\"keyword\">array</span>(<span class=\"string\">&quot;Volvo&quot;</span>,<span class=\"string\">&quot;BMW&quot;</span>,<span class=\"string\">&quot;Toyota&quot;</span>);</span><br></pre></td></tr></table></figure></li>\n<li>人工分配 ID 键：<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$cars[<span class=\"number\">0</span>]=<span class=\"string\">&quot;Volvo&quot;</span>;</span><br><span class=\"line\">$cars[<span class=\"number\">1</span>]=<span class=\"string\">&quot;BMW&quot;</span>;</span><br><span class=\"line\">$cars[<span class=\"number\">2</span>]=<span class=\"string\">&quot;Toyota&quot;</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"count-函数\"><a href=\"#count-函数\" class=\"headerlink\" title=\"count() 函数\"></a>count() 函数</h3><p>返回数组元素数量</p>\n<h2 id=\"关联数组\"><a href=\"#关联数组\" class=\"headerlink\" title=\"关联数组\"></a>关联数组</h2><h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ol>\n<li><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$age=<span class=\"keyword\">array</span>(<span class=\"string\">&quot;Peter&quot;</span>=&gt;<span class=\"string\">&quot;35&quot;</span>,<span class=\"string\">&quot;Ben&quot;</span>=&gt;<span class=\"string\">&quot;37&quot;</span>,<span class=\"string\">&quot;Joe&quot;</span>=&gt;<span class=\"string\">&quot;43&quot;</span>);</span><br></pre></td></tr></table></figure></li>\n<li><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$age[<span class=\"string\">&#x27;Peter&#x27;</span>]=<span class=\"string\">&quot;35&quot;</span>;</span><br><span class=\"line\">$age[<span class=\"string\">&#x27;Ben&#x27;</span>]=<span class=\"string\">&quot;37&quot;</span>;</span><br><span class=\"line\">$age[<span class=\"string\">&#x27;Joe&#x27;</span>]=<span class=\"string\">&quot;43&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"遍历关联数组\"><a href=\"#遍历关联数组\" class=\"headerlink\" title=\"遍历关联数组\"></a>遍历关联数组</h3>遍历并打印关联数组中的所有值，您可以使用 foreach 循环，如下所示：<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$age=<span class=\"keyword\">array</span>(<span class=\"string\">&quot;Peter&quot;</span>=&gt;<span class=\"string\">&quot;35&quot;</span>,<span class=\"string\">&quot;Ben&quot;</span>=&gt;<span class=\"string\">&quot;37&quot;</span>,<span class=\"string\">&quot;Joe&quot;</span>=&gt;<span class=\"string\">&quot;43&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">foreach</span>($age <span class=\"keyword\">as</span> $x=&gt;$x_value)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Key=&quot;</span> . $x . <span class=\"string\">&quot;, Value=&quot;</span> . $x_value . PHP_EOL;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"数组排序\"><a href=\"#数组排序\" class=\"headerlink\" title=\"数组排序\"></a>数组排序</h1><ul>\n<li>sort() - 对数组进行升序排列</li>\n<li>rsort() - 对数组进行降序排列</li>\n<li>asort() - 根据关联数组的值，对数组进行升序排列</li>\n<li>ksort() - 根据关联数组的键，对数组进行升序排列</li>\n<li>arsort() - 根据关联数组的值，对数组进行降序排列</li>\n<li>krsort() - 根据关联数组的键，对数组进行降序排列</li>\n</ul>"},{"title":"php超级全局变量","date":"2020-10-16T09:13:09.000Z","_content":"　　PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。\n\n> [详细介绍](https://www.runoob.com/php/php-superglobals.html)\n<!-- more -->\n# PHP 超级全局变量列表:\n* $GLOBALS\n* $_SERVER\n* $_REQUEST\n* $_POST\n* $_GET\n* $_FILES\n* $_ENV\n* $_COOKIE\n* $_SESSION\n\n# 本文具体介绍$_POST和$_GET\n## $_POST\n　　PHP $_POST 被广泛应用于收集表单数据，在HTML form标签的指定该属性：\"method=\"post\"。\n\n　　以下实例显示了两个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 \"Submit\" 按钮提交表单数据时, 表单数据将发送至<form>标签中 action 属性中指定的脚本文件。 在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量 $_POST 来收集表单中的 input 字段数据:\n### form.html 文件代码：\n```html\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n \n<form action=\"welcome.php\" method=\"post\">\n名字: <input type=\"text\" name=\"fname\">\n年龄: <input type=\"text\" name=\"age\">\n<input type=\"submit\" value=\"提交\">\n</form>\n \n</body>\n</html>\n```\n　　当用户填写完上面的表单并点击提交按钮时，表单的数据会被送往名为 \"welcome.php\" 的 PHP 文件：\n\n### welcome.php 文件代码：\n```php\n欢迎<?php echo $_POST[\"fname\"]; ?>!<br>\n你的年龄是 <?php echo $_POST[\"age\"]; ?>  岁。\n```\n\n## $_GET\n　　PHP $_GET 同样被广泛应用于收集表单数据，在HTML form标签的指定该属性：\"method=\"get\"。\n\n　　$_GET 也可以收集URL中发送的数据。\n### html代码\n```html\n<html>\n<body>\n\n<a href=\"test_get.php?subject=PHP&web=runoob.com\">Test $GET</a>\n\n</body>\n</html>\n```\n　　当用户点击链接 \"Test $GET\", 参数 \"subject\" 和 \"web\" 将发送至\"test_get.php\",你可以在 \"test_get.php\" 文件中使用 $_GET 变量来获取这些数据。\n\n### test_get.php\n```php\n<?php \necho \"Study \" . $_GET['subject'] . \" @ \" . $_GET['web'];\n?>\n```\n","source":"_posts/php-5superglobal.md","raw":"---\ntitle: php超级全局变量\ndate: 2020-10-16 17:13:09\ntags:\n- php\ncategories: \n- frontend\n- php\n---\n　　PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。\n\n> [详细介绍](https://www.runoob.com/php/php-superglobals.html)\n<!-- more -->\n# PHP 超级全局变量列表:\n* $GLOBALS\n* $_SERVER\n* $_REQUEST\n* $_POST\n* $_GET\n* $_FILES\n* $_ENV\n* $_COOKIE\n* $_SESSION\n\n# 本文具体介绍$_POST和$_GET\n## $_POST\n　　PHP $_POST 被广泛应用于收集表单数据，在HTML form标签的指定该属性：\"method=\"post\"。\n\n　　以下实例显示了两个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 \"Submit\" 按钮提交表单数据时, 表单数据将发送至<form>标签中 action 属性中指定的脚本文件。 在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量 $_POST 来收集表单中的 input 字段数据:\n### form.html 文件代码：\n```html\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n \n<form action=\"welcome.php\" method=\"post\">\n名字: <input type=\"text\" name=\"fname\">\n年龄: <input type=\"text\" name=\"age\">\n<input type=\"submit\" value=\"提交\">\n</form>\n \n</body>\n</html>\n```\n　　当用户填写完上面的表单并点击提交按钮时，表单的数据会被送往名为 \"welcome.php\" 的 PHP 文件：\n\n### welcome.php 文件代码：\n```php\n欢迎<?php echo $_POST[\"fname\"]; ?>!<br>\n你的年龄是 <?php echo $_POST[\"age\"]; ?>  岁。\n```\n\n## $_GET\n　　PHP $_GET 同样被广泛应用于收集表单数据，在HTML form标签的指定该属性：\"method=\"get\"。\n\n　　$_GET 也可以收集URL中发送的数据。\n### html代码\n```html\n<html>\n<body>\n\n<a href=\"test_get.php?subject=PHP&web=runoob.com\">Test $GET</a>\n\n</body>\n</html>\n```\n　　当用户点击链接 \"Test $GET\", 参数 \"subject\" 和 \"web\" 将发送至\"test_get.php\",你可以在 \"test_get.php\" 文件中使用 $_GET 变量来获取这些数据。\n\n### test_get.php\n```php\n<?php \necho \"Study \" . $_GET['subject'] . \" @ \" . $_GET['web'];\n?>\n```\n","slug":"php-5superglobal","published":1,"updated":"2020-10-16T09:25:38.152Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0i7004pc8pv6hjf59h6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>　　PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。</p>\n<blockquote>\n<p><a href=\"https://www.runoob.com/php/php-superglobals.html\">详细介绍</a><br><a id=\"more\"></a></p>\n<h1 id=\"PHP-超级全局变量列表\"><a href=\"#PHP-超级全局变量列表\" class=\"headerlink\" title=\"PHP 超级全局变量列表:\"></a>PHP 超级全局变量列表:</h1><ul>\n<li>$GLOBALS</li>\n<li>$_SERVER</li>\n<li>$_REQUEST</li>\n<li>$_POST</li>\n<li>$_GET</li>\n<li>$_FILES</li>\n<li>$_ENV</li>\n<li>$_COOKIE</li>\n<li>$_SESSION</li>\n</ul>\n</blockquote>\n<h1 id=\"本文具体介绍-POST和-GET\"><a href=\"#本文具体介绍-POST和-GET\" class=\"headerlink\" title=\"本文具体介绍$_POST和$_GET\"></a>本文具体介绍$_POST和$_GET</h1><h2 id=\"POST\"><a href=\"#POST\" class=\"headerlink\" title=\"$_POST\"></a>$_POST</h2><p>　　PHP $_POST 被广泛应用于收集表单数据，在HTML form标签的指定该属性：”method=”post”。</p>\n<p>　　以下实例显示了两个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 “Submit” 按钮提交表单数据时, 表单数据将发送至<form>标签中 action 属性中指定的脚本文件。 在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量 $_POST 来收集表单中的 input 字段数据:</form></p>\n<h3 id=\"form-html-文件代码：\"><a href=\"#form-html-文件代码：\" class=\"headerlink\" title=\"form.html 文件代码：\"></a>form.html 文件代码：</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>菜鸟教程(runoob.com)<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;welcome.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　当用户填写完上面的表单并点击提交按钮时，表单的数据会被送往名为 “welcome.php” 的 PHP 文件：</p>\n<h3 id=\"welcome-php-文件代码：\"><a href=\"#welcome-php-文件代码：\" class=\"headerlink\" title=\"welcome.php 文件代码：\"></a>welcome.php 文件代码：</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">欢迎<span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> $_POST[<span class=\"string\">&quot;fname&quot;</span>]; <span class=\"meta\">?&gt;</span>!&lt;br&gt;</span><br><span class=\"line\">你的年龄是 <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> $_POST[<span class=\"string\">&quot;age&quot;</span>]; <span class=\"meta\">?&gt;</span>  岁。</span><br></pre></td></tr></table></figure>\n<h2 id=\"GET\"><a href=\"#GET\" class=\"headerlink\" title=\"$_GET\"></a>$_GET</h2><p>　　PHP $_GET 同样被广泛应用于收集表单数据，在HTML form标签的指定该属性：”method=”get”。</p>\n<p>　　$_GET 也可以收集URL中发送的数据。</p>\n<h3 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;test_get.php?subject=PHP&amp;web=runoob.com&quot;</span>&gt;</span>Test $GET<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　当用户点击链接 “Test $GET”, 参数 “subject” 和 “web” 将发送至”test_get.php”,你可以在 “test_get.php” 文件中使用 $_GET 变量来获取这些数据。</p>\n<h3 id=\"test-get-php\"><a href=\"#test-get-php\" class=\"headerlink\" title=\"test_get.php\"></a>test_get.php</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;Study &quot;</span> . $_GET[<span class=\"string\">&#x27;subject&#x27;</span>] . <span class=\"string\">&quot; @ &quot;</span> . $_GET[<span class=\"string\">&#x27;web&#x27;</span>];</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1473,"excerpt":"<p>　　PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。</p>\n<blockquote>\n<p><a href=\"https://www.runoob.com/php/php-superglobals.html\">详细介绍</a><br></p></blockquote>","more":"<p></p>\n<h1 id=\"PHP-超级全局变量列表\"><a href=\"#PHP-超级全局变量列表\" class=\"headerlink\" title=\"PHP 超级全局变量列表:\"></a>PHP 超级全局变量列表:</h1><ul>\n<li>$GLOBALS</li>\n<li>$_SERVER</li>\n<li>$_REQUEST</li>\n<li>$_POST</li>\n<li>$_GET</li>\n<li>$_FILES</li>\n<li>$_ENV</li>\n<li>$_COOKIE</li>\n<li>$_SESSION</li>\n</ul>\n\n<h1 id=\"本文具体介绍-POST和-GET\"><a href=\"#本文具体介绍-POST和-GET\" class=\"headerlink\" title=\"本文具体介绍$_POST和$_GET\"></a>本文具体介绍$_POST和$_GET</h1><h2 id=\"POST\"><a href=\"#POST\" class=\"headerlink\" title=\"$_POST\"></a>$_POST</h2><p>　　PHP $_POST 被广泛应用于收集表单数据，在HTML form标签的指定该属性：”method=”post”。</p>\n<p>　　以下实例显示了两个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 “Submit” 按钮提交表单数据时, 表单数据将发送至<form>标签中 action 属性中指定的脚本文件。 在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量 $_POST 来收集表单中的 input 字段数据:</form></p>\n<h3 id=\"form-html-文件代码：\"><a href=\"#form-html-文件代码：\" class=\"headerlink\" title=\"form.html 文件代码：\"></a>form.html 文件代码：</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>菜鸟教程(runoob.com)<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;welcome.php&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">名字: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fname&quot;</span>&gt;</span></span><br><span class=\"line\">年龄: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　当用户填写完上面的表单并点击提交按钮时，表单的数据会被送往名为 “welcome.php” 的 PHP 文件：</p>\n<h3 id=\"welcome-php-文件代码：\"><a href=\"#welcome-php-文件代码：\" class=\"headerlink\" title=\"welcome.php 文件代码：\"></a>welcome.php 文件代码：</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">欢迎<span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> $_POST[<span class=\"string\">&quot;fname&quot;</span>]; <span class=\"meta\">?&gt;</span>!&lt;br&gt;</span><br><span class=\"line\">你的年龄是 <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> $_POST[<span class=\"string\">&quot;age&quot;</span>]; <span class=\"meta\">?&gt;</span>  岁。</span><br></pre></td></tr></table></figure>\n<h2 id=\"GET\"><a href=\"#GET\" class=\"headerlink\" title=\"$_GET\"></a>$_GET</h2><p>　　PHP $_GET 同样被广泛应用于收集表单数据，在HTML form标签的指定该属性：”method=”get”。</p>\n<p>　　$_GET 也可以收集URL中发送的数据。</p>\n<h3 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;test_get.php?subject=PHP&amp;web=runoob.com&quot;</span>&gt;</span>Test $GET<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　当用户点击链接 “Test $GET”, 参数 “subject” 和 “web” 将发送至”test_get.php”,你可以在 “test_get.php” 文件中使用 $_GET 变量来获取这些数据。</p>\n<h3 id=\"test-get-php\"><a href=\"#test-get-php\" class=\"headerlink\" title=\"test_get.php\"></a>test_get.php</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;Study &quot;</span> . $_GET[<span class=\"string\">&#x27;subject&#x27;</span>] . <span class=\"string\">&quot; @ &quot;</span> . $_GET[<span class=\"string\">&#x27;web&#x27;</span>];</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"php面向对象","date":"2020-10-18T06:02:29.000Z","_content":"　　PHP的面向对象大体和C++相同，下面具体阐述php的不同之处。\n# PHP 构造函数\n　　构造函数是一种特殊的方法。主要用来在创建对象时初始化对象， 即为对象成员变量赋初始值，在创建对象的语句中与 new 运算符一起使用。\n\n　　PHP 5 允许开发者在一个类中定义一个方法作为构造函数，语法格式如下：\n```php\nvoid __construct ([ mixed $args [, $... ]] ){}\n```\n<!-- more -->\n在上面的例子中我们就可以通过构造方法来初始化 $url 和 $title 变量：\n```php\nfunction __construct( $par1, $par2 ) {\n   $this->url = $par1;\n   $this->title = $par2;\n}\n```\n现在我们就不需要再调用 setTitle 和 setUrl 方法了：\n```php\n$runoob = new Site('www.runoob.com', '菜鸟教程');\n```\n---\n\n# 析构函数\n　　析构函数(destructor) 与构造函数相反，当对象结束其生命周期时（例如对象所在的函数已调用完毕），系统自动执行析构函数。\n\n　　PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言，其语法格式如下：\n```php\nvoid __destruct ( void ){}\n```\n---\n\n# 常量\n```php\nclass MyClass\n{\n    const constant = '常量值';   //定义\n\n    function showConstant() {\n        echo  self::constant . PHP_EOL;  //使用\n    }\n}\n```\n---\n\n# Static 关键字\n　　声明类属性或方法为 static(静态)，就可以不实例化类而直接访问。\n　　静态属性访问用‘::’\n　　定义静态属性：\n```php\n<?php\nclass Foo {\n  public static $my_static = 'foo';\n}\n?>\n```\n　　访问静态属性：\n```php\n//直接访问类属性\nprint Foo::$my_static . PHP_EOL;\n//实例化后访问\n$foo = new Foo();\nprint $foo::$my_static . PHP_EOL;\n```\n---\n\n# 调用父类构造方法\n　　PHP 不会在子类的构造方法中自动的调用父类的构造方法。要执行父类的构造方法，需要在子类的构造方法中调用 parent::__construct() 。","source":"_posts/php-7oop.md","raw":"---\ntitle: php面向对象\ndate: 2020-10-18 14:02:29\ntags:\n- php\ncategories: \n- frontend\n- php\n---\n　　PHP的面向对象大体和C++相同，下面具体阐述php的不同之处。\n# PHP 构造函数\n　　构造函数是一种特殊的方法。主要用来在创建对象时初始化对象， 即为对象成员变量赋初始值，在创建对象的语句中与 new 运算符一起使用。\n\n　　PHP 5 允许开发者在一个类中定义一个方法作为构造函数，语法格式如下：\n```php\nvoid __construct ([ mixed $args [, $... ]] ){}\n```\n<!-- more -->\n在上面的例子中我们就可以通过构造方法来初始化 $url 和 $title 变量：\n```php\nfunction __construct( $par1, $par2 ) {\n   $this->url = $par1;\n   $this->title = $par2;\n}\n```\n现在我们就不需要再调用 setTitle 和 setUrl 方法了：\n```php\n$runoob = new Site('www.runoob.com', '菜鸟教程');\n```\n---\n\n# 析构函数\n　　析构函数(destructor) 与构造函数相反，当对象结束其生命周期时（例如对象所在的函数已调用完毕），系统自动执行析构函数。\n\n　　PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言，其语法格式如下：\n```php\nvoid __destruct ( void ){}\n```\n---\n\n# 常量\n```php\nclass MyClass\n{\n    const constant = '常量值';   //定义\n\n    function showConstant() {\n        echo  self::constant . PHP_EOL;  //使用\n    }\n}\n```\n---\n\n# Static 关键字\n　　声明类属性或方法为 static(静态)，就可以不实例化类而直接访问。\n　　静态属性访问用‘::’\n　　定义静态属性：\n```php\n<?php\nclass Foo {\n  public static $my_static = 'foo';\n}\n?>\n```\n　　访问静态属性：\n```php\n//直接访问类属性\nprint Foo::$my_static . PHP_EOL;\n//实例化后访问\n$foo = new Foo();\nprint $foo::$my_static . PHP_EOL;\n```\n---\n\n# 调用父类构造方法\n　　PHP 不会在子类的构造方法中自动的调用父类的构造方法。要执行父类的构造方法，需要在子类的构造方法中调用 parent::__construct() 。","slug":"php-7oop","published":1,"updated":"2020-10-18T07:55:38.882Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0i8004rc8pven5o06es","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>　　PHP的面向对象大体和C++相同，下面具体阐述php的不同之处。</p>\n<h1 id=\"PHP-构造函数\"><a href=\"#PHP-构造函数\" class=\"headerlink\" title=\"PHP 构造函数\"></a>PHP 构造函数</h1><p>　　构造函数是一种特殊的方法。主要用来在创建对象时初始化对象， 即为对象成员变量赋初始值，在创建对象的语句中与 new 运算符一起使用。</p>\n<p>　　PHP 5 允许开发者在一个类中定义一个方法作为构造函数，语法格式如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> __construct ([ mixed $args [, $... ]] )&#123;&#125;</span><br></pre></td></tr></table></figure><br><a id=\"more\"></a><br>在上面的例子中我们就可以通过构造方法来初始化 $url 和 $title 变量：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"> $par1, $par2 </span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">$this</span>-&gt;url = $par1;</span><br><span class=\"line\">   <span class=\"keyword\">$this</span>-&gt;title = $par2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>现在我们就不需要再调用 setTitle 和 setUrl 方法了：</p>\n<h2 id><a href=\"#\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$runoob = <span class=\"keyword\">new</span> Site(<span class=\"string\">&#x27;www.runoob.com&#x27;</span>, <span class=\"string\">&#x27;菜鸟教程&#x27;</span>);</span><br></pre></td></tr></table></figure></h2><h1 id=\"析构函数\"><a href=\"#析构函数\" class=\"headerlink\" title=\"析构函数\"></a>析构函数</h1><p>　　析构函数(destructor) 与构造函数相反，当对象结束其生命周期时（例如对象所在的函数已调用完毕），系统自动执行析构函数。</p>\n<p>　　PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言，其语法格式如下：</p>\n<h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> __destruct ( <span class=\"keyword\">void</span> )&#123;&#125;</span><br></pre></td></tr></table></figure></h2><h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><h2 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> constant = <span class=\"string\">&#x27;常量值&#x27;</span>;   <span class=\"comment\">//定义</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showConstant</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span>  <span class=\"built_in\">self</span>::constant . PHP_EOL;  <span class=\"comment\">//使用</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></h2><h1 id=\"Static-关键字\"><a href=\"#Static-关键字\" class=\"headerlink\" title=\"Static 关键字\"></a>Static 关键字</h1><p>　　声明类属性或方法为 static(静态)，就可以不实例化类而直接访问。<br>　　静态属性访问用‘::’<br>　　定义静态属性：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> $my_static = <span class=\"string\">&#x27;foo&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>　　访问静态属性：</p>\n<h2 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//直接访问类属性</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> Foo::$my_static . PHP_EOL;</span><br><span class=\"line\"><span class=\"comment\">//实例化后访问</span></span><br><span class=\"line\">$foo = <span class=\"keyword\">new</span> Foo();</span><br><span class=\"line\"><span class=\"keyword\">print</span> $foo::$my_static . PHP_EOL;</span><br></pre></td></tr></table></figure></h2><h1 id=\"调用父类构造方法\"><a href=\"#调用父类构造方法\" class=\"headerlink\" title=\"调用父类构造方法\"></a>调用父类构造方法</h1><p>　　PHP 不会在子类的构造方法中自动的调用父类的构造方法。要执行父类的构造方法，需要在子类的构造方法中调用 parent::__construct() 。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":994,"excerpt":"<p>　　PHP的面向对象大体和C++相同，下面具体阐述php的不同之处。</p>\n<h1 id=\"PHP-构造函数\"><a href=\"#PHP-构造函数\" class=\"headerlink\" title=\"PHP 构造函数\"></a>PHP 构造函数</h1><p>　　构造函数是一种特殊的方法。主要用来在创建对象时初始化对象， 即为对象成员变量赋初始值，在创建对象的语句中与 new 运算符一起使用。</p>\n<p>　　PHP 5 允许开发者在一个类中定义一个方法作为构造函数，语法格式如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> __construct ([ mixed $args [, $... ]] )&#123;&#125;</span><br></pre></td></tr></table></figure><br></p>","more":"<br>在上面的例子中我们就可以通过构造方法来初始化 $url 和 $title 变量：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"> $par1, $par2 </span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">$this</span>-&gt;url = $par1;</span><br><span class=\"line\">   <span class=\"keyword\">$this</span>-&gt;title = $par2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>现在我们就不需要再调用 setTitle 和 setUrl 方法了：<p></p>\n<h2 id><a href=\"#\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$runoob = <span class=\"keyword\">new</span> Site(<span class=\"string\">&#x27;www.runoob.com&#x27;</span>, <span class=\"string\">&#x27;菜鸟教程&#x27;</span>);</span><br></pre></td></tr></table></figure></h2><h1 id=\"析构函数\"><a href=\"#析构函数\" class=\"headerlink\" title=\"析构函数\"></a>析构函数</h1><p>　　析构函数(destructor) 与构造函数相反，当对象结束其生命周期时（例如对象所在的函数已调用完毕），系统自动执行析构函数。</p>\n<p>　　PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言，其语法格式如下：</p>\n<h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> __destruct ( <span class=\"keyword\">void</span> )&#123;&#125;</span><br></pre></td></tr></table></figure></h2><h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><h2 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> constant = <span class=\"string\">&#x27;常量值&#x27;</span>;   <span class=\"comment\">//定义</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showConstant</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span>  <span class=\"built_in\">self</span>::constant . PHP_EOL;  <span class=\"comment\">//使用</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></h2><h1 id=\"Static-关键字\"><a href=\"#Static-关键字\" class=\"headerlink\" title=\"Static 关键字\"></a>Static 关键字</h1><p>　　声明类属性或方法为 static(静态)，就可以不实例化类而直接访问。<br>　　静态属性访问用‘::’<br>　　定义静态属性：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> $my_static = <span class=\"string\">&#x27;foo&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure><br>　　访问静态属性：</p>\n<h2 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title></a><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//直接访问类属性</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> Foo::$my_static . PHP_EOL;</span><br><span class=\"line\"><span class=\"comment\">//实例化后访问</span></span><br><span class=\"line\">$foo = <span class=\"keyword\">new</span> Foo();</span><br><span class=\"line\"><span class=\"keyword\">print</span> $foo::$my_static . PHP_EOL;</span><br></pre></td></tr></table></figure></h2><h1 id=\"调用父类构造方法\"><a href=\"#调用父类构造方法\" class=\"headerlink\" title=\"调用父类构造方法\"></a>调用父类构造方法</h1><p>　　PHP 不会在子类的构造方法中自动的调用父类的构造方法。要执行父类的构造方法，需要在子类的构造方法中调用 parent::__construct() 。</p>"},{"title":"php魔术常量","date":"2020-10-18T05:11:01.000Z","_content":"　　PHP 向它运行的任何脚本提供了大量的预定义常量。\n　　不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。\n　　有八个魔术常量它们的值随着它们在代码中的位置改变而改变。\n\n# 1. \\_\\_LINE\\_\\_\n　　文件中的当前行号。\n<!-- more -->\n\n## 实例\n```php\n<?php\necho '这是第 \" '  . __LINE__ . ' \" 行';\n?>\n```\n以上实例输出结果为：\n```php\n这是第 “ 2 ” 行\n```\n\n# 2. \\_\\_FILE\\_\\_\n　　文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。\n\n　　自 PHP 4.0.2 起，\\_\\_FILE\\_\\_ 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。\n\n## 实例:\n```php\n<?php\necho '该文件位于 \" '  . __FILE__ . ' \" ';\n?>\n```\n\n以上实例输出结果为：\n```\n该文件位于 “ E:\\wamp\\www\\test\\index.php ”\n```\n\n# 3. \\_\\_DIR\\_\\_\n　　文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。\n\n　　它等价于 dirname(\\_\\_FILE\\_\\_)。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增）\n\n## 实例\n```php\n<?php\necho '该文件位于 \" '  . __DIR__ . ' \" ';\n?>\n```\n以上实例输出结果为：\n```\n该文件位于 “ E:\\wamp\\www\\test ”\n```\n\n# 4. \\_\\_FUNCTION\\_\\_\n　　函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。\n\n## 实例\n```php\n<?php\nfunction test() {\n    echo  '函数名为：' . __FUNCTION__ ;\n}\ntest();\n?>\n```\n以上实例输出结果为：\n```\n函数名为：test\n```\n\n# 5. \\_\\_CLASS\\_\\_\n　　类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。\n\n　　在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\\Bar）。注意自 PHP 5.4 起 \\_\\_CLASS\\_\\_ 对 trait 也起作用。当用在 trait 方法中时，\\_\\_CLASS\\_\\_ 是调用 trait 方法的类的名字。\n\n## 实例\n```php\n<?php\nclass test {\n    function _print() {\n        echo '类名为：'  . __CLASS__ . \"<br>\";\n        echo  '函数名为：' . __FUNCTION__ ;\n    }\n}\n$t = new test();\n$t->_print();\n?>\n```\n以上实例输出结果为：\n```\n类名为：test\n函数名为：_print\n```\n\n# 6. \\_\\_TRAIT\\_\\_\n　　Trait 的名字（PHP 5.4.0 新加）。自 PHP 5.4.0 起，PHP 实现了代码复用的一个方法，称为 traits。\n\n　　Trait 名包括其被声明的作用区域（例如 Foo\\Bar）。\n\n　　从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖。其行为 MyHelloWorld 类中定义的方法一致。优先顺序是当前类中的方法会覆盖 trait 方法，而 trait 方法又覆盖了基类中的方法。\n\n## 实例\n```php\n<?php\nclass Base {\n    public function sayHello() {\n        echo 'Hello ';\n    }\n}\n \ntrait SayWorld {\n    public function sayHello() {\n        parent::sayHello();\n        echo 'World!';\n    }\n}\n \nclass MyHelloWorld extends Base {\n    use SayWorld;\n}\n \n$o = new MyHelloWorld();\n$o->sayHello();\n?>\n```\n以上例程会输出：\n```\nHello World!\n```\n\n# 7. \\_\\_METHOD\\_\\_\n　　类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。\n\n## 实例:\n```php\n<?php\nfunction test() {\n    echo  '函数名为：' . __METHOD__ ;\n}\ntest();\n?>\n```\n以上实例输出结果为：\n```\n函数名为：test\n```\n\n# 8. \\_\\_NAMESPACE\\_\\_\n　　当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。\n\n## 实例\n```php\n<?php\nnamespace MyProject;\n \necho '命名空间为：\"', __NAMESPACE__, '\"'; // 输出 \"MyProject\"\n?>\n```\n以上实例输出结果为：\n```\n命名空间为：\"MyProject\"\n```","source":"_posts/php-6magic.md","raw":"---\ntitle: php魔术常量\ndate: 2020-10-18 13:11:01\ntags:\n- php\ncategories: \n- frontend\n- php\n---\n　　PHP 向它运行的任何脚本提供了大量的预定义常量。\n　　不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。\n　　有八个魔术常量它们的值随着它们在代码中的位置改变而改变。\n\n# 1. \\_\\_LINE\\_\\_\n　　文件中的当前行号。\n<!-- more -->\n\n## 实例\n```php\n<?php\necho '这是第 \" '  . __LINE__ . ' \" 行';\n?>\n```\n以上实例输出结果为：\n```php\n这是第 “ 2 ” 行\n```\n\n# 2. \\_\\_FILE\\_\\_\n　　文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。\n\n　　自 PHP 4.0.2 起，\\_\\_FILE\\_\\_ 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。\n\n## 实例:\n```php\n<?php\necho '该文件位于 \" '  . __FILE__ . ' \" ';\n?>\n```\n\n以上实例输出结果为：\n```\n该文件位于 “ E:\\wamp\\www\\test\\index.php ”\n```\n\n# 3. \\_\\_DIR\\_\\_\n　　文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。\n\n　　它等价于 dirname(\\_\\_FILE\\_\\_)。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增）\n\n## 实例\n```php\n<?php\necho '该文件位于 \" '  . __DIR__ . ' \" ';\n?>\n```\n以上实例输出结果为：\n```\n该文件位于 “ E:\\wamp\\www\\test ”\n```\n\n# 4. \\_\\_FUNCTION\\_\\_\n　　函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。\n\n## 实例\n```php\n<?php\nfunction test() {\n    echo  '函数名为：' . __FUNCTION__ ;\n}\ntest();\n?>\n```\n以上实例输出结果为：\n```\n函数名为：test\n```\n\n# 5. \\_\\_CLASS\\_\\_\n　　类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。\n\n　　在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\\Bar）。注意自 PHP 5.4 起 \\_\\_CLASS\\_\\_ 对 trait 也起作用。当用在 trait 方法中时，\\_\\_CLASS\\_\\_ 是调用 trait 方法的类的名字。\n\n## 实例\n```php\n<?php\nclass test {\n    function _print() {\n        echo '类名为：'  . __CLASS__ . \"<br>\";\n        echo  '函数名为：' . __FUNCTION__ ;\n    }\n}\n$t = new test();\n$t->_print();\n?>\n```\n以上实例输出结果为：\n```\n类名为：test\n函数名为：_print\n```\n\n# 6. \\_\\_TRAIT\\_\\_\n　　Trait 的名字（PHP 5.4.0 新加）。自 PHP 5.4.0 起，PHP 实现了代码复用的一个方法，称为 traits。\n\n　　Trait 名包括其被声明的作用区域（例如 Foo\\Bar）。\n\n　　从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖。其行为 MyHelloWorld 类中定义的方法一致。优先顺序是当前类中的方法会覆盖 trait 方法，而 trait 方法又覆盖了基类中的方法。\n\n## 实例\n```php\n<?php\nclass Base {\n    public function sayHello() {\n        echo 'Hello ';\n    }\n}\n \ntrait SayWorld {\n    public function sayHello() {\n        parent::sayHello();\n        echo 'World!';\n    }\n}\n \nclass MyHelloWorld extends Base {\n    use SayWorld;\n}\n \n$o = new MyHelloWorld();\n$o->sayHello();\n?>\n```\n以上例程会输出：\n```\nHello World!\n```\n\n# 7. \\_\\_METHOD\\_\\_\n　　类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。\n\n## 实例:\n```php\n<?php\nfunction test() {\n    echo  '函数名为：' . __METHOD__ ;\n}\ntest();\n?>\n```\n以上实例输出结果为：\n```\n函数名为：test\n```\n\n# 8. \\_\\_NAMESPACE\\_\\_\n　　当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。\n\n## 实例\n```php\n<?php\nnamespace MyProject;\n \necho '命名空间为：\"', __NAMESPACE__, '\"'; // 输出 \"MyProject\"\n?>\n```\n以上实例输出结果为：\n```\n命名空间为：\"MyProject\"\n```","slug":"php-6magic","published":1,"updated":"2020-10-18T06:11:57.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ia004wc8pvfrew60kb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>　　PHP 向它运行的任何脚本提供了大量的预定义常量。<br>　　不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。<br>　　有八个魔术常量它们的值随着它们在代码中的位置改变而改变。</p>\n<h1 id=\"1-LINE\"><a href=\"#1-LINE\" class=\"headerlink\" title=\"1. __LINE__\"></a>1. __LINE__</h1><p>　　文件中的当前行号。<br><a id=\"more\"></a></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;这是第 &quot; &#x27;</span>  . <span class=\"keyword\">__LINE__</span> . <span class=\"string\">&#x27; &quot; 行&#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是第 “ <span class=\"number\">2</span> ” 行</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-FILE\"><a href=\"#2-FILE\" class=\"headerlink\" title=\"2. __FILE__\"></a>2. __FILE__</h1><p>　　文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。</p>\n<p>　　自 PHP 4.0.2 起，__FILE__ 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。</p>\n<h2 id=\"实例-1\"><a href=\"#实例-1\" class=\"headerlink\" title=\"实例:\"></a>实例:</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;该文件位于 &quot; &#x27;</span>  . <span class=\"keyword\">__FILE__</span> . <span class=\"string\">&#x27; &quot; &#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">该文件位于 “ E:\\wamp\\www\\test\\index.php ”</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"3-DIR\"><a href=\"#3-DIR\" class=\"headerlink\" title=\"3. __DIR__\"></a>3. __DIR__</h1><p>　　文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。</p>\n<p>　　它等价于 dirname(__FILE__)。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增）</p>\n<h2 id=\"实例-2\"><a href=\"#实例-2\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;该文件位于 &quot; &#x27;</span>  . <span class=\"keyword\">__DIR__</span> . <span class=\"string\">&#x27; &quot; &#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">该文件位于 “ E:\\wamp\\www\\test ”</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"4-FUNCTION\"><a href=\"#4-FUNCTION\" class=\"headerlink\" title=\"4. __FUNCTION__\"></a>4. __FUNCTION__</h1><p>　　函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。</p>\n<h2 id=\"实例-3\"><a href=\"#实例-3\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__FUNCTION__</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数名为：test</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"5-CLASS\"><a href=\"#5-CLASS\" class=\"headerlink\" title=\"5. __CLASS__\"></a>5. __CLASS__</h1><p>　　类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。</p>\n<p>　　在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\\Bar）。注意自 PHP 5.4 起 __CLASS__ 对 trait 也起作用。当用在 trait 方法中时，__CLASS__ 是调用 trait 方法的类的名字。</p>\n<h2 id=\"实例-4\"><a href=\"#实例-4\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_print</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;类名为：&#x27;</span>  . <span class=\"keyword\">__CLASS__</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__FUNCTION__</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$t = <span class=\"keyword\">new</span> test();</span><br><span class=\"line\">$t-&gt;_print();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类名为：test</span><br><span class=\"line\">函数名为：_print</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"6-TRAIT\"><a href=\"#6-TRAIT\" class=\"headerlink\" title=\"6. __TRAIT__\"></a>6. __TRAIT__</h1><p>　　Trait 的名字（PHP 5.4.0 新加）。自 PHP 5.4.0 起，PHP 实现了代码复用的一个方法，称为 traits。</p>\n<p>　　Trait 名包括其被声明的作用区域（例如 Foo\\Bar）。</p>\n<p>　　从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖。其行为 MyHelloWorld 类中定义的方法一致。优先顺序是当前类中的方法会覆盖 trait 方法，而 trait 方法又覆盖了基类中的方法。</p>\n<h2 id=\"实例-5\"><a href=\"#实例-5\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Base</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayHello</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Hello &#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">trait</span> SayWorld &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayHello</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">parent</span>::sayHello();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;World!&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyHelloWorld</span> <span class=\"keyword\">extends</span> <span class=\"title\">Base</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">SayWorld</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">$o = <span class=\"keyword\">new</span> MyHelloWorld();</span><br><span class=\"line\">$o-&gt;sayHello();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上例程会输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"7-METHOD\"><a href=\"#7-METHOD\" class=\"headerlink\" title=\"7. __METHOD__\"></a>7. __METHOD__</h1><p>　　类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。</p>\n<h2 id=\"实例-6\"><a href=\"#实例-6\" class=\"headerlink\" title=\"实例:\"></a>实例:</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__METHOD__</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数名为：test</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"8-NAMESPACE\"><a href=\"#8-NAMESPACE\" class=\"headerlink\" title=\"8. __NAMESPACE__\"></a>8. __NAMESPACE__</h1><p>　　当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。</p>\n<h2 id=\"实例-7\"><a href=\"#实例-7\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">MyProject</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;命名空间为：&quot;&#x27;</span>, <span class=\"keyword\">__NAMESPACE__</span>, <span class=\"string\">&#x27;&quot;&#x27;</span>; <span class=\"comment\">// 输出 &quot;MyProject&quot;</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命名空间为：&quot;MyProject&quot;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2162,"excerpt":"<p>　　PHP 向它运行的任何脚本提供了大量的预定义常量。<br>　　不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。<br>　　有八个魔术常量它们的值随着它们在代码中的位置改变而改变。</p>\n<h1 id=\"1-LINE\"><a href=\"#1-LINE\" class=\"headerlink\" title=\"1. __LINE__\"></a>1. __LINE__</h1><p>　　文件中的当前行号。<br></p>","more":"<p></p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;这是第 &quot; &#x27;</span>  . <span class=\"keyword\">__LINE__</span> . <span class=\"string\">&#x27; &quot; 行&#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是第 “ <span class=\"number\">2</span> ” 行</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-FILE\"><a href=\"#2-FILE\" class=\"headerlink\" title=\"2. __FILE__\"></a>2. __FILE__</h1><p>　　文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。</p>\n<p>　　自 PHP 4.0.2 起，__FILE__ 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。</p>\n<h2 id=\"实例-1\"><a href=\"#实例-1\" class=\"headerlink\" title=\"实例:\"></a>实例:</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;该文件位于 &quot; &#x27;</span>  . <span class=\"keyword\">__FILE__</span> . <span class=\"string\">&#x27; &quot; &#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">该文件位于 “ E:\\wamp\\www\\test\\index.php ”</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"3-DIR\"><a href=\"#3-DIR\" class=\"headerlink\" title=\"3. __DIR__\"></a>3. __DIR__</h1><p>　　文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。</p>\n<p>　　它等价于 dirname(__FILE__)。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增）</p>\n<h2 id=\"实例-2\"><a href=\"#实例-2\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;该文件位于 &quot; &#x27;</span>  . <span class=\"keyword\">__DIR__</span> . <span class=\"string\">&#x27; &quot; &#x27;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">该文件位于 “ E:\\wamp\\www\\test ”</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"4-FUNCTION\"><a href=\"#4-FUNCTION\" class=\"headerlink\" title=\"4. __FUNCTION__\"></a>4. __FUNCTION__</h1><p>　　函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。</p>\n<h2 id=\"实例-3\"><a href=\"#实例-3\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__FUNCTION__</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数名为：test</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"5-CLASS\"><a href=\"#5-CLASS\" class=\"headerlink\" title=\"5. __CLASS__\"></a>5. __CLASS__</h1><p>　　类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。</p>\n<p>　　在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\\Bar）。注意自 PHP 5.4 起 __CLASS__ 对 trait 也起作用。当用在 trait 方法中时，__CLASS__ 是调用 trait 方法的类的名字。</p>\n<h2 id=\"实例-4\"><a href=\"#实例-4\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_print</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;类名为：&#x27;</span>  . <span class=\"keyword\">__CLASS__</span> . <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__FUNCTION__</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$t = <span class=\"keyword\">new</span> test();</span><br><span class=\"line\">$t-&gt;_print();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类名为：test</span><br><span class=\"line\">函数名为：_print</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"6-TRAIT\"><a href=\"#6-TRAIT\" class=\"headerlink\" title=\"6. __TRAIT__\"></a>6. __TRAIT__</h1><p>　　Trait 的名字（PHP 5.4.0 新加）。自 PHP 5.4.0 起，PHP 实现了代码复用的一个方法，称为 traits。</p>\n<p>　　Trait 名包括其被声明的作用区域（例如 Foo\\Bar）。</p>\n<p>　　从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖。其行为 MyHelloWorld 类中定义的方法一致。优先顺序是当前类中的方法会覆盖 trait 方法，而 trait 方法又覆盖了基类中的方法。</p>\n<h2 id=\"实例-5\"><a href=\"#实例-5\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Base</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayHello</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Hello &#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">trait</span> SayWorld &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayHello</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">parent</span>::sayHello();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;World!&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyHelloWorld</span> <span class=\"keyword\">extends</span> <span class=\"title\">Base</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">SayWorld</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">$o = <span class=\"keyword\">new</span> MyHelloWorld();</span><br><span class=\"line\">$o-&gt;sayHello();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上例程会输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"7-METHOD\"><a href=\"#7-METHOD\" class=\"headerlink\" title=\"7. __METHOD__\"></a>7. __METHOD__</h1><p>　　类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。</p>\n<h2 id=\"实例-6\"><a href=\"#实例-6\" class=\"headerlink\" title=\"实例:\"></a>实例:</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span>  <span class=\"string\">&#x27;函数名为：&#x27;</span> . <span class=\"keyword\">__METHOD__</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数名为：test</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"8-NAMESPACE\"><a href=\"#8-NAMESPACE\" class=\"headerlink\" title=\"8. __NAMESPACE__\"></a>8. __NAMESPACE__</h1><p>　　当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。</p>\n<h2 id=\"实例-7\"><a href=\"#实例-7\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">MyProject</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;命名空间为：&quot;&#x27;</span>, <span class=\"keyword\">__NAMESPACE__</span>, <span class=\"string\">&#x27;&quot;&#x27;</span>; <span class=\"comment\">// 输出 &quot;MyProject&quot;</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上实例输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命名空间为：&quot;MyProject&quot;</span><br></pre></td></tr></table></figure></p>"},{"title":"软件体系结构课堂笔记","date":"2020-09-21T08:49:14.000Z","_content":"# 软件工程专业软件体系结构课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>","source":"_posts/ruanti.md","raw":"---\ntitle: 软件体系结构课堂笔记\ndate: 2020-09-21 16:49:14\ntags:\n- 笔记\n- 软件体系结构\ncategories:\n- 笔记\n- 软件体系结构\n---\n# 软件工程专业软件体系结构课程笔记\n<!-- more -->\n<iframe src=\"http://file.panjiangtao.cn/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>","slug":"ruanti","published":1,"updated":"2020-10-27T08:20:09.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ib004yc8pv8k628vpa","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"软件工程专业软件体系结构课程笔记\"><a href=\"#软件工程专业软件体系结构课程笔记\" class=\"headerlink\" title=\"软件工程专业软件体系结构课程笔记\"></a>软件工程专业软件体系结构课程笔记</h1><a id=\"more\"></a>\n<iframe src=\"http://file.panjiangtao.cn/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":16,"excerpt":"<h1 id=\"软件工程专业软件体系结构课程笔记\"><a href=\"#软件工程专业软件体系结构课程笔记\" class=\"headerlink\" title=\"软件工程专业软件体系结构课程笔记\"></a>软件工程专业软件体系结构课程笔记</h1>","more":"<iframe src=\"http://file.panjiangtao.cn/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.pdf\" width=\"100%\" height=\"1000px\"></iframe>"},{"title":"Spring中的IoC","copyright":false,"date":"2021-07-02T05:53:02.000Z","_content":"{% note info %}\nSpring的主要特点是IoC和AOP，IoC是指Spring可以借助一个第三方容器，帮助用户进行多个对象之间依赖的控制。\nAOP指面向切片编程，简单来说就是在代码运行时，将多个地方都需要的相同代码动态地插入到类的指定方法、指定位置上，从而减少代码之间的耦合和重复。\n{% endnote %}\n<!-- more -->\n# IoC\n## 耦合\n### 耦合的意思\n　　耦合就是模块之间互相调用、控制、传递数据，比如调用接口、两个模块引用同一个全局数据等，代码中要尽量避免耦合。\n\n### 举个栗子\n　　两种不同方法调用数据库驱动类，第一种就是耦合的，第二种就是不耦合的。\n```java\n//耦合方法，通过构造函数来创建驱动类，调用了函数接口\nDriverManager.registerDriver(new com.mysql.jdbc.Driver());\n//不耦合方法，通过字符串创建驱动类\nClass.forName(\"com.mysql.jdbc.Driver\");\n```\n\n## 解耦\n　　在应用加载时，创建一个Map，用于存放三层对象，这个map就是一个容器。\n### 工厂\n　　开发时我们常把对象用配置文件进行保存，工厂就是读取配置文件、创建和获取三层对象的类。\n　　需要获取对象时，向工厂要，工厂从容器中查找或创建。\n![使用IoC容器将对象联系](3.jpg)\n\n### 解耦过程示例\n　　1. 对象之间依靠第三方容器进行联系、耦合\n![使用IoC容器将对象联系](1.png)\n　　2. 去掉容器后，对象自动解耦，没有丝毫联系\n![删除IoC容器后对象解耦](2.png)\n\n","source":"_posts/spring1.md","raw":"---\ntitle: Spring中的IoC\ncopyright: false\ndate: 2021-07-02 13:53:02\ntags: spring\ncategories:\n- for babe\n- spring\n---\n{% note info %}\nSpring的主要特点是IoC和AOP，IoC是指Spring可以借助一个第三方容器，帮助用户进行多个对象之间依赖的控制。\nAOP指面向切片编程，简单来说就是在代码运行时，将多个地方都需要的相同代码动态地插入到类的指定方法、指定位置上，从而减少代码之间的耦合和重复。\n{% endnote %}\n<!-- more -->\n# IoC\n## 耦合\n### 耦合的意思\n　　耦合就是模块之间互相调用、控制、传递数据，比如调用接口、两个模块引用同一个全局数据等，代码中要尽量避免耦合。\n\n### 举个栗子\n　　两种不同方法调用数据库驱动类，第一种就是耦合的，第二种就是不耦合的。\n```java\n//耦合方法，通过构造函数来创建驱动类，调用了函数接口\nDriverManager.registerDriver(new com.mysql.jdbc.Driver());\n//不耦合方法，通过字符串创建驱动类\nClass.forName(\"com.mysql.jdbc.Driver\");\n```\n\n## 解耦\n　　在应用加载时，创建一个Map，用于存放三层对象，这个map就是一个容器。\n### 工厂\n　　开发时我们常把对象用配置文件进行保存，工厂就是读取配置文件、创建和获取三层对象的类。\n　　需要获取对象时，向工厂要，工厂从容器中查找或创建。\n![使用IoC容器将对象联系](3.jpg)\n\n### 解耦过程示例\n　　1. 对象之间依靠第三方容器进行联系、耦合\n![使用IoC容器将对象联系](1.png)\n　　2. 去掉容器后，对象自动解耦，没有丝毫联系\n![删除IoC容器后对象解耦](2.png)\n\n","slug":"spring1","published":1,"updated":"2021-10-26T09:36:22.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ic0051c8pv86j91wff","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>Spring的主要特点是IoC和AOP，IoC是指Spring可以借助一个第三方容器，帮助用户进行多个对象之间依赖的控制。<br>AOP指面向切片编程，简单来说就是在代码运行时，将多个地方都需要的相同代码动态地插入到类的指定方法、指定位置上，从而减少代码之间的耦合和重复。</p>\n          </div>\n<a id=\"more\"></a>\n<h1 id=\"IoC\"><a href=\"#IoC\" class=\"headerlink\" title=\"IoC\"></a>IoC</h1><h2 id=\"耦合\"><a href=\"#耦合\" class=\"headerlink\" title=\"耦合\"></a>耦合</h2><h3 id=\"耦合的意思\"><a href=\"#耦合的意思\" class=\"headerlink\" title=\"耦合的意思\"></a>耦合的意思</h3><p>　　耦合就是模块之间互相调用、控制、传递数据，比如调用接口、两个模块引用同一个全局数据等，代码中要尽量避免耦合。</p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>　　两种不同方法调用数据库驱动类，第一种就是耦合的，第二种就是不耦合的。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//耦合方法，通过构造函数来创建驱动类，调用了函数接口</span></span><br><span class=\"line\">DriverManager.registerDriver(<span class=\"keyword\">new</span> com.mysql.jdbc.Driver());</span><br><span class=\"line\"><span class=\"comment\">//不耦合方法，通过字符串创建驱动类</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"解耦\"><a href=\"#解耦\" class=\"headerlink\" title=\"解耦\"></a>解耦</h2><p>　　在应用加载时，创建一个Map，用于存放三层对象，这个map就是一个容器。</p>\n<h3 id=\"工厂\"><a href=\"#工厂\" class=\"headerlink\" title=\"工厂\"></a>工厂</h3><p>　　开发时我们常把对象用配置文件进行保存，工厂就是读取配置文件、创建和获取三层对象的类。<br>　　需要获取对象时，向工厂要，工厂从容器中查找或创建。<br><img src=\"/posts/spring1/3.jpg\" alt=\"使用IoC容器将对象联系\"></p>\n<h3 id=\"解耦过程示例\"><a href=\"#解耦过程示例\" class=\"headerlink\" title=\"解耦过程示例\"></a>解耦过程示例</h3><p>　　1. 对象之间依靠第三方容器进行联系、耦合<br><img src=\"/posts/spring1/1.png\" alt=\"使用IoC容器将对象联系\"><br>　　2. 去掉容器后，对象自动解耦，没有丝毫联系<br><img src=\"/posts/spring1/2.png\" alt=\"删除IoC容器后对象解耦\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":543,"excerpt":"<div class=\"note info\">\n            <p>Spring的主要特点是IoC和AOP，IoC是指Spring可以借助一个第三方容器，帮助用户进行多个对象之间依赖的控制。<br>AOP指面向切片编程，简单来说就是在代码运行时，将多个地方都需要的相同代码动态地插入到类的指定方法、指定位置上，从而减少代码之间的耦合和重复。</p>\n          </div>","more":"<h1 id=\"IoC\"><a href=\"#IoC\" class=\"headerlink\" title=\"IoC\"></a>IoC</h1><h2 id=\"耦合\"><a href=\"#耦合\" class=\"headerlink\" title=\"耦合\"></a>耦合</h2><h3 id=\"耦合的意思\"><a href=\"#耦合的意思\" class=\"headerlink\" title=\"耦合的意思\"></a>耦合的意思</h3><p>　　耦合就是模块之间互相调用、控制、传递数据，比如调用接口、两个模块引用同一个全局数据等，代码中要尽量避免耦合。</p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>　　两种不同方法调用数据库驱动类，第一种就是耦合的，第二种就是不耦合的。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//耦合方法，通过构造函数来创建驱动类，调用了函数接口</span></span><br><span class=\"line\">DriverManager.registerDriver(<span class=\"keyword\">new</span> com.mysql.jdbc.Driver());</span><br><span class=\"line\"><span class=\"comment\">//不耦合方法，通过字符串创建驱动类</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"解耦\"><a href=\"#解耦\" class=\"headerlink\" title=\"解耦\"></a>解耦</h2><p>　　在应用加载时，创建一个Map，用于存放三层对象，这个map就是一个容器。</p>\n<h3 id=\"工厂\"><a href=\"#工厂\" class=\"headerlink\" title=\"工厂\"></a>工厂</h3><p>　　开发时我们常把对象用配置文件进行保存，工厂就是读取配置文件、创建和获取三层对象的类。<br>　　需要获取对象时，向工厂要，工厂从容器中查找或创建。<br><img src=\"/posts/spring1/3.jpg\" alt=\"使用IoC容器将对象联系\"></p>\n<h3 id=\"解耦过程示例\"><a href=\"#解耦过程示例\" class=\"headerlink\" title=\"解耦过程示例\"></a>解耦过程示例</h3><p>　　1. 对象之间依靠第三方容器进行联系、耦合<br><img src=\"/posts/spring1/1.png\" alt=\"使用IoC容器将对象联系\"><br>　　2. 去掉容器后，对象自动解耦，没有丝毫联系<br><img src=\"/posts/spring1/2.png\" alt=\"删除IoC容器后对象解耦\"></p>"},{"title":"Spark基本架构和原理","copyright":false,"date":"2021-10-28T06:35:21.000Z","_content":"{% note info %}\n参考资料：[Spark基本概念快速入门](https://www.jianshu.com/p/e41b18a7e202)，[Spark基础知识（一）---常用组建和RDD](https://zhuanlan.zhihu.com/p/95622176)，[Spark(一): 基本架构及原理](https://www.cnblogs.com/cxxjohnson/p/8909578.html)，[Spark 入门和使用](https://blog.csdn.net/c391183914/article/details/78672555#12-spark%E7%89%B9%E7%82%B9)\n{% endnote %}\n\n　　目前，Spark生态系统已经发展成为一个包含多个子项目的集合，其中包含Spark SQL、Spark Streaming、GraphX、MLib、SparkR等子项目，Spark是基于内存计算的大数据并行计算框架。除了**扩展了广泛使用的 MapReduce 计算模型**，而且高效地支持更多计算模式，包括**交互式查询和流处理**。\n<!-- more -->\n\n　　**适用场景**：Spark 适用于各种各样原先需要多种不同的分布式平台的场景，包括**批处理、迭代算法、交互式查询、流处理**。通过在一个统一的框架下支持这些不同的计算，Spark 使我们可以简单而低耗地把各种处理流程整合在一起。而这样的组合，在实际的数据分析 过程中是很有意义的。不仅如此，Spark 的这种特性还大大减轻了原先需要对各种平台分 别管理的负担。\n\n### 一、基本架构\n\n![](http://pic.panjiangtao.cn/202110271945_212.png)\n\n#### 1. Spark Core核心和弹性分布式资料集（RDD）\n\n　　Spark Core是整个项目的基础，提供了分布式任务调度，调度和基本的I／O功能，**包含任务调度、内存管理、错误恢复、与存储系统交互**等模块。而其基础的程序抽象则称为弹性分布式资料集（RDD），是一个可以**并行操作、有容错机制的资料集合**。 Spark Core定义RDD的API、操作以及这两者上的动作。RDD可以透过引用外部存储系统的资料集创建（例如：共享文件系统、HDFS、HBase或其他 Hadoop 资料格式的数据源）。或者是通过在现有RDD的转换而创建（比如：map、filter、reduce、join等等）。\n\n#### 2. Spark SQL\n\n　　Spark SQL在Spark核心上带出一种名为**SchemaRDD**的资料抽象化概念，提供结构化和半结构化资料相关的支持。Spark SQL提供了领域特定语言，可使用**Scala、Java或Python**来操纵SchemaRDD。它还支持使用使用命令行界面和**ODBC／JDBC**服务器操作SQL语言。在Spark 1.3版本，SchemaRDD被重命名为DataFrame。\n\n#### 3. Spark Streaming\n\n　　Spark Streaming充分利用Spark核心的快速调度能力来运行**流分析**。它截取小批量的资料并对之运行RDD转换。这种设计使流分析可在同一个引擎内使用同一组为批量分析编写而撰写的应用程序代码。\n\n#### 4. MLlib\n\n　　MLlib是Spark上的**分布式机器学习框架**。Spark分布式存储器式的架构比Hadoop磁盘式的Apache Mahout快上10倍，扩展性甚至比Vowpal Wabbit要好。MLlib可使用许多常见的机器学习和统计算法，简化大规模机器学习时间，其中包括：\n\n* 汇总统计、相关性、分层抽样、假设检定、随机数据生成\n* 分类与回归：支持向量机、回归、线性回归、逻辑回归、决策树、朴素贝叶斯\n* 协同过滤：ALS\n* 分群：k-平均算法\n* 维度约减：奇异值分解（SVD），主成分分析（PCA）\n* 特征提取和转换：TF-IDF、Word2Vec、StandardScaler\n* 最优化：随机梯度下降法（SGD）、L-BFGS\n\n#### 5. GraphX\n\n　　GraphX是Spark上的**分布式图形处理框架**。它提供了一组API，可用于表达图表计算并可以模拟Pregel抽象化。GraphX还对这种抽象化提供了优化运行。\n\n#### 6. 集群管理器\n\n　　Spark 设计为可以高效地在一个计算节点到数千个计算节点之间**伸缩计算**。为了实现这样的要求，同时获得最大灵活性，Spark 支持在各种集群管理器(cluster manager)上运行，包括 **Hadoop YARN、Apache Mesos**，以及 Spark 自带的一个简易调度器，叫作**独立调度器**。\n\n1. Standalone : spark原生的资源管理，由Master负责资源的分配\n2. Apache Mesos:与hadoop MR兼容性良好的一种资源调度框架\n3. Hadoop Yarn: 主要是指Yarn中的ResourceManager\n\n\n\n### 二、基本概念\n\n#### 1. Spark集群\n\n　　一组计算机的集合，每个计算机节点作为独立的计算资源，又可以虚拟出多个具备计算能力的虚拟机，这些虚拟机是集群中的计算单元。Spark的核心模块专注于调度和管理虚拟机之上分布式计算任务的执行，集群中的计算资源则交给Cluster Manager这个角色来管理，Cluster Manager可以为自带的Standalone、或第三方的Yarn和Mesos。\n　　Cluster Manager一般采用Master-Slave结构。以Yarn为例，部署ResourceManager服务的节点为**Master**，负责集群中所有计算资源的统一管理和分配；部署NodeManager服务的节点为**Slave**，负责在当前节点创建一个或多个具备独立计算能力的JVM（Java虚拟机）实例，在Spark中，这些节点也叫做**Worker**。\n　　另外还有一个**Client**节点的概念，是指用户提交Spark Application时所在的节点。\n\n#### 2. Application\n\n　　用户**自己写的Spark应用程序**，批处理作业的集合。Application的main方法为应用程序的入口，用户通过Spark的API，定义了RDD和对RDD的操作。\n\n#### 3. SparkContext\n\n　　Spark最重要的API，**用户逻辑与Spark集群主要的交互接口**，它会和Cluster Master交互，包括向它申请计算资源等。\n\n#### 4. Driver和Executor\n![](http://pic.panjiangtao.cn/202110281440_941.png)\n\nSpark在执行每个Application的过程中会启动**Driver和Executor**两种JVM进程：\n\n- Driver进程为主控进程，负责执行用户Application中的main方法，提交Job，并将Job转化为Task，在各个Executor进程间协调Task的调度。\n- 运行在Worker上的Executor进程负责执行Task，并将结果返回给Driver，同时为需要缓存的RDD提供存储功能。\n- Cluster Manager：在standalone模式中即为Master主节点，控制整个集群，监控worker。在YARN模式中为资源管理器。\n- Worker节点：从节点，负责控制计算节点，启动Executor或者Driver。\n\n\n\n#### 5. RDD\n\n　　**RDD**（Resilient Distributed Dataset）叫做弹性分布式数据集，是Spark中最基本的数据抽象，它代表一个**不可变、可分区、里面的元素可并行计算**的集合。RDD具有数据流模型的特点：**自动容错、位置感知性调度和可伸缩性**。RDD允许用户在执行多个查询时显式地将工作集缓存在内存中，后续的查询能够重用工作集，这极大地提升了查询速度。RDD的原理和组成如下图：\n\n![](http://pic.panjiangtao.cn/202110271956_606.png)\n\n（1）**一组分区（Partition**），即数据集的基本组成单位。对于RDD来说，每个分片都会被一个计算任务处理，并决定并行计算的粒度。用户可以在创建RDD时**指定RDD的分片个数**，如果没有指定，那么就会采用默认值。默认值就是程序所分配到的CPU Core的数目。<u>图中指数据集中的每句话经过第二个函数被分割为单词（由第一个RDD到第二个RDD完成分割）</u>。\n\n（2）一个计算每个分区的函数。Spark中RDD的计算是以分片为单位的，**每个RDD都会实现compute函数以达到这个目的**。compute函数会对迭代器进行复合，不需要保存每次计算的结果。<u>图中表示为上方红色的处理函数</u>。Spark中的计算可以简单抽象为对RDD的**创建、转换和返回操作结果**的过程：\n\n* 创建\n  通过**加载外部**物理存储（如HDFS）中的**数据集**，或Application中**定义的对象集合**（如List）来创建。RDD在创建后不可被改变，只可以对其执行下面两种操作。\n\n- 转换（Transformation）\n  对已有的RDD中的数据执行计算进行转换，而**产生新的RDD**，在这个过程中有时会产生中间RDD。Spark对于Transformation采用惰性计算机制，遇到Transformation时并不会立即计算结果，而是要等遇到Action时一起执行。\n- 行动（Action）\n  对已有的RDD中的数据执行计算产生结果，**将结果返回Driver程序**或写入到外部物理存储。在Action过程中同样有可能生成中间RDD。\n\n（3）RDD之间的依赖关系(Dependency)。**RDD的每次转换都会生成一个新的RDD，所以RDD之间就会形成类似于流水线一样的前后依赖关系**。在部分分区数据丢失时，Spark可以通过这个依赖关系重新计算丢失的分区数据，而不是对RDD的所有分区进行重新计算。<u>图中每个RDD经过函数的计算产生新的RDD</u>。\n\n对RDD的Transformation或Action操作，让RDD产生了**父子依赖关系**（事实上，Transformation或Action操作生成的中间RDD也存在依赖关系），这种依赖分为宽依赖和窄依赖两种：\n\n- NarrowDependency (窄依赖)\n  parent RDD中的**每个Partition最多被**child RDD中的**一个Partition使用**。让RDD产生窄依赖的操作可以称为窄依赖操作，如map、union。\n- WideDependency (或ShuffleDependency，宽依赖）\n  parent RDD中的每个Partition被child RDD中的**多个Partition使用**，这时会依据Record的key进行**数据重组**，这个过程即为**Shuffle**（洗牌）。让RDD产生宽依赖的操作可以称为宽依赖操作，如reduceByKey, groupByKey。\n\n（4）一个**Partitioner**，即RDD的分区函数。当前Spark中实现了**两种类型的分区函数，一个是基于哈希的HashPartitioner，另外一个是基于范围的RangePartitioner。**只有对于key-value的RDD，才会有Partitioner，非key-value的RDD的Parititioner的值是None。Partitioner函数不但决定了RDD本身的分区数量，也决定了parent RDD Shuffle输出时的分片区。<u>图中第二个函数就为分区函数</u>。\n\n（5）一个列表，**存储存取每个Partition的优先位置**（preferred location）。对于一个HDFS文件来说，这个列表保存的就是每个Partition所在的块的位置。按照“移动数据不如移动计算”的理念，Spark在进行任务调度的时候，会尽可能地将计算任务分配到其所要处理数据块的存储位置。\n\n\n\n#### 5.1 RDD的两个方法\n\n* **Persist**\n\n  　　通过RDD的`persist`方法，可以将RDD的分区数据**持久化在内存或硬盘中**，通过`cache`方法则是**缓存到内存**。这里的persist和cache是一样的机制，只不过cache是使用默认的`MEMORY_ONLY`的存储级别对RDD进行persist，故“缓存”也就是一种“持久化”。\n   前面提到，只有触发了一个Action之后，Spark才会提交Job进行真正的计算。所以**RDD只有经过一次Action之后，才能将RDD持久化**，然后在Job间共享，即如果两个Job用到了相同的RDD，那么可以在第一个Job中对这个RDD进行缓存，在第二个Job中就避免了RDD的重新计算。持久化机制使需要访问重复数据的Application运行地更快，是能够**提升Spark运算速度**的一个重要功能。\n\n* **Checkpoint**\n\n  　　调用RDD的`checkpoint`方法，可以将RDD保存到**外部存储中，如硬盘或HDFS**。Spark引入checkpoint机制，是因为持久化的RDD的数据有可能丢失或被替换，checkpoint可以在这时候发挥作用，避免重新计算。\n  　　创建checkpoint是在当前Job完成后，由另外一个专门的Job完成：也就是说需要checkpoint的RDD会被计算两次。因此，在使用rdd.checkpoint()的时候，建议加上rdd.cache(),这样第二次运行的Job久不用再去计算该RDD了。\n\n  　　一个Job在开始处理RDD的Partition时，或者更准确点说，在Executor中运行的任务在获取Partition数据时，会**先判断是否被持久化**，在没有命中时**再判断是否保存了checkpoint**，如果没有读取到则会重新计算该Partition。\n\n\n\n#### 6. Job\n\n　　在一个Application中，**以Action为划分边界的Spark批处理作业**。前面提到，Spark采用惰性机制，对RDD的创建和转换并不会立即执行，只有在**遇到第一个Action时才会生成一个Job**，然后统一调度执行。一个Job包含N个Transformation和1个Action。\n\n#### 7. Stage\n\n　　一个Job中，**以Shuffle为边界划分出的不同阶段**。每个阶段包含一组可以被串行执行的窄依赖或宽依赖操作：用户提交的计算任务是一个由RDD构成的DAG(有向无环图)，如果RDD在转换的时候需要做Shuffle，那么这个Shuffle的过程就将这个DAG分为了不同的阶段（即Stage）。由于Shuffle的存在，不同的Stage是不能并行计算的，因为后面Stage的计算需要前面Stage的Shuffle的结果。\n　　在对Job中的所有操作**划分Stage时，一般会按照倒序进行**，即从Action开始，遇到窄依赖操作，则划分到同一个执行阶段，遇到宽依赖操作，则划分一个新的执行阶段，且新的阶段为之前阶段的parent，然后依次类推递归执行。child Stage需要等待所有的parent Stage执行完之后才可以执行，这时Stage之间根据依赖关系构成了一个大粒度的DAG。\n　　在一个Stage内，所有的操作以**串行的Pipeline的方式**，由一组Task完成计算。\n\n* DAGScheduler: 根据Job**构建基于Stage的DAG**（Directed Acyclic Graph有向无环图)，并**提交Stage给TASkScheduler**。 其划分Stage的依据是RDD之间的依赖的关系找出开销最小的调度方法，如下图\n\n  ![](http://pic.panjiangtao.cn/202110272106_289.png)\n\n#### 8. Task\n\n　　对一个Stage之内的RDD进行串行操作的计算任务。**每个Stage由一组并发的Task组成**（即TaskSet），这些Task的**执行逻辑完全相同**，只是**作用于不同的Partition**。一个Stage的总Task的个数由Stage中最后的一个RDD的Partition的个数决定。\n\n　　Spark Driver会根据数据所在的位置分配计算任务，即把所有Task根据其Partition所在的位置分配给相应的Executor，以尽量减少数据的网络传输（这也就是所谓的移动数据不如移动计算）。一个Executor内同一时刻可以并行执行的Task数由`总CPU数／每个Task占用的CPU数`决定，即`spark.executor.cores / spark.task.cpus`。\n\n　　Task分为ShuffleMapTask和ResultTask两种，位于最后一个Stage的Task为ResultTask，其他阶段的属于ShuffleMapTask。\n\n- TaskSedulter: 将TaskSET提交给worker运行，**每个Executor运行什么Task**就是在此处分配的. TaskScheduler维护所有TaskSet，当Executor向Driver发生心跳时，TaskScheduler会根据资源剩余情况分配相应的Task。另外TaskScheduler还维护着所有Task的运行标签，重试失败的Task。下图展示了TaskScheduler的作用\n\n  ![](http://pic.panjiangtao.cn/202110272104_734.png)\n\n#### 上述概念间的层次关系\n\nJob=多个stage，Stage=多个同种task\n\n![](http://pic.panjiangtao.cn/202110272107_230.png)\n\n### 三、Spark基本运行流程\n\n![](http://pic.panjiangtao.cn/202110281417_711.png)\n\n1. 构建Spark Application的运行环境，**启动SparkContext**\n2. **SparkContext**向**资源管理器**（可以是Standalone，Mesos，Yarn）**申请运行Executor资源**，并启动StandaloneExecutorbackend，\n3. **Executor**向**SparkContext申请Task**\n4. SparkContext将**应用程序分发给Executor**\n5. SparkContext**构建成DAG图**，将**DAG图分解成Stage**、将**Taskset发送给Task Scheduler**，最后由Task Scheduler**将Task发送给Executor运行**\n6. **Task**在Executor上**运行**，运行完释放所有资源\n\n#### Spark运行特点：\n\n1. **每个Application获取专属的executor进程**，该进程在Application期间一直驻留，并以多线程方式运行Task。这种Application隔离机制是有优势的，无论是从调度角度看（每个Driver调度他自己的任务），还是从运行角度看（来自不同Application的Task运行在不同JVM中），当然这样意味着Spark Application不能跨应用程序共享数据，除非将数据写入外部存储系统\n2. Spark**与资源管理器无关**，只要能够获取executor进程，并能保持相互通信就可以了\n3. 提交SparkContext的**Client应该靠近Worker节点**（运行Executor的节点），最好是在同一个Rack里，因为Spark Application运行过程中SparkContext和Executor之间有大量的信息交换\n4. Task采用了**数据本地性和推测执行**的优化机制\n\n### 四、运行模式\n\n- 部署在单机上时，既可以用本地模式运行，也可以用伪分布模式运行，而当以分布式集群的方式部署时，也有众多的运行模式可供选择，这取决于集群的实际情况，底层的资源调度即可以依赖外部资源调度框架，也可以使用Spark内建的**Standalone**模式。\n- 对于外部资源调度框架的支持，目前的实现包括相对稳定的**Mesos**模式，以及**hadoop YARN**模式\n- **本地模式**：常用于本地开发测试的local cluster模式\n\n#### 1. standalone: 独立集群运行模式\n\n##### （1）结构关系：\n\n![](http://pic.panjiangtao.cn/202110281050_53.png)\n\n- Standalone模式使用Spark**自带的资源调度框架**\n- 采用Master/Slaves的典型架构，选用ZooKeeper来实现Master的HA（Highly Available，双机集群系统）\n- 该模式主要的节点有Client节点、Master节点和Worker节点。其中**Driver既可以运行在Master节点上中，也可以运行在本地Client端**。当用spark-shell交互式工具提交Spark的Job时，Driver在Master节点上运行；当使用spark-submit工具提交Job或者在Eclips、IDEA等开发平台上使用”new SparkConf.setManager(“spark://master:7077”)”方式运行Spark任务时，Driver是运行在本地Client端上的\n\n##### （2）运行过程\n\n![](http://pic.panjiangtao.cn/202110281058_435.png)\n\n1. SparkContext连接到Master，向**Master注册并申请资源**（CPU Core 和Memory）\n2. Master根据SparkContext的资源申请要求和Worker心跳周期内报告的信息决定在哪个Worker上分配资源，然后**在该Worker上获取资源**，然后启动StandaloneExecutorBackend；\n3. StandaloneExecutorBackend向**SparkContext注册**；\n4. SparkContext将Applicaiton代码发送给StandaloneExecutorBackend；并且SparkContext解析Applicaiton代码，**构建DAG图**，并提交给DAG Scheduler分解成Stage（当碰到Action操作时，就会催生Job；每个Job中含有1个或多个Stage，Stage一般在获取外部数据和shuffle之前产生），然后以Stage（或者称为TaskSet）提交给Task Scheduler，Task Scheduler负责**将Task分配到相应的Worker**，最后提交给StandaloneExecutorBackend执行；\n5. StandaloneExecutorBackend会建立Executor线程池，开始执行Task，并向SparkContext**报告Task状态**，直至Task完成\n6. 所有Task完成后，SparkContext向Master**注销，释放资源**\n\n#### 2. hadoop YARN模式\n\nhadoop YARN模式根据Driver在集群中的位置分为两种模式：一种是YARN-Client模式，另一种是YARN-Cluster模式.\n\n##### (1)Yarn框架流程\n\n　　任何框架与*YARN*的结合，都必须遵循*YARN*的开发模式。在分析*Spark on YARN*的实现细节之前，有必要先分析一下*YARN*框架的一些基本原理。Yarn框架的基本流程如下:\n\n![](http://pic.panjiangtao.cn/202110281120_36.png)\n\n　　其中，ResourceManager负责将集群的**资源分配**给各个应用使用，而**资源分配和调度的基本单位是Container**，其中封装了机器资源，如内存、CPU、磁盘和网络等，每个任务会被分配一个Container，该任务只能在该Container中执行，并使用该Container封装的资源。**NodeManager**是一个个的计算节点，主要**负责启动Application所需的Container，监控资源**（内存、CPU、磁盘和网络等）的使用情况并将之汇报给ResourceManager。ResourceManager与NodeManagers共同组成整个数据计算框架，ApplicationMaster与具体的Application相关，主要负责同ResourceManager协商以获取合适的Container，并跟踪这些Container的状态和监控其进度。\n\n##### (2)YARN-Client模式\n\n　　Driver在客户端本地运行，这种模式可以使得Spark Application和客户端进行交互，因为Driver在客户端，所以可以通过webUI访问Driver的状态，默认是http://hadoop1:4040访问，而YARN通过http:// hadoop1:8088访问。工作流程：\n\n![](http://pic.panjiangtao.cn/202110281115_159.png)\n\n1. Spark Yarn Client向YARN的ResourceManager**申请启动Application Master**。同时在**SparkContent初始化**中将创建DAGScheduler和TASKScheduler等，由于我们选择的是Yarn-Client模式，程序会选择YarnClientClusterScheduler和YarnClientSchedulerBackend\n2. ResourceManager收到请求后，在集群中选择一个NodeManager，**为该应用程序分配第一个Container**，要求它在这个Container中**启动应用程序的ApplicationMaster**，与YARN-Cluster区别的是在该ApplicationMaster不运行SparkContext，只与SparkContext进行联系进行资源的分派\n3. Client中的SparkContext初始化完毕后，与ApplicationMaster建立通讯，向ResourceManager注册，根据任务信息向ResourceManager**申请资源（Container）**\n4. 一旦ApplicationMaster申请到资源（也就是Container）后，便与对应的NodeManager通信，要求它在获得的Container中**启动CoarseGrainedExecutorBackend**，CoarseGrainedExecutorBackend启动后会向Client中的SparkContext**注册并申请Task**\n5. client中的SparkContext**分配Task给CoarseGrainedExecutorBackend执行**，CoarseGrainedExecutorBackend**运行Task并向Driver汇报运行的状态和进度**，以让Client随时掌握各个任务的运行状态，从而可以在任务失败时重新启动任务\n6. 应用程序运行完成后，Client的SparkContext向ResourceManager申请**注销并关闭自己**\n\n##### (3)YARN-Cluster模式\n\n　　在YARN-Cluster模式中，当用户向YARN中提交一个应用程序后，YARN将分两个阶段运行该应用程序：第一个阶段是把Spark的Driver作为一个ApplicationMaster在YARN集群中先启动；第二个阶段是由ApplicationMaster创建应用程序，然后为它向ResourceManager申请资源，并启动Executor来运行Task，同时监控它的整个运行过程，直到运行完成。\n\n![](http://pic.panjiangtao.cn/202110281140_69.png)\n\n1. Spark Yarn Client向YARN中**提交应用程序**，包括ApplicationMaster程序、启动ApplicationMaster的命令、需要在Executor中运行的程序等\n2. ResourceManager收到请求后，在集群中选择一个NodeManager，为该应用程序分配第一个Container，要求它在这个Container中**启动应用程序的ApplicationMaster**，其中ApplicationMaster进行SparkContext等的初始化\n3. ApplicationMaster向ResourceManager注册，这样用户可以直接通过ResourceManage查看应用程序的运行状态，然后它将采用轮询的方式通过RPC协议**为各个任务申请资源（也就是Container）**，并监控它们的运行状态直到运行结束\n4. 一旦ApplicationMaster申请到资源后，便与对应的NodeManager通信，要求它在获得的Container中**启动CoarseGrainedExecutorBackend**，CoarseGrainedExecutorBackend启动后会向ApplicationMaster中的SparkContext**注册并申请Task**。这一点和Standalone模式一样，只不过SparkContext在Spark Application中初始化时，使用CoarseGrainedSchedulerBackend配合YarnClusterScheduler**进行任务的调度**，其中YarnClusterScheduler只是对TaskSchedulerImpl的一个简单包装，增加了对Executor的等待逻辑等\n5. ApplicationMaster中的SparkContext分配Task给CoarseGrainedExecutorBackend执行，CoarseGrainedExecutorBackend运行Task并向ApplicationMaster汇报运行的状态和进度，以让**ApplicationMaster随时掌握各个任务的运行状态**，从而可以在任务失败时重新启动任务\n6. 应用程序运行完成后，**ApplicationMaster**向ResourceManager**申请注销并关闭自己**。\n\n#####  (4)SYARN-Client模式和YARN-Cluster模式区别\n\n　　理解YARN-Client和YARN-Cluster深层次的区别之前先清楚一个概念：Application Master。在YARN中，每个Application实例都有一个ApplicationMaster进程，它是Application启动的第一个容器。它负责和ResourceManager打交道并请求资源，获取资源之后告诉NodeManager为其启动Container。从深层次的含义讲YARN-Cluster和YARN-Client模式的区别其实就是ApplicationMaster进程的区别。\n\n* YARN-Cluster模式下，**Driver**运行在AM(Application Master)中，它负责**向YARN申请资源**，并监督作业的运行状况。**当用户提交了作业之后，就可以关掉Client**，作业会继续在YARN上运行，因而YARN-Cluster模式不适合运行交互类型的作业；\n* YARN-Client模式下，Application Master仅仅向YARN请求Executor，**Client会和请求的Container通信来调度他们工作**，也就是说Client不能离开。\n\n\n\n#### 3.Mesos模式\n\n　　这是很多公司采用的模式，官方推荐这种模式（当然，原因之一是血缘关系）。正是由于Spark开发之初就考虑到支持Mesos，因此，目前而言，Spark运行在Mesos上会比运行在YARN上更加灵活，更加自然。目前在Spark On Mesos环境中，用户可选择两种调度模式之一运行自己的应用程序（可参考Andrew Xia的“Mesos Scheduling Mode on Spark”）：\n\n![](http://pic.panjiangtao.cn/202110281428_718.png)\n\n##### 1. 粗粒度模式（Coarse-grained Mode）\n\n​        每个应用程序的运行环境由一个Dirver和若干个Executor组成，其中，每个Executor占用若干资源，内部可运行多个Task（对应多少个“slot”）。应用程序的各个任务正式运行之前，需要将运行环境中的资源全部申请好，且运行过程中要一直占用这些资源，即使不用，最后程序运行结束后，回收这些资源。举个例子，比如你提交应用程序时，指定使用5个executor运行你的应用程序，每个executor占用5GB内存和5个CPU，每个executor内部设置了5个slot，则Mesos需要先为executor分配资源并启动它们，之后开始调度任务。另外，在程序运行过程中，mesos的master和slave并不知道executor内部各个task的运行情况，executor直接将任务状态通过内部的通信机制汇报给Driver，从一定程度上可以认为，每个应用程序利用mesos搭建了一个虚拟集群自己使用。\n\n##### 2. 细粒度模式（Fine-grained Mode）\n\n​        鉴于粗粒度模式会造成大量资源浪费，Spark On Mesos还提供了另外一种调度模式：细粒度模式，这种模式类似于现在的云计算，思想是按需分配。与粗粒度模式一样，应用程序启动时，先会启动executor，但每个executor占用资源仅仅是自己运行所需的资源，不需要考虑将来要运行的任务，之后，mesos会为每个executor动态分配资源，每分配一些，便可以运行一个新任务，单个Task运行完之后可以马上释放对应的资源。每个Task会汇报状态给Mesos slave和Mesos Master，便于更加细粒度管理和容错，这种调度模式类似于MapReduce调度模式，每个Task完全独立，优点是便于资源控制和隔离，但缺点也很明显，短作业运行延迟大。\n\n","source":"_posts/spark1-basic.md","raw":"---\ntitle: Spark基本架构和原理\ncopyright: false\ndate: 2021-10-28 14:35:21\ntags: Spark\ncategories:\n- 大数据\n- Spark\n---\n{% note info %}\n参考资料：[Spark基本概念快速入门](https://www.jianshu.com/p/e41b18a7e202)，[Spark基础知识（一）---常用组建和RDD](https://zhuanlan.zhihu.com/p/95622176)，[Spark(一): 基本架构及原理](https://www.cnblogs.com/cxxjohnson/p/8909578.html)，[Spark 入门和使用](https://blog.csdn.net/c391183914/article/details/78672555#12-spark%E7%89%B9%E7%82%B9)\n{% endnote %}\n\n　　目前，Spark生态系统已经发展成为一个包含多个子项目的集合，其中包含Spark SQL、Spark Streaming、GraphX、MLib、SparkR等子项目，Spark是基于内存计算的大数据并行计算框架。除了**扩展了广泛使用的 MapReduce 计算模型**，而且高效地支持更多计算模式，包括**交互式查询和流处理**。\n<!-- more -->\n\n　　**适用场景**：Spark 适用于各种各样原先需要多种不同的分布式平台的场景，包括**批处理、迭代算法、交互式查询、流处理**。通过在一个统一的框架下支持这些不同的计算，Spark 使我们可以简单而低耗地把各种处理流程整合在一起。而这样的组合，在实际的数据分析 过程中是很有意义的。不仅如此，Spark 的这种特性还大大减轻了原先需要对各种平台分 别管理的负担。\n\n### 一、基本架构\n\n![](http://pic.panjiangtao.cn/202110271945_212.png)\n\n#### 1. Spark Core核心和弹性分布式资料集（RDD）\n\n　　Spark Core是整个项目的基础，提供了分布式任务调度，调度和基本的I／O功能，**包含任务调度、内存管理、错误恢复、与存储系统交互**等模块。而其基础的程序抽象则称为弹性分布式资料集（RDD），是一个可以**并行操作、有容错机制的资料集合**。 Spark Core定义RDD的API、操作以及这两者上的动作。RDD可以透过引用外部存储系统的资料集创建（例如：共享文件系统、HDFS、HBase或其他 Hadoop 资料格式的数据源）。或者是通过在现有RDD的转换而创建（比如：map、filter、reduce、join等等）。\n\n#### 2. Spark SQL\n\n　　Spark SQL在Spark核心上带出一种名为**SchemaRDD**的资料抽象化概念，提供结构化和半结构化资料相关的支持。Spark SQL提供了领域特定语言，可使用**Scala、Java或Python**来操纵SchemaRDD。它还支持使用使用命令行界面和**ODBC／JDBC**服务器操作SQL语言。在Spark 1.3版本，SchemaRDD被重命名为DataFrame。\n\n#### 3. Spark Streaming\n\n　　Spark Streaming充分利用Spark核心的快速调度能力来运行**流分析**。它截取小批量的资料并对之运行RDD转换。这种设计使流分析可在同一个引擎内使用同一组为批量分析编写而撰写的应用程序代码。\n\n#### 4. MLlib\n\n　　MLlib是Spark上的**分布式机器学习框架**。Spark分布式存储器式的架构比Hadoop磁盘式的Apache Mahout快上10倍，扩展性甚至比Vowpal Wabbit要好。MLlib可使用许多常见的机器学习和统计算法，简化大规模机器学习时间，其中包括：\n\n* 汇总统计、相关性、分层抽样、假设检定、随机数据生成\n* 分类与回归：支持向量机、回归、线性回归、逻辑回归、决策树、朴素贝叶斯\n* 协同过滤：ALS\n* 分群：k-平均算法\n* 维度约减：奇异值分解（SVD），主成分分析（PCA）\n* 特征提取和转换：TF-IDF、Word2Vec、StandardScaler\n* 最优化：随机梯度下降法（SGD）、L-BFGS\n\n#### 5. GraphX\n\n　　GraphX是Spark上的**分布式图形处理框架**。它提供了一组API，可用于表达图表计算并可以模拟Pregel抽象化。GraphX还对这种抽象化提供了优化运行。\n\n#### 6. 集群管理器\n\n　　Spark 设计为可以高效地在一个计算节点到数千个计算节点之间**伸缩计算**。为了实现这样的要求，同时获得最大灵活性，Spark 支持在各种集群管理器(cluster manager)上运行，包括 **Hadoop YARN、Apache Mesos**，以及 Spark 自带的一个简易调度器，叫作**独立调度器**。\n\n1. Standalone : spark原生的资源管理，由Master负责资源的分配\n2. Apache Mesos:与hadoop MR兼容性良好的一种资源调度框架\n3. Hadoop Yarn: 主要是指Yarn中的ResourceManager\n\n\n\n### 二、基本概念\n\n#### 1. Spark集群\n\n　　一组计算机的集合，每个计算机节点作为独立的计算资源，又可以虚拟出多个具备计算能力的虚拟机，这些虚拟机是集群中的计算单元。Spark的核心模块专注于调度和管理虚拟机之上分布式计算任务的执行，集群中的计算资源则交给Cluster Manager这个角色来管理，Cluster Manager可以为自带的Standalone、或第三方的Yarn和Mesos。\n　　Cluster Manager一般采用Master-Slave结构。以Yarn为例，部署ResourceManager服务的节点为**Master**，负责集群中所有计算资源的统一管理和分配；部署NodeManager服务的节点为**Slave**，负责在当前节点创建一个或多个具备独立计算能力的JVM（Java虚拟机）实例，在Spark中，这些节点也叫做**Worker**。\n　　另外还有一个**Client**节点的概念，是指用户提交Spark Application时所在的节点。\n\n#### 2. Application\n\n　　用户**自己写的Spark应用程序**，批处理作业的集合。Application的main方法为应用程序的入口，用户通过Spark的API，定义了RDD和对RDD的操作。\n\n#### 3. SparkContext\n\n　　Spark最重要的API，**用户逻辑与Spark集群主要的交互接口**，它会和Cluster Master交互，包括向它申请计算资源等。\n\n#### 4. Driver和Executor\n![](http://pic.panjiangtao.cn/202110281440_941.png)\n\nSpark在执行每个Application的过程中会启动**Driver和Executor**两种JVM进程：\n\n- Driver进程为主控进程，负责执行用户Application中的main方法，提交Job，并将Job转化为Task，在各个Executor进程间协调Task的调度。\n- 运行在Worker上的Executor进程负责执行Task，并将结果返回给Driver，同时为需要缓存的RDD提供存储功能。\n- Cluster Manager：在standalone模式中即为Master主节点，控制整个集群，监控worker。在YARN模式中为资源管理器。\n- Worker节点：从节点，负责控制计算节点，启动Executor或者Driver。\n\n\n\n#### 5. RDD\n\n　　**RDD**（Resilient Distributed Dataset）叫做弹性分布式数据集，是Spark中最基本的数据抽象，它代表一个**不可变、可分区、里面的元素可并行计算**的集合。RDD具有数据流模型的特点：**自动容错、位置感知性调度和可伸缩性**。RDD允许用户在执行多个查询时显式地将工作集缓存在内存中，后续的查询能够重用工作集，这极大地提升了查询速度。RDD的原理和组成如下图：\n\n![](http://pic.panjiangtao.cn/202110271956_606.png)\n\n（1）**一组分区（Partition**），即数据集的基本组成单位。对于RDD来说，每个分片都会被一个计算任务处理，并决定并行计算的粒度。用户可以在创建RDD时**指定RDD的分片个数**，如果没有指定，那么就会采用默认值。默认值就是程序所分配到的CPU Core的数目。<u>图中指数据集中的每句话经过第二个函数被分割为单词（由第一个RDD到第二个RDD完成分割）</u>。\n\n（2）一个计算每个分区的函数。Spark中RDD的计算是以分片为单位的，**每个RDD都会实现compute函数以达到这个目的**。compute函数会对迭代器进行复合，不需要保存每次计算的结果。<u>图中表示为上方红色的处理函数</u>。Spark中的计算可以简单抽象为对RDD的**创建、转换和返回操作结果**的过程：\n\n* 创建\n  通过**加载外部**物理存储（如HDFS）中的**数据集**，或Application中**定义的对象集合**（如List）来创建。RDD在创建后不可被改变，只可以对其执行下面两种操作。\n\n- 转换（Transformation）\n  对已有的RDD中的数据执行计算进行转换，而**产生新的RDD**，在这个过程中有时会产生中间RDD。Spark对于Transformation采用惰性计算机制，遇到Transformation时并不会立即计算结果，而是要等遇到Action时一起执行。\n- 行动（Action）\n  对已有的RDD中的数据执行计算产生结果，**将结果返回Driver程序**或写入到外部物理存储。在Action过程中同样有可能生成中间RDD。\n\n（3）RDD之间的依赖关系(Dependency)。**RDD的每次转换都会生成一个新的RDD，所以RDD之间就会形成类似于流水线一样的前后依赖关系**。在部分分区数据丢失时，Spark可以通过这个依赖关系重新计算丢失的分区数据，而不是对RDD的所有分区进行重新计算。<u>图中每个RDD经过函数的计算产生新的RDD</u>。\n\n对RDD的Transformation或Action操作，让RDD产生了**父子依赖关系**（事实上，Transformation或Action操作生成的中间RDD也存在依赖关系），这种依赖分为宽依赖和窄依赖两种：\n\n- NarrowDependency (窄依赖)\n  parent RDD中的**每个Partition最多被**child RDD中的**一个Partition使用**。让RDD产生窄依赖的操作可以称为窄依赖操作，如map、union。\n- WideDependency (或ShuffleDependency，宽依赖）\n  parent RDD中的每个Partition被child RDD中的**多个Partition使用**，这时会依据Record的key进行**数据重组**，这个过程即为**Shuffle**（洗牌）。让RDD产生宽依赖的操作可以称为宽依赖操作，如reduceByKey, groupByKey。\n\n（4）一个**Partitioner**，即RDD的分区函数。当前Spark中实现了**两种类型的分区函数，一个是基于哈希的HashPartitioner，另外一个是基于范围的RangePartitioner。**只有对于key-value的RDD，才会有Partitioner，非key-value的RDD的Parititioner的值是None。Partitioner函数不但决定了RDD本身的分区数量，也决定了parent RDD Shuffle输出时的分片区。<u>图中第二个函数就为分区函数</u>。\n\n（5）一个列表，**存储存取每个Partition的优先位置**（preferred location）。对于一个HDFS文件来说，这个列表保存的就是每个Partition所在的块的位置。按照“移动数据不如移动计算”的理念，Spark在进行任务调度的时候，会尽可能地将计算任务分配到其所要处理数据块的存储位置。\n\n\n\n#### 5.1 RDD的两个方法\n\n* **Persist**\n\n  　　通过RDD的`persist`方法，可以将RDD的分区数据**持久化在内存或硬盘中**，通过`cache`方法则是**缓存到内存**。这里的persist和cache是一样的机制，只不过cache是使用默认的`MEMORY_ONLY`的存储级别对RDD进行persist，故“缓存”也就是一种“持久化”。\n   前面提到，只有触发了一个Action之后，Spark才会提交Job进行真正的计算。所以**RDD只有经过一次Action之后，才能将RDD持久化**，然后在Job间共享，即如果两个Job用到了相同的RDD，那么可以在第一个Job中对这个RDD进行缓存，在第二个Job中就避免了RDD的重新计算。持久化机制使需要访问重复数据的Application运行地更快，是能够**提升Spark运算速度**的一个重要功能。\n\n* **Checkpoint**\n\n  　　调用RDD的`checkpoint`方法，可以将RDD保存到**外部存储中，如硬盘或HDFS**。Spark引入checkpoint机制，是因为持久化的RDD的数据有可能丢失或被替换，checkpoint可以在这时候发挥作用，避免重新计算。\n  　　创建checkpoint是在当前Job完成后，由另外一个专门的Job完成：也就是说需要checkpoint的RDD会被计算两次。因此，在使用rdd.checkpoint()的时候，建议加上rdd.cache(),这样第二次运行的Job久不用再去计算该RDD了。\n\n  　　一个Job在开始处理RDD的Partition时，或者更准确点说，在Executor中运行的任务在获取Partition数据时，会**先判断是否被持久化**，在没有命中时**再判断是否保存了checkpoint**，如果没有读取到则会重新计算该Partition。\n\n\n\n#### 6. Job\n\n　　在一个Application中，**以Action为划分边界的Spark批处理作业**。前面提到，Spark采用惰性机制，对RDD的创建和转换并不会立即执行，只有在**遇到第一个Action时才会生成一个Job**，然后统一调度执行。一个Job包含N个Transformation和1个Action。\n\n#### 7. Stage\n\n　　一个Job中，**以Shuffle为边界划分出的不同阶段**。每个阶段包含一组可以被串行执行的窄依赖或宽依赖操作：用户提交的计算任务是一个由RDD构成的DAG(有向无环图)，如果RDD在转换的时候需要做Shuffle，那么这个Shuffle的过程就将这个DAG分为了不同的阶段（即Stage）。由于Shuffle的存在，不同的Stage是不能并行计算的，因为后面Stage的计算需要前面Stage的Shuffle的结果。\n　　在对Job中的所有操作**划分Stage时，一般会按照倒序进行**，即从Action开始，遇到窄依赖操作，则划分到同一个执行阶段，遇到宽依赖操作，则划分一个新的执行阶段，且新的阶段为之前阶段的parent，然后依次类推递归执行。child Stage需要等待所有的parent Stage执行完之后才可以执行，这时Stage之间根据依赖关系构成了一个大粒度的DAG。\n　　在一个Stage内，所有的操作以**串行的Pipeline的方式**，由一组Task完成计算。\n\n* DAGScheduler: 根据Job**构建基于Stage的DAG**（Directed Acyclic Graph有向无环图)，并**提交Stage给TASkScheduler**。 其划分Stage的依据是RDD之间的依赖的关系找出开销最小的调度方法，如下图\n\n  ![](http://pic.panjiangtao.cn/202110272106_289.png)\n\n#### 8. Task\n\n　　对一个Stage之内的RDD进行串行操作的计算任务。**每个Stage由一组并发的Task组成**（即TaskSet），这些Task的**执行逻辑完全相同**，只是**作用于不同的Partition**。一个Stage的总Task的个数由Stage中最后的一个RDD的Partition的个数决定。\n\n　　Spark Driver会根据数据所在的位置分配计算任务，即把所有Task根据其Partition所在的位置分配给相应的Executor，以尽量减少数据的网络传输（这也就是所谓的移动数据不如移动计算）。一个Executor内同一时刻可以并行执行的Task数由`总CPU数／每个Task占用的CPU数`决定，即`spark.executor.cores / spark.task.cpus`。\n\n　　Task分为ShuffleMapTask和ResultTask两种，位于最后一个Stage的Task为ResultTask，其他阶段的属于ShuffleMapTask。\n\n- TaskSedulter: 将TaskSET提交给worker运行，**每个Executor运行什么Task**就是在此处分配的. TaskScheduler维护所有TaskSet，当Executor向Driver发生心跳时，TaskScheduler会根据资源剩余情况分配相应的Task。另外TaskScheduler还维护着所有Task的运行标签，重试失败的Task。下图展示了TaskScheduler的作用\n\n  ![](http://pic.panjiangtao.cn/202110272104_734.png)\n\n#### 上述概念间的层次关系\n\nJob=多个stage，Stage=多个同种task\n\n![](http://pic.panjiangtao.cn/202110272107_230.png)\n\n### 三、Spark基本运行流程\n\n![](http://pic.panjiangtao.cn/202110281417_711.png)\n\n1. 构建Spark Application的运行环境，**启动SparkContext**\n2. **SparkContext**向**资源管理器**（可以是Standalone，Mesos，Yarn）**申请运行Executor资源**，并启动StandaloneExecutorbackend，\n3. **Executor**向**SparkContext申请Task**\n4. SparkContext将**应用程序分发给Executor**\n5. SparkContext**构建成DAG图**，将**DAG图分解成Stage**、将**Taskset发送给Task Scheduler**，最后由Task Scheduler**将Task发送给Executor运行**\n6. **Task**在Executor上**运行**，运行完释放所有资源\n\n#### Spark运行特点：\n\n1. **每个Application获取专属的executor进程**，该进程在Application期间一直驻留，并以多线程方式运行Task。这种Application隔离机制是有优势的，无论是从调度角度看（每个Driver调度他自己的任务），还是从运行角度看（来自不同Application的Task运行在不同JVM中），当然这样意味着Spark Application不能跨应用程序共享数据，除非将数据写入外部存储系统\n2. Spark**与资源管理器无关**，只要能够获取executor进程，并能保持相互通信就可以了\n3. 提交SparkContext的**Client应该靠近Worker节点**（运行Executor的节点），最好是在同一个Rack里，因为Spark Application运行过程中SparkContext和Executor之间有大量的信息交换\n4. Task采用了**数据本地性和推测执行**的优化机制\n\n### 四、运行模式\n\n- 部署在单机上时，既可以用本地模式运行，也可以用伪分布模式运行，而当以分布式集群的方式部署时，也有众多的运行模式可供选择，这取决于集群的实际情况，底层的资源调度即可以依赖外部资源调度框架，也可以使用Spark内建的**Standalone**模式。\n- 对于外部资源调度框架的支持，目前的实现包括相对稳定的**Mesos**模式，以及**hadoop YARN**模式\n- **本地模式**：常用于本地开发测试的local cluster模式\n\n#### 1. standalone: 独立集群运行模式\n\n##### （1）结构关系：\n\n![](http://pic.panjiangtao.cn/202110281050_53.png)\n\n- Standalone模式使用Spark**自带的资源调度框架**\n- 采用Master/Slaves的典型架构，选用ZooKeeper来实现Master的HA（Highly Available，双机集群系统）\n- 该模式主要的节点有Client节点、Master节点和Worker节点。其中**Driver既可以运行在Master节点上中，也可以运行在本地Client端**。当用spark-shell交互式工具提交Spark的Job时，Driver在Master节点上运行；当使用spark-submit工具提交Job或者在Eclips、IDEA等开发平台上使用”new SparkConf.setManager(“spark://master:7077”)”方式运行Spark任务时，Driver是运行在本地Client端上的\n\n##### （2）运行过程\n\n![](http://pic.panjiangtao.cn/202110281058_435.png)\n\n1. SparkContext连接到Master，向**Master注册并申请资源**（CPU Core 和Memory）\n2. Master根据SparkContext的资源申请要求和Worker心跳周期内报告的信息决定在哪个Worker上分配资源，然后**在该Worker上获取资源**，然后启动StandaloneExecutorBackend；\n3. StandaloneExecutorBackend向**SparkContext注册**；\n4. SparkContext将Applicaiton代码发送给StandaloneExecutorBackend；并且SparkContext解析Applicaiton代码，**构建DAG图**，并提交给DAG Scheduler分解成Stage（当碰到Action操作时，就会催生Job；每个Job中含有1个或多个Stage，Stage一般在获取外部数据和shuffle之前产生），然后以Stage（或者称为TaskSet）提交给Task Scheduler，Task Scheduler负责**将Task分配到相应的Worker**，最后提交给StandaloneExecutorBackend执行；\n5. StandaloneExecutorBackend会建立Executor线程池，开始执行Task，并向SparkContext**报告Task状态**，直至Task完成\n6. 所有Task完成后，SparkContext向Master**注销，释放资源**\n\n#### 2. hadoop YARN模式\n\nhadoop YARN模式根据Driver在集群中的位置分为两种模式：一种是YARN-Client模式，另一种是YARN-Cluster模式.\n\n##### (1)Yarn框架流程\n\n　　任何框架与*YARN*的结合，都必须遵循*YARN*的开发模式。在分析*Spark on YARN*的实现细节之前，有必要先分析一下*YARN*框架的一些基本原理。Yarn框架的基本流程如下:\n\n![](http://pic.panjiangtao.cn/202110281120_36.png)\n\n　　其中，ResourceManager负责将集群的**资源分配**给各个应用使用，而**资源分配和调度的基本单位是Container**，其中封装了机器资源，如内存、CPU、磁盘和网络等，每个任务会被分配一个Container，该任务只能在该Container中执行，并使用该Container封装的资源。**NodeManager**是一个个的计算节点，主要**负责启动Application所需的Container，监控资源**（内存、CPU、磁盘和网络等）的使用情况并将之汇报给ResourceManager。ResourceManager与NodeManagers共同组成整个数据计算框架，ApplicationMaster与具体的Application相关，主要负责同ResourceManager协商以获取合适的Container，并跟踪这些Container的状态和监控其进度。\n\n##### (2)YARN-Client模式\n\n　　Driver在客户端本地运行，这种模式可以使得Spark Application和客户端进行交互，因为Driver在客户端，所以可以通过webUI访问Driver的状态，默认是http://hadoop1:4040访问，而YARN通过http:// hadoop1:8088访问。工作流程：\n\n![](http://pic.panjiangtao.cn/202110281115_159.png)\n\n1. Spark Yarn Client向YARN的ResourceManager**申请启动Application Master**。同时在**SparkContent初始化**中将创建DAGScheduler和TASKScheduler等，由于我们选择的是Yarn-Client模式，程序会选择YarnClientClusterScheduler和YarnClientSchedulerBackend\n2. ResourceManager收到请求后，在集群中选择一个NodeManager，**为该应用程序分配第一个Container**，要求它在这个Container中**启动应用程序的ApplicationMaster**，与YARN-Cluster区别的是在该ApplicationMaster不运行SparkContext，只与SparkContext进行联系进行资源的分派\n3. Client中的SparkContext初始化完毕后，与ApplicationMaster建立通讯，向ResourceManager注册，根据任务信息向ResourceManager**申请资源（Container）**\n4. 一旦ApplicationMaster申请到资源（也就是Container）后，便与对应的NodeManager通信，要求它在获得的Container中**启动CoarseGrainedExecutorBackend**，CoarseGrainedExecutorBackend启动后会向Client中的SparkContext**注册并申请Task**\n5. client中的SparkContext**分配Task给CoarseGrainedExecutorBackend执行**，CoarseGrainedExecutorBackend**运行Task并向Driver汇报运行的状态和进度**，以让Client随时掌握各个任务的运行状态，从而可以在任务失败时重新启动任务\n6. 应用程序运行完成后，Client的SparkContext向ResourceManager申请**注销并关闭自己**\n\n##### (3)YARN-Cluster模式\n\n　　在YARN-Cluster模式中，当用户向YARN中提交一个应用程序后，YARN将分两个阶段运行该应用程序：第一个阶段是把Spark的Driver作为一个ApplicationMaster在YARN集群中先启动；第二个阶段是由ApplicationMaster创建应用程序，然后为它向ResourceManager申请资源，并启动Executor来运行Task，同时监控它的整个运行过程，直到运行完成。\n\n![](http://pic.panjiangtao.cn/202110281140_69.png)\n\n1. Spark Yarn Client向YARN中**提交应用程序**，包括ApplicationMaster程序、启动ApplicationMaster的命令、需要在Executor中运行的程序等\n2. ResourceManager收到请求后，在集群中选择一个NodeManager，为该应用程序分配第一个Container，要求它在这个Container中**启动应用程序的ApplicationMaster**，其中ApplicationMaster进行SparkContext等的初始化\n3. ApplicationMaster向ResourceManager注册，这样用户可以直接通过ResourceManage查看应用程序的运行状态，然后它将采用轮询的方式通过RPC协议**为各个任务申请资源（也就是Container）**，并监控它们的运行状态直到运行结束\n4. 一旦ApplicationMaster申请到资源后，便与对应的NodeManager通信，要求它在获得的Container中**启动CoarseGrainedExecutorBackend**，CoarseGrainedExecutorBackend启动后会向ApplicationMaster中的SparkContext**注册并申请Task**。这一点和Standalone模式一样，只不过SparkContext在Spark Application中初始化时，使用CoarseGrainedSchedulerBackend配合YarnClusterScheduler**进行任务的调度**，其中YarnClusterScheduler只是对TaskSchedulerImpl的一个简单包装，增加了对Executor的等待逻辑等\n5. ApplicationMaster中的SparkContext分配Task给CoarseGrainedExecutorBackend执行，CoarseGrainedExecutorBackend运行Task并向ApplicationMaster汇报运行的状态和进度，以让**ApplicationMaster随时掌握各个任务的运行状态**，从而可以在任务失败时重新启动任务\n6. 应用程序运行完成后，**ApplicationMaster**向ResourceManager**申请注销并关闭自己**。\n\n#####  (4)SYARN-Client模式和YARN-Cluster模式区别\n\n　　理解YARN-Client和YARN-Cluster深层次的区别之前先清楚一个概念：Application Master。在YARN中，每个Application实例都有一个ApplicationMaster进程，它是Application启动的第一个容器。它负责和ResourceManager打交道并请求资源，获取资源之后告诉NodeManager为其启动Container。从深层次的含义讲YARN-Cluster和YARN-Client模式的区别其实就是ApplicationMaster进程的区别。\n\n* YARN-Cluster模式下，**Driver**运行在AM(Application Master)中，它负责**向YARN申请资源**，并监督作业的运行状况。**当用户提交了作业之后，就可以关掉Client**，作业会继续在YARN上运行，因而YARN-Cluster模式不适合运行交互类型的作业；\n* YARN-Client模式下，Application Master仅仅向YARN请求Executor，**Client会和请求的Container通信来调度他们工作**，也就是说Client不能离开。\n\n\n\n#### 3.Mesos模式\n\n　　这是很多公司采用的模式，官方推荐这种模式（当然，原因之一是血缘关系）。正是由于Spark开发之初就考虑到支持Mesos，因此，目前而言，Spark运行在Mesos上会比运行在YARN上更加灵活，更加自然。目前在Spark On Mesos环境中，用户可选择两种调度模式之一运行自己的应用程序（可参考Andrew Xia的“Mesos Scheduling Mode on Spark”）：\n\n![](http://pic.panjiangtao.cn/202110281428_718.png)\n\n##### 1. 粗粒度模式（Coarse-grained Mode）\n\n​        每个应用程序的运行环境由一个Dirver和若干个Executor组成，其中，每个Executor占用若干资源，内部可运行多个Task（对应多少个“slot”）。应用程序的各个任务正式运行之前，需要将运行环境中的资源全部申请好，且运行过程中要一直占用这些资源，即使不用，最后程序运行结束后，回收这些资源。举个例子，比如你提交应用程序时，指定使用5个executor运行你的应用程序，每个executor占用5GB内存和5个CPU，每个executor内部设置了5个slot，则Mesos需要先为executor分配资源并启动它们，之后开始调度任务。另外，在程序运行过程中，mesos的master和slave并不知道executor内部各个task的运行情况，executor直接将任务状态通过内部的通信机制汇报给Driver，从一定程度上可以认为，每个应用程序利用mesos搭建了一个虚拟集群自己使用。\n\n##### 2. 细粒度模式（Fine-grained Mode）\n\n​        鉴于粗粒度模式会造成大量资源浪费，Spark On Mesos还提供了另外一种调度模式：细粒度模式，这种模式类似于现在的云计算，思想是按需分配。与粗粒度模式一样，应用程序启动时，先会启动executor，但每个executor占用资源仅仅是自己运行所需的资源，不需要考虑将来要运行的任务，之后，mesos会为每个executor动态分配资源，每分配一些，便可以运行一个新任务，单个Task运行完之后可以马上释放对应的资源。每个Task会汇报状态给Mesos slave和Mesos Master，便于更加细粒度管理和容错，这种调度模式类似于MapReduce调度模式，每个Task完全独立，优点是便于资源控制和隔离，但缺点也很明显，短作业运行延迟大。\n\n","slug":"spark1-basic","published":1,"updated":"2021-10-28T06:44:06.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ic0053c8pv9tltglfb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>参考资料：<a href=\"https://www.jianshu.com/p/e41b18a7e202\">Spark基本概念快速入门</a>，<a href=\"https://zhuanlan.zhihu.com/p/95622176\">Spark基础知识（一）—-常用组建和RDD</a>，<a href=\"https://www.cnblogs.com/cxxjohnson/p/8909578.html\">Spark(一): 基本架构及原理</a>，<a href=\"https://blog.csdn.net/c391183914/article/details/78672555#12-spark%E7%89%B9%E7%82%B9\">Spark 入门和使用</a></p>\n          </div>\n<p>　　目前，Spark生态系统已经发展成为一个包含多个子项目的集合，其中包含Spark SQL、Spark Streaming、GraphX、MLib、SparkR等子项目，Spark是基于内存计算的大数据并行计算框架。除了<strong>扩展了广泛使用的 MapReduce 计算模型</strong>，而且高效地支持更多计算模式，包括<strong>交互式查询和流处理</strong>。<br><a id=\"more\"></a></p>\n<p>　　<strong>适用场景</strong>：Spark 适用于各种各样原先需要多种不同的分布式平台的场景，包括<strong>批处理、迭代算法、交互式查询、流处理</strong>。通过在一个统一的框架下支持这些不同的计算，Spark 使我们可以简单而低耗地把各种处理流程整合在一起。而这样的组合，在实际的数据分析 过程中是很有意义的。不仅如此，Spark 的这种特性还大大减轻了原先需要对各种平台分 别管理的负担。</p>\n<h3 id=\"一、基本架构\"><a href=\"#一、基本架构\" class=\"headerlink\" title=\"一、基本架构\"></a>一、基本架构</h3><p><img src=\"http://pic.panjiangtao.cn/202110271945_212.png\" alt></p>\n<h4 id=\"1-Spark-Core核心和弹性分布式资料集（RDD）\"><a href=\"#1-Spark-Core核心和弹性分布式资料集（RDD）\" class=\"headerlink\" title=\"1. Spark Core核心和弹性分布式资料集（RDD）\"></a>1. Spark Core核心和弹性分布式资料集（RDD）</h4><p>　　Spark Core是整个项目的基础，提供了分布式任务调度，调度和基本的I／O功能，<strong>包含任务调度、内存管理、错误恢复、与存储系统交互</strong>等模块。而其基础的程序抽象则称为弹性分布式资料集（RDD），是一个可以<strong>并行操作、有容错机制的资料集合</strong>。 Spark Core定义RDD的API、操作以及这两者上的动作。RDD可以透过引用外部存储系统的资料集创建（例如：共享文件系统、HDFS、HBase或其他 Hadoop 资料格式的数据源）。或者是通过在现有RDD的转换而创建（比如：map、filter、reduce、join等等）。</p>\n<h4 id=\"2-Spark-SQL\"><a href=\"#2-Spark-SQL\" class=\"headerlink\" title=\"2. Spark SQL\"></a>2. Spark SQL</h4><p>　　Spark SQL在Spark核心上带出一种名为<strong>SchemaRDD</strong>的资料抽象化概念，提供结构化和半结构化资料相关的支持。Spark SQL提供了领域特定语言，可使用<strong>Scala、Java或Python</strong>来操纵SchemaRDD。它还支持使用使用命令行界面和<strong>ODBC／JDBC</strong>服务器操作SQL语言。在Spark 1.3版本，SchemaRDD被重命名为DataFrame。</p>\n<h4 id=\"3-Spark-Streaming\"><a href=\"#3-Spark-Streaming\" class=\"headerlink\" title=\"3. Spark Streaming\"></a>3. Spark Streaming</h4><p>　　Spark Streaming充分利用Spark核心的快速调度能力来运行<strong>流分析</strong>。它截取小批量的资料并对之运行RDD转换。这种设计使流分析可在同一个引擎内使用同一组为批量分析编写而撰写的应用程序代码。</p>\n<h4 id=\"4-MLlib\"><a href=\"#4-MLlib\" class=\"headerlink\" title=\"4. MLlib\"></a>4. MLlib</h4><p>　　MLlib是Spark上的<strong>分布式机器学习框架</strong>。Spark分布式存储器式的架构比Hadoop磁盘式的Apache Mahout快上10倍，扩展性甚至比Vowpal Wabbit要好。MLlib可使用许多常见的机器学习和统计算法，简化大规模机器学习时间，其中包括：</p>\n<ul>\n<li>汇总统计、相关性、分层抽样、假设检定、随机数据生成</li>\n<li>分类与回归：支持向量机、回归、线性回归、逻辑回归、决策树、朴素贝叶斯</li>\n<li>协同过滤：ALS</li>\n<li>分群：k-平均算法</li>\n<li>维度约减：奇异值分解（SVD），主成分分析（PCA）</li>\n<li>特征提取和转换：TF-IDF、Word2Vec、StandardScaler</li>\n<li>最优化：随机梯度下降法（SGD）、L-BFGS</li>\n</ul>\n<h4 id=\"5-GraphX\"><a href=\"#5-GraphX\" class=\"headerlink\" title=\"5. GraphX\"></a>5. GraphX</h4><p>　　GraphX是Spark上的<strong>分布式图形处理框架</strong>。它提供了一组API，可用于表达图表计算并可以模拟Pregel抽象化。GraphX还对这种抽象化提供了优化运行。</p>\n<h4 id=\"6-集群管理器\"><a href=\"#6-集群管理器\" class=\"headerlink\" title=\"6. 集群管理器\"></a>6. 集群管理器</h4><p>　　Spark 设计为可以高效地在一个计算节点到数千个计算节点之间<strong>伸缩计算</strong>。为了实现这样的要求，同时获得最大灵活性，Spark 支持在各种集群管理器(cluster manager)上运行，包括 <strong>Hadoop YARN、Apache Mesos</strong>，以及 Spark 自带的一个简易调度器，叫作<strong>独立调度器</strong>。</p>\n<ol>\n<li>Standalone : spark原生的资源管理，由Master负责资源的分配</li>\n<li>Apache Mesos:与hadoop MR兼容性良好的一种资源调度框架</li>\n<li>Hadoop Yarn: 主要是指Yarn中的ResourceManager</li>\n</ol>\n<h3 id=\"二、基本概念\"><a href=\"#二、基本概念\" class=\"headerlink\" title=\"二、基本概念\"></a>二、基本概念</h3><h4 id=\"1-Spark集群\"><a href=\"#1-Spark集群\" class=\"headerlink\" title=\"1. Spark集群\"></a>1. Spark集群</h4><p>　　一组计算机的集合，每个计算机节点作为独立的计算资源，又可以虚拟出多个具备计算能力的虚拟机，这些虚拟机是集群中的计算单元。Spark的核心模块专注于调度和管理虚拟机之上分布式计算任务的执行，集群中的计算资源则交给Cluster Manager这个角色来管理，Cluster Manager可以为自带的Standalone、或第三方的Yarn和Mesos。<br>　　Cluster Manager一般采用Master-Slave结构。以Yarn为例，部署ResourceManager服务的节点为<strong>Master</strong>，负责集群中所有计算资源的统一管理和分配；部署NodeManager服务的节点为<strong>Slave</strong>，负责在当前节点创建一个或多个具备独立计算能力的JVM（Java虚拟机）实例，在Spark中，这些节点也叫做<strong>Worker</strong>。<br>　　另外还有一个<strong>Client</strong>节点的概念，是指用户提交Spark Application时所在的节点。</p>\n<h4 id=\"2-Application\"><a href=\"#2-Application\" class=\"headerlink\" title=\"2. Application\"></a>2. Application</h4><p>　　用户<strong>自己写的Spark应用程序</strong>，批处理作业的集合。Application的main方法为应用程序的入口，用户通过Spark的API，定义了RDD和对RDD的操作。</p>\n<h4 id=\"3-SparkContext\"><a href=\"#3-SparkContext\" class=\"headerlink\" title=\"3. SparkContext\"></a>3. SparkContext</h4><p>　　Spark最重要的API，<strong>用户逻辑与Spark集群主要的交互接口</strong>，它会和Cluster Master交互，包括向它申请计算资源等。</p>\n<h4 id=\"4-Driver和Executor\"><a href=\"#4-Driver和Executor\" class=\"headerlink\" title=\"4. Driver和Executor\"></a>4. Driver和Executor</h4><p><img src=\"http://pic.panjiangtao.cn/202110281440_941.png\" alt></p>\n<p>Spark在执行每个Application的过程中会启动<strong>Driver和Executor</strong>两种JVM进程：</p>\n<ul>\n<li>Driver进程为主控进程，负责执行用户Application中的main方法，提交Job，并将Job转化为Task，在各个Executor进程间协调Task的调度。</li>\n<li>运行在Worker上的Executor进程负责执行Task，并将结果返回给Driver，同时为需要缓存的RDD提供存储功能。</li>\n<li>Cluster Manager：在standalone模式中即为Master主节点，控制整个集群，监控worker。在YARN模式中为资源管理器。</li>\n<li>Worker节点：从节点，负责控制计算节点，启动Executor或者Driver。</li>\n</ul>\n<h4 id=\"5-RDD\"><a href=\"#5-RDD\" class=\"headerlink\" title=\"5. RDD\"></a>5. RDD</h4><p>　　<strong>RDD</strong>（Resilient Distributed Dataset）叫做弹性分布式数据集，是Spark中最基本的数据抽象，它代表一个<strong>不可变、可分区、里面的元素可并行计算</strong>的集合。RDD具有数据流模型的特点：<strong>自动容错、位置感知性调度和可伸缩性</strong>。RDD允许用户在执行多个查询时显式地将工作集缓存在内存中，后续的查询能够重用工作集，这极大地提升了查询速度。RDD的原理和组成如下图：</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110271956_606.png\" alt></p>\n<p>（1）<strong>一组分区（Partition</strong>），即数据集的基本组成单位。对于RDD来说，每个分片都会被一个计算任务处理，并决定并行计算的粒度。用户可以在创建RDD时<strong>指定RDD的分片个数</strong>，如果没有指定，那么就会采用默认值。默认值就是程序所分配到的CPU Core的数目。<u>图中指数据集中的每句话经过第二个函数被分割为单词（由第一个RDD到第二个RDD完成分割）</u>。</p>\n<p>（2）一个计算每个分区的函数。Spark中RDD的计算是以分片为单位的，<strong>每个RDD都会实现compute函数以达到这个目的</strong>。compute函数会对迭代器进行复合，不需要保存每次计算的结果。<u>图中表示为上方红色的处理函数</u>。Spark中的计算可以简单抽象为对RDD的<strong>创建、转换和返回操作结果</strong>的过程：</p>\n<ul>\n<li>创建<br>通过<strong>加载外部</strong>物理存储（如HDFS）中的<strong>数据集</strong>，或Application中<strong>定义的对象集合</strong>（如List）来创建。RDD在创建后不可被改变，只可以对其执行下面两种操作。</li>\n</ul>\n<ul>\n<li>转换（Transformation）<br>对已有的RDD中的数据执行计算进行转换，而<strong>产生新的RDD</strong>，在这个过程中有时会产生中间RDD。Spark对于Transformation采用惰性计算机制，遇到Transformation时并不会立即计算结果，而是要等遇到Action时一起执行。</li>\n<li>行动（Action）<br>对已有的RDD中的数据执行计算产生结果，<strong>将结果返回Driver程序</strong>或写入到外部物理存储。在Action过程中同样有可能生成中间RDD。</li>\n</ul>\n<p>（3）RDD之间的依赖关系(Dependency)。<strong>RDD的每次转换都会生成一个新的RDD，所以RDD之间就会形成类似于流水线一样的前后依赖关系</strong>。在部分分区数据丢失时，Spark可以通过这个依赖关系重新计算丢失的分区数据，而不是对RDD的所有分区进行重新计算。<u>图中每个RDD经过函数的计算产生新的RDD</u>。</p>\n<p>对RDD的Transformation或Action操作，让RDD产生了<strong>父子依赖关系</strong>（事实上，Transformation或Action操作生成的中间RDD也存在依赖关系），这种依赖分为宽依赖和窄依赖两种：</p>\n<ul>\n<li>NarrowDependency (窄依赖)<br>parent RDD中的<strong>每个Partition最多被</strong>child RDD中的<strong>一个Partition使用</strong>。让RDD产生窄依赖的操作可以称为窄依赖操作，如map、union。</li>\n<li>WideDependency (或ShuffleDependency，宽依赖）<br>parent RDD中的每个Partition被child RDD中的<strong>多个Partition使用</strong>，这时会依据Record的key进行<strong>数据重组</strong>，这个过程即为<strong>Shuffle</strong>（洗牌）。让RDD产生宽依赖的操作可以称为宽依赖操作，如reduceByKey, groupByKey。</li>\n</ul>\n<p>（4）一个<strong>Partitioner</strong>，即RDD的分区函数。当前Spark中实现了<strong>两种类型的分区函数，一个是基于哈希的HashPartitioner，另外一个是基于范围的RangePartitioner。</strong>只有对于key-value的RDD，才会有Partitioner，非key-value的RDD的Parititioner的值是None。Partitioner函数不但决定了RDD本身的分区数量，也决定了parent RDD Shuffle输出时的分片区。<u>图中第二个函数就为分区函数</u>。</p>\n<p>（5）一个列表，<strong>存储存取每个Partition的优先位置</strong>（preferred location）。对于一个HDFS文件来说，这个列表保存的就是每个Partition所在的块的位置。按照“移动数据不如移动计算”的理念，Spark在进行任务调度的时候，会尽可能地将计算任务分配到其所要处理数据块的存储位置。</p>\n<h4 id=\"5-1-RDD的两个方法\"><a href=\"#5-1-RDD的两个方法\" class=\"headerlink\" title=\"5.1 RDD的两个方法\"></a>5.1 RDD的两个方法</h4><ul>\n<li><p><strong>Persist</strong></p>\n<p>　　通过RDD的<code>persist</code>方法，可以将RDD的分区数据<strong>持久化在内存或硬盘中</strong>，通过<code>cache</code>方法则是<strong>缓存到内存</strong>。这里的persist和cache是一样的机制，只不过cache是使用默认的<code>MEMORY_ONLY</code>的存储级别对RDD进行persist，故“缓存”也就是一种“持久化”。<br> 前面提到，只有触发了一个Action之后，Spark才会提交Job进行真正的计算。所以<strong>RDD只有经过一次Action之后，才能将RDD持久化</strong>，然后在Job间共享，即如果两个Job用到了相同的RDD，那么可以在第一个Job中对这个RDD进行缓存，在第二个Job中就避免了RDD的重新计算。持久化机制使需要访问重复数据的Application运行地更快，是能够<strong>提升Spark运算速度</strong>的一个重要功能。</p>\n</li>\n<li><p><strong>Checkpoint</strong></p>\n<p>　　调用RDD的<code>checkpoint</code>方法，可以将RDD保存到<strong>外部存储中，如硬盘或HDFS</strong>。Spark引入checkpoint机制，是因为持久化的RDD的数据有可能丢失或被替换，checkpoint可以在这时候发挥作用，避免重新计算。<br>　　创建checkpoint是在当前Job完成后，由另外一个专门的Job完成：也就是说需要checkpoint的RDD会被计算两次。因此，在使用rdd.checkpoint()的时候，建议加上rdd.cache(),这样第二次运行的Job久不用再去计算该RDD了。</p>\n<p>　　一个Job在开始处理RDD的Partition时，或者更准确点说，在Executor中运行的任务在获取Partition数据时，会<strong>先判断是否被持久化</strong>，在没有命中时<strong>再判断是否保存了checkpoint</strong>，如果没有读取到则会重新计算该Partition。</p>\n</li>\n</ul>\n<h4 id=\"6-Job\"><a href=\"#6-Job\" class=\"headerlink\" title=\"6. Job\"></a>6. Job</h4><p>　　在一个Application中，<strong>以Action为划分边界的Spark批处理作业</strong>。前面提到，Spark采用惰性机制，对RDD的创建和转换并不会立即执行，只有在<strong>遇到第一个Action时才会生成一个Job</strong>，然后统一调度执行。一个Job包含N个Transformation和1个Action。</p>\n<h4 id=\"7-Stage\"><a href=\"#7-Stage\" class=\"headerlink\" title=\"7. Stage\"></a>7. Stage</h4><p>　　一个Job中，<strong>以Shuffle为边界划分出的不同阶段</strong>。每个阶段包含一组可以被串行执行的窄依赖或宽依赖操作：用户提交的计算任务是一个由RDD构成的DAG(有向无环图)，如果RDD在转换的时候需要做Shuffle，那么这个Shuffle的过程就将这个DAG分为了不同的阶段（即Stage）。由于Shuffle的存在，不同的Stage是不能并行计算的，因为后面Stage的计算需要前面Stage的Shuffle的结果。<br>　　在对Job中的所有操作<strong>划分Stage时，一般会按照倒序进行</strong>，即从Action开始，遇到窄依赖操作，则划分到同一个执行阶段，遇到宽依赖操作，则划分一个新的执行阶段，且新的阶段为之前阶段的parent，然后依次类推递归执行。child Stage需要等待所有的parent Stage执行完之后才可以执行，这时Stage之间根据依赖关系构成了一个大粒度的DAG。<br>　　在一个Stage内，所有的操作以<strong>串行的Pipeline的方式</strong>，由一组Task完成计算。</p>\n<ul>\n<li><p>DAGScheduler: 根据Job<strong>构建基于Stage的DAG</strong>（Directed Acyclic Graph有向无环图)，并<strong>提交Stage给TASkScheduler</strong>。 其划分Stage的依据是RDD之间的依赖的关系找出开销最小的调度方法，如下图</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110272106_289.png\" alt></p>\n</li>\n</ul>\n<h4 id=\"8-Task\"><a href=\"#8-Task\" class=\"headerlink\" title=\"8. Task\"></a>8. Task</h4><p>　　对一个Stage之内的RDD进行串行操作的计算任务。<strong>每个Stage由一组并发的Task组成</strong>（即TaskSet），这些Task的<strong>执行逻辑完全相同</strong>，只是<strong>作用于不同的Partition</strong>。一个Stage的总Task的个数由Stage中最后的一个RDD的Partition的个数决定。</p>\n<p>　　Spark Driver会根据数据所在的位置分配计算任务，即把所有Task根据其Partition所在的位置分配给相应的Executor，以尽量减少数据的网络传输（这也就是所谓的移动数据不如移动计算）。一个Executor内同一时刻可以并行执行的Task数由<code>总CPU数／每个Task占用的CPU数</code>决定，即<code>spark.executor.cores / spark.task.cpus</code>。</p>\n<p>　　Task分为ShuffleMapTask和ResultTask两种，位于最后一个Stage的Task为ResultTask，其他阶段的属于ShuffleMapTask。</p>\n<ul>\n<li><p>TaskSedulter: 将TaskSET提交给worker运行，<strong>每个Executor运行什么Task</strong>就是在此处分配的. TaskScheduler维护所有TaskSet，当Executor向Driver发生心跳时，TaskScheduler会根据资源剩余情况分配相应的Task。另外TaskScheduler还维护着所有Task的运行标签，重试失败的Task。下图展示了TaskScheduler的作用</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110272104_734.png\" alt></p>\n</li>\n</ul>\n<h4 id=\"上述概念间的层次关系\"><a href=\"#上述概念间的层次关系\" class=\"headerlink\" title=\"上述概念间的层次关系\"></a>上述概念间的层次关系</h4><p>Job=多个stage，Stage=多个同种task</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110272107_230.png\" alt></p>\n<h3 id=\"三、Spark基本运行流程\"><a href=\"#三、Spark基本运行流程\" class=\"headerlink\" title=\"三、Spark基本运行流程\"></a>三、Spark基本运行流程</h3><p><img src=\"http://pic.panjiangtao.cn/202110281417_711.png\" alt></p>\n<ol>\n<li>构建Spark Application的运行环境，<strong>启动SparkContext</strong></li>\n<li><strong>SparkContext</strong>向<strong>资源管理器</strong>（可以是Standalone，Mesos，Yarn）<strong>申请运行Executor资源</strong>，并启动StandaloneExecutorbackend，</li>\n<li><strong>Executor</strong>向<strong>SparkContext申请Task</strong></li>\n<li>SparkContext将<strong>应用程序分发给Executor</strong></li>\n<li>SparkContext<strong>构建成DAG图</strong>，将<strong>DAG图分解成Stage</strong>、将<strong>Taskset发送给Task Scheduler</strong>，最后由Task Scheduler<strong>将Task发送给Executor运行</strong></li>\n<li><strong>Task</strong>在Executor上<strong>运行</strong>，运行完释放所有资源</li>\n</ol>\n<h4 id=\"Spark运行特点：\"><a href=\"#Spark运行特点：\" class=\"headerlink\" title=\"Spark运行特点：\"></a>Spark运行特点：</h4><ol>\n<li><strong>每个Application获取专属的executor进程</strong>，该进程在Application期间一直驻留，并以多线程方式运行Task。这种Application隔离机制是有优势的，无论是从调度角度看（每个Driver调度他自己的任务），还是从运行角度看（来自不同Application的Task运行在不同JVM中），当然这样意味着Spark Application不能跨应用程序共享数据，除非将数据写入外部存储系统</li>\n<li>Spark<strong>与资源管理器无关</strong>，只要能够获取executor进程，并能保持相互通信就可以了</li>\n<li>提交SparkContext的<strong>Client应该靠近Worker节点</strong>（运行Executor的节点），最好是在同一个Rack里，因为Spark Application运行过程中SparkContext和Executor之间有大量的信息交换</li>\n<li>Task采用了<strong>数据本地性和推测执行</strong>的优化机制</li>\n</ol>\n<h3 id=\"四、运行模式\"><a href=\"#四、运行模式\" class=\"headerlink\" title=\"四、运行模式\"></a>四、运行模式</h3><ul>\n<li>部署在单机上时，既可以用本地模式运行，也可以用伪分布模式运行，而当以分布式集群的方式部署时，也有众多的运行模式可供选择，这取决于集群的实际情况，底层的资源调度即可以依赖外部资源调度框架，也可以使用Spark内建的<strong>Standalone</strong>模式。</li>\n<li>对于外部资源调度框架的支持，目前的实现包括相对稳定的<strong>Mesos</strong>模式，以及<strong>hadoop YARN</strong>模式</li>\n<li><strong>本地模式</strong>：常用于本地开发测试的local cluster模式</li>\n</ul>\n<h4 id=\"1-standalone-独立集群运行模式\"><a href=\"#1-standalone-独立集群运行模式\" class=\"headerlink\" title=\"1. standalone: 独立集群运行模式\"></a>1. standalone: 独立集群运行模式</h4><h5 id=\"（1）结构关系：\"><a href=\"#（1）结构关系：\" class=\"headerlink\" title=\"（1）结构关系：\"></a>（1）结构关系：</h5><p><img src=\"http://pic.panjiangtao.cn/202110281050_53.png\" alt></p>\n<ul>\n<li>Standalone模式使用Spark<strong>自带的资源调度框架</strong></li>\n<li>采用Master/Slaves的典型架构，选用ZooKeeper来实现Master的HA（Highly Available，双机集群系统）</li>\n<li>该模式主要的节点有Client节点、Master节点和Worker节点。其中<strong>Driver既可以运行在Master节点上中，也可以运行在本地Client端</strong>。当用spark-shell交互式工具提交Spark的Job时，Driver在Master节点上运行；当使用spark-submit工具提交Job或者在Eclips、IDEA等开发平台上使用”new SparkConf.setManager(“spark://master:7077”)”方式运行Spark任务时，Driver是运行在本地Client端上的</li>\n</ul>\n<h5 id=\"（2）运行过程\"><a href=\"#（2）运行过程\" class=\"headerlink\" title=\"（2）运行过程\"></a>（2）运行过程</h5><p><img src=\"http://pic.panjiangtao.cn/202110281058_435.png\" alt></p>\n<ol>\n<li>SparkContext连接到Master，向<strong>Master注册并申请资源</strong>（CPU Core 和Memory）</li>\n<li>Master根据SparkContext的资源申请要求和Worker心跳周期内报告的信息决定在哪个Worker上分配资源，然后<strong>在该Worker上获取资源</strong>，然后启动StandaloneExecutorBackend；</li>\n<li>StandaloneExecutorBackend向<strong>SparkContext注册</strong>；</li>\n<li>SparkContext将Applicaiton代码发送给StandaloneExecutorBackend；并且SparkContext解析Applicaiton代码，<strong>构建DAG图</strong>，并提交给DAG Scheduler分解成Stage（当碰到Action操作时，就会催生Job；每个Job中含有1个或多个Stage，Stage一般在获取外部数据和shuffle之前产生），然后以Stage（或者称为TaskSet）提交给Task Scheduler，Task Scheduler负责<strong>将Task分配到相应的Worker</strong>，最后提交给StandaloneExecutorBackend执行；</li>\n<li>StandaloneExecutorBackend会建立Executor线程池，开始执行Task，并向SparkContext<strong>报告Task状态</strong>，直至Task完成</li>\n<li>所有Task完成后，SparkContext向Master<strong>注销，释放资源</strong></li>\n</ol>\n<h4 id=\"2-hadoop-YARN模式\"><a href=\"#2-hadoop-YARN模式\" class=\"headerlink\" title=\"2. hadoop YARN模式\"></a>2. hadoop YARN模式</h4><p>hadoop YARN模式根据Driver在集群中的位置分为两种模式：一种是YARN-Client模式，另一种是YARN-Cluster模式.</p>\n<h5 id=\"1-Yarn框架流程\"><a href=\"#1-Yarn框架流程\" class=\"headerlink\" title=\"(1)Yarn框架流程\"></a>(1)Yarn框架流程</h5><p>　　任何框架与<em>YARN</em>的结合，都必须遵循<em>YARN</em>的开发模式。在分析<em>Spark on YARN</em>的实现细节之前，有必要先分析一下<em>YARN</em>框架的一些基本原理。Yarn框架的基本流程如下:</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281120_36.png\" alt></p>\n<p>　　其中，ResourceManager负责将集群的<strong>资源分配</strong>给各个应用使用，而<strong>资源分配和调度的基本单位是Container</strong>，其中封装了机器资源，如内存、CPU、磁盘和网络等，每个任务会被分配一个Container，该任务只能在该Container中执行，并使用该Container封装的资源。<strong>NodeManager</strong>是一个个的计算节点，主要<strong>负责启动Application所需的Container，监控资源</strong>（内存、CPU、磁盘和网络等）的使用情况并将之汇报给ResourceManager。ResourceManager与NodeManagers共同组成整个数据计算框架，ApplicationMaster与具体的Application相关，主要负责同ResourceManager协商以获取合适的Container，并跟踪这些Container的状态和监控其进度。</p>\n<h5 id=\"2-YARN-Client模式\"><a href=\"#2-YARN-Client模式\" class=\"headerlink\" title=\"(2)YARN-Client模式\"></a>(2)YARN-Client模式</h5><p>　　Driver在客户端本地运行，这种模式可以使得Spark Application和客户端进行交互，因为Driver在客户端，所以可以通过webUI访问Driver的状态，默认是<a href=\"http://hadoop1:4040访问，而YARN通过http://\">http://hadoop1:4040访问，而YARN通过http://</a> hadoop1:8088访问。工作流程：</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281115_159.png\" alt></p>\n<ol>\n<li>Spark Yarn Client向YARN的ResourceManager<strong>申请启动Application Master</strong>。同时在<strong>SparkContent初始化</strong>中将创建DAGScheduler和TASKScheduler等，由于我们选择的是Yarn-Client模式，程序会选择YarnClientClusterScheduler和YarnClientSchedulerBackend</li>\n<li>ResourceManager收到请求后，在集群中选择一个NodeManager，<strong>为该应用程序分配第一个Container</strong>，要求它在这个Container中<strong>启动应用程序的ApplicationMaster</strong>，与YARN-Cluster区别的是在该ApplicationMaster不运行SparkContext，只与SparkContext进行联系进行资源的分派</li>\n<li>Client中的SparkContext初始化完毕后，与ApplicationMaster建立通讯，向ResourceManager注册，根据任务信息向ResourceManager<strong>申请资源（Container）</strong></li>\n<li>一旦ApplicationMaster申请到资源（也就是Container）后，便与对应的NodeManager通信，要求它在获得的Container中<strong>启动CoarseGrainedExecutorBackend</strong>，CoarseGrainedExecutorBackend启动后会向Client中的SparkContext<strong>注册并申请Task</strong></li>\n<li>client中的SparkContext<strong>分配Task给CoarseGrainedExecutorBackend执行</strong>，CoarseGrainedExecutorBackend<strong>运行Task并向Driver汇报运行的状态和进度</strong>，以让Client随时掌握各个任务的运行状态，从而可以在任务失败时重新启动任务</li>\n<li>应用程序运行完成后，Client的SparkContext向ResourceManager申请<strong>注销并关闭自己</strong></li>\n</ol>\n<h5 id=\"3-YARN-Cluster模式\"><a href=\"#3-YARN-Cluster模式\" class=\"headerlink\" title=\"(3)YARN-Cluster模式\"></a>(3)YARN-Cluster模式</h5><p>　　在YARN-Cluster模式中，当用户向YARN中提交一个应用程序后，YARN将分两个阶段运行该应用程序：第一个阶段是把Spark的Driver作为一个ApplicationMaster在YARN集群中先启动；第二个阶段是由ApplicationMaster创建应用程序，然后为它向ResourceManager申请资源，并启动Executor来运行Task，同时监控它的整个运行过程，直到运行完成。</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281140_69.png\" alt></p>\n<ol>\n<li>Spark Yarn Client向YARN中<strong>提交应用程序</strong>，包括ApplicationMaster程序、启动ApplicationMaster的命令、需要在Executor中运行的程序等</li>\n<li>ResourceManager收到请求后，在集群中选择一个NodeManager，为该应用程序分配第一个Container，要求它在这个Container中<strong>启动应用程序的ApplicationMaster</strong>，其中ApplicationMaster进行SparkContext等的初始化</li>\n<li>ApplicationMaster向ResourceManager注册，这样用户可以直接通过ResourceManage查看应用程序的运行状态，然后它将采用轮询的方式通过RPC协议<strong>为各个任务申请资源（也就是Container）</strong>，并监控它们的运行状态直到运行结束</li>\n<li>一旦ApplicationMaster申请到资源后，便与对应的NodeManager通信，要求它在获得的Container中<strong>启动CoarseGrainedExecutorBackend</strong>，CoarseGrainedExecutorBackend启动后会向ApplicationMaster中的SparkContext<strong>注册并申请Task</strong>。这一点和Standalone模式一样，只不过SparkContext在Spark Application中初始化时，使用CoarseGrainedSchedulerBackend配合YarnClusterScheduler<strong>进行任务的调度</strong>，其中YarnClusterScheduler只是对TaskSchedulerImpl的一个简单包装，增加了对Executor的等待逻辑等</li>\n<li>ApplicationMaster中的SparkContext分配Task给CoarseGrainedExecutorBackend执行，CoarseGrainedExecutorBackend运行Task并向ApplicationMaster汇报运行的状态和进度，以让<strong>ApplicationMaster随时掌握各个任务的运行状态</strong>，从而可以在任务失败时重新启动任务</li>\n<li>应用程序运行完成后，<strong>ApplicationMaster</strong>向ResourceManager<strong>申请注销并关闭自己</strong>。</li>\n</ol>\n<h5 id=\"4-SYARN-Client模式和YARN-Cluster模式区别\"><a href=\"#4-SYARN-Client模式和YARN-Cluster模式区别\" class=\"headerlink\" title=\"(4)SYARN-Client模式和YARN-Cluster模式区别\"></a>(4)SYARN-Client模式和YARN-Cluster模式区别</h5><p>　　理解YARN-Client和YARN-Cluster深层次的区别之前先清楚一个概念：Application Master。在YARN中，每个Application实例都有一个ApplicationMaster进程，它是Application启动的第一个容器。它负责和ResourceManager打交道并请求资源，获取资源之后告诉NodeManager为其启动Container。从深层次的含义讲YARN-Cluster和YARN-Client模式的区别其实就是ApplicationMaster进程的区别。</p>\n<ul>\n<li>YARN-Cluster模式下，<strong>Driver</strong>运行在AM(Application Master)中，它负责<strong>向YARN申请资源</strong>，并监督作业的运行状况。<strong>当用户提交了作业之后，就可以关掉Client</strong>，作业会继续在YARN上运行，因而YARN-Cluster模式不适合运行交互类型的作业；</li>\n<li>YARN-Client模式下，Application Master仅仅向YARN请求Executor，<strong>Client会和请求的Container通信来调度他们工作</strong>，也就是说Client不能离开。</li>\n</ul>\n<h4 id=\"3-Mesos模式\"><a href=\"#3-Mesos模式\" class=\"headerlink\" title=\"3.Mesos模式\"></a>3.Mesos模式</h4><p>　　这是很多公司采用的模式，官方推荐这种模式（当然，原因之一是血缘关系）。正是由于Spark开发之初就考虑到支持Mesos，因此，目前而言，Spark运行在Mesos上会比运行在YARN上更加灵活，更加自然。目前在Spark On Mesos环境中，用户可选择两种调度模式之一运行自己的应用程序（可参考Andrew Xia的“Mesos Scheduling Mode on Spark”）：</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281428_718.png\" alt></p>\n<h5 id=\"1-粗粒度模式（Coarse-grained-Mode）\"><a href=\"#1-粗粒度模式（Coarse-grained-Mode）\" class=\"headerlink\" title=\"1. 粗粒度模式（Coarse-grained Mode）\"></a>1. 粗粒度模式（Coarse-grained Mode）</h5><p>​        每个应用程序的运行环境由一个Dirver和若干个Executor组成，其中，每个Executor占用若干资源，内部可运行多个Task（对应多少个“slot”）。应用程序的各个任务正式运行之前，需要将运行环境中的资源全部申请好，且运行过程中要一直占用这些资源，即使不用，最后程序运行结束后，回收这些资源。举个例子，比如你提交应用程序时，指定使用5个executor运行你的应用程序，每个executor占用5GB内存和5个CPU，每个executor内部设置了5个slot，则Mesos需要先为executor分配资源并启动它们，之后开始调度任务。另外，在程序运行过程中，mesos的master和slave并不知道executor内部各个task的运行情况，executor直接将任务状态通过内部的通信机制汇报给Driver，从一定程度上可以认为，每个应用程序利用mesos搭建了一个虚拟集群自己使用。</p>\n<h5 id=\"2-细粒度模式（Fine-grained-Mode）\"><a href=\"#2-细粒度模式（Fine-grained-Mode）\" class=\"headerlink\" title=\"2. 细粒度模式（Fine-grained Mode）\"></a>2. 细粒度模式（Fine-grained Mode）</h5><p>​        鉴于粗粒度模式会造成大量资源浪费，Spark On Mesos还提供了另外一种调度模式：细粒度模式，这种模式类似于现在的云计算，思想是按需分配。与粗粒度模式一样，应用程序启动时，先会启动executor，但每个executor占用资源仅仅是自己运行所需的资源，不需要考虑将来要运行的任务，之后，mesos会为每个executor动态分配资源，每分配一些，便可以运行一个新任务，单个Task运行完之后可以马上释放对应的资源。每个Task会汇报状态给Mesos slave和Mesos Master，便于更加细粒度管理和容错，这种调度模式类似于MapReduce调度模式，每个Task完全独立，优点是便于资源控制和隔离，但缺点也很明显，短作业运行延迟大。</p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":12470,"excerpt":"<div class=\"note info\">\n            <p>参考资料：<a href=\"https://www.jianshu.com/p/e41b18a7e202\">Spark基本概念快速入门</a>，<a href=\"https://zhuanlan.zhihu.com/p/95622176\">Spark基础知识（一）—-常用组建和RDD</a>，<a href=\"https://www.cnblogs.com/cxxjohnson/p/8909578.html\">Spark(一): 基本架构及原理</a>，<a href=\"https://blog.csdn.net/c391183914/article/details/78672555#12-spark%E7%89%B9%E7%82%B9\">Spark 入门和使用</a></p>\n          </div>\n<p>　　目前，Spark生态系统已经发展成为一个包含多个子项目的集合，其中包含Spark SQL、Spark Streaming、GraphX、MLib、SparkR等子项目，Spark是基于内存计算的大数据并行计算框架。除了<strong>扩展了广泛使用的 MapReduce 计算模型</strong>，而且高效地支持更多计算模式，包括<strong>交互式查询和流处理</strong>。<br></p>","more":"<p></p>\n<p>　　<strong>适用场景</strong>：Spark 适用于各种各样原先需要多种不同的分布式平台的场景，包括<strong>批处理、迭代算法、交互式查询、流处理</strong>。通过在一个统一的框架下支持这些不同的计算，Spark 使我们可以简单而低耗地把各种处理流程整合在一起。而这样的组合，在实际的数据分析 过程中是很有意义的。不仅如此，Spark 的这种特性还大大减轻了原先需要对各种平台分 别管理的负担。</p>\n<h3 id=\"一、基本架构\"><a href=\"#一、基本架构\" class=\"headerlink\" title=\"一、基本架构\"></a>一、基本架构</h3><p><img src=\"http://pic.panjiangtao.cn/202110271945_212.png\" alt></p>\n<h4 id=\"1-Spark-Core核心和弹性分布式资料集（RDD）\"><a href=\"#1-Spark-Core核心和弹性分布式资料集（RDD）\" class=\"headerlink\" title=\"1. Spark Core核心和弹性分布式资料集（RDD）\"></a>1. Spark Core核心和弹性分布式资料集（RDD）</h4><p>　　Spark Core是整个项目的基础，提供了分布式任务调度，调度和基本的I／O功能，<strong>包含任务调度、内存管理、错误恢复、与存储系统交互</strong>等模块。而其基础的程序抽象则称为弹性分布式资料集（RDD），是一个可以<strong>并行操作、有容错机制的资料集合</strong>。 Spark Core定义RDD的API、操作以及这两者上的动作。RDD可以透过引用外部存储系统的资料集创建（例如：共享文件系统、HDFS、HBase或其他 Hadoop 资料格式的数据源）。或者是通过在现有RDD的转换而创建（比如：map、filter、reduce、join等等）。</p>\n<h4 id=\"2-Spark-SQL\"><a href=\"#2-Spark-SQL\" class=\"headerlink\" title=\"2. Spark SQL\"></a>2. Spark SQL</h4><p>　　Spark SQL在Spark核心上带出一种名为<strong>SchemaRDD</strong>的资料抽象化概念，提供结构化和半结构化资料相关的支持。Spark SQL提供了领域特定语言，可使用<strong>Scala、Java或Python</strong>来操纵SchemaRDD。它还支持使用使用命令行界面和<strong>ODBC／JDBC</strong>服务器操作SQL语言。在Spark 1.3版本，SchemaRDD被重命名为DataFrame。</p>\n<h4 id=\"3-Spark-Streaming\"><a href=\"#3-Spark-Streaming\" class=\"headerlink\" title=\"3. Spark Streaming\"></a>3. Spark Streaming</h4><p>　　Spark Streaming充分利用Spark核心的快速调度能力来运行<strong>流分析</strong>。它截取小批量的资料并对之运行RDD转换。这种设计使流分析可在同一个引擎内使用同一组为批量分析编写而撰写的应用程序代码。</p>\n<h4 id=\"4-MLlib\"><a href=\"#4-MLlib\" class=\"headerlink\" title=\"4. MLlib\"></a>4. MLlib</h4><p>　　MLlib是Spark上的<strong>分布式机器学习框架</strong>。Spark分布式存储器式的架构比Hadoop磁盘式的Apache Mahout快上10倍，扩展性甚至比Vowpal Wabbit要好。MLlib可使用许多常见的机器学习和统计算法，简化大规模机器学习时间，其中包括：</p>\n<ul>\n<li>汇总统计、相关性、分层抽样、假设检定、随机数据生成</li>\n<li>分类与回归：支持向量机、回归、线性回归、逻辑回归、决策树、朴素贝叶斯</li>\n<li>协同过滤：ALS</li>\n<li>分群：k-平均算法</li>\n<li>维度约减：奇异值分解（SVD），主成分分析（PCA）</li>\n<li>特征提取和转换：TF-IDF、Word2Vec、StandardScaler</li>\n<li>最优化：随机梯度下降法（SGD）、L-BFGS</li>\n</ul>\n<h4 id=\"5-GraphX\"><a href=\"#5-GraphX\" class=\"headerlink\" title=\"5. GraphX\"></a>5. GraphX</h4><p>　　GraphX是Spark上的<strong>分布式图形处理框架</strong>。它提供了一组API，可用于表达图表计算并可以模拟Pregel抽象化。GraphX还对这种抽象化提供了优化运行。</p>\n<h4 id=\"6-集群管理器\"><a href=\"#6-集群管理器\" class=\"headerlink\" title=\"6. 集群管理器\"></a>6. 集群管理器</h4><p>　　Spark 设计为可以高效地在一个计算节点到数千个计算节点之间<strong>伸缩计算</strong>。为了实现这样的要求，同时获得最大灵活性，Spark 支持在各种集群管理器(cluster manager)上运行，包括 <strong>Hadoop YARN、Apache Mesos</strong>，以及 Spark 自带的一个简易调度器，叫作<strong>独立调度器</strong>。</p>\n<ol>\n<li>Standalone : spark原生的资源管理，由Master负责资源的分配</li>\n<li>Apache Mesos:与hadoop MR兼容性良好的一种资源调度框架</li>\n<li>Hadoop Yarn: 主要是指Yarn中的ResourceManager</li>\n</ol>\n<h3 id=\"二、基本概念\"><a href=\"#二、基本概念\" class=\"headerlink\" title=\"二、基本概念\"></a>二、基本概念</h3><h4 id=\"1-Spark集群\"><a href=\"#1-Spark集群\" class=\"headerlink\" title=\"1. Spark集群\"></a>1. Spark集群</h4><p>　　一组计算机的集合，每个计算机节点作为独立的计算资源，又可以虚拟出多个具备计算能力的虚拟机，这些虚拟机是集群中的计算单元。Spark的核心模块专注于调度和管理虚拟机之上分布式计算任务的执行，集群中的计算资源则交给Cluster Manager这个角色来管理，Cluster Manager可以为自带的Standalone、或第三方的Yarn和Mesos。<br>　　Cluster Manager一般采用Master-Slave结构。以Yarn为例，部署ResourceManager服务的节点为<strong>Master</strong>，负责集群中所有计算资源的统一管理和分配；部署NodeManager服务的节点为<strong>Slave</strong>，负责在当前节点创建一个或多个具备独立计算能力的JVM（Java虚拟机）实例，在Spark中，这些节点也叫做<strong>Worker</strong>。<br>　　另外还有一个<strong>Client</strong>节点的概念，是指用户提交Spark Application时所在的节点。</p>\n<h4 id=\"2-Application\"><a href=\"#2-Application\" class=\"headerlink\" title=\"2. Application\"></a>2. Application</h4><p>　　用户<strong>自己写的Spark应用程序</strong>，批处理作业的集合。Application的main方法为应用程序的入口，用户通过Spark的API，定义了RDD和对RDD的操作。</p>\n<h4 id=\"3-SparkContext\"><a href=\"#3-SparkContext\" class=\"headerlink\" title=\"3. SparkContext\"></a>3. SparkContext</h4><p>　　Spark最重要的API，<strong>用户逻辑与Spark集群主要的交互接口</strong>，它会和Cluster Master交互，包括向它申请计算资源等。</p>\n<h4 id=\"4-Driver和Executor\"><a href=\"#4-Driver和Executor\" class=\"headerlink\" title=\"4. Driver和Executor\"></a>4. Driver和Executor</h4><p><img src=\"http://pic.panjiangtao.cn/202110281440_941.png\" alt></p>\n<p>Spark在执行每个Application的过程中会启动<strong>Driver和Executor</strong>两种JVM进程：</p>\n<ul>\n<li>Driver进程为主控进程，负责执行用户Application中的main方法，提交Job，并将Job转化为Task，在各个Executor进程间协调Task的调度。</li>\n<li>运行在Worker上的Executor进程负责执行Task，并将结果返回给Driver，同时为需要缓存的RDD提供存储功能。</li>\n<li>Cluster Manager：在standalone模式中即为Master主节点，控制整个集群，监控worker。在YARN模式中为资源管理器。</li>\n<li>Worker节点：从节点，负责控制计算节点，启动Executor或者Driver。</li>\n</ul>\n<h4 id=\"5-RDD\"><a href=\"#5-RDD\" class=\"headerlink\" title=\"5. RDD\"></a>5. RDD</h4><p>　　<strong>RDD</strong>（Resilient Distributed Dataset）叫做弹性分布式数据集，是Spark中最基本的数据抽象，它代表一个<strong>不可变、可分区、里面的元素可并行计算</strong>的集合。RDD具有数据流模型的特点：<strong>自动容错、位置感知性调度和可伸缩性</strong>。RDD允许用户在执行多个查询时显式地将工作集缓存在内存中，后续的查询能够重用工作集，这极大地提升了查询速度。RDD的原理和组成如下图：</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110271956_606.png\" alt></p>\n<p>（1）<strong>一组分区（Partition</strong>），即数据集的基本组成单位。对于RDD来说，每个分片都会被一个计算任务处理，并决定并行计算的粒度。用户可以在创建RDD时<strong>指定RDD的分片个数</strong>，如果没有指定，那么就会采用默认值。默认值就是程序所分配到的CPU Core的数目。<u>图中指数据集中的每句话经过第二个函数被分割为单词（由第一个RDD到第二个RDD完成分割）</u>。</p>\n<p>（2）一个计算每个分区的函数。Spark中RDD的计算是以分片为单位的，<strong>每个RDD都会实现compute函数以达到这个目的</strong>。compute函数会对迭代器进行复合，不需要保存每次计算的结果。<u>图中表示为上方红色的处理函数</u>。Spark中的计算可以简单抽象为对RDD的<strong>创建、转换和返回操作结果</strong>的过程：</p>\n<ul>\n<li>创建<br>通过<strong>加载外部</strong>物理存储（如HDFS）中的<strong>数据集</strong>，或Application中<strong>定义的对象集合</strong>（如List）来创建。RDD在创建后不可被改变，只可以对其执行下面两种操作。</li>\n</ul>\n<ul>\n<li>转换（Transformation）<br>对已有的RDD中的数据执行计算进行转换，而<strong>产生新的RDD</strong>，在这个过程中有时会产生中间RDD。Spark对于Transformation采用惰性计算机制，遇到Transformation时并不会立即计算结果，而是要等遇到Action时一起执行。</li>\n<li>行动（Action）<br>对已有的RDD中的数据执行计算产生结果，<strong>将结果返回Driver程序</strong>或写入到外部物理存储。在Action过程中同样有可能生成中间RDD。</li>\n</ul>\n<p>（3）RDD之间的依赖关系(Dependency)。<strong>RDD的每次转换都会生成一个新的RDD，所以RDD之间就会形成类似于流水线一样的前后依赖关系</strong>。在部分分区数据丢失时，Spark可以通过这个依赖关系重新计算丢失的分区数据，而不是对RDD的所有分区进行重新计算。<u>图中每个RDD经过函数的计算产生新的RDD</u>。</p>\n<p>对RDD的Transformation或Action操作，让RDD产生了<strong>父子依赖关系</strong>（事实上，Transformation或Action操作生成的中间RDD也存在依赖关系），这种依赖分为宽依赖和窄依赖两种：</p>\n<ul>\n<li>NarrowDependency (窄依赖)<br>parent RDD中的<strong>每个Partition最多被</strong>child RDD中的<strong>一个Partition使用</strong>。让RDD产生窄依赖的操作可以称为窄依赖操作，如map、union。</li>\n<li>WideDependency (或ShuffleDependency，宽依赖）<br>parent RDD中的每个Partition被child RDD中的<strong>多个Partition使用</strong>，这时会依据Record的key进行<strong>数据重组</strong>，这个过程即为<strong>Shuffle</strong>（洗牌）。让RDD产生宽依赖的操作可以称为宽依赖操作，如reduceByKey, groupByKey。</li>\n</ul>\n<p>（4）一个<strong>Partitioner</strong>，即RDD的分区函数。当前Spark中实现了<strong>两种类型的分区函数，一个是基于哈希的HashPartitioner，另外一个是基于范围的RangePartitioner。</strong>只有对于key-value的RDD，才会有Partitioner，非key-value的RDD的Parititioner的值是None。Partitioner函数不但决定了RDD本身的分区数量，也决定了parent RDD Shuffle输出时的分片区。<u>图中第二个函数就为分区函数</u>。</p>\n<p>（5）一个列表，<strong>存储存取每个Partition的优先位置</strong>（preferred location）。对于一个HDFS文件来说，这个列表保存的就是每个Partition所在的块的位置。按照“移动数据不如移动计算”的理念，Spark在进行任务调度的时候，会尽可能地将计算任务分配到其所要处理数据块的存储位置。</p>\n<h4 id=\"5-1-RDD的两个方法\"><a href=\"#5-1-RDD的两个方法\" class=\"headerlink\" title=\"5.1 RDD的两个方法\"></a>5.1 RDD的两个方法</h4><ul>\n<li><p><strong>Persist</strong></p>\n<p>　　通过RDD的<code>persist</code>方法，可以将RDD的分区数据<strong>持久化在内存或硬盘中</strong>，通过<code>cache</code>方法则是<strong>缓存到内存</strong>。这里的persist和cache是一样的机制，只不过cache是使用默认的<code>MEMORY_ONLY</code>的存储级别对RDD进行persist，故“缓存”也就是一种“持久化”。<br> 前面提到，只有触发了一个Action之后，Spark才会提交Job进行真正的计算。所以<strong>RDD只有经过一次Action之后，才能将RDD持久化</strong>，然后在Job间共享，即如果两个Job用到了相同的RDD，那么可以在第一个Job中对这个RDD进行缓存，在第二个Job中就避免了RDD的重新计算。持久化机制使需要访问重复数据的Application运行地更快，是能够<strong>提升Spark运算速度</strong>的一个重要功能。</p>\n</li>\n<li><p><strong>Checkpoint</strong></p>\n<p>　　调用RDD的<code>checkpoint</code>方法，可以将RDD保存到<strong>外部存储中，如硬盘或HDFS</strong>。Spark引入checkpoint机制，是因为持久化的RDD的数据有可能丢失或被替换，checkpoint可以在这时候发挥作用，避免重新计算。<br>　　创建checkpoint是在当前Job完成后，由另外一个专门的Job完成：也就是说需要checkpoint的RDD会被计算两次。因此，在使用rdd.checkpoint()的时候，建议加上rdd.cache(),这样第二次运行的Job久不用再去计算该RDD了。</p>\n<p>　　一个Job在开始处理RDD的Partition时，或者更准确点说，在Executor中运行的任务在获取Partition数据时，会<strong>先判断是否被持久化</strong>，在没有命中时<strong>再判断是否保存了checkpoint</strong>，如果没有读取到则会重新计算该Partition。</p>\n</li>\n</ul>\n<h4 id=\"6-Job\"><a href=\"#6-Job\" class=\"headerlink\" title=\"6. Job\"></a>6. Job</h4><p>　　在一个Application中，<strong>以Action为划分边界的Spark批处理作业</strong>。前面提到，Spark采用惰性机制，对RDD的创建和转换并不会立即执行，只有在<strong>遇到第一个Action时才会生成一个Job</strong>，然后统一调度执行。一个Job包含N个Transformation和1个Action。</p>\n<h4 id=\"7-Stage\"><a href=\"#7-Stage\" class=\"headerlink\" title=\"7. Stage\"></a>7. Stage</h4><p>　　一个Job中，<strong>以Shuffle为边界划分出的不同阶段</strong>。每个阶段包含一组可以被串行执行的窄依赖或宽依赖操作：用户提交的计算任务是一个由RDD构成的DAG(有向无环图)，如果RDD在转换的时候需要做Shuffle，那么这个Shuffle的过程就将这个DAG分为了不同的阶段（即Stage）。由于Shuffle的存在，不同的Stage是不能并行计算的，因为后面Stage的计算需要前面Stage的Shuffle的结果。<br>　　在对Job中的所有操作<strong>划分Stage时，一般会按照倒序进行</strong>，即从Action开始，遇到窄依赖操作，则划分到同一个执行阶段，遇到宽依赖操作，则划分一个新的执行阶段，且新的阶段为之前阶段的parent，然后依次类推递归执行。child Stage需要等待所有的parent Stage执行完之后才可以执行，这时Stage之间根据依赖关系构成了一个大粒度的DAG。<br>　　在一个Stage内，所有的操作以<strong>串行的Pipeline的方式</strong>，由一组Task完成计算。</p>\n<ul>\n<li><p>DAGScheduler: 根据Job<strong>构建基于Stage的DAG</strong>（Directed Acyclic Graph有向无环图)，并<strong>提交Stage给TASkScheduler</strong>。 其划分Stage的依据是RDD之间的依赖的关系找出开销最小的调度方法，如下图</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110272106_289.png\" alt></p>\n</li>\n</ul>\n<h4 id=\"8-Task\"><a href=\"#8-Task\" class=\"headerlink\" title=\"8. Task\"></a>8. Task</h4><p>　　对一个Stage之内的RDD进行串行操作的计算任务。<strong>每个Stage由一组并发的Task组成</strong>（即TaskSet），这些Task的<strong>执行逻辑完全相同</strong>，只是<strong>作用于不同的Partition</strong>。一个Stage的总Task的个数由Stage中最后的一个RDD的Partition的个数决定。</p>\n<p>　　Spark Driver会根据数据所在的位置分配计算任务，即把所有Task根据其Partition所在的位置分配给相应的Executor，以尽量减少数据的网络传输（这也就是所谓的移动数据不如移动计算）。一个Executor内同一时刻可以并行执行的Task数由<code>总CPU数／每个Task占用的CPU数</code>决定，即<code>spark.executor.cores / spark.task.cpus</code>。</p>\n<p>　　Task分为ShuffleMapTask和ResultTask两种，位于最后一个Stage的Task为ResultTask，其他阶段的属于ShuffleMapTask。</p>\n<ul>\n<li><p>TaskSedulter: 将TaskSET提交给worker运行，<strong>每个Executor运行什么Task</strong>就是在此处分配的. TaskScheduler维护所有TaskSet，当Executor向Driver发生心跳时，TaskScheduler会根据资源剩余情况分配相应的Task。另外TaskScheduler还维护着所有Task的运行标签，重试失败的Task。下图展示了TaskScheduler的作用</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110272104_734.png\" alt></p>\n</li>\n</ul>\n<h4 id=\"上述概念间的层次关系\"><a href=\"#上述概念间的层次关系\" class=\"headerlink\" title=\"上述概念间的层次关系\"></a>上述概念间的层次关系</h4><p>Job=多个stage，Stage=多个同种task</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110272107_230.png\" alt></p>\n<h3 id=\"三、Spark基本运行流程\"><a href=\"#三、Spark基本运行流程\" class=\"headerlink\" title=\"三、Spark基本运行流程\"></a>三、Spark基本运行流程</h3><p><img src=\"http://pic.panjiangtao.cn/202110281417_711.png\" alt></p>\n<ol>\n<li>构建Spark Application的运行环境，<strong>启动SparkContext</strong></li>\n<li><strong>SparkContext</strong>向<strong>资源管理器</strong>（可以是Standalone，Mesos，Yarn）<strong>申请运行Executor资源</strong>，并启动StandaloneExecutorbackend，</li>\n<li><strong>Executor</strong>向<strong>SparkContext申请Task</strong></li>\n<li>SparkContext将<strong>应用程序分发给Executor</strong></li>\n<li>SparkContext<strong>构建成DAG图</strong>，将<strong>DAG图分解成Stage</strong>、将<strong>Taskset发送给Task Scheduler</strong>，最后由Task Scheduler<strong>将Task发送给Executor运行</strong></li>\n<li><strong>Task</strong>在Executor上<strong>运行</strong>，运行完释放所有资源</li>\n</ol>\n<h4 id=\"Spark运行特点：\"><a href=\"#Spark运行特点：\" class=\"headerlink\" title=\"Spark运行特点：\"></a>Spark运行特点：</h4><ol>\n<li><strong>每个Application获取专属的executor进程</strong>，该进程在Application期间一直驻留，并以多线程方式运行Task。这种Application隔离机制是有优势的，无论是从调度角度看（每个Driver调度他自己的任务），还是从运行角度看（来自不同Application的Task运行在不同JVM中），当然这样意味着Spark Application不能跨应用程序共享数据，除非将数据写入外部存储系统</li>\n<li>Spark<strong>与资源管理器无关</strong>，只要能够获取executor进程，并能保持相互通信就可以了</li>\n<li>提交SparkContext的<strong>Client应该靠近Worker节点</strong>（运行Executor的节点），最好是在同一个Rack里，因为Spark Application运行过程中SparkContext和Executor之间有大量的信息交换</li>\n<li>Task采用了<strong>数据本地性和推测执行</strong>的优化机制</li>\n</ol>\n<h3 id=\"四、运行模式\"><a href=\"#四、运行模式\" class=\"headerlink\" title=\"四、运行模式\"></a>四、运行模式</h3><ul>\n<li>部署在单机上时，既可以用本地模式运行，也可以用伪分布模式运行，而当以分布式集群的方式部署时，也有众多的运行模式可供选择，这取决于集群的实际情况，底层的资源调度即可以依赖外部资源调度框架，也可以使用Spark内建的<strong>Standalone</strong>模式。</li>\n<li>对于外部资源调度框架的支持，目前的实现包括相对稳定的<strong>Mesos</strong>模式，以及<strong>hadoop YARN</strong>模式</li>\n<li><strong>本地模式</strong>：常用于本地开发测试的local cluster模式</li>\n</ul>\n<h4 id=\"1-standalone-独立集群运行模式\"><a href=\"#1-standalone-独立集群运行模式\" class=\"headerlink\" title=\"1. standalone: 独立集群运行模式\"></a>1. standalone: 独立集群运行模式</h4><h5 id=\"（1）结构关系：\"><a href=\"#（1）结构关系：\" class=\"headerlink\" title=\"（1）结构关系：\"></a>（1）结构关系：</h5><p><img src=\"http://pic.panjiangtao.cn/202110281050_53.png\" alt></p>\n<ul>\n<li>Standalone模式使用Spark<strong>自带的资源调度框架</strong></li>\n<li>采用Master/Slaves的典型架构，选用ZooKeeper来实现Master的HA（Highly Available，双机集群系统）</li>\n<li>该模式主要的节点有Client节点、Master节点和Worker节点。其中<strong>Driver既可以运行在Master节点上中，也可以运行在本地Client端</strong>。当用spark-shell交互式工具提交Spark的Job时，Driver在Master节点上运行；当使用spark-submit工具提交Job或者在Eclips、IDEA等开发平台上使用”new SparkConf.setManager(“spark://master:7077”)”方式运行Spark任务时，Driver是运行在本地Client端上的</li>\n</ul>\n<h5 id=\"（2）运行过程\"><a href=\"#（2）运行过程\" class=\"headerlink\" title=\"（2）运行过程\"></a>（2）运行过程</h5><p><img src=\"http://pic.panjiangtao.cn/202110281058_435.png\" alt></p>\n<ol>\n<li>SparkContext连接到Master，向<strong>Master注册并申请资源</strong>（CPU Core 和Memory）</li>\n<li>Master根据SparkContext的资源申请要求和Worker心跳周期内报告的信息决定在哪个Worker上分配资源，然后<strong>在该Worker上获取资源</strong>，然后启动StandaloneExecutorBackend；</li>\n<li>StandaloneExecutorBackend向<strong>SparkContext注册</strong>；</li>\n<li>SparkContext将Applicaiton代码发送给StandaloneExecutorBackend；并且SparkContext解析Applicaiton代码，<strong>构建DAG图</strong>，并提交给DAG Scheduler分解成Stage（当碰到Action操作时，就会催生Job；每个Job中含有1个或多个Stage，Stage一般在获取外部数据和shuffle之前产生），然后以Stage（或者称为TaskSet）提交给Task Scheduler，Task Scheduler负责<strong>将Task分配到相应的Worker</strong>，最后提交给StandaloneExecutorBackend执行；</li>\n<li>StandaloneExecutorBackend会建立Executor线程池，开始执行Task，并向SparkContext<strong>报告Task状态</strong>，直至Task完成</li>\n<li>所有Task完成后，SparkContext向Master<strong>注销，释放资源</strong></li>\n</ol>\n<h4 id=\"2-hadoop-YARN模式\"><a href=\"#2-hadoop-YARN模式\" class=\"headerlink\" title=\"2. hadoop YARN模式\"></a>2. hadoop YARN模式</h4><p>hadoop YARN模式根据Driver在集群中的位置分为两种模式：一种是YARN-Client模式，另一种是YARN-Cluster模式.</p>\n<h5 id=\"1-Yarn框架流程\"><a href=\"#1-Yarn框架流程\" class=\"headerlink\" title=\"(1)Yarn框架流程\"></a>(1)Yarn框架流程</h5><p>　　任何框架与<em>YARN</em>的结合，都必须遵循<em>YARN</em>的开发模式。在分析<em>Spark on YARN</em>的实现细节之前，有必要先分析一下<em>YARN</em>框架的一些基本原理。Yarn框架的基本流程如下:</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281120_36.png\" alt></p>\n<p>　　其中，ResourceManager负责将集群的<strong>资源分配</strong>给各个应用使用，而<strong>资源分配和调度的基本单位是Container</strong>，其中封装了机器资源，如内存、CPU、磁盘和网络等，每个任务会被分配一个Container，该任务只能在该Container中执行，并使用该Container封装的资源。<strong>NodeManager</strong>是一个个的计算节点，主要<strong>负责启动Application所需的Container，监控资源</strong>（内存、CPU、磁盘和网络等）的使用情况并将之汇报给ResourceManager。ResourceManager与NodeManagers共同组成整个数据计算框架，ApplicationMaster与具体的Application相关，主要负责同ResourceManager协商以获取合适的Container，并跟踪这些Container的状态和监控其进度。</p>\n<h5 id=\"2-YARN-Client模式\"><a href=\"#2-YARN-Client模式\" class=\"headerlink\" title=\"(2)YARN-Client模式\"></a>(2)YARN-Client模式</h5><p>　　Driver在客户端本地运行，这种模式可以使得Spark Application和客户端进行交互，因为Driver在客户端，所以可以通过webUI访问Driver的状态，默认是<a href=\"http://hadoop1:4040访问，而YARN通过http://\">http://hadoop1:4040访问，而YARN通过http://</a> hadoop1:8088访问。工作流程：</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281115_159.png\" alt></p>\n<ol>\n<li>Spark Yarn Client向YARN的ResourceManager<strong>申请启动Application Master</strong>。同时在<strong>SparkContent初始化</strong>中将创建DAGScheduler和TASKScheduler等，由于我们选择的是Yarn-Client模式，程序会选择YarnClientClusterScheduler和YarnClientSchedulerBackend</li>\n<li>ResourceManager收到请求后，在集群中选择一个NodeManager，<strong>为该应用程序分配第一个Container</strong>，要求它在这个Container中<strong>启动应用程序的ApplicationMaster</strong>，与YARN-Cluster区别的是在该ApplicationMaster不运行SparkContext，只与SparkContext进行联系进行资源的分派</li>\n<li>Client中的SparkContext初始化完毕后，与ApplicationMaster建立通讯，向ResourceManager注册，根据任务信息向ResourceManager<strong>申请资源（Container）</strong></li>\n<li>一旦ApplicationMaster申请到资源（也就是Container）后，便与对应的NodeManager通信，要求它在获得的Container中<strong>启动CoarseGrainedExecutorBackend</strong>，CoarseGrainedExecutorBackend启动后会向Client中的SparkContext<strong>注册并申请Task</strong></li>\n<li>client中的SparkContext<strong>分配Task给CoarseGrainedExecutorBackend执行</strong>，CoarseGrainedExecutorBackend<strong>运行Task并向Driver汇报运行的状态和进度</strong>，以让Client随时掌握各个任务的运行状态，从而可以在任务失败时重新启动任务</li>\n<li>应用程序运行完成后，Client的SparkContext向ResourceManager申请<strong>注销并关闭自己</strong></li>\n</ol>\n<h5 id=\"3-YARN-Cluster模式\"><a href=\"#3-YARN-Cluster模式\" class=\"headerlink\" title=\"(3)YARN-Cluster模式\"></a>(3)YARN-Cluster模式</h5><p>　　在YARN-Cluster模式中，当用户向YARN中提交一个应用程序后，YARN将分两个阶段运行该应用程序：第一个阶段是把Spark的Driver作为一个ApplicationMaster在YARN集群中先启动；第二个阶段是由ApplicationMaster创建应用程序，然后为它向ResourceManager申请资源，并启动Executor来运行Task，同时监控它的整个运行过程，直到运行完成。</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281140_69.png\" alt></p>\n<ol>\n<li>Spark Yarn Client向YARN中<strong>提交应用程序</strong>，包括ApplicationMaster程序、启动ApplicationMaster的命令、需要在Executor中运行的程序等</li>\n<li>ResourceManager收到请求后，在集群中选择一个NodeManager，为该应用程序分配第一个Container，要求它在这个Container中<strong>启动应用程序的ApplicationMaster</strong>，其中ApplicationMaster进行SparkContext等的初始化</li>\n<li>ApplicationMaster向ResourceManager注册，这样用户可以直接通过ResourceManage查看应用程序的运行状态，然后它将采用轮询的方式通过RPC协议<strong>为各个任务申请资源（也就是Container）</strong>，并监控它们的运行状态直到运行结束</li>\n<li>一旦ApplicationMaster申请到资源后，便与对应的NodeManager通信，要求它在获得的Container中<strong>启动CoarseGrainedExecutorBackend</strong>，CoarseGrainedExecutorBackend启动后会向ApplicationMaster中的SparkContext<strong>注册并申请Task</strong>。这一点和Standalone模式一样，只不过SparkContext在Spark Application中初始化时，使用CoarseGrainedSchedulerBackend配合YarnClusterScheduler<strong>进行任务的调度</strong>，其中YarnClusterScheduler只是对TaskSchedulerImpl的一个简单包装，增加了对Executor的等待逻辑等</li>\n<li>ApplicationMaster中的SparkContext分配Task给CoarseGrainedExecutorBackend执行，CoarseGrainedExecutorBackend运行Task并向ApplicationMaster汇报运行的状态和进度，以让<strong>ApplicationMaster随时掌握各个任务的运行状态</strong>，从而可以在任务失败时重新启动任务</li>\n<li>应用程序运行完成后，<strong>ApplicationMaster</strong>向ResourceManager<strong>申请注销并关闭自己</strong>。</li>\n</ol>\n<h5 id=\"4-SYARN-Client模式和YARN-Cluster模式区别\"><a href=\"#4-SYARN-Client模式和YARN-Cluster模式区别\" class=\"headerlink\" title=\"(4)SYARN-Client模式和YARN-Cluster模式区别\"></a>(4)SYARN-Client模式和YARN-Cluster模式区别</h5><p>　　理解YARN-Client和YARN-Cluster深层次的区别之前先清楚一个概念：Application Master。在YARN中，每个Application实例都有一个ApplicationMaster进程，它是Application启动的第一个容器。它负责和ResourceManager打交道并请求资源，获取资源之后告诉NodeManager为其启动Container。从深层次的含义讲YARN-Cluster和YARN-Client模式的区别其实就是ApplicationMaster进程的区别。</p>\n<ul>\n<li>YARN-Cluster模式下，<strong>Driver</strong>运行在AM(Application Master)中，它负责<strong>向YARN申请资源</strong>，并监督作业的运行状况。<strong>当用户提交了作业之后，就可以关掉Client</strong>，作业会继续在YARN上运行，因而YARN-Cluster模式不适合运行交互类型的作业；</li>\n<li>YARN-Client模式下，Application Master仅仅向YARN请求Executor，<strong>Client会和请求的Container通信来调度他们工作</strong>，也就是说Client不能离开。</li>\n</ul>\n<h4 id=\"3-Mesos模式\"><a href=\"#3-Mesos模式\" class=\"headerlink\" title=\"3.Mesos模式\"></a>3.Mesos模式</h4><p>　　这是很多公司采用的模式，官方推荐这种模式（当然，原因之一是血缘关系）。正是由于Spark开发之初就考虑到支持Mesos，因此，目前而言，Spark运行在Mesos上会比运行在YARN上更加灵活，更加自然。目前在Spark On Mesos环境中，用户可选择两种调度模式之一运行自己的应用程序（可参考Andrew Xia的“Mesos Scheduling Mode on Spark”）：</p>\n<p><img src=\"http://pic.panjiangtao.cn/202110281428_718.png\" alt></p>\n<h5 id=\"1-粗粒度模式（Coarse-grained-Mode）\"><a href=\"#1-粗粒度模式（Coarse-grained-Mode）\" class=\"headerlink\" title=\"1. 粗粒度模式（Coarse-grained Mode）\"></a>1. 粗粒度模式（Coarse-grained Mode）</h5><p>​        每个应用程序的运行环境由一个Dirver和若干个Executor组成，其中，每个Executor占用若干资源，内部可运行多个Task（对应多少个“slot”）。应用程序的各个任务正式运行之前，需要将运行环境中的资源全部申请好，且运行过程中要一直占用这些资源，即使不用，最后程序运行结束后，回收这些资源。举个例子，比如你提交应用程序时，指定使用5个executor运行你的应用程序，每个executor占用5GB内存和5个CPU，每个executor内部设置了5个slot，则Mesos需要先为executor分配资源并启动它们，之后开始调度任务。另外，在程序运行过程中，mesos的master和slave并不知道executor内部各个task的运行情况，executor直接将任务状态通过内部的通信机制汇报给Driver，从一定程度上可以认为，每个应用程序利用mesos搭建了一个虚拟集群自己使用。</p>\n<h5 id=\"2-细粒度模式（Fine-grained-Mode）\"><a href=\"#2-细粒度模式（Fine-grained-Mode）\" class=\"headerlink\" title=\"2. 细粒度模式（Fine-grained Mode）\"></a>2. 细粒度模式（Fine-grained Mode）</h5><p>​        鉴于粗粒度模式会造成大量资源浪费，Spark On Mesos还提供了另外一种调度模式：细粒度模式，这种模式类似于现在的云计算，思想是按需分配。与粗粒度模式一样，应用程序启动时，先会启动executor，但每个executor占用资源仅仅是自己运行所需的资源，不需要考虑将来要运行的任务，之后，mesos会为每个executor动态分配资源，每分配一些，便可以运行一个新任务，单个Task运行完之后可以马上释放对应的资源。每个Task会汇报状态给Mesos slave和Mesos Master，便于更加细粒度管理和容错，这种调度模式类似于MapReduce调度模式，每个Task完全独立，优点是便于资源控制和隔离，但缺点也很明显，短作业运行延迟大。</p>"},{"title":"spring3.1-pet-user","copyright":false,"date":"2021-07-07T07:31:54.000Z","_content":"# Pet类\n<!-- more -->\n```java\npublic class Pet {\n    private String name;\n\n    public Pet(){}\n\n    public Pet(String name) {\n        this.name=name;\n    }\n\n    public String getName() {return name;}\n\n    public void setName(String name) {this.name=name;}\n\n    @Override\n    public String toString(){\n        return \"Pet{\"+\"name='\"+name+'\\''+'}';\n    }\n}\n```\n\n# User类\n- 注释部分为后续User类需要依赖Pet类\n  \n```java\npublic class User {\n    private String name;\n    private Integer age;\n\n    // private Pet pet;\n\n    // public Pet getPet(){\n    //     return pet;\n    // }\n\n    // public void setPet(Pet pet){\n    //     this.pet=pet;\n    // }\n\n    public User(){\n    }\n\n    public User(String name, Integer age){\n        this.name=name;\n        this.age=age;\n    }\n\n    public String getName() {return name;}\n\n    public void setName(String name) {this.name=name;}\n\n    public Integer getAge() {return age;}\n\n    public void setAge(Integer age) {this.age=age;}\n\n    @Override\n    public String toString(){\n        return \"User{\"+\"name='\"+name+'\\''+\",age=\"+age+'}';\n        // return \"User{\"+\"name='\"+name+'\\''+\",age=\"+age+\",pet=\"+pet+'}';\n    }\n}\n```","source":"_posts/spring3-1-pet-user.md","raw":"---\ntitle: spring3.1-pet-user\ncopyright: false\ndate: 2021-07-07 15:31:54\ntags: spring\ncategories:\n- for babe\n- spring\n---\n# Pet类\n<!-- more -->\n```java\npublic class Pet {\n    private String name;\n\n    public Pet(){}\n\n    public Pet(String name) {\n        this.name=name;\n    }\n\n    public String getName() {return name;}\n\n    public void setName(String name) {this.name=name;}\n\n    @Override\n    public String toString(){\n        return \"Pet{\"+\"name='\"+name+'\\''+'}';\n    }\n}\n```\n\n# User类\n- 注释部分为后续User类需要依赖Pet类\n  \n```java\npublic class User {\n    private String name;\n    private Integer age;\n\n    // private Pet pet;\n\n    // public Pet getPet(){\n    //     return pet;\n    // }\n\n    // public void setPet(Pet pet){\n    //     this.pet=pet;\n    // }\n\n    public User(){\n    }\n\n    public User(String name, Integer age){\n        this.name=name;\n        this.age=age;\n    }\n\n    public String getName() {return name;}\n\n    public void setName(String name) {this.name=name;}\n\n    public Integer getAge() {return age;}\n\n    public void setAge(Integer age) {this.age=age;}\n\n    @Override\n    public String toString(){\n        return \"User{\"+\"name='\"+name+'\\''+\",age=\"+age+'}';\n        // return \"User{\"+\"name='\"+name+'\\''+\",age=\"+age+\",pet=\"+pet+'}';\n    }\n}\n```","slug":"spring3-1-pet-user","published":1,"updated":"2021-07-07T09:30:04.201Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0id0057c8pv19ot58b0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"Pet类\"><a href=\"#Pet类\" class=\"headerlink\" title=\"Pet类\"></a>Pet类</h1><a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Pet</span><span class=\"params\">()</span></span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Pet</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;<span class=\"keyword\">this</span>.name=name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Pet&#123;&quot;</span>+<span class=\"string\">&quot;name=&#x27;&quot;</span>+name+<span class=\"string\">&#x27;\\&#x27;&#x27;</span>+<span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"User类\"><a href=\"#User类\" class=\"headerlink\" title=\"User类\"></a>User类</h1><ul>\n<li>注释部分为后续User类需要依赖Pet类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// private Pet pet;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// public Pet getPet()&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     return pet;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// public void setPet(Pet pet)&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     this.pet=pet;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(String name, Integer age)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;<span class=\"keyword\">this</span>.name=name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> age;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(Integer age)</span> </span>&#123;<span class=\"keyword\">this</span>.age=age;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span>+<span class=\"string\">&quot;name=&#x27;&quot;</span>+name+<span class=\"string\">&#x27;\\&#x27;&#x27;</span>+<span class=\"string\">&quot;,age=&quot;</span>+age+<span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"comment\">// return &quot;User&#123;&quot;+&quot;name=&#x27;&quot;+name+&#x27;\\&#x27;&#x27;+&quot;,age=&quot;+age+&quot;,pet=&quot;+pet+&#x27;&#125;&#x27;;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1250,"excerpt":"<h1 id=\"Pet类\"><a href=\"#Pet类\" class=\"headerlink\" title=\"Pet类\"></a>Pet类</h1>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Pet</span><span class=\"params\">()</span></span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Pet</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;<span class=\"keyword\">this</span>.name=name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Pet&#123;&quot;</span>+<span class=\"string\">&quot;name=&#x27;&quot;</span>+name+<span class=\"string\">&#x27;\\&#x27;&#x27;</span>+<span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"User类\"><a href=\"#User类\" class=\"headerlink\" title=\"User类\"></a>User类</h1><ul>\n<li>注释部分为后续User类需要依赖Pet类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// private Pet pet;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// public Pet getPet()&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     return pet;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// public void setPet(Pet pet)&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     this.pet=pet;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(String name, Integer age)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age=age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;<span class=\"keyword\">this</span>.name=name;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> age;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(Integer age)</span> </span>&#123;<span class=\"keyword\">this</span>.age=age;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span>+<span class=\"string\">&quot;name=&#x27;&quot;</span>+name+<span class=\"string\">&#x27;\\&#x27;&#x27;</span>+<span class=\"string\">&quot;,age=&quot;</span>+age+<span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"comment\">// return &quot;User&#123;&quot;+&quot;name=&#x27;&quot;+name+&#x27;\\&#x27;&#x27;+&quot;,age=&quot;+age+&quot;,pet=&quot;+pet+&#x27;&#125;&#x27;;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"论文笔记-AdaSpeech 2： Adaptive Text to Speech with Untranscribed Data","copyright":true,"date":"2021-10-30T02:33:21.000Z","_content":"## AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data\n{% note info %}\n论文链接：[AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data](https://arxiv.org/pdf/2104.09715)\n源码：[](https://github.com/rishikksh20/AdaSpeech2)\n{% endnote %}\n\n### 一. 关注问题\n\n​\t\t由于AdaSpeech在合成语音时仅能适配已转录的语音数据，许多场景需要对未转录（无文本标注）的语音数据进行适配，为了扩大自适应TTS的应用场景，因此开发对未转录语音数据进行自适应的TTS系统。\n<!-- more -->\n\n### 二. AdaSpeech\n\n#### 1. 模型结构\n\n![](http://pic.panjiangtao.cn/202111031711_378.png)\n\n![](http://pic.panjiangtao.cn/202111032215_966.png)\n\n​\t\t非自回归模型并行生成序列的所有标记，非线性，与自回归(AR)模型相比，生成速度更快，但代价是准确性较低。（引入隐变量z）\n\n​\t\t以非自回归的FastSpeech2作为模型主体框架，包括一个音素编码器、梅尔频谱解码器和一个给音素隐藏序列（phoneme hidden sequence）提供时长、能量、音高等变化信息的方差适配器。在FastSpeech2基础上，增加了两个模块来实现音色定制：\n\n1. 声学状态建模，捕获适配声音中的丰富声学特征\n\n2. 条件层归一化，用在解码器中降低适配参数量\n\n   ![](http://pic.panjiangtao.cn/202111032114_122.png)\n\n* scale $\\gamma$：尺度向量\n\n* bias $\\beta$：偏差向量\n\n* mean、var：隐藏序列x的均值和方差\n\n  ![](http://pic.panjiangtao.cn/202111032132_25.png)\n\nW 两个简单线性层，E 说话人嵌入\n\n​\t\ts是说话人ID，c为解码器需要条件归一化的层数。\n\n​\t\t只用到两个简单的线性层，输入是speaker embedding，输出预测γ和β\n\n#### 2. 定制语音过程：预训练、微调、推理\n\n* 在预训练阶段，TTS模型在大规模的多扬声器数据集上培训，这可以确保TTS模型涵盖各种文本和讲台有助于适应的声音。\n* 在微调阶段，源TTS模型通过在具有不同声学条件的有限自适应数据上的微调（部分）的微调（一部分）上的新语音。\n* 在推理阶段期间，非适配的参数（由所有自定义语音共享的参数）和TTS模型的适配参数（每个自定义语音具有特定的调整参数）用于推理请求。\n\n### 三、AdaSpeech 2\n\n​\t\t在AdaSpeech的基本结构（①音素编码器、梅尔频谱解码器）的基础上，加入②梅尔频谱编码器进行语言重建。适配过程：①源模型的训练，预训练一个多说话人TTS模型 ②限制梅尔编码器的输出序列接近音素编码器的输出序列与L2损失，用L2 loss训练一个梅尔编码器让它的输出空间分布接近音素编码器的输出。③训练完梅尔编码器后，用其对未转录语音数据重建语音，并微调梅尔解码器的模型参数。④使用音素编码器和梅尔解码器构造TTS系统合成语音。\n\n\n\n#### 1. 模型结构\n\n![AdaSpeech2结构](http://pic.panjiangtao.cn/202110301030_190.jpg)\n\n 1）音素编码器（由4个前馈转换器构成）、梅尔频谱解码器（由4个前馈转换器构成）构成TTS管道\n\n 2）单独设立的梅尔频谱编码器，由4个前馈转换器构成\n\n#### 2. 适配过程\n\n![适配步骤](http://pic.panjiangtao.cn/202110301031_731.jpg)\n\n1）源模型训练过程\n\n*  音素编码器，将音素序列转换为隐藏序列\n*  将隐藏序列根据每个音素的持续时间进行展开，使其匹配梅尔频谱序列长度\n*  将展开后的隐藏序列输入到梅尔解码器\n\n2）**梅尔编码器对齐**（本文核心工作，设计一个梅尔频谱编码器在自适应时可以使用无标注的语音数据，并且不影响TTS）\n\n* 将使用源转录的语音数据通过梅尔编码器生成隐藏序列\n\n* 使用长度相同的梅尔编码器生成的隐藏序列，和音素编码器生成的展开隐藏序列，计算L2损失进行训练(有稳定解且只有一个)\n\n  $D_{L2}=\\sum_{i=1}^n (y_i-f(x_i))^2$\n\n* 对齐训练时，只训练梅尔编码器的参数，保持TTS管道的参数不变，保证能够可插拔\n\n3）未转录语音自适应\n\n* 未转录数据通过使用梅尔编码器和梅尔解码器进行语音重建，得到预测梅尔频谱，根据该重建的损失来微调模型，使模型加入使用者语音特征\n* 在AdaSpeech中，为了既保证自适应质量同时使微调参数尽可能少，只对和条件层归一化（CLN）有关的参数进行优化\n\n4）推理\n\n* 使用原始的未适配音素编码器和部分适配的梅尔解码器形成个性化的 TTS 系统，为每个特定的说话者生成语音\n\n","source":"_posts/speech-synthesis1.md","raw":"---\ntitle: 论文笔记-AdaSpeech 2： Adaptive Text to Speech with Untranscribed Data\ncopyright: true\ndate: 2021-10-30 10:33:21\ntags: 语音合成\ncategories:\n- 语音合成\n- 论文阅读\n---\n## AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data\n{% note info %}\n论文链接：[AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data](https://arxiv.org/pdf/2104.09715)\n源码：[](https://github.com/rishikksh20/AdaSpeech2)\n{% endnote %}\n\n### 一. 关注问题\n\n​\t\t由于AdaSpeech在合成语音时仅能适配已转录的语音数据，许多场景需要对未转录（无文本标注）的语音数据进行适配，为了扩大自适应TTS的应用场景，因此开发对未转录语音数据进行自适应的TTS系统。\n<!-- more -->\n\n### 二. AdaSpeech\n\n#### 1. 模型结构\n\n![](http://pic.panjiangtao.cn/202111031711_378.png)\n\n![](http://pic.panjiangtao.cn/202111032215_966.png)\n\n​\t\t非自回归模型并行生成序列的所有标记，非线性，与自回归(AR)模型相比，生成速度更快，但代价是准确性较低。（引入隐变量z）\n\n​\t\t以非自回归的FastSpeech2作为模型主体框架，包括一个音素编码器、梅尔频谱解码器和一个给音素隐藏序列（phoneme hidden sequence）提供时长、能量、音高等变化信息的方差适配器。在FastSpeech2基础上，增加了两个模块来实现音色定制：\n\n1. 声学状态建模，捕获适配声音中的丰富声学特征\n\n2. 条件层归一化，用在解码器中降低适配参数量\n\n   ![](http://pic.panjiangtao.cn/202111032114_122.png)\n\n* scale $\\gamma$：尺度向量\n\n* bias $\\beta$：偏差向量\n\n* mean、var：隐藏序列x的均值和方差\n\n  ![](http://pic.panjiangtao.cn/202111032132_25.png)\n\nW 两个简单线性层，E 说话人嵌入\n\n​\t\ts是说话人ID，c为解码器需要条件归一化的层数。\n\n​\t\t只用到两个简单的线性层，输入是speaker embedding，输出预测γ和β\n\n#### 2. 定制语音过程：预训练、微调、推理\n\n* 在预训练阶段，TTS模型在大规模的多扬声器数据集上培训，这可以确保TTS模型涵盖各种文本和讲台有助于适应的声音。\n* 在微调阶段，源TTS模型通过在具有不同声学条件的有限自适应数据上的微调（部分）的微调（一部分）上的新语音。\n* 在推理阶段期间，非适配的参数（由所有自定义语音共享的参数）和TTS模型的适配参数（每个自定义语音具有特定的调整参数）用于推理请求。\n\n### 三、AdaSpeech 2\n\n​\t\t在AdaSpeech的基本结构（①音素编码器、梅尔频谱解码器）的基础上，加入②梅尔频谱编码器进行语言重建。适配过程：①源模型的训练，预训练一个多说话人TTS模型 ②限制梅尔编码器的输出序列接近音素编码器的输出序列与L2损失，用L2 loss训练一个梅尔编码器让它的输出空间分布接近音素编码器的输出。③训练完梅尔编码器后，用其对未转录语音数据重建语音，并微调梅尔解码器的模型参数。④使用音素编码器和梅尔解码器构造TTS系统合成语音。\n\n\n\n#### 1. 模型结构\n\n![AdaSpeech2结构](http://pic.panjiangtao.cn/202110301030_190.jpg)\n\n 1）音素编码器（由4个前馈转换器构成）、梅尔频谱解码器（由4个前馈转换器构成）构成TTS管道\n\n 2）单独设立的梅尔频谱编码器，由4个前馈转换器构成\n\n#### 2. 适配过程\n\n![适配步骤](http://pic.panjiangtao.cn/202110301031_731.jpg)\n\n1）源模型训练过程\n\n*  音素编码器，将音素序列转换为隐藏序列\n*  将隐藏序列根据每个音素的持续时间进行展开，使其匹配梅尔频谱序列长度\n*  将展开后的隐藏序列输入到梅尔解码器\n\n2）**梅尔编码器对齐**（本文核心工作，设计一个梅尔频谱编码器在自适应时可以使用无标注的语音数据，并且不影响TTS）\n\n* 将使用源转录的语音数据通过梅尔编码器生成隐藏序列\n\n* 使用长度相同的梅尔编码器生成的隐藏序列，和音素编码器生成的展开隐藏序列，计算L2损失进行训练(有稳定解且只有一个)\n\n  $D_{L2}=\\sum_{i=1}^n (y_i-f(x_i))^2$\n\n* 对齐训练时，只训练梅尔编码器的参数，保持TTS管道的参数不变，保证能够可插拔\n\n3）未转录语音自适应\n\n* 未转录数据通过使用梅尔编码器和梅尔解码器进行语音重建，得到预测梅尔频谱，根据该重建的损失来微调模型，使模型加入使用者语音特征\n* 在AdaSpeech中，为了既保证自适应质量同时使微调参数尽可能少，只对和条件层归一化（CLN）有关的参数进行优化\n\n4）推理\n\n* 使用原始的未适配音素编码器和部分适配的梅尔解码器形成个性化的 TTS 系统，为每个特定的说话者生成语音\n\n","slug":"speech-synthesis1","published":1,"updated":"2021-11-04T12:57:14.133Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ie0058c8pvg1yx7cgg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"AdaSpeech-2-Adaptive-Text-to-Speech-with-Untranscribed-Data\"><a href=\"#AdaSpeech-2-Adaptive-Text-to-Speech-with-Untranscribed-Data\" class=\"headerlink\" title=\"AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data\"></a>AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/pdf/2104.09715\">AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data</a><br>源码：<a href=\"https://github.com/rishikksh20/AdaSpeech2\"></a></p>\n          </div>\n<h3 id=\"一-关注问题\"><a href=\"#一-关注问题\" class=\"headerlink\" title=\"一. 关注问题\"></a>一. 关注问题</h3><p>​        由于AdaSpeech在合成语音时仅能适配已转录的语音数据，许多场景需要对未转录（无文本标注）的语音数据进行适配，为了扩大自适应TTS的应用场景，因此开发对未转录语音数据进行自适应的TTS系统。<br><a id=\"more\"></a></p>\n<h3 id=\"二-AdaSpeech\"><a href=\"#二-AdaSpeech\" class=\"headerlink\" title=\"二. AdaSpeech\"></a>二. AdaSpeech</h3><h4 id=\"1-模型结构\"><a href=\"#1-模型结构\" class=\"headerlink\" title=\"1. 模型结构\"></a>1. 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/202111031711_378.png\" alt></p>\n<p><img src=\"http://pic.panjiangtao.cn/202111032215_966.png\" alt></p>\n<p>​        非自回归模型并行生成序列的所有标记，非线性，与自回归(AR)模型相比，生成速度更快，但代价是准确性较低。（引入隐变量z）</p>\n<p>​        以非自回归的FastSpeech2作为模型主体框架，包括一个音素编码器、梅尔频谱解码器和一个给音素隐藏序列（phoneme hidden sequence）提供时长、能量、音高等变化信息的方差适配器。在FastSpeech2基础上，增加了两个模块来实现音色定制：</p>\n<ol>\n<li><p>声学状态建模，捕获适配声音中的丰富声学特征</p>\n</li>\n<li><p>条件层归一化，用在解码器中降低适配参数量</p>\n<p><img src=\"http://pic.panjiangtao.cn/202111032114_122.png\" alt></p>\n</li>\n</ol>\n<ul>\n<li><p>scale $\\gamma$：尺度向量</p>\n</li>\n<li><p>bias $\\beta$：偏差向量</p>\n</li>\n<li><p>mean、var：隐藏序列x的均值和方差</p>\n<p><img src=\"http://pic.panjiangtao.cn/202111032132_25.png\" alt></p>\n</li>\n</ul>\n<p>W 两个简单线性层，E 说话人嵌入</p>\n<p>​        s是说话人ID，c为解码器需要条件归一化的层数。</p>\n<p>​        只用到两个简单的线性层，输入是speaker embedding，输出预测γ和β</p>\n<h4 id=\"2-定制语音过程：预训练、微调、推理\"><a href=\"#2-定制语音过程：预训练、微调、推理\" class=\"headerlink\" title=\"2. 定制语音过程：预训练、微调、推理\"></a>2. 定制语音过程：预训练、微调、推理</h4><ul>\n<li>在预训练阶段，TTS模型在大规模的多扬声器数据集上培训，这可以确保TTS模型涵盖各种文本和讲台有助于适应的声音。</li>\n<li>在微调阶段，源TTS模型通过在具有不同声学条件的有限自适应数据上的微调（部分）的微调（一部分）上的新语音。</li>\n<li>在推理阶段期间，非适配的参数（由所有自定义语音共享的参数）和TTS模型的适配参数（每个自定义语音具有特定的调整参数）用于推理请求。</li>\n</ul>\n<h3 id=\"三、AdaSpeech-2\"><a href=\"#三、AdaSpeech-2\" class=\"headerlink\" title=\"三、AdaSpeech 2\"></a>三、AdaSpeech 2</h3><p>​        在AdaSpeech的基本结构（①音素编码器、梅尔频谱解码器）的基础上，加入②梅尔频谱编码器进行语言重建。适配过程：①源模型的训练，预训练一个多说话人TTS模型 ②限制梅尔编码器的输出序列接近音素编码器的输出序列与L2损失，用L2 loss训练一个梅尔编码器让它的输出空间分布接近音素编码器的输出。③训练完梅尔编码器后，用其对未转录语音数据重建语音，并微调梅尔解码器的模型参数。④使用音素编码器和梅尔解码器构造TTS系统合成语音。</p>\n<h4 id=\"1-模型结构-1\"><a href=\"#1-模型结构-1\" class=\"headerlink\" title=\"1. 模型结构\"></a>1. 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/202110301030_190.jpg\" alt=\"AdaSpeech2结构\"></p>\n<p> 1）音素编码器（由4个前馈转换器构成）、梅尔频谱解码器（由4个前馈转换器构成）构成TTS管道</p>\n<p> 2）单独设立的梅尔频谱编码器，由4个前馈转换器构成</p>\n<h4 id=\"2-适配过程\"><a href=\"#2-适配过程\" class=\"headerlink\" title=\"2. 适配过程\"></a>2. 适配过程</h4><p><img src=\"http://pic.panjiangtao.cn/202110301031_731.jpg\" alt=\"适配步骤\"></p>\n<p>1）源模型训练过程</p>\n<ul>\n<li>音素编码器，将音素序列转换为隐藏序列</li>\n<li>将隐藏序列根据每个音素的持续时间进行展开，使其匹配梅尔频谱序列长度</li>\n<li>将展开后的隐藏序列输入到梅尔解码器</li>\n</ul>\n<p>2）<strong>梅尔编码器对齐</strong>（本文核心工作，设计一个梅尔频谱编码器在自适应时可以使用无标注的语音数据，并且不影响TTS）</p>\n<ul>\n<li><p>将使用源转录的语音数据通过梅尔编码器生成隐藏序列</p>\n</li>\n<li><p>使用长度相同的梅尔编码器生成的隐藏序列，和音素编码器生成的展开隐藏序列，计算L2损失进行训练(有稳定解且只有一个)</p>\n<p>$D_{L2}=\\sum_{i=1}^n (y_i-f(x_i))^2$</p>\n</li>\n<li><p>对齐训练时，只训练梅尔编码器的参数，保持TTS管道的参数不变，保证能够可插拔</p>\n</li>\n</ul>\n<p>3）未转录语音自适应</p>\n<ul>\n<li>未转录数据通过使用梅尔编码器和梅尔解码器进行语音重建，得到预测梅尔频谱，根据该重建的损失来微调模型，使模型加入使用者语音特征</li>\n<li>在AdaSpeech中，为了既保证自适应质量同时使微调参数尽可能少，只对和条件层归一化（CLN）有关的参数进行优化</li>\n</ul>\n<p>4）推理</p>\n<ul>\n<li>使用原始的未适配音素编码器和部分适配的梅尔解码器形成个性化的 TTS 系统，为每个特定的说话者生成语音</li>\n</ul>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":1568,"excerpt":"<h2 id=\"AdaSpeech-2-Adaptive-Text-to-Speech-with-Untranscribed-Data\"><a href=\"#AdaSpeech-2-Adaptive-Text-to-Speech-with-Untranscribed-Data\" class=\"headerlink\" title=\"AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data\"></a>AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data</h2><div class=\"note info\">\n            <p>论文链接：<a href=\"https://arxiv.org/pdf/2104.09715\">AdaSpeech 2: Adaptive Text to Speech with Untranscribed Data</a><br>源码：<a href=\"https://github.com/rishikksh20/AdaSpeech2\"></a></p>\n          </div>\n<h3 id=\"一-关注问题\"><a href=\"#一-关注问题\" class=\"headerlink\" title=\"一. 关注问题\"></a>一. 关注问题</h3><p>​        由于AdaSpeech在合成语音时仅能适配已转录的语音数据，许多场景需要对未转录（无文本标注）的语音数据进行适配，为了扩大自适应TTS的应用场景，因此开发对未转录语音数据进行自适应的TTS系统。<br></p>","more":"<p></p>\n<h3 id=\"二-AdaSpeech\"><a href=\"#二-AdaSpeech\" class=\"headerlink\" title=\"二. AdaSpeech\"></a>二. AdaSpeech</h3><h4 id=\"1-模型结构\"><a href=\"#1-模型结构\" class=\"headerlink\" title=\"1. 模型结构\"></a>1. 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/202111031711_378.png\" alt></p>\n<p><img src=\"http://pic.panjiangtao.cn/202111032215_966.png\" alt></p>\n<p>​        非自回归模型并行生成序列的所有标记，非线性，与自回归(AR)模型相比，生成速度更快，但代价是准确性较低。（引入隐变量z）</p>\n<p>​        以非自回归的FastSpeech2作为模型主体框架，包括一个音素编码器、梅尔频谱解码器和一个给音素隐藏序列（phoneme hidden sequence）提供时长、能量、音高等变化信息的方差适配器。在FastSpeech2基础上，增加了两个模块来实现音色定制：</p>\n<ol>\n<li><p>声学状态建模，捕获适配声音中的丰富声学特征</p>\n</li>\n<li><p>条件层归一化，用在解码器中降低适配参数量</p>\n<p><img src=\"http://pic.panjiangtao.cn/202111032114_122.png\" alt></p>\n</li>\n</ol>\n<ul>\n<li><p>scale $\\gamma$：尺度向量</p>\n</li>\n<li><p>bias $\\beta$：偏差向量</p>\n</li>\n<li><p>mean、var：隐藏序列x的均值和方差</p>\n<p><img src=\"http://pic.panjiangtao.cn/202111032132_25.png\" alt></p>\n</li>\n</ul>\n<p>W 两个简单线性层，E 说话人嵌入</p>\n<p>​        s是说话人ID，c为解码器需要条件归一化的层数。</p>\n<p>​        只用到两个简单的线性层，输入是speaker embedding，输出预测γ和β</p>\n<h4 id=\"2-定制语音过程：预训练、微调、推理\"><a href=\"#2-定制语音过程：预训练、微调、推理\" class=\"headerlink\" title=\"2. 定制语音过程：预训练、微调、推理\"></a>2. 定制语音过程：预训练、微调、推理</h4><ul>\n<li>在预训练阶段，TTS模型在大规模的多扬声器数据集上培训，这可以确保TTS模型涵盖各种文本和讲台有助于适应的声音。</li>\n<li>在微调阶段，源TTS模型通过在具有不同声学条件的有限自适应数据上的微调（部分）的微调（一部分）上的新语音。</li>\n<li>在推理阶段期间，非适配的参数（由所有自定义语音共享的参数）和TTS模型的适配参数（每个自定义语音具有特定的调整参数）用于推理请求。</li>\n</ul>\n<h3 id=\"三、AdaSpeech-2\"><a href=\"#三、AdaSpeech-2\" class=\"headerlink\" title=\"三、AdaSpeech 2\"></a>三、AdaSpeech 2</h3><p>​        在AdaSpeech的基本结构（①音素编码器、梅尔频谱解码器）的基础上，加入②梅尔频谱编码器进行语言重建。适配过程：①源模型的训练，预训练一个多说话人TTS模型 ②限制梅尔编码器的输出序列接近音素编码器的输出序列与L2损失，用L2 loss训练一个梅尔编码器让它的输出空间分布接近音素编码器的输出。③训练完梅尔编码器后，用其对未转录语音数据重建语音，并微调梅尔解码器的模型参数。④使用音素编码器和梅尔解码器构造TTS系统合成语音。</p>\n<h4 id=\"1-模型结构-1\"><a href=\"#1-模型结构-1\" class=\"headerlink\" title=\"1. 模型结构\"></a>1. 模型结构</h4><p><img src=\"http://pic.panjiangtao.cn/202110301030_190.jpg\" alt=\"AdaSpeech2结构\"></p>\n<p> 1）音素编码器（由4个前馈转换器构成）、梅尔频谱解码器（由4个前馈转换器构成）构成TTS管道</p>\n<p> 2）单独设立的梅尔频谱编码器，由4个前馈转换器构成</p>\n<h4 id=\"2-适配过程\"><a href=\"#2-适配过程\" class=\"headerlink\" title=\"2. 适配过程\"></a>2. 适配过程</h4><p><img src=\"http://pic.panjiangtao.cn/202110301031_731.jpg\" alt=\"适配步骤\"></p>\n<p>1）源模型训练过程</p>\n<ul>\n<li>音素编码器，将音素序列转换为隐藏序列</li>\n<li>将隐藏序列根据每个音素的持续时间进行展开，使其匹配梅尔频谱序列长度</li>\n<li>将展开后的隐藏序列输入到梅尔解码器</li>\n</ul>\n<p>2）<strong>梅尔编码器对齐</strong>（本文核心工作，设计一个梅尔频谱编码器在自适应时可以使用无标注的语音数据，并且不影响TTS）</p>\n<ul>\n<li><p>将使用源转录的语音数据通过梅尔编码器生成隐藏序列</p>\n</li>\n<li><p>使用长度相同的梅尔编码器生成的隐藏序列，和音素编码器生成的展开隐藏序列，计算L2损失进行训练(有稳定解且只有一个)</p>\n<p>$D_{L2}=\\sum_{i=1}^n (y_i-f(x_i))^2$</p>\n</li>\n<li><p>对齐训练时，只训练梅尔编码器的参数，保持TTS管道的参数不变，保证能够可插拔</p>\n</li>\n</ul>\n<p>3）未转录语音自适应</p>\n<ul>\n<li>未转录数据通过使用梅尔编码器和梅尔解码器进行语音重建，得到预测梅尔频谱，根据该重建的损失来微调模型，使模型加入使用者语音特征</li>\n<li>在AdaSpeech中，为了既保证自适应质量同时使微调参数尽可能少，只对和条件层归一化（CLN）有关的参数进行优化</li>\n</ul>\n<p>4）推理</p>\n<ul>\n<li>使用原始的未适配音素编码器和部分适配的梅尔解码器形成个性化的 TTS 系统，为每个特定的说话者生成语音</li>\n</ul>"},{"title":"Spring Boot中的容器与自动配置","copyright":false,"date":"2021-07-07T02:22:05.000Z","_content":"# 一、依赖管理与自动配置\n## 导入父项目进行版本配置\n　　只需导入父项目spring-boot-starter-parent及其版本号2.3.4.RELEASE就可以实现对需要的包进行版本控制。\n<!-- more -->\n```xml\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.3.4.RELEASE</version>\n    </parent>\n```\n\n## 导入需要的starter场景启动器\n　　1. spring-boot-starter-\\*中的\\*指某种场景。\n   \n　　2. \\*-spring-boot-starter-\\*是第三方为我们提供的简化开发的场景启动器。\n   \n　　3. spring-boot-starter-web中包含了Tomcat启动器和webmvc，不需要再次引入。\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-*</artifactId>\n    </dependency>\n</dependencies>\n```\n\n## 修改某个版本号\n　　在项目的pom.xml文件中重写某个包的版本,如将mysql版本设定为5.1.43：\n```xml\n    <properties>\n        <mysql.version>5.1.43</mysql.version>\n    </properties>\n```\n\n## 修改扫描路径\n　　程序默认只扫描主程序所在包及其子包，需要改变扫描路径，下述两种方法等同\n\n```java\n//第一种，简单方便\n//不加括号为默认扫描，加括号为指定路径\n@SpringBootApplication(scanBasePackages=\"com.pjt\") \n\n//第二种\n@SpringBootConfiguration\n@EnableAutoConfiguration\n@ComponentScan(\"com.pjt.boot\") //括号内为需要扫描的根目录\n```\n\n# 二、容器\n## 组件添加\n### 1. @Configuration\n#### 配置类\n　　\n　　在boot目录下添加config.MyConfig类作为配置类，代码如下,其中，[Pet和User](http://www.panjiangtao.cn/posts/spring3-1-pet-user/)为两个不同的类：\n```java\n@Configuration(proxyBeanMethods = true) //声明这是一个配置类\npublic class MyConfig {\n\n    @Bean //给容器中添加组件(也就是加入一个对象)，下述方法名user01默认为组件id，\n        //返回类型为组件类型，返回的对象为组件在容器中实例\n    public User user01(){\n       return new User(\"zhangsan\",18);\n    }\n    //测试组件依赖时替换\n    // public User user01(){\n    //     User zhangsan=new User(\"zhangsan\",18);\n    //     zhangsan.setPet(tomcatPet());\n    //     return zhangsan;\n    // }\n\n    @Bean(\"Tom\") //加参数修改组件id为Tom\n    public Pet tomcatPet(){\n        return new Pet(\"tomcat\");\n    }\n}\n```\n　　注意啦！\n- 1. 在配置类中使用@Bean标注在方法上给容器注册组件，组件默认单实例\n- 2. 配置类本身也是组件\n- 3. proxyBeanMethods：指bean的代理对象调用方法。为true时使用配置类调用组件时只创建单实例，如组件已有实例则不再创建；为false时会创建同一组件的新实例，一般用于组件依赖时。\n\n#### 主程序进行测试\n```java\npublic class MainApplication {\n    public static void main(String[] args) {\n        //1. 从容器获得组件,多次获取为同一实例\n        Pet tom01 = run.getBean(\"Tom\", Pet.class);\n        Pet tom02 = run.getBean(\"Tom\", Pet.class);\n        System.out.println(\"组件：\"+(tom01==tom02));\n\n        //2. 配置类也为组件，获取到的bean对象为代理对象\n        MyConfig bean = run.getBean(MyConfig.class);\n        System.out.println(bean);\n\n        //3.1 proxyBeanMethods为true时调用多次组件获得相同实例\n        User user = bean.user01();\n        User user1 = bean.user01();\n        System.out.println(user==user1);\n\n        //3.2 proxyBeanMethods为false时调用多次组件时创建新实例\n        User user01 = run.getBean(\"user01\", User.class);\n        Pet Tom=run.getBean(\"Tom\",Pet.class);\n        System.out.println(\"用户的宠物:\"+(user01.getPet()==Tom));\n    }\n}\n```\n　\n### 2. @Import\n　　在主函数目录下的类中使用，加在类定义之前。\n```java\n//@Import给容器中自动创建这两个类型的组件,默认组件名字为全类名\n@Import({User.class, DBHelper.class})\n```\n\n### 3. @Conditional\n　　写在类名之上对整个类有效，写在方法名之上对该方法有效。\n\n```java\n//@ConditionalOnMissingBean(name = \"tom\") //不存在tom组件时注入组件\npublic class MyConfig {\n    \n    @ConditionalOnBean(name=\"tom22\") //存在tom组件时才注入组件,由于此时tom22还未注入，因此user01无法注入\n    @Bean\n    public User user01(){\n        User zhangsan = new User(\"zhangsan\", 18);\n        //user组件依赖了Pet组件\n        zhangsan.setPet(tomcatPet());\n        return zhangsan;\n    }\n\n    @Bean(\"tom22\")\n    public Pet tomcatPet(){\n        return new Pet(\"tomcat\");\n    }\n}\n\n```\n　　主函数测试\n\n```java\npublic static void main(String[] args) {\n        //返回IOC容器\n        ConfigurableApplicationContext run = SpringApplication.run(MainApplication.class, args);\n\n        boolean tom = run.containsBean(\"tom\");\n        System.out.println(\"容器中Tom组件：\"+tom);\n\n        boolean user01 = run.containsBean(\"user01\");\n        System.out.println(\"容器中user01组件：\"+user01);\n\n        boolean tom22 = run.containsBean(\"tom22\");\n        System.out.println(\"容器中tom22组件：\"+tom22);\n    }\n```\n\n### 4. @ImportResource\n　　xml文件中进行组件注入:\n\n```xml\n    <bean id=\"haha\" class=\"com.pjt.boot.bean.User\">\n        <property name=\"name\" value=\"zhangsan\"></property>\n        <property name=\"age\" value=\"18\"></property>\n    </bean>\n\n    <bean id=\"hehe\" class=\"com.pjt.boot.bean.Pet\">\n        <property name=\"name\" value=\"tomcat\"></property>\n    </bean>\n```\n\n　　从xml配置文件中读入组件注入过程，已经将组件放入容器:\n\n```java\n@ImportResource(\"classpath:beans.xml\")\npublic class MyConfig {\n}\n```\n\n### 5.配置绑定\n　　使用Java读取到properties文件中的内容，并且把它封装到JavaBean中，以供随时使用。\n\n#### 方法1、@ConfigurationProperties\n　　在需要导入类的默认属性值时使用，需要先将类装进容器。\n```java\n@Component  //必须将组件加入容器中才能拥有以下功能\n@ConfigurationProperties(prefix = \"mycar\")  //需要导入的配置文件中的对象名\npublic class Car{\n    private String brand;\n    private Integer price;\n    ···\n}\n```\n　　然后在配置文件application.properties中添加属性值：\n```js\nmycar.brand=BMW\nmycar.price=100\n```\n\n#### 方法2、@EnableConfigurationProperties\n　　在使用第三方包时，无法在其通过@Component标签注入容器，因此使用EnableConfigurationProperties方法。\n　　配置文件写法与方法１相同。\n　　在配置类前加入下述代码，完成配置绑定。\n```java\n@EnableConfigurationProperties(Car.class)\n//1、开启Car配置绑定功能\n//2、把这个Car这个组件自动注册到容器中\npublic class MyConfig{\n}\n```\n{% note warning %}\n注意：该方法需要加入方法1的@ConfigurationProperties(prefix = \"mycar\")\n{% endnote %}\n\n#### 方法3、@EnableConfigurationProperties\n\n\n","source":"_posts/spring3-autoConfiguration-and-Bean.md","raw":"---\ntitle: Spring Boot中的容器与自动配置\ncopyright: false\ndate: 2021-07-07 10:22:05\ntags: spring\ncategories:\n- for babe\n- spring\n---\n# 一、依赖管理与自动配置\n## 导入父项目进行版本配置\n　　只需导入父项目spring-boot-starter-parent及其版本号2.3.4.RELEASE就可以实现对需要的包进行版本控制。\n<!-- more -->\n```xml\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.3.4.RELEASE</version>\n    </parent>\n```\n\n## 导入需要的starter场景启动器\n　　1. spring-boot-starter-\\*中的\\*指某种场景。\n   \n　　2. \\*-spring-boot-starter-\\*是第三方为我们提供的简化开发的场景启动器。\n   \n　　3. spring-boot-starter-web中包含了Tomcat启动器和webmvc，不需要再次引入。\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-*</artifactId>\n    </dependency>\n</dependencies>\n```\n\n## 修改某个版本号\n　　在项目的pom.xml文件中重写某个包的版本,如将mysql版本设定为5.1.43：\n```xml\n    <properties>\n        <mysql.version>5.1.43</mysql.version>\n    </properties>\n```\n\n## 修改扫描路径\n　　程序默认只扫描主程序所在包及其子包，需要改变扫描路径，下述两种方法等同\n\n```java\n//第一种，简单方便\n//不加括号为默认扫描，加括号为指定路径\n@SpringBootApplication(scanBasePackages=\"com.pjt\") \n\n//第二种\n@SpringBootConfiguration\n@EnableAutoConfiguration\n@ComponentScan(\"com.pjt.boot\") //括号内为需要扫描的根目录\n```\n\n# 二、容器\n## 组件添加\n### 1. @Configuration\n#### 配置类\n　　\n　　在boot目录下添加config.MyConfig类作为配置类，代码如下,其中，[Pet和User](http://www.panjiangtao.cn/posts/spring3-1-pet-user/)为两个不同的类：\n```java\n@Configuration(proxyBeanMethods = true) //声明这是一个配置类\npublic class MyConfig {\n\n    @Bean //给容器中添加组件(也就是加入一个对象)，下述方法名user01默认为组件id，\n        //返回类型为组件类型，返回的对象为组件在容器中实例\n    public User user01(){\n       return new User(\"zhangsan\",18);\n    }\n    //测试组件依赖时替换\n    // public User user01(){\n    //     User zhangsan=new User(\"zhangsan\",18);\n    //     zhangsan.setPet(tomcatPet());\n    //     return zhangsan;\n    // }\n\n    @Bean(\"Tom\") //加参数修改组件id为Tom\n    public Pet tomcatPet(){\n        return new Pet(\"tomcat\");\n    }\n}\n```\n　　注意啦！\n- 1. 在配置类中使用@Bean标注在方法上给容器注册组件，组件默认单实例\n- 2. 配置类本身也是组件\n- 3. proxyBeanMethods：指bean的代理对象调用方法。为true时使用配置类调用组件时只创建单实例，如组件已有实例则不再创建；为false时会创建同一组件的新实例，一般用于组件依赖时。\n\n#### 主程序进行测试\n```java\npublic class MainApplication {\n    public static void main(String[] args) {\n        //1. 从容器获得组件,多次获取为同一实例\n        Pet tom01 = run.getBean(\"Tom\", Pet.class);\n        Pet tom02 = run.getBean(\"Tom\", Pet.class);\n        System.out.println(\"组件：\"+(tom01==tom02));\n\n        //2. 配置类也为组件，获取到的bean对象为代理对象\n        MyConfig bean = run.getBean(MyConfig.class);\n        System.out.println(bean);\n\n        //3.1 proxyBeanMethods为true时调用多次组件获得相同实例\n        User user = bean.user01();\n        User user1 = bean.user01();\n        System.out.println(user==user1);\n\n        //3.2 proxyBeanMethods为false时调用多次组件时创建新实例\n        User user01 = run.getBean(\"user01\", User.class);\n        Pet Tom=run.getBean(\"Tom\",Pet.class);\n        System.out.println(\"用户的宠物:\"+(user01.getPet()==Tom));\n    }\n}\n```\n　\n### 2. @Import\n　　在主函数目录下的类中使用，加在类定义之前。\n```java\n//@Import给容器中自动创建这两个类型的组件,默认组件名字为全类名\n@Import({User.class, DBHelper.class})\n```\n\n### 3. @Conditional\n　　写在类名之上对整个类有效，写在方法名之上对该方法有效。\n\n```java\n//@ConditionalOnMissingBean(name = \"tom\") //不存在tom组件时注入组件\npublic class MyConfig {\n    \n    @ConditionalOnBean(name=\"tom22\") //存在tom组件时才注入组件,由于此时tom22还未注入，因此user01无法注入\n    @Bean\n    public User user01(){\n        User zhangsan = new User(\"zhangsan\", 18);\n        //user组件依赖了Pet组件\n        zhangsan.setPet(tomcatPet());\n        return zhangsan;\n    }\n\n    @Bean(\"tom22\")\n    public Pet tomcatPet(){\n        return new Pet(\"tomcat\");\n    }\n}\n\n```\n　　主函数测试\n\n```java\npublic static void main(String[] args) {\n        //返回IOC容器\n        ConfigurableApplicationContext run = SpringApplication.run(MainApplication.class, args);\n\n        boolean tom = run.containsBean(\"tom\");\n        System.out.println(\"容器中Tom组件：\"+tom);\n\n        boolean user01 = run.containsBean(\"user01\");\n        System.out.println(\"容器中user01组件：\"+user01);\n\n        boolean tom22 = run.containsBean(\"tom22\");\n        System.out.println(\"容器中tom22组件：\"+tom22);\n    }\n```\n\n### 4. @ImportResource\n　　xml文件中进行组件注入:\n\n```xml\n    <bean id=\"haha\" class=\"com.pjt.boot.bean.User\">\n        <property name=\"name\" value=\"zhangsan\"></property>\n        <property name=\"age\" value=\"18\"></property>\n    </bean>\n\n    <bean id=\"hehe\" class=\"com.pjt.boot.bean.Pet\">\n        <property name=\"name\" value=\"tomcat\"></property>\n    </bean>\n```\n\n　　从xml配置文件中读入组件注入过程，已经将组件放入容器:\n\n```java\n@ImportResource(\"classpath:beans.xml\")\npublic class MyConfig {\n}\n```\n\n### 5.配置绑定\n　　使用Java读取到properties文件中的内容，并且把它封装到JavaBean中，以供随时使用。\n\n#### 方法1、@ConfigurationProperties\n　　在需要导入类的默认属性值时使用，需要先将类装进容器。\n```java\n@Component  //必须将组件加入容器中才能拥有以下功能\n@ConfigurationProperties(prefix = \"mycar\")  //需要导入的配置文件中的对象名\npublic class Car{\n    private String brand;\n    private Integer price;\n    ···\n}\n```\n　　然后在配置文件application.properties中添加属性值：\n```js\nmycar.brand=BMW\nmycar.price=100\n```\n\n#### 方法2、@EnableConfigurationProperties\n　　在使用第三方包时，无法在其通过@Component标签注入容器，因此使用EnableConfigurationProperties方法。\n　　配置文件写法与方法１相同。\n　　在配置类前加入下述代码，完成配置绑定。\n```java\n@EnableConfigurationProperties(Car.class)\n//1、开启Car配置绑定功能\n//2、把这个Car这个组件自动注册到容器中\npublic class MyConfig{\n}\n```\n{% note warning %}\n注意：该方法需要加入方法1的@ConfigurationProperties(prefix = \"mycar\")\n{% endnote %}\n\n#### 方法3、@EnableConfigurationProperties\n\n\n","slug":"spring3-autoConfiguration-and-Bean","published":1,"updated":"2021-07-09T08:59:27.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0if005bc8pva7gx1fpq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"一、依赖管理与自动配置\"><a href=\"#一、依赖管理与自动配置\" class=\"headerlink\" title=\"一、依赖管理与自动配置\"></a>一、依赖管理与自动配置</h1><h2 id=\"导入父项目进行版本配置\"><a href=\"#导入父项目进行版本配置\" class=\"headerlink\" title=\"导入父项目进行版本配置\"></a>导入父项目进行版本配置</h2><p>　　只需导入父项目spring-boot-starter-parent及其版本号2.3.4.RELEASE就可以实现对需要的包进行版本控制。<br><a id=\"more\"></a><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"导入需要的starter场景启动器\"><a href=\"#导入需要的starter场景启动器\" class=\"headerlink\" title=\"导入需要的starter场景启动器\"></a>导入需要的starter场景启动器</h2><p>　　1. spring-boot-starter-*中的*指某种场景。</p>\n<p>　　2. *-spring-boot-starter-*是第三方为我们提供的简化开发的场景启动器。</p>\n<p>　　3. spring-boot-starter-web中包含了Tomcat启动器和webmvc，不需要再次引入。<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-*<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改某个版本号\"><a href=\"#修改某个版本号\" class=\"headerlink\" title=\"修改某个版本号\"></a>修改某个版本号</h2><p>　　在项目的pom.xml文件中重写某个包的版本,如将mysql版本设定为5.1.43：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mysql.version</span>&gt;</span>5.1.43<span class=\"tag\">&lt;/<span class=\"name\">mysql.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改扫描路径\"><a href=\"#修改扫描路径\" class=\"headerlink\" title=\"修改扫描路径\"></a>修改扫描路径</h2><p>　　程序默认只扫描主程序所在包及其子包，需要改变扫描路径，下述两种方法等同</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//第一种，简单方便</span></span><br><span class=\"line\"><span class=\"comment\">//不加括号为默认扫描，加括号为指定路径</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication(scanBasePackages=&quot;com.pjt&quot;)</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二种</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(&quot;com.pjt.boot&quot;)</span> <span class=\"comment\">//括号内为需要扫描的根目录</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"二、容器\"><a href=\"#二、容器\" class=\"headerlink\" title=\"二、容器\"></a>二、容器</h1><h2 id=\"组件添加\"><a href=\"#组件添加\" class=\"headerlink\" title=\"组件添加\"></a>组件添加</h2><h3 id=\"1-Configuration\"><a href=\"#1-Configuration\" class=\"headerlink\" title=\"1. @Configuration\"></a>1. @Configuration</h3><h4 id=\"配置类\"><a href=\"#配置类\" class=\"headerlink\" title=\"配置类\"></a>配置类</h4><p>　　<br>　　在boot目录下添加config.MyConfig类作为配置类，代码如下,其中，<a href=\"http://www.panjiangtao.cn/posts/spring3-1-pet-user/\">Pet和User</a>为两个不同的类：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration(proxyBeanMethods = true)</span> <span class=\"comment\">//声明这是一个配置类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">//给容器中添加组件(也就是加入一个对象)，下述方法名user01默认为组件id，</span></span><br><span class=\"line\">        <span class=\"comment\">//返回类型为组件类型，返回的对象为组件在容器中实例</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">user01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> User(<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"number\">18</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//测试组件依赖时替换</span></span><br><span class=\"line\">    <span class=\"comment\">// public User user01()&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     User zhangsan=new User(&quot;zhangsan&quot;,18);</span></span><br><span class=\"line\">    <span class=\"comment\">//     zhangsan.setPet(tomcatPet());</span></span><br><span class=\"line\">    <span class=\"comment\">//     return zhangsan;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;Tom&quot;)</span> <span class=\"comment\">//加参数修改组件id为Tom</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Pet <span class=\"title\">tomcatPet</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Pet(<span class=\"string\">&quot;tomcat&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>　　注意啦！</p>\n<ul>\n<li><ol>\n<li>在配置类中使用@Bean标注在方法上给容器注册组件，组件默认单实例</li>\n</ol>\n</li>\n<li><ol>\n<li>配置类本身也是组件</li>\n</ol>\n</li>\n<li><ol>\n<li>proxyBeanMethods：指bean的代理对象调用方法。为true时使用配置类调用组件时只创建单实例，如组件已有实例则不再创建；为false时会创建同一组件的新实例，一般用于组件依赖时。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"主程序进行测试\"><a href=\"#主程序进行测试\" class=\"headerlink\" title=\"主程序进行测试\"></a>主程序进行测试</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 从容器获得组件,多次获取为同一实例</span></span><br><span class=\"line\">        Pet tom01 = run.getBean(<span class=\"string\">&quot;Tom&quot;</span>, Pet.class);</span><br><span class=\"line\">        Pet tom02 = run.getBean(<span class=\"string\">&quot;Tom&quot;</span>, Pet.class);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;组件：&quot;</span>+(tom01==tom02));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 配置类也为组件，获取到的bean对象为代理对象</span></span><br><span class=\"line\">        MyConfig bean = run.getBean(MyConfig.class);</span><br><span class=\"line\">        System.out.println(bean);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.1 proxyBeanMethods为true时调用多次组件获得相同实例</span></span><br><span class=\"line\">        User user = bean.user01();</span><br><span class=\"line\">        User user1 = bean.user01();</span><br><span class=\"line\">        System.out.println(user==user1);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.2 proxyBeanMethods为false时调用多次组件时创建新实例</span></span><br><span class=\"line\">        User user01 = run.getBean(<span class=\"string\">&quot;user01&quot;</span>, User.class);</span><br><span class=\"line\">        Pet Tom=run.getBean(<span class=\"string\">&quot;Tom&quot;</span>,Pet.class);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;用户的宠物:&quot;</span>+(user01.getPet()==Tom));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　</p>\n<h3 id=\"2-Import\"><a href=\"#2-Import\" class=\"headerlink\" title=\"2. @Import\"></a>2. @Import</h3><p>　　在主函数目录下的类中使用，加在类定义之前。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@Import给容器中自动创建这两个类型的组件,默认组件名字为全类名</span></span><br><span class=\"line\"><span class=\"meta\">@Import(&#123;User.class, DBHelper.class&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-Conditional\"><a href=\"#3-Conditional\" class=\"headerlink\" title=\"3. @Conditional\"></a>3. @Conditional</h3><p>　　写在类名之上对整个类有效，写在方法名之上对该方法有效。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@ConditionalOnMissingBean(name = &quot;tom&quot;) //不存在tom组件时注入组件</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnBean(name=&quot;tom22&quot;)</span> <span class=\"comment\">//存在tom组件时才注入组件,由于此时tom22还未注入，因此user01无法注入</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">user01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        User zhangsan = <span class=\"keyword\">new</span> User(<span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">        <span class=\"comment\">//user组件依赖了Pet组件</span></span><br><span class=\"line\">        zhangsan.setPet(tomcatPet());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> zhangsan;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;tom22&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Pet <span class=\"title\">tomcatPet</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Pet(<span class=\"string\">&quot;tomcat&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>　　主函数测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//返回IOC容器</span></span><br><span class=\"line\">        ConfigurableApplicationContext run = SpringApplication.run(MainApplication.class, args);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> tom = run.containsBean(<span class=\"string\">&quot;tom&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;容器中Tom组件：&quot;</span>+tom);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> user01 = run.containsBean(<span class=\"string\">&quot;user01&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;容器中user01组件：&quot;</span>+user01);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> tom22 = run.containsBean(<span class=\"string\">&quot;tom22&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;容器中tom22组件：&quot;</span>+tom22);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-ImportResource\"><a href=\"#4-ImportResource\" class=\"headerlink\" title=\"4. @ImportResource\"></a>4. @ImportResource</h3><p>　　xml文件中进行组件注入:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;haha&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.pjt.boot.bean.User&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;zhangsan&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;18&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hehe&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.pjt.boot.bean.Pet&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;tomcat&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　从xml配置文件中读入组件注入过程，已经将组件放入容器:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ImportResource(&quot;classpath:beans.xml&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-配置绑定\"><a href=\"#5-配置绑定\" class=\"headerlink\" title=\"5.配置绑定\"></a>5.配置绑定</h3><p>　　使用Java读取到properties文件中的内容，并且把它封装到JavaBean中，以供随时使用。</p>\n<h4 id=\"方法1、-ConfigurationProperties\"><a href=\"#方法1、-ConfigurationProperties\" class=\"headerlink\" title=\"方法1、@ConfigurationProperties\"></a>方法1、@ConfigurationProperties</h4><p>　　在需要导入类的默认属性值时使用，需要先将类装进容器。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span>  <span class=\"comment\">//必须将组件加入容器中才能拥有以下功能</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties(prefix = &quot;mycar&quot;)</span>  <span class=\"comment\">//需要导入的配置文件中的对象名</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Car</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer price;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>　　然后在配置文件application.properties中添加属性值：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mycar.brand=BMW</span><br><span class=\"line\">mycar.price=<span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"方法2、-EnableConfigurationProperties\"><a href=\"#方法2、-EnableConfigurationProperties\" class=\"headerlink\" title=\"方法2、@EnableConfigurationProperties\"></a>方法2、@EnableConfigurationProperties</h4><p>　　在使用第三方包时，无法在其通过@Component标签注入容器，因此使用EnableConfigurationProperties方法。<br>　　配置文件写法与方法１相同。<br>　　在配置类前加入下述代码，完成配置绑定。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties(Car.class)</span></span><br><span class=\"line\"><span class=\"comment\">//1、开启Car配置绑定功能</span></span><br><span class=\"line\"><span class=\"comment\">//2、把这个Car这个组件自动注册到容器中</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><div class=\"note warning\">\n            <p>注意：该方法需要加入方法1的@ConfigurationProperties(prefix = “mycar”)</p>\n          </div></p>\n<h4 id=\"方法3、-EnableConfigurationProperties\"><a href=\"#方法3、-EnableConfigurationProperties\" class=\"headerlink\" title=\"方法3、@EnableConfigurationProperties\"></a>方法3、@EnableConfigurationProperties</h4>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":4719,"excerpt":"<h1 id=\"一、依赖管理与自动配置\"><a href=\"#一、依赖管理与自动配置\" class=\"headerlink\" title=\"一、依赖管理与自动配置\"></a>一、依赖管理与自动配置</h1><h2 id=\"导入父项目进行版本配置\"><a href=\"#导入父项目进行版本配置\" class=\"headerlink\" title=\"导入父项目进行版本配置\"></a>导入父项目进行版本配置</h2><p>　　只需导入父项目spring-boot-starter-parent及其版本号2.3.4.RELEASE就可以实现对需要的包进行版本控制。<br></p>","more":"<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p></p>\n<h2 id=\"导入需要的starter场景启动器\"><a href=\"#导入需要的starter场景启动器\" class=\"headerlink\" title=\"导入需要的starter场景启动器\"></a>导入需要的starter场景启动器</h2><p>　　1. spring-boot-starter-*中的*指某种场景。</p>\n<p>　　2. *-spring-boot-starter-*是第三方为我们提供的简化开发的场景启动器。</p>\n<p>　　3. spring-boot-starter-web中包含了Tomcat启动器和webmvc，不需要再次引入。<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-*<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改某个版本号\"><a href=\"#修改某个版本号\" class=\"headerlink\" title=\"修改某个版本号\"></a>修改某个版本号</h2><p>　　在项目的pom.xml文件中重写某个包的版本,如将mysql版本设定为5.1.43：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mysql.version</span>&gt;</span>5.1.43<span class=\"tag\">&lt;/<span class=\"name\">mysql.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"修改扫描路径\"><a href=\"#修改扫描路径\" class=\"headerlink\" title=\"修改扫描路径\"></a>修改扫描路径</h2><p>　　程序默认只扫描主程序所在包及其子包，需要改变扫描路径，下述两种方法等同</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//第一种，简单方便</span></span><br><span class=\"line\"><span class=\"comment\">//不加括号为默认扫描，加括号为指定路径</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication(scanBasePackages=&quot;com.pjt&quot;)</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二种</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(&quot;com.pjt.boot&quot;)</span> <span class=\"comment\">//括号内为需要扫描的根目录</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"二、容器\"><a href=\"#二、容器\" class=\"headerlink\" title=\"二、容器\"></a>二、容器</h1><h2 id=\"组件添加\"><a href=\"#组件添加\" class=\"headerlink\" title=\"组件添加\"></a>组件添加</h2><h3 id=\"1-Configuration\"><a href=\"#1-Configuration\" class=\"headerlink\" title=\"1. @Configuration\"></a>1. @Configuration</h3><h4 id=\"配置类\"><a href=\"#配置类\" class=\"headerlink\" title=\"配置类\"></a>配置类</h4><p>　　<br>　　在boot目录下添加config.MyConfig类作为配置类，代码如下,其中，<a href=\"http://www.panjiangtao.cn/posts/spring3-1-pet-user/\">Pet和User</a>为两个不同的类：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration(proxyBeanMethods = true)</span> <span class=\"comment\">//声明这是一个配置类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">//给容器中添加组件(也就是加入一个对象)，下述方法名user01默认为组件id，</span></span><br><span class=\"line\">        <span class=\"comment\">//返回类型为组件类型，返回的对象为组件在容器中实例</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">user01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> User(<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"number\">18</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//测试组件依赖时替换</span></span><br><span class=\"line\">    <span class=\"comment\">// public User user01()&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     User zhangsan=new User(&quot;zhangsan&quot;,18);</span></span><br><span class=\"line\">    <span class=\"comment\">//     zhangsan.setPet(tomcatPet());</span></span><br><span class=\"line\">    <span class=\"comment\">//     return zhangsan;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;Tom&quot;)</span> <span class=\"comment\">//加参数修改组件id为Tom</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Pet <span class=\"title\">tomcatPet</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Pet(<span class=\"string\">&quot;tomcat&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>　　注意啦！</p>\n<ul>\n<li><ol>\n<li>在配置类中使用@Bean标注在方法上给容器注册组件，组件默认单实例</li>\n</ol>\n</li>\n<li><ol>\n<li>配置类本身也是组件</li>\n</ol>\n</li>\n<li><ol>\n<li>proxyBeanMethods：指bean的代理对象调用方法。为true时使用配置类调用组件时只创建单实例，如组件已有实例则不再创建；为false时会创建同一组件的新实例，一般用于组件依赖时。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"主程序进行测试\"><a href=\"#主程序进行测试\" class=\"headerlink\" title=\"主程序进行测试\"></a>主程序进行测试</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 从容器获得组件,多次获取为同一实例</span></span><br><span class=\"line\">        Pet tom01 = run.getBean(<span class=\"string\">&quot;Tom&quot;</span>, Pet.class);</span><br><span class=\"line\">        Pet tom02 = run.getBean(<span class=\"string\">&quot;Tom&quot;</span>, Pet.class);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;组件：&quot;</span>+(tom01==tom02));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 配置类也为组件，获取到的bean对象为代理对象</span></span><br><span class=\"line\">        MyConfig bean = run.getBean(MyConfig.class);</span><br><span class=\"line\">        System.out.println(bean);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.1 proxyBeanMethods为true时调用多次组件获得相同实例</span></span><br><span class=\"line\">        User user = bean.user01();</span><br><span class=\"line\">        User user1 = bean.user01();</span><br><span class=\"line\">        System.out.println(user==user1);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.2 proxyBeanMethods为false时调用多次组件时创建新实例</span></span><br><span class=\"line\">        User user01 = run.getBean(<span class=\"string\">&quot;user01&quot;</span>, User.class);</span><br><span class=\"line\">        Pet Tom=run.getBean(<span class=\"string\">&quot;Tom&quot;</span>,Pet.class);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;用户的宠物:&quot;</span>+(user01.getPet()==Tom));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　</p>\n<h3 id=\"2-Import\"><a href=\"#2-Import\" class=\"headerlink\" title=\"2. @Import\"></a>2. @Import</h3><p>　　在主函数目录下的类中使用，加在类定义之前。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@Import给容器中自动创建这两个类型的组件,默认组件名字为全类名</span></span><br><span class=\"line\"><span class=\"meta\">@Import(&#123;User.class, DBHelper.class&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-Conditional\"><a href=\"#3-Conditional\" class=\"headerlink\" title=\"3. @Conditional\"></a>3. @Conditional</h3><p>　　写在类名之上对整个类有效，写在方法名之上对该方法有效。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@ConditionalOnMissingBean(name = &quot;tom&quot;) //不存在tom组件时注入组件</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@ConditionalOnBean(name=&quot;tom22&quot;)</span> <span class=\"comment\">//存在tom组件时才注入组件,由于此时tom22还未注入，因此user01无法注入</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">user01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        User zhangsan = <span class=\"keyword\">new</span> User(<span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">        <span class=\"comment\">//user组件依赖了Pet组件</span></span><br><span class=\"line\">        zhangsan.setPet(tomcatPet());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> zhangsan;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;tom22&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Pet <span class=\"title\">tomcatPet</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Pet(<span class=\"string\">&quot;tomcat&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>　　主函数测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//返回IOC容器</span></span><br><span class=\"line\">        ConfigurableApplicationContext run = SpringApplication.run(MainApplication.class, args);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> tom = run.containsBean(<span class=\"string\">&quot;tom&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;容器中Tom组件：&quot;</span>+tom);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> user01 = run.containsBean(<span class=\"string\">&quot;user01&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;容器中user01组件：&quot;</span>+user01);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> tom22 = run.containsBean(<span class=\"string\">&quot;tom22&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;容器中tom22组件：&quot;</span>+tom22);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-ImportResource\"><a href=\"#4-ImportResource\" class=\"headerlink\" title=\"4. @ImportResource\"></a>4. @ImportResource</h3><p>　　xml文件中进行组件注入:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;haha&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.pjt.boot.bean.User&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;zhangsan&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;18&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hehe&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.pjt.boot.bean.Pet&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;tomcat&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　从xml配置文件中读入组件注入过程，已经将组件放入容器:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ImportResource(&quot;classpath:beans.xml&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-配置绑定\"><a href=\"#5-配置绑定\" class=\"headerlink\" title=\"5.配置绑定\"></a>5.配置绑定</h3><p>　　使用Java读取到properties文件中的内容，并且把它封装到JavaBean中，以供随时使用。</p>\n<h4 id=\"方法1、-ConfigurationProperties\"><a href=\"#方法1、-ConfigurationProperties\" class=\"headerlink\" title=\"方法1、@ConfigurationProperties\"></a>方法1、@ConfigurationProperties</h4><p>　　在需要导入类的默认属性值时使用，需要先将类装进容器。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span>  <span class=\"comment\">//必须将组件加入容器中才能拥有以下功能</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties(prefix = &quot;mycar&quot;)</span>  <span class=\"comment\">//需要导入的配置文件中的对象名</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Car</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer price;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>　　然后在配置文件application.properties中添加属性值：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mycar.brand=BMW</span><br><span class=\"line\">mycar.price=<span class=\"number\">100</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"方法2、-EnableConfigurationProperties\"><a href=\"#方法2、-EnableConfigurationProperties\" class=\"headerlink\" title=\"方法2、@EnableConfigurationProperties\"></a>方法2、@EnableConfigurationProperties</h4><p>　　在使用第三方包时，无法在其通过@Component标签注入容器，因此使用EnableConfigurationProperties方法。<br>　　配置文件写法与方法１相同。<br>　　在配置类前加入下述代码，完成配置绑定。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties(Car.class)</span></span><br><span class=\"line\"><span class=\"comment\">//1、开启Car配置绑定功能</span></span><br><span class=\"line\"><span class=\"comment\">//2、把这个Car这个组件自动注册到容器中</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyConfig</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><div class=\"note warning\">\n            <p>注意：该方法需要加入方法1的@ConfigurationProperties(prefix = “mycar”)</p>\n          </div></p>\n<h4 id=\"方法3、-EnableConfigurationProperties\"><a href=\"#方法3、-EnableConfigurationProperties\" class=\"headerlink\" title=\"方法3、@EnableConfigurationProperties\"></a>方法3、@EnableConfigurationProperties</h4>"},{"title":"Spring Boot之helloworld(环境配置)","copyright":false,"date":"2021-07-03T05:31:45.000Z","_content":"{% note info %}\n这一节讲的是使用IDEA工具进行Spring Boot搭建的方法\n{% endnote %}\n<!-- more -->\n# 一、安装Maven\n## 下载\n　　1. 点击[Maven下载地址](https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.zip)进行下载\n　　2. 下载、解压完，在环境变量path中添加apache-maven-3.8.1\\bin文件夹\n　　3. 命令行输入`mvn -v`检查是否正确安装\n\n## maven环境配置\n　　在apache-maven-3.8.1\\conf文件夹中找到settings.xml文件，其中任意位置插入下述代码：\n```xml\n<mirrors>\n      <mirror>\n        <id>nexus-aliyun</id>\n        <mirrorOf>central</mirrorOf>\n        <name>Nexus aliyun</name>\n        <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n      </mirror>\n  </mirrors>\n \n  <profiles>\n         <profile>\n              <id>jdk-1.8</id>\n              <activation>\n                <activeByDefault>true</activeByDefault>\n                <jdk>1.8</jdk>\n              </activation>\n              <properties>\n                <maven.compiler.source>1.8</maven.compiler.source>\n                <maven.compiler.target>1.8</maven.compiler.target>\n                <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n              </properties>\n         </profile>\n  </profiles>\n  ```\n\n# 二、IDEA配置\n## 新建项目\n![新建maven工程](1.jpg)\n![给项目取名，再取一个组名，比如com.lyt](2.jpg)\n## 引入依赖\n{% note warning %}\n在打开IDEA时右下角会跳出弹框，选择always download，否则不会自动下载依赖哦贝贝。\n{% endnote %}\n　　在pom.xml文件中加入下述代码：\n```xml\n<parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.3.4.RELEASE</version>\n    </parent>\n\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n    </dependencies>\n```\n\n* 如果左边External Libraries没有下面这些包，就在pom.xml里右键Maven->Reload Project\n![导入依赖后的各种包](4.jpg)\n\n## 编写主程序\n　　1. 在main/java下新建class，类名可以像下面这样com.pjt.boot.MainApplication\n　　![新建主程序](3.jpg)\n　　2. 在主程序函数上添加`@SpringBootApplication`,表示这是一个SpringBoot应用。\n　　3. 主程序完整代码：\n```java\npackage com.pjt.boot;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class MainApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(MainApplication.class,args);\n    }\n}\n```\n\n## 编写控制器\n　　1. 在com.pjt.boot下创建controller\n![创建controller控制器](5.jpg)\n　　2. 在函数HelloController上方添加`@RestController`\n　　3. 控制器代码：\n```java\npackage com.pjt.boot.controller;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n    @RequestMapping(\"/hello\")\n    public String handle01(){\n        return \"Hello World!\";\n    }\n}\n```\n\n# 三、运行项目\n## 添加配置文件\n　　在resources文件夹下添加file，名为`application.properties`\n![添加配置文件](6.jpg)\n```java\nserver.port=8080 //默认端口为8080，可以修改\n```\n## 运行Main函数\n　　在浏览器中输入`localhost:8080/hello`,即可获得下图结果。\n![Hello World!!!](7.jpg)\n","source":"_posts/spring2-helloworld.md","raw":"---\ntitle: Spring Boot之helloworld(环境配置)\ncopyright: false\ndate: 2021-07-03 13:31:45\ntags: spring\ncategories:\n- for babe\n- spring\n---\n{% note info %}\n这一节讲的是使用IDEA工具进行Spring Boot搭建的方法\n{% endnote %}\n<!-- more -->\n# 一、安装Maven\n## 下载\n　　1. 点击[Maven下载地址](https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.zip)进行下载\n　　2. 下载、解压完，在环境变量path中添加apache-maven-3.8.1\\bin文件夹\n　　3. 命令行输入`mvn -v`检查是否正确安装\n\n## maven环境配置\n　　在apache-maven-3.8.1\\conf文件夹中找到settings.xml文件，其中任意位置插入下述代码：\n```xml\n<mirrors>\n      <mirror>\n        <id>nexus-aliyun</id>\n        <mirrorOf>central</mirrorOf>\n        <name>Nexus aliyun</name>\n        <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n      </mirror>\n  </mirrors>\n \n  <profiles>\n         <profile>\n              <id>jdk-1.8</id>\n              <activation>\n                <activeByDefault>true</activeByDefault>\n                <jdk>1.8</jdk>\n              </activation>\n              <properties>\n                <maven.compiler.source>1.8</maven.compiler.source>\n                <maven.compiler.target>1.8</maven.compiler.target>\n                <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n              </properties>\n         </profile>\n  </profiles>\n  ```\n\n# 二、IDEA配置\n## 新建项目\n![新建maven工程](1.jpg)\n![给项目取名，再取一个组名，比如com.lyt](2.jpg)\n## 引入依赖\n{% note warning %}\n在打开IDEA时右下角会跳出弹框，选择always download，否则不会自动下载依赖哦贝贝。\n{% endnote %}\n　　在pom.xml文件中加入下述代码：\n```xml\n<parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.3.4.RELEASE</version>\n    </parent>\n\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n    </dependencies>\n```\n\n* 如果左边External Libraries没有下面这些包，就在pom.xml里右键Maven->Reload Project\n![导入依赖后的各种包](4.jpg)\n\n## 编写主程序\n　　1. 在main/java下新建class，类名可以像下面这样com.pjt.boot.MainApplication\n　　![新建主程序](3.jpg)\n　　2. 在主程序函数上添加`@SpringBootApplication`,表示这是一个SpringBoot应用。\n　　3. 主程序完整代码：\n```java\npackage com.pjt.boot;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class MainApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(MainApplication.class,args);\n    }\n}\n```\n\n## 编写控制器\n　　1. 在com.pjt.boot下创建controller\n![创建controller控制器](5.jpg)\n　　2. 在函数HelloController上方添加`@RestController`\n　　3. 控制器代码：\n```java\npackage com.pjt.boot.controller;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n    @RequestMapping(\"/hello\")\n    public String handle01(){\n        return \"Hello World!\";\n    }\n}\n```\n\n# 三、运行项目\n## 添加配置文件\n　　在resources文件夹下添加file，名为`application.properties`\n![添加配置文件](6.jpg)\n```java\nserver.port=8080 //默认端口为8080，可以修改\n```\n## 运行Main函数\n　　在浏览器中输入`localhost:8080/hello`,即可获得下图结果。\n![Hello World!!!](7.jpg)\n","slug":"spring2-helloworld","published":1,"updated":"2021-07-03T07:23:03.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ih005fc8pvgq8oala5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>这一节讲的是使用IDEA工具进行Spring Boot搭建的方法</p>\n          </div>\n<a id=\"more\"></a>\n<h1 id=\"一、安装Maven\"><a href=\"#一、安装Maven\" class=\"headerlink\" title=\"一、安装Maven\"></a>一、安装Maven</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>　　1. 点击<a href=\"https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.zip\">Maven下载地址</a>进行下载<br>　　2. 下载、解压完，在环境变量path中添加apache-maven-3.8.1\\bin文件夹<br>　　3. 命令行输入<code>mvn -v</code>检查是否正确安装</p>\n<h2 id=\"maven环境配置\"><a href=\"#maven环境配置\" class=\"headerlink\" title=\"maven环境配置\"></a>maven环境配置</h2><p>　　在apache-maven-3.8.1\\conf文件夹中找到settings.xml文件，其中任意位置插入下述代码：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-aliyun<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus aliyun<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jdk-1.8<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">jdk</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"二、IDEA配置\"><a href=\"#二、IDEA配置\" class=\"headerlink\" title=\"二、IDEA配置\"></a>二、IDEA配置</h1><h2 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h2><p><img src=\"/posts/spring2-helloworld/1.jpg\" alt=\"新建maven工程\"><br><img src=\"/posts/spring2-helloworld/2.jpg\" alt=\"给项目取名，再取一个组名，比如com.lyt\"></p>\n<h2 id=\"引入依赖\"><a href=\"#引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h2><div class=\"note warning\">\n            <p>在打开IDEA时右下角会跳出弹框，选择always download，否则不会自动下载依赖哦贝贝。</p>\n          </div>\n<p>　　在pom.xml文件中加入下述代码：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>如果左边External Libraries没有下面这些包，就在pom.xml里右键Maven-&gt;Reload Project<br><img src=\"/posts/spring2-helloworld/4.jpg\" alt=\"导入依赖后的各种包\"></li>\n</ul>\n<h2 id=\"编写主程序\"><a href=\"#编写主程序\" class=\"headerlink\" title=\"编写主程序\"></a>编写主程序</h2><p>　　1. 在main/java下新建class，类名可以像下面这样com.pjt.boot.MainApplication<br>　　<img src=\"/posts/spring2-helloworld/3.jpg\" alt=\"新建主程序\"><br>　　2. 在主程序函数上添加<code>@SpringBootApplication</code>,表示这是一个SpringBoot应用。<br>　　3. 主程序完整代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.pjt.boot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"编写控制器\"><a href=\"#编写控制器\" class=\"headerlink\" title=\"编写控制器\"></a>编写控制器</h2><p>　　1. 在com.pjt.boot下创建controller<br><img src=\"/posts/spring2-helloworld/5.jpg\" alt=\"创建controller控制器\"><br>　　2. 在函数HelloController上方添加<code>@RestController</code><br>　　3. 控制器代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.pjt.boot.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloController</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">handle01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"三、运行项目\"><a href=\"#三、运行项目\" class=\"headerlink\" title=\"三、运行项目\"></a>三、运行项目</h1><h2 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h2><p>　　在resources文件夹下添加file，名为<code>application.properties</code><br><img src=\"/posts/spring2-helloworld/6.jpg\" alt=\"添加配置文件\"><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=<span class=\"number\">8080</span> <span class=\"comment\">//默认端口为8080，可以修改</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运行Main函数\"><a href=\"#运行Main函数\" class=\"headerlink\" title=\"运行Main函数\"></a>运行Main函数</h2><p>　　在浏览器中输入<code>localhost:8080/hello</code>,即可获得下图结果。<br><img src=\"/posts/spring2-helloworld/7.jpg\" alt=\"Hello World!!!\"></p>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":2434,"excerpt":"<div class=\"note info\">\n            <p>这一节讲的是使用IDEA工具进行Spring Boot搭建的方法</p>\n          </div>","more":"<h1 id=\"一、安装Maven\"><a href=\"#一、安装Maven\" class=\"headerlink\" title=\"一、安装Maven\"></a>一、安装Maven</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>　　1. 点击<a href=\"https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.zip\">Maven下载地址</a>进行下载<br>　　2. 下载、解压完，在环境变量path中添加apache-maven-3.8.1\\bin文件夹<br>　　3. 命令行输入<code>mvn -v</code>检查是否正确安装</p>\n<h2 id=\"maven环境配置\"><a href=\"#maven环境配置\" class=\"headerlink\" title=\"maven环境配置\"></a>maven环境配置</h2><p>　　在apache-maven-3.8.1\\conf文件夹中找到settings.xml文件，其中任意位置插入下述代码：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-aliyun<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus aliyun<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jdk-1.8<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">jdk</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"二、IDEA配置\"><a href=\"#二、IDEA配置\" class=\"headerlink\" title=\"二、IDEA配置\"></a>二、IDEA配置</h1><h2 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h2><p><img src=\"/posts/spring2-helloworld/1.jpg\" alt=\"新建maven工程\"><br><img src=\"/posts/spring2-helloworld/2.jpg\" alt=\"给项目取名，再取一个组名，比如com.lyt\"></p>\n<h2 id=\"引入依赖\"><a href=\"#引入依赖\" class=\"headerlink\" title=\"引入依赖\"></a>引入依赖</h2><div class=\"note warning\">\n            <p>在打开IDEA时右下角会跳出弹框，选择always download，否则不会自动下载依赖哦贝贝。</p>\n          </div>\n<p>　　在pom.xml文件中加入下述代码：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.4.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>如果左边External Libraries没有下面这些包，就在pom.xml里右键Maven-&gt;Reload Project<br><img src=\"/posts/spring2-helloworld/4.jpg\" alt=\"导入依赖后的各种包\"></li>\n</ul>\n<h2 id=\"编写主程序\"><a href=\"#编写主程序\" class=\"headerlink\" title=\"编写主程序\"></a>编写主程序</h2><p>　　1. 在main/java下新建class，类名可以像下面这样com.pjt.boot.MainApplication<br>　　<img src=\"/posts/spring2-helloworld/3.jpg\" alt=\"新建主程序\"><br>　　2. 在主程序函数上添加<code>@SpringBootApplication</code>,表示这是一个SpringBoot应用。<br>　　3. 主程序完整代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.pjt.boot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"编写控制器\"><a href=\"#编写控制器\" class=\"headerlink\" title=\"编写控制器\"></a>编写控制器</h2><p>　　1. 在com.pjt.boot下创建controller<br><img src=\"/posts/spring2-helloworld/5.jpg\" alt=\"创建controller控制器\"><br>　　2. 在函数HelloController上方添加<code>@RestController</code><br>　　3. 控制器代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.pjt.boot.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloController</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">handle01</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"三、运行项目\"><a href=\"#三、运行项目\" class=\"headerlink\" title=\"三、运行项目\"></a>三、运行项目</h1><h2 id=\"添加配置文件\"><a href=\"#添加配置文件\" class=\"headerlink\" title=\"添加配置文件\"></a>添加配置文件</h2><p>　　在resources文件夹下添加file，名为<code>application.properties</code><br><img src=\"/posts/spring2-helloworld/6.jpg\" alt=\"添加配置文件\"><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=<span class=\"number\">8080</span> <span class=\"comment\">//默认端口为8080，可以修改</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运行Main函数\"><a href=\"#运行Main函数\" class=\"headerlink\" title=\"运行Main函数\"></a>运行Main函数</h2><p>　　在浏览器中输入<code>localhost:8080/hello</code>,即可获得下图结果。<br><img src=\"/posts/spring2-helloworld/7.jpg\" alt=\"Hello World!!!\"></p>"},{"title":"起风了","date":"2020-10-12T09:23:13.000Z","_content":"{% cq %}\n### 風立ちぬ、\n### いざ行きめやも。\n\n###            ————堀辰雄《風立ちぬ》\n{% endcq %}\n<!-- more -->\n\n# 病人と愛にする\n　　这究竟是怎样的一种情感，能让你明知道对方时日无多，却仍满怀期待地陪她在疗养院中度过她最后的时光。\n　　那女子是这样的脆弱，又是如此温柔，让所有与她接触过的人都不禁想要轻抚她的额头。就如同冬日的雪地里长出的一朵稚嫩小野花，她的出现给人带来美好稍纵即逝的绝望，却又让人在她生命的最后一刻忍不住想用双手包裹，直至凋零。\n\n> 　　那是些欢愉的日子，欢愉得令人黯然神伤。\n> 　　就如同早在我俩初次相遇两年之前的那个夏日里我于漫不经意间脱口而出、从此以后便喜欢上了它、无缘无故地常要浅吟低诵的“风乍起。合当奋意向人生。”那行诗句一般，分明忘怀已久，却又悄然苏生————可谓是早于人生之先、远比人生本身更为鲜活的日子。","source":"_posts/suibi1.md","raw":"---\ntitle: 起风了\ndate: 2020-10-12 17:23:13\ntags:\n- 随笔\ncategories:\n- 随笔\n---\n{% cq %}\n### 風立ちぬ、\n### いざ行きめやも。\n\n###            ————堀辰雄《風立ちぬ》\n{% endcq %}\n<!-- more -->\n\n# 病人と愛にする\n　　这究竟是怎样的一种情感，能让你明知道对方时日无多，却仍满怀期待地陪她在疗养院中度过她最后的时光。\n　　那女子是这样的脆弱，又是如此温柔，让所有与她接触过的人都不禁想要轻抚她的额头。就如同冬日的雪地里长出的一朵稚嫩小野花，她的出现给人带来美好稍纵即逝的绝望，却又让人在她生命的最后一刻忍不住想用双手包裹，直至凋零。\n\n> 　　那是些欢愉的日子，欢愉得令人黯然神伤。\n> 　　就如同早在我俩初次相遇两年之前的那个夏日里我于漫不经意间脱口而出、从此以后便喜欢上了它、无缘无故地常要浅吟低诵的“风乍起。合当奋意向人生。”那行诗句一般，分明忘怀已久，却又悄然苏生————可谓是早于人生之先、远比人生本身更为鲜活的日子。","slug":"suibi1","published":1,"updated":"2021-03-05T06:41:23.062Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0ik005ic8pvgydka2m0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"風立ちぬ、\"><a href=\"#風立ちぬ、\" class=\"headerlink\" title=\"風立ちぬ、\"></a>風立ちぬ、</h3><h3 id=\"いざ行きめやも。\"><a href=\"#いざ行きめやも。\" class=\"headerlink\" title=\"いざ行きめやも。\"></a>いざ行きめやも。</h3><h3 id=\"————堀辰雄《風立ちぬ》\"><a href=\"#————堀辰雄《風立ちぬ》\" class=\"headerlink\" title=\"————堀辰雄《風立ちぬ》\"></a>————堀辰雄《風立ちぬ》</h3>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>\n<a id=\"more\"></a>\n<h1 id=\"病人と愛にする\"><a href=\"#病人と愛にする\" class=\"headerlink\" title=\"病人と愛にする\"></a>病人と愛にする</h1><p>　　这究竟是怎样的一种情感，能让你明知道对方时日无多，却仍满怀期待地陪她在疗养院中度过她最后的时光。<br>　　那女子是这样的脆弱，又是如此温柔，让所有与她接触过的人都不禁想要轻抚她的额头。就如同冬日的雪地里长出的一朵稚嫩小野花，她的出现给人带来美好稍纵即逝的绝望，却又让人在她生命的最后一刻忍不住想用双手包裹，直至凋零。</p>\n<blockquote>\n<p>　　那是些欢愉的日子，欢愉得令人黯然神伤。<br>　　就如同早在我俩初次相遇两年之前的那个夏日里我于漫不经意间脱口而出、从此以后便喜欢上了它、无缘无故地常要浅吟低诵的“风乍起。合当奋意向人生。”那行诗句一般，分明忘怀已久，却又悄然苏生————可谓是早于人生之先、远比人生本身更为鲜活的日子。</p>\n</blockquote>\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":323,"excerpt":"<blockquote class=\"blockquote-center\">\n            <i class=\"fa fa-quote-left\"></i>\n            <h3 id=\"風立ちぬ、\"><a href=\"#風立ちぬ、\" class=\"headerlink\" title=\"風立ちぬ、\"></a>風立ちぬ、</h3><h3 id=\"いざ行きめやも。\"><a href=\"#いざ行きめやも。\" class=\"headerlink\" title=\"いざ行きめやも。\"></a>いざ行きめやも。</h3><h3 id=\"————堀辰雄《風立ちぬ》\"><a href=\"#————堀辰雄《風立ちぬ》\" class=\"headerlink\" title=\"————堀辰雄《風立ちぬ》\"></a>————堀辰雄《風立ちぬ》</h3>\n            <i class=\"fa fa-quote-right\"></i>\n          </blockquote>","more":"<h1 id=\"病人と愛にする\"><a href=\"#病人と愛にする\" class=\"headerlink\" title=\"病人と愛にする\"></a>病人と愛にする</h1><p>　　这究竟是怎样的一种情感，能让你明知道对方时日无多，却仍满怀期待地陪她在疗养院中度过她最后的时光。<br>　　那女子是这样的脆弱，又是如此温柔，让所有与她接触过的人都不禁想要轻抚她的额头。就如同冬日的雪地里长出的一朵稚嫩小野花，她的出现给人带来美好稍纵即逝的绝望，却又让人在她生命的最后一刻忍不住想用双手包裹，直至凋零。</p>\n<blockquote>\n<p>　　那是些欢愉的日子，欢愉得令人黯然神伤。<br>　　就如同早在我俩初次相遇两年之前的那个夏日里我于漫不经意间脱口而出、从此以后便喜欢上了它、无缘无故地常要浅吟低诵的“风乍起。合当奋意向人生。”那行诗句一般，分明忘怀已久，却又悄然苏生————可谓是早于人生之先、远比人生本身更为鲜活的日子。</p>\n</blockquote>"},{"title":"测试一下","date":"2020-09-17T12:15:27.000Z","_content":"## tab选项卡\n{% tabs tab,2 %}\n<!-- tab -->\nthis is tab1\n<!-- endtab -->\n<!-- tab -->\nthis is tab2\n<!-- endtab -->\n<!-- tab -->\nthis is tab3\n<!-- endtab -->\n{% endtabs %}\n\n## 音乐\n{% aplayer \"SomethingJustLikeThis\" \"The Chainsmokers/Coldplay\" \"http://file.panjiangtao.cn/SomethingJustLikeThis.mp3\" \"SomethingJustLikeThis.jpg\" \"lrc:SomethingJustLikeThis.txt\" %}\n\n## b站外链\nhttps://xbeibeix.com/api/bilibili/biliplayer/?url=\n\n## 按钮\n<center>{% btn #, 按一下, home fa-fw fa-lg, Title %}</center>\n\n<!-- more -->\n## 便签\n{% note info %}\ndefault,primary,success,info,warning,danger\n{% endnote %}\n\n## pdf\n<iframe src=\"http://file.panjiangtao.cn/jianli.pdf\" width=\"100%\" height=\"800px\"></iframe>\n\n\n## iframe插件\n```md\n{% iframe url [width] [height] %}\n```\n<iframe \n\theight=500 width=100% \n\tsrc=\"http://file.panjiangtao.cn/gouge.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n\n","source":"_posts/test.md","raw":"---\ntitle: 测试一下\ndate: 2020-09-17 20:15:27\ntags:\n- test\ncategories:\n- 测试\n---\n## tab选项卡\n{% tabs tab,2 %}\n<!-- tab -->\nthis is tab1\n<!-- endtab -->\n<!-- tab -->\nthis is tab2\n<!-- endtab -->\n<!-- tab -->\nthis is tab3\n<!-- endtab -->\n{% endtabs %}\n\n## 音乐\n{% aplayer \"SomethingJustLikeThis\" \"The Chainsmokers/Coldplay\" \"http://file.panjiangtao.cn/SomethingJustLikeThis.mp3\" \"SomethingJustLikeThis.jpg\" \"lrc:SomethingJustLikeThis.txt\" %}\n\n## b站外链\nhttps://xbeibeix.com/api/bilibili/biliplayer/?url=\n\n## 按钮\n<center>{% btn #, 按一下, home fa-fw fa-lg, Title %}</center>\n\n<!-- more -->\n## 便签\n{% note info %}\ndefault,primary,success,info,warning,danger\n{% endnote %}\n\n## pdf\n<iframe src=\"http://file.panjiangtao.cn/jianli.pdf\" width=\"100%\" height=\"800px\"></iframe>\n\n\n## iframe插件\n```md\n{% iframe url [width] [height] %}\n```\n<iframe \n\theight=500 width=100% \n\tsrc=\"http://file.panjiangtao.cn/gouge.mp4\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n\n","slug":"test","published":1,"updated":"2020-12-02T14:30:27.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0il005kc8pv8dvu3ika","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"tab选项卡\"><a href=\"#tab选项卡\" class=\"headerlink\" title=\"tab选项卡\"></a>tab选项卡</h2><div class=\"tabs\" id=\"tab\"><ul class=\"nav-tabs\"><li class=\"tab\"><a href=\"#tab-1\">tab 1</a></li><li class=\"tab active\"><a href=\"#tab-2\">tab 2</a></li><li class=\"tab\"><a href=\"#tab-3\">tab 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane\" id=\"tab-1\"><p>this is tab1</p></div><div class=\"tab-pane active\" id=\"tab-2\"><p>this is tab2</p></div><div class=\"tab-pane\" id=\"tab-3\"><p>this is tab3</p></div></div></div>\n<h2 id=\"音乐\"><a href=\"#音乐\" class=\"headerlink\" title=\"音乐\"></a>音乐</h2>\n        <div id=\"aplayer-NbbvLTzF\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\">\n            <pre class=\"aplayer-lrc-content\">[ti:Something Just Like This]\n[ar:The Chainsmokers/Coldplay]\n[al:Something Just Like This]\n[by:]\n[offset:0]\n[00:00.73]Something Just Like This (美国篮球联赛宣传片主题曲|第60届格莱美最佳流行对唱/组合提名歌曲) - The Chainsmokers/Coldplay\n[00:02.13]Written by：Andrew Taggart/Christopher Martin/Guy Berryman/Jonny Buckland/Will Champion\n[00:03.78]\n[00:08.16]I've been reading books of old\n[00:10.44]The legends and the myths\n[00:12.79]Achilles and his gold\n[00:15.10]Hercules and his gifts\n[00:17.60]Spiderman's control\n[00:19.88]And Batman with his fists\n[00:22.20]\n[00:22.82]And clearly I don't see myself upon that list\n[00:26.46]She said where'd you wanna go\n[00:28.98]How much you wanna risk\n[00:31.25]I'm not looking for somebody\n[00:33.41]With some Superhuman gifts\n[00:36.08]Some Superhero\n[00:37.78]\n[00:38.39]Some fairytale bliss\n[00:40.83]Just something I can turn to\n[00:43.05]Somebody I can kiss\n[00:45.12]I want something just like this\n[00:47.69]Doo doo doo doo doo doo\n[00:49.27]\n[00:50.00]Doo doo doo doo doo\n[00:51.59]\n[00:52.40]Doo doo doo doo doo doo\n[00:54.25]Oh I want something just like this\n[00:56.99]Doo doo doo doo doo doo\n[00:58.79]\n[00:59.49]Doo doo doo doo doo\n[01:01.16]\n[01:01.69]Doo doo doo doo doo doo\n[01:03.60]Oh I want something just like this\n[01:06.31]\n[01:13.20]I want something just like this\n[01:15.78]\n[01:22.85]I've been reading books of old\n[01:24.52]\n[01:25.03]The legends and the myths\n[01:27.34]The testaments they told\n[01:29.69]The moon and its eclipse\n[01:32.04]And Superman unrolls\n[01:34.38]A suit before he lifts\n[01:36.64]\n[01:37.69]But I'm not the kind of person that it fits\n[01:40.92]She said where'd you wanna go\n[01:43.75]How much you wanna risk\n[01:45.79]I'm not looking for somebody\n[01:48.04]With some Superhuman gifts\n[01:50.57]Some Superhero\n[01:52.28]\n[01:52.93]Some fairytale bliss\n[01:55.29]Just something I can turn to\n[01:57.61]Somebody I can miss\n[01:59.70]I want something just like this\n[02:02.18]\n[02:09.11]I want something just like this\n[02:11.58]\n[02:18.16]Oh I want something just like this\n[02:21.18]Doo doo doo doo doo doo\n[02:22.56]\n[02:23.28]Doo doo doo doo doo\n[02:24.85]\n[02:25.53]Doo doo doo doo doo doo\n[02:27.63]Oh I want something just like this\n[02:30.23]Doo doo doo doo doo doo\n[02:32.06]\n[02:32.70]Doo doo doo doo doo\n[02:34.87]Doo doo doo doo doo doo\n[02:36.71]\n[02:37.69]Where'd you wanna go\n[02:39.62]How much you wanna risk\n[02:41.59]I'm not looking for somebody\n[02:44.00]With some Superhuman gifts\n[02:46.59]Some Superhero\n[02:48.68]Some fairytale bliss\n[02:51.24]Just something I can turn to\n[02:53.51]Somebody I can kiss\n[02:55.59]I want something just like this\n[02:58.18]\n[03:14.04]Oh I want something just like this\n[03:16.80]\n[03:32.78]Oh I want something just like this\n[03:35.50]\n[03:51.44]Oh I want something just like this</pre>\n        </div>\n        <script>\n          var ap = new APlayer({\n            element: document.getElementById(\"aplayer-NbbvLTzF\"),\n            narrow: false,\n            autoplay: false,\n            showlrc: 2,\n            music: {\n              title: \"SomethingJustLikeThis\",\n              author: \"The Chainsmokers/Coldplay\",\n              url: \"http://file.panjiangtao.cn/SomethingJustLikeThis.mp3\",\n              pic: \"/posts/test/SomethingJustLikeThis.jpg\",\n              lrc: \"SomethingJustLikeThis.txt\"\n            }\n          });\n          window.aplayers || (window.aplayers = []);\n          window.aplayers.push(ap);\n        </script>\n<h2 id=\"b站外链\"><a href=\"#b站外链\" class=\"headerlink\" title=\"b站外链\"></a>b站外链</h2><p><a href=\"https://xbeibeix.com/api/bilibili/biliplayer/?url=\">https://xbeibeix.com/api/bilibili/biliplayer/?url=</a></p>\n<h2 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h2><center><a class=\"btn\" href=\"#\" title=\"Title\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>按一下\n          </a></center>\n\n<a id=\"more\"></a>\n<h2 id=\"便签\"><a href=\"#便签\" class=\"headerlink\" title=\"便签\"></a>便签</h2><div class=\"note info\">\n            <p>default,primary,success,info,warning,danger</p>\n          </div>\n<h2 id=\"pdf\"><a href=\"#pdf\" class=\"headerlink\" title=\"pdf\"></a>pdf</h2><iframe src=\"http://file.panjiangtao.cn/jianli.pdf\" width=\"100%\" height=\"800px\"></iframe>\n\n\n<h2 id=\"iframe插件\"><a href=\"#iframe插件\" class=\"headerlink\" title=\"iframe插件\"></a>iframe插件</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<iframe height=\"500\" width=\"100%\" src=\"http://file.panjiangtao.cn/gouge.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>\n\n","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":3010,"excerpt":"<h2 id=\"tab选项卡\"><a href=\"#tab选项卡\" class=\"headerlink\" title=\"tab选项卡\"></a>tab选项卡</h2><div class=\"tabs\" id=\"tab\"><ul class=\"nav-tabs\"><li class=\"tab\"><a href=\"#tab-1\">tab 1</a></li><li class=\"tab active\"><a href=\"#tab-2\">tab 2</a></li><li class=\"tab\"><a href=\"#tab-3\">tab 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane\" id=\"tab-1\"><p>this is tab1</p></div><div class=\"tab-pane active\" id=\"tab-2\"><p>this is tab2</p></div><div class=\"tab-pane\" id=\"tab-3\"><p>this is tab3</p></div></div></div>\n<h2 id=\"音乐\"><a href=\"#音乐\" class=\"headerlink\" title=\"音乐\"></a>音乐</h2>\n        <div id=\"aplayer-NbbvLTzF\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\">\n            <pre class=\"aplayer-lrc-content\">[ti:Something Just Like This]\n[ar:The Chainsmokers/Coldplay]\n[al:Something Just Like This]\n[by:]\n[offset:0]\n[00:00.73]Something Just Like This (美国篮球联赛宣传片主题曲|第60届格莱美最佳流行对唱/组合提名歌曲) - The Chainsmokers/Coldplay\n[00:02.13]Written by：Andrew Taggart/Christopher Martin/Guy Berryman/Jonny Buckland/Will Champion\n[00:03.78]\n[00:08.16]I've been reading books of old\n[00:10.44]The legends and the myths\n[00:12.79]Achilles and his gold\n[00:15.10]Hercules and his gifts\n[00:17.60]Spiderman's control\n[00:19.88]And Batman with his fists\n[00:22.20]\n[00:22.82]And clearly I don't see myself upon that list\n[00:26.46]She said where'd you wanna go\n[00:28.98]How much you wanna risk\n[00:31.25]I'm not looking for somebody\n[00:33.41]With some Superhuman gifts\n[00:36.08]Some Superhero\n[00:37.78]\n[00:38.39]Some fairytale bliss\n[00:40.83]Just something I can turn to\n[00:43.05]Somebody I can kiss\n[00:45.12]I want something just like this\n[00:47.69]Doo doo doo doo doo doo\n[00:49.27]\n[00:50.00]Doo doo doo doo doo\n[00:51.59]\n[00:52.40]Doo doo doo doo doo doo\n[00:54.25]Oh I want something just like this\n[00:56.99]Doo doo doo doo doo doo\n[00:58.79]\n[00:59.49]Doo doo doo doo doo\n[01:01.16]\n[01:01.69]Doo doo doo doo doo doo\n[01:03.60]Oh I want something just like this\n[01:06.31]\n[01:13.20]I want something just like this\n[01:15.78]\n[01:22.85]I've been reading books of old\n[01:24.52]\n[01:25.03]The legends and the myths\n[01:27.34]The testaments they told\n[01:29.69]The moon and its eclipse\n[01:32.04]And Superman unrolls\n[01:34.38]A suit before he lifts\n[01:36.64]\n[01:37.69]But I'm not the kind of person that it fits\n[01:40.92]She said where'd you wanna go\n[01:43.75]How much you wanna risk\n[01:45.79]I'm not looking for somebody\n[01:48.04]With some Superhuman gifts\n[01:50.57]Some Superhero\n[01:52.28]\n[01:52.93]Some fairytale bliss\n[01:55.29]Just something I can turn to\n[01:57.61]Somebody I can miss\n[01:59.70]I want something just like this\n[02:02.18]\n[02:09.11]I want something just like this\n[02:11.58]\n[02:18.16]Oh I want something just like this\n[02:21.18]Doo doo doo doo doo doo\n[02:22.56]\n[02:23.28]Doo doo doo doo doo\n[02:24.85]\n[02:25.53]Doo doo doo doo doo doo\n[02:27.63]Oh I want something just like this\n[02:30.23]Doo doo doo doo doo doo\n[02:32.06]\n[02:32.70]Doo doo doo doo doo\n[02:34.87]Doo doo doo doo doo doo\n[02:36.71]\n[02:37.69]Where'd you wanna go\n[02:39.62]How much you wanna risk\n[02:41.59]I'm not looking for somebody\n[02:44.00]With some Superhuman gifts\n[02:46.59]Some Superhero\n[02:48.68]Some fairytale bliss\n[02:51.24]Just something I can turn to\n[02:53.51]Somebody I can kiss\n[02:55.59]I want something just like this\n[02:58.18]\n[03:14.04]Oh I want something just like this\n[03:16.80]\n[03:32.78]Oh I want something just like this\n[03:35.50]\n[03:51.44]Oh I want something just like this</pre>\n        </div>\n        <script>\n          var ap = new APlayer({\n            element: document.getElementById(\"aplayer-NbbvLTzF\"),\n            narrow: false,\n            autoplay: false,\n            showlrc: 2,\n            music: {\n              title: \"SomethingJustLikeThis\",\n              author: \"The Chainsmokers/Coldplay\",\n              url: \"http://file.panjiangtao.cn/SomethingJustLikeThis.mp3\",\n              pic: \"/posts/test/SomethingJustLikeThis.jpg\",\n              lrc: \"SomethingJustLikeThis.txt\"\n            }\n          });\n          window.aplayers || (window.aplayers = []);\n          window.aplayers.push(ap);\n        </script>\n<h2 id=\"b站外链\"><a href=\"#b站外链\" class=\"headerlink\" title=\"b站外链\"></a>b站外链</h2><p><a href=\"https://xbeibeix.com/api/bilibili/biliplayer/?url=\">https://xbeibeix.com/api/bilibili/biliplayer/?url=</a></p>\n<h2 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h2><center><a class=\"btn\" href=\"#\" title=\"Title\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>按一下\n          </a></center>","more":"<h2 id=\"便签\"><a href=\"#便签\" class=\"headerlink\" title=\"便签\"></a>便签</h2><div class=\"note info\">\n            <p>default,primary,success,info,warning,danger</p>\n          </div>\n<h2 id=\"pdf\"><a href=\"#pdf\" class=\"headerlink\" title=\"pdf\"></a>pdf</h2><iframe src=\"http://file.panjiangtao.cn/jianli.pdf\" width=\"100%\" height=\"800px\"></iframe>\n\n\n<h2 id=\"iframe插件\"><a href=\"#iframe插件\" class=\"headerlink\" title=\"iframe插件\"></a>iframe插件</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure>\n<iframe height=\"500\" width=\"100%\" src=\"http://file.panjiangtao.cn/gouge.mp4\" frameborder=\"0\" allowfullscreen>\n</iframe>"},{"title":"手写字体制作并在Next上部署","date":"2020-11-15T02:51:40.000Z","_content":"{% note info %}\n下载[江涛休闲体](http://file.panjiangtao.cn/ziti.ttf)\n{% endnote %}\n\n# 字库制作\n## 准备\n　　在[flexifont](http://www.flexifont.com/flexifont-chn/mine/)上注册并下载需要的字体模板，如下图。\n![字体模板](moban.jpg)\n<!-- more -->\n　　推荐使用6763字+符号6886字这个模板，包含了GB2312完整字库，基本上碰不到这以外的字体。\n\n## 书写\n　　将下载的pdf文件打印出来写，或者在电脑上用PS+手绘板、ipad上用pencil。这一步是整个过程最麻烦的部分，博主耗时18个小时。\n　　注意事项：\n　　1. 请使用黑色或蓝色的圆珠笔、水笔或者钢笔，请勿使用签字笔、铅笔和彩笔。\n　　2. 书写时，保证文字尽量居中，大小匀称，不要压到或超过边框。\n\n## 拍照上传\n![拍照要求](paizhao.jpg)\n\n## 生成字库\n![生成字库要求](shengcheng.jpg)\n　　生成完毕后下载ttf文件，打卡后安装即可在word文档中使用。\n\n# 博客安装\n## 转码\n　　在[字体文件转码网站](https://www.aconvert.com/cn/image/ttf-to-svg/)将ttf文件分别转码成svg、woff、eot文件，下载备用。\n\n## 安装\n　　* 在Hexo文件夹中的source文件夹下建立_data文件夹，在其内新建styles.styl文件。\n　　* 在主题文件夹下的source文件夹下建立fonts文件夹，其内放入所有字体文件。\n　　styles.styl文件内容：\n```css\n@font-face {\n    font-family: 'JTHandwrite'; /*引号中为字体名，将下列所有JTHandwrite用你的文件名代替 */\n    src: url('/fonts/JTHandwrite.eot');\n    src: url('/fonts/JTHandwrite.eot?#iefix') format('embedded-opentype'),\n        url('/fonts/JTHandwrite.svg') format('svg'),\n        url('/fonts/JTHandwrite.ttf')  format('truetype');\n    font-weight: 500;\n}\n```\n　　在主题配置文件_config.yml中修改成如下：\n```yml\nfont:\n  enable: true\n\n  host:\n\n  # Global font settings used for all elements inside <body>.\n  global:\n    external: false\n    family: 'JTHandwrite' # 改为上面你的font-family\n    size:\n```\n\n## OK,完事了。","source":"_posts/ziti.md","raw":"---\ntitle: 手写字体制作并在Next上部署\ndate: 2020-11-15 10:51:40\ntags:\n- daily\n- hexo\ncategories: \n- 生活\n---\n{% note info %}\n下载[江涛休闲体](http://file.panjiangtao.cn/ziti.ttf)\n{% endnote %}\n\n# 字库制作\n## 准备\n　　在[flexifont](http://www.flexifont.com/flexifont-chn/mine/)上注册并下载需要的字体模板，如下图。\n![字体模板](moban.jpg)\n<!-- more -->\n　　推荐使用6763字+符号6886字这个模板，包含了GB2312完整字库，基本上碰不到这以外的字体。\n\n## 书写\n　　将下载的pdf文件打印出来写，或者在电脑上用PS+手绘板、ipad上用pencil。这一步是整个过程最麻烦的部分，博主耗时18个小时。\n　　注意事项：\n　　1. 请使用黑色或蓝色的圆珠笔、水笔或者钢笔，请勿使用签字笔、铅笔和彩笔。\n　　2. 书写时，保证文字尽量居中，大小匀称，不要压到或超过边框。\n\n## 拍照上传\n![拍照要求](paizhao.jpg)\n\n## 生成字库\n![生成字库要求](shengcheng.jpg)\n　　生成完毕后下载ttf文件，打卡后安装即可在word文档中使用。\n\n# 博客安装\n## 转码\n　　在[字体文件转码网站](https://www.aconvert.com/cn/image/ttf-to-svg/)将ttf文件分别转码成svg、woff、eot文件，下载备用。\n\n## 安装\n　　* 在Hexo文件夹中的source文件夹下建立_data文件夹，在其内新建styles.styl文件。\n　　* 在主题文件夹下的source文件夹下建立fonts文件夹，其内放入所有字体文件。\n　　styles.styl文件内容：\n```css\n@font-face {\n    font-family: 'JTHandwrite'; /*引号中为字体名，将下列所有JTHandwrite用你的文件名代替 */\n    src: url('/fonts/JTHandwrite.eot');\n    src: url('/fonts/JTHandwrite.eot?#iefix') format('embedded-opentype'),\n        url('/fonts/JTHandwrite.svg') format('svg'),\n        url('/fonts/JTHandwrite.ttf')  format('truetype');\n    font-weight: 500;\n}\n```\n　　在主题配置文件_config.yml中修改成如下：\n```yml\nfont:\n  enable: true\n\n  host:\n\n  # Global font settings used for all elements inside <body>.\n  global:\n    external: false\n    family: 'JTHandwrite' # 改为上面你的font-family\n    size:\n```\n\n## OK,完事了。","slug":"ziti","published":1,"updated":"2020-11-15T03:29:33.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8h3b0in005mc8pv9rdjdsth","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div class=\"note info\">\n            <p>下载<a href=\"http://file.panjiangtao.cn/ziti.ttf\">江涛休闲体</a></p>\n          </div>\n<h1 id=\"字库制作\"><a href=\"#字库制作\" class=\"headerlink\" title=\"字库制作\"></a>字库制作</h1><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>　　在<a href=\"http://www.flexifont.com/flexifont-chn/mine/\">flexifont</a>上注册并下载需要的字体模板，如下图。<br><img src=\"/posts/ziti/moban.jpg\" alt=\"字体模板\"><br><a id=\"more\"></a><br>　　推荐使用6763字+符号6886字这个模板，包含了GB2312完整字库，基本上碰不到这以外的字体。</p>\n<h2 id=\"书写\"><a href=\"#书写\" class=\"headerlink\" title=\"书写\"></a>书写</h2><p>　　将下载的pdf文件打印出来写，或者在电脑上用PS+手绘板、ipad上用pencil。这一步是整个过程最麻烦的部分，博主耗时18个小时。<br>　　注意事项：<br>　　1. 请使用黑色或蓝色的圆珠笔、水笔或者钢笔，请勿使用签字笔、铅笔和彩笔。<br>　　2. 书写时，保证文字尽量居中，大小匀称，不要压到或超过边框。</p>\n<h2 id=\"拍照上传\"><a href=\"#拍照上传\" class=\"headerlink\" title=\"拍照上传\"></a>拍照上传</h2><p><img src=\"/posts/ziti/paizhao.jpg\" alt=\"拍照要求\"></p>\n<h2 id=\"生成字库\"><a href=\"#生成字库\" class=\"headerlink\" title=\"生成字库\"></a>生成字库</h2><p><img src=\"/posts/ziti/shengcheng.jpg\" alt=\"生成字库要求\"><br>　　生成完毕后下载ttf文件，打卡后安装即可在word文档中使用。</p>\n<h1 id=\"博客安装\"><a href=\"#博客安装\" class=\"headerlink\" title=\"博客安装\"></a>博客安装</h1><h2 id=\"转码\"><a href=\"#转码\" class=\"headerlink\" title=\"转码\"></a>转码</h2><p>　　在<a href=\"https://www.aconvert.com/cn/image/ttf-to-svg/\">字体文件转码网站</a>将ttf文件分别转码成svg、woff、eot文件，下载备用。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>　　<em> 在Hexo文件夹中的source文件夹下建立_data文件夹，在其内新建styles.styl文件。\n　　</em> 在主题文件夹下的source文件夹下建立fonts文件夹，其内放入所有字体文件。<br>　　styles.styl文件内容：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;JTHandwrite&#x27;</span>; <span class=\"comment\">/*引号中为字体名，将下列所有JTHandwrite用你的文件名代替 */</span></span><br><span class=\"line\">    <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.eot&#x27;</span>);</span><br><span class=\"line\">    <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.eot?#iefix&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;embedded-opentype&#x27;</span>),</span><br><span class=\"line\">        <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.svg&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;svg&#x27;</span>),</span><br><span class=\"line\">        <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.ttf&#x27;</span>)  <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>);</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">500</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>　　在主题配置文件_config.yml中修改成如下：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">font:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">host:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class=\"line\">  <span class=\"attr\">global:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">&#x27;JTHandwrite&#x27;</span> <span class=\"comment\"># 改为上面你的font-family</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"OK-完事了。\"><a href=\"#OK-完事了。\" class=\"headerlink\" title=\"OK,完事了。\"></a>OK,完事了。</h2>","site":{"data":{"styles":"body {\n  background: url(\"https://api.uixsj.cn/bing/bing.php\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  height: 100vh;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n@font-face {\n  font-family: 'JTHandwrite';\n  src: url(\"/fonts/JTHandwrite.eot\");\n  src: url(\"/fonts/JTHandwrite.eot?#iefix\") format('embedded-opentype'), url(\"/fonts/JTHandwrite.svg\") format('svg'), url(\"/fonts/JTHandwrite.ttf\") format('truetype');\n  font-weight: 500;\n}\n.nexmoe-bg {\n  background-size: cover;\n  filter: blur(10px);\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -5;\n}\n.main-inner {\n  opacity: 0.9;\n}\n.header-inner {\n  background: #fff;\n  margin-bottom: 15px;\n  z-index: 2;\n  opacity: 0.9;\n  top: 25px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.header-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.sidebar {\n  transition-duration: 0.4s;\n}\n.sidebar-inner {\n  background: #fff;\n  margin-top: 30px;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n}\n.sidebar-inner:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.posts-expand .post-title-link {\n  color: #222;\n}\n.post-block {\n  background: #fff;\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post-block + .post-block {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.post-block + .post-block:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.comments {\n  background: #fff;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  border-radius: 25px;\n}\n.comments:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.pagination {\n  border-radius: 25px;\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 6px rgba(7,17,27,0.2);\n  margin-top: 20px;\n  padding: 25px;\n}\n.pagination:hover {\n  transition-duration: 0.5s;\n  box-shadow: 0 4px 8px 12px rgba(7,17,27,0.4);\n}\n.post {\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 5px;\n  border-radius: 25px;\n}\n.post-button a {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-button a:hover {\n  background: rgba(100,154,182,0.902);\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n  color: #eee !important;\n}\n.post-block .btn {\n  color: #555;\n  margin-right: 5px;\n  display: inline-block;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border: none;\n  border-radius: 40px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.post-block .btn:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.post-tags a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.post-tags a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.tag-cloud a {\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 5px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n}\n.tag-cloud a:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.category-list-link a {\n  color: #555;\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 30px;\n  transition: all 0.5s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n}\n.category-list-link a:hover {\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n* {\n  cursor: url(\"/images/circle.ico\"), auto !important;\n}\n:active {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n:link {\n  cursor: url(\"/images/circle2.ico\"), auto !important;\n}\n.github-corner svg {\n  width: 80px;\n  height: 80px;\nmobile()\n}\n.category-list-item {\n  list-style: none !important;\n}\n.category-all {\n  min-height: 560px; /*调节页面高度*/\n}\n.category-list {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 95%;\n  max-height: 520px; /*调节分类高度*/\n  align-content: space-around;\n}\n.category-list-link {\n  border-bottom: none;\n  width: auto;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  transition: 0.2s ease-out;\n  padding: 2px 10px;\n  margin: 5px;\n  background: #eee;\n  border-bottom: none;\n  border-radius: 12px;\n}\n.category-list-link:hover {\n  text-decoration: none;\n  background: rgba(100,154,182,0.902);\n  color: #fff !important;\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.beian a {\n  color: #bbb;\n}\n"}},"length":998,"excerpt":"<div class=\"note info\">\n            <p>下载<a href=\"http://file.panjiangtao.cn/ziti.ttf\">江涛休闲体</a></p>\n          </div>\n<h1 id=\"字库制作\"><a href=\"#字库制作\" class=\"headerlink\" title=\"字库制作\"></a>字库制作</h1><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>　　在<a href=\"http://www.flexifont.com/flexifont-chn/mine/\">flexifont</a>上注册并下载需要的字体模板，如下图。<br><img src=\"/posts/ziti/moban.jpg\" alt=\"字体模板\"><br></p>","more":"<br>　　推荐使用6763字+符号6886字这个模板，包含了GB2312完整字库，基本上碰不到这以外的字体。<p></p>\n<h2 id=\"书写\"><a href=\"#书写\" class=\"headerlink\" title=\"书写\"></a>书写</h2><p>　　将下载的pdf文件打印出来写，或者在电脑上用PS+手绘板、ipad上用pencil。这一步是整个过程最麻烦的部分，博主耗时18个小时。<br>　　注意事项：<br>　　1. 请使用黑色或蓝色的圆珠笔、水笔或者钢笔，请勿使用签字笔、铅笔和彩笔。<br>　　2. 书写时，保证文字尽量居中，大小匀称，不要压到或超过边框。</p>\n<h2 id=\"拍照上传\"><a href=\"#拍照上传\" class=\"headerlink\" title=\"拍照上传\"></a>拍照上传</h2><p><img src=\"/posts/ziti/paizhao.jpg\" alt=\"拍照要求\"></p>\n<h2 id=\"生成字库\"><a href=\"#生成字库\" class=\"headerlink\" title=\"生成字库\"></a>生成字库</h2><p><img src=\"/posts/ziti/shengcheng.jpg\" alt=\"生成字库要求\"><br>　　生成完毕后下载ttf文件，打卡后安装即可在word文档中使用。</p>\n<h1 id=\"博客安装\"><a href=\"#博客安装\" class=\"headerlink\" title=\"博客安装\"></a>博客安装</h1><h2 id=\"转码\"><a href=\"#转码\" class=\"headerlink\" title=\"转码\"></a>转码</h2><p>　　在<a href=\"https://www.aconvert.com/cn/image/ttf-to-svg/\">字体文件转码网站</a>将ttf文件分别转码成svg、woff、eot文件，下载备用。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>　　<em> 在Hexo文件夹中的source文件夹下建立_data文件夹，在其内新建styles.styl文件。\n　　</em> 在主题文件夹下的source文件夹下建立fonts文件夹，其内放入所有字体文件。<br>　　styles.styl文件内容：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;JTHandwrite&#x27;</span>; <span class=\"comment\">/*引号中为字体名，将下列所有JTHandwrite用你的文件名代替 */</span></span><br><span class=\"line\">    <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.eot&#x27;</span>);</span><br><span class=\"line\">    <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.eot?#iefix&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;embedded-opentype&#x27;</span>),</span><br><span class=\"line\">        <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.svg&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;svg&#x27;</span>),</span><br><span class=\"line\">        <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;/fonts/JTHandwrite.ttf&#x27;</span>)  <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>);</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">500</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>　　在主题配置文件_config.yml中修改成如下：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">font:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">host:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class=\"line\">  <span class=\"attr\">global:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">&#x27;JTHandwrite&#x27;</span> <span class=\"comment\"># 改为上面你的font-family</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"OK-完事了。\"><a href=\"#OK-完事了。\" class=\"headerlink\" title=\"OK,完事了。\"></a>OK,完事了。</h2>"}],"PostAsset":[{"_id":"source/_posts/51-1/效果.jpg","post":"cl8h3b0fe0001c8pv6ky0b3ff","slug":"效果.jpg","modified":1,"renderable":1},{"_id":"source/_posts/51-1/电路图.jpg","post":"cl8h3b0fe0001c8pv6ky0b3ff","slug":"电路图.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Socket-chatroom/发送消息.jpg","post":"cl8h3b0fy000hc8pvcn5u42yb","slug":"发送消息.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Socket-chatroom/客户上线.jpg","post":"cl8h3b0fy000hc8pvcn5u42yb","slug":"客户上线.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Socket-chatroom/客户端下线.jpg","post":"cl8h3b0fy000hc8pvcn5u42yb","slug":"客户端下线.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Socket-chatroom/客户端初始.jpg","post":"cl8h3b0fy000hc8pvcn5u42yb","slug":"客户端初始.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Socket-chatroom/服务端初始.jpg","post":"cl8h3b0fy000hc8pvcn5u42yb","slug":"服务端初始.jpg","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/30g.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"30g.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/ami.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"ami.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/主页.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"主页.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/启动.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"启动.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/安全组.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"安全组.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/实例.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"实例.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/审核.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"审核.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/密钥.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"密钥.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/服务.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"服务.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/查看.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"查看.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/标签.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"标签.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/状态.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"状态.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-1register/详细.png","post":"cl8h3b0g4000sc8pva7hdf8lf","slug":"详细.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/1a.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"1a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/1b.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"1b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/1c.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"1c.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/1d.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"1d.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/1e.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"1e.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/1f.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"1f.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/2a.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"2a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/2b.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"2b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/2c.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"2c.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/2d.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"2d.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/2e.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"2e.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/2f.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"2f.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/2g.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"2g.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/3a.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"3a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/3b.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"3b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/4a.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"4a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/4b.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"4b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/5a.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"5a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/5b.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"5b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/5c.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"5c.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/6a.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"6a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/6b.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"6b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-4deepl/6c.png","post":"cl8h3b0g8000yc8pvgy7n5q9x","slug":"6c.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-2staticweb/git库.png","post":"cl8h3b0g90010c8pv8hzkhe1e","slug":"git库.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-2staticweb/入门.png","post":"cl8h3b0g90010c8pv8hzkhe1e","slug":"入门.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-2staticweb/分支.png","post":"cl8h3b0g90010c8pv8hzkhe1e","slug":"分支.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-2staticweb/确认.png","post":"cl8h3b0g90010c8pv8hzkhe1e","slug":"确认.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-2staticweb/选择.png","post":"cl8h3b0g90010c8pv8hzkhe1e","slug":"选择.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-2staticweb/部署.png","post":"cl8h3b0g90010c8pv8hzkhe1e","slug":"部署.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/1a.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"1a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/1b.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"1b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/1c.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"1c.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/1d.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"1d.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/1e.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"1e.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/3a.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"3a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/3b.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"3b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/3c.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"3c.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/3d.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"3d.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/3e.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"3e.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/4a.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"4a.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/4b.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"4b.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/4c.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"4c.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/4d.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"4d.png","modified":1,"renderable":1},{"_id":"source/_posts/aws-3manager/4e.png","post":"cl8h3b0gb0013c8pv51y0dj5j","slug":"4e.png","modified":1,"renderable":1},{"_id":"source/_posts/chenwujian/ceng.jpg","post":"cl8h3b0gl001hc8pv4llt11h0","slug":"ceng.jpg","modified":1,"renderable":1},{"_id":"source/_posts/chenwujian/gaoji.jpg","post":"cl8h3b0gl001hc8pv4llt11h0","slug":"gaoji.jpg","modified":1,"renderable":1},{"_id":"source/_posts/chenwujian/hanshu.jpg","post":"cl8h3b0gl001hc8pv4llt11h0","slug":"hanshu.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-10different-rnn/14e1df0a7a8cdd1584b2e92e87e23aa7.png","post":"cl8h3b0gm001kc8pv0y8bggra","slug":"14e1df0a7a8cdd1584b2e92e87e23aa7.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-10different-rnn/db580f1dfd6095d672fc62cce74ce5e2.png","post":"cl8h3b0gm001kc8pv0y8bggra","slug":"db580f1dfd6095d672fc62cce74ce5e2.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-11Language-model-and-Sample/8b901fc8fcab9e16b1fe26b92f4ec546.png","post":"cl8h3b0gp001oc8pvfc1v9bx8","slug":"8b901fc8fcab9e16b1fe26b92f4ec546.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-11Language-model-and-Sample/986226c39270a1e14643e8658fe6c374.png","post":"cl8h3b0gp001oc8pvfc1v9bx8","slug":"986226c39270a1e14643e8658fe6c374.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-13speech-recognition/8da3e9cf049139a8e4a78503bd72e7fd.png","post":"cl8h3b0gq001pc8pvhec476w9","slug":"8da3e9cf049139a8e4a78503bd72e7fd.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-13speech-recognition/8f409fc3980b0be00dca49bf4fac2659.png","post":"cl8h3b0gq001pc8pvhec476w9","slug":"8f409fc3980b0be00dca49bf4fac2659.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-12GRU-and-LSTM/523650730db3f0d5c05a7192da02f878.png","post":"cl8h3b0gt001wc8pv312dfotm","slug":"523650730db3f0d5c05a7192da02f878.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-3logistic-regression/1e664a86fa2014d5212bcb88f1c419cf.png","post":"cl8h3b0gu0020c8pv3cd3di9c","slug":"1e664a86fa2014d5212bcb88f1c419cf.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-3logistic-regression/4c9a27b071ce9162dbbcdad3393061d2.png","post":"cl8h3b0gu0020c8pv3cd3di9c","slug":"4c9a27b071ce9162dbbcdad3393061d2.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-3logistic-regression/55345ba411053da11ff843bbb3406369.png","post":"cl8h3b0gu0020c8pv3cd3di9c","slug":"55345ba411053da11ff843bbb3406369.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-3logistic-regression/7e304debcca5945a3443d56bcbdd2964.png","post":"cl8h3b0gu0020c8pv3cd3di9c","slug":"7e304debcca5945a3443d56bcbdd2964.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-3logistic-regression/dfb5731c30b81eced917450d31e860a3.png","post":"cl8h3b0gu0020c8pv3cd3di9c","slug":"dfb5731c30b81eced917450d31e860a3.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-2Neural-Networks/1a3d288dc243ca9c5a70a69799180c4a.png","post":"cl8h3b0gv0022c8pv9b948c3p","slug":"1a3d288dc243ca9c5a70a69799180c4a.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-2Neural-Networks/1bebe0ac41715ef8132f2d802968495c.png","post":"cl8h3b0gv0022c8pv9b948c3p","slug":"1bebe0ac41715ef8132f2d802968495c.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-2Neural-Networks/2b14edfcb21235115fca05879f8d9de2.png","post":"cl8h3b0gv0022c8pv9b948c3p","slug":"2b14edfcb21235115fca05879f8d9de2.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-2Neural-Networks/3fe6da26014467243e3d499569be3675.png","post":"cl8h3b0gv0022c8pv9b948c3p","slug":"3fe6da26014467243e3d499569be3675.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-2Neural-Networks/4656617e30e7ad44490fe605b2e49e56.png","post":"cl8h3b0gv0022c8pv9b948c3p","slug":"4656617e30e7ad44490fe605b2e49e56.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-2Neural-Networks/7a0e0d40f4ba80a0466f0bd7aa9f8537.png","post":"cl8h3b0gv0022c8pv9b948c3p","slug":"7a0e0d40f4ba80a0466f0bd7aa9f8537.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-2Neural-Networks/QQ截图20210219142516.jpg","post":"cl8h3b0gv0022c8pv9b948c3p","slug":"QQ截图20210219142516.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-4Gradient-Descent/03f5f96177ab15d5ead8298ba50300ac.jpg","post":"cl8h3b0gw0025c8pv3gns1ak8","slug":"03f5f96177ab15d5ead8298ba50300ac.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-4Gradient-Descent/4fb3b91114ecb2cd81ec9f3662434d81.jpg","post":"cl8h3b0gw0025c8pv3gns1ak8","slug":"4fb3b91114ecb2cd81ec9f3662434d81.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-4Gradient-Descent/6403f00e5844c3100f4aa9ff043e2319.jpg","post":"cl8h3b0gw0025c8pv3gns1ak8","slug":"6403f00e5844c3100f4aa9ff043e2319.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-4Gradient-Descent/8b725e51dcffc53a5def49438b70d925.png","post":"cl8h3b0gw0025c8pv3gns1ak8","slug":"8b725e51dcffc53a5def49438b70d925.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-4Gradient-Descent/c5eda5608fd2f4d846559ed8e89ed33c.jpg","post":"cl8h3b0gw0025c8pv3gns1ak8","slug":"c5eda5608fd2f4d846559ed8e89ed33c.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-4Gradient-Descent/cbd5ff8c461fcb5a699c4ec4789687b3.jpg","post":"cl8h3b0gw0025c8pv3gns1ak8","slug":"cbd5ff8c461fcb5a699c4ec4789687b3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_3.png","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"L1_week3_3.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_5.png","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"L1_week3_5.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_6.png","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"L1_week3_6.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/L1_week3_7.png","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"L1_week3_7.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305135223.jpg","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"QQ截图20210305135223.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305135246.jpg","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"QQ截图20210305135246.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305142218.jpg","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"QQ截图20210305142218.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305142539.jpg","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"QQ截图20210305142539.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-6neural-network-representation/QQ截图20210305142550.jpg","post":"cl8h3b0gy0028c8pvcm3r2c8w","slug":"QQ截图20210305142550.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-7activation-functions/L1_week3_9.jpg","post":"cl8h3b0gz002cc8pvfrozda52","slug":"L1_week3_9.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-8Gradient-descent-for-neural/QQ截图20210307171037.jpg","post":"cl8h3b0h0002dc8pv6o2ob5jh","slug":"QQ截图20210307171037.jpg","modified":1,"renderable":1},{"_id":"source/_posts/dl-9Sequence-Models-introduce/71a0ed918704f6d35091d8b6d60793e4.png","post":"cl8h3b0h3002kc8pvg6pk4rtg","slug":"71a0ed918704f6d35091d8b6d60793e4.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-9Sequence-Models-introduce/8deca8a84f06466155d2d8d53d26e05d.png","post":"cl8h3b0h3002kc8pvg6pk4rtg","slug":"8deca8a84f06466155d2d8d53d26e05d.png","modified":1,"renderable":1},{"_id":"source/_posts/dl-9Sequence-Models-introduce/cb041c33b65e17600842ebf87174c4f2.png","post":"cl8h3b0h3002kc8pvg6pk4rtg","slug":"cb041c33b65e17600842ebf87174c4f2.png","modified":1,"renderable":1},{"_id":"source/_posts/go-1intruduct/coderunner.jpg","post":"cl8h3b0hg0038c8pv1qwig7n5","slug":"coderunner.jpg","modified":1,"renderable":1},{"_id":"source/_posts/go-1intruduct/go插件.jpg","post":"cl8h3b0hg0038c8pv1qwig7n5","slug":"go插件.jpg","modified":1,"renderable":1},{"_id":"source/_posts/harmony-start/create.jpg","post":"cl8h3b0hw0043c8pv3wgp7o6g","slug":"create.jpg","modified":1,"renderable":1},{"_id":"source/_posts/harmony-start/create2.jpg","post":"cl8h3b0hw0043c8pv3wgp7o6g","slug":"create2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/harmony-start/hello.jpg","post":"cl8h3b0hw0043c8pv3wgp7o6g","slug":"hello.jpg","modified":1,"renderable":1},{"_id":"source/_posts/harmony-start/hvd.jpg","post":"cl8h3b0hw0043c8pv3wgp7o6g","slug":"hvd.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring1/1.png","post":"cl8h3b0ic0051c8pv86j91wff","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/spring1/2.png","post":"cl8h3b0ic0051c8pv86j91wff","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/spring1/3.jpg","post":"cl8h3b0ic0051c8pv86j91wff","slug":"3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring2-helloworld/1.jpg","post":"cl8h3b0ih005fc8pvgq8oala5","slug":"1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring2-helloworld/2.jpg","post":"cl8h3b0ih005fc8pvgq8oala5","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring2-helloworld/3.jpg","post":"cl8h3b0ih005fc8pvgq8oala5","slug":"3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring2-helloworld/4.jpg","post":"cl8h3b0ih005fc8pvgq8oala5","slug":"4.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring2-helloworld/5.jpg","post":"cl8h3b0ih005fc8pvgq8oala5","slug":"5.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring2-helloworld/6.jpg","post":"cl8h3b0ih005fc8pvgq8oala5","slug":"6.jpg","modified":1,"renderable":1},{"_id":"source/_posts/spring2-helloworld/7.jpg","post":"cl8h3b0ih005fc8pvgq8oala5","slug":"7.jpg","modified":1,"renderable":1},{"_id":"source/_posts/test/SomethingJustLikeThis.jpg","post":"cl8h3b0il005kc8pv8dvu3ika","slug":"SomethingJustLikeThis.jpg","modified":1,"renderable":1},{"_id":"source/_posts/test/SomethingJustLikeThis.txt","post":"cl8h3b0il005kc8pv8dvu3ika","slug":"SomethingJustLikeThis.txt","modified":1,"renderable":1},{"_id":"source/_posts/ziti/moban.jpg","post":"cl8h3b0in005mc8pv9rdjdsth","slug":"moban.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ziti/paizhao.jpg","post":"cl8h3b0in005mc8pv9rdjdsth","slug":"paizhao.jpg","modified":1,"renderable":1},{"_id":"source/_posts/ziti/shengcheng.jpg","post":"cl8h3b0in005mc8pv9rdjdsth","slug":"shengcheng.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cl8h3b0fe0001c8pv6ky0b3ff","category_id":"cl8h3b0fm0004c8pv4b5e417c","_id":"cl8h3b0gg0017c8pveyuwbkx6"},{"post_id":"cl8h3b0fe0001c8pv6ky0b3ff","category_id":"cl8h3b0g7000wc8pvhid2bn8b","_id":"cl8h3b0gj001bc8pv3sn0069t"},{"post_id":"cl8h3b0fu000bc8pv4s7lco4c","category_id":"cl8h3b0fm0004c8pv4b5e417c","_id":"cl8h3b0gk001fc8pv3twf3ijd"},{"post_id":"cl8h3b0fu000bc8pv4s7lco4c","category_id":"cl8h3b0g7000wc8pvhid2bn8b","_id":"cl8h3b0gm001jc8pvbc993myp"},{"post_id":"cl8h3b0fk0003c8pvecdn3bhx","category_id":"cl8h3b0fu000cc8pvcac4e1kz","_id":"cl8h3b0gr001qc8pv01bo9kae"},{"post_id":"cl8h3b0fk0003c8pvecdn3bhx","category_id":"cl8h3b0gk001ec8pv51u0007x","_id":"cl8h3b0gt001uc8pvf81c89qn"},{"post_id":"cl8h3b0fq0007c8pvbl44gxyg","category_id":"cl8h3b0fz000ic8pvada3d3dt","_id":"cl8h3b0gy0027c8pvd50h9me5"},{"post_id":"cl8h3b0fq0007c8pvbl44gxyg","category_id":"cl8h3b0gu001yc8pv5u554pap","_id":"cl8h3b0gz002bc8pv8r5mcmk8"},{"post_id":"cl8h3b0g2000oc8pv0mnq27um","category_id":"cl8h3b0fu000cc8pvcac4e1kz","_id":"cl8h3b0h1002ec8pv9q5a11bc"},{"post_id":"cl8h3b0g2000oc8pv0mnq27um","category_id":"cl8h3b0gw0023c8pv4ld27gzg","_id":"cl8h3b0h3002ic8pvfjqf3kwc"},{"post_id":"cl8h3b0fs0009c8pvf1p29d2e","category_id":"cl8h3b0fz000ic8pvada3d3dt","_id":"cl8h3b0h7002tc8pvhu5f8j23"},{"post_id":"cl8h3b0fs0009c8pvf1p29d2e","category_id":"cl8h3b0gu001yc8pv5u554pap","_id":"cl8h3b0h9002wc8pv15qzfg0b"},{"post_id":"cl8h3b0ge0015c8pv338q3pfq","category_id":"cl8h3b0hg0036c8pv1gp4ehw8","_id":"cl8h3b0hj003ic8pvflv82fyb"},{"post_id":"cl8h3b0fw000fc8pv274t1xhn","category_id":"cl8h3b0fz000ic8pvada3d3dt","_id":"cl8h3b0hu003zc8pvgmeiel7v"},{"post_id":"cl8h3b0fw000fc8pv274t1xhn","category_id":"cl8h3b0gu001yc8pv5u554pap","_id":"cl8h3b0hw0042c8pv10w9e9nj"},{"post_id":"cl8h3b0hu0040c8pv909h7k7a","category_id":"cl8h3b0hg0036c8pv1gp4ehw8","_id":"cl8h3b0i00049c8pvh6l92c2k"},{"post_id":"cl8h3b0gn001lc8pv3hhhdcy8","category_id":"cl8h3b0hp003uc8pvgkv6aqcz","_id":"cl8h3b0i3004kc8pvhl8q06d7"},{"post_id":"cl8h3b0fy000hc8pvcn5u42yb","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0i9004vc8pv29gadg2j"},{"post_id":"cl8h3b0fy000hc8pvcn5u42yb","category_id":"cl8h3b0i2004jc8pv2y0n3sv2","_id":"cl8h3b0ia004xc8pv2zj79l4l"},{"post_id":"cl8h3b0g1000lc8pv6mbe81b0","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0if005ac8pvc2pdej1s"},{"post_id":"cl8h3b0g1000lc8pv6mbe81b0","category_id":"cl8h3b0ib004zc8pv88oqdy0k","_id":"cl8h3b0ih005dc8pvagukdi95"},{"post_id":"cl8h3b0in005mc8pv9rdjdsth","category_id":"cl8h3b0hp003uc8pvgkv6aqcz","_id":"cl8h3b0ip005sc8pv8b0y61rt"},{"post_id":"cl8h3b0g4000sc8pva7hdf8lf","category_id":"cl8h3b0gy0029c8pv1yi4d6z9","_id":"cl8h3b0iv0066c8pv6dhlhmkn"},{"post_id":"cl8h3b0g4000sc8pva7hdf8lf","category_id":"cl8h3b0is005zc8pvegxvekyz","_id":"cl8h3b0iw0069c8pvhxj439j5"},{"post_id":"cl8h3b0h2002hc8pv2jqd5s0k","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0ix006ec8pv8b8ia2yk"},{"post_id":"cl8h3b0h2002hc8pv2jqd5s0k","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0iy006hc8pv36022xpr"},{"post_id":"cl8h3b0h5002oc8pvgw6k88x8","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0iy006mc8pvb86v1lwi"},{"post_id":"cl8h3b0h5002oc8pvgw6k88x8","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0iz006pc8pvcwaz4zi7"},{"post_id":"cl8h3b0g6000uc8pvbk30eq82","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0iz006rc8pv0mkb09cb"},{"post_id":"cl8h3b0g6000uc8pvbk30eq82","category_id":"cl8h3b0ib004zc8pv88oqdy0k","_id":"cl8h3b0iz006tc8pv94ejczg7"},{"post_id":"cl8h3b0h6002qc8pv2lus88l4","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j0006wc8pv1y4betrb"},{"post_id":"cl8h3b0h6002qc8pv2lus88l4","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j0006zc8pvgc3u2p6k"},{"post_id":"cl8h3b0h8002vc8pv3c7z85yx","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j00071c8pvfawe51qx"},{"post_id":"cl8h3b0h8002vc8pv3c7z85yx","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j10073c8pvfdwd53l7"},{"post_id":"cl8h3b0g8000yc8pvgy7n5q9x","category_id":"cl8h3b0gy0029c8pv1yi4d6z9","_id":"cl8h3b0j10076c8pv8hfl6t8h"},{"post_id":"cl8h3b0g8000yc8pvgy7n5q9x","category_id":"cl8h3b0is005zc8pvegxvekyz","_id":"cl8h3b0j20079c8pv3ynb6r5a"},{"post_id":"cl8h3b0h9002xc8pvf4waapmi","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j2007bc8pv6rfuet0j"},{"post_id":"cl8h3b0h9002xc8pvf4waapmi","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j2007dc8pv9d5yf7ov"},{"post_id":"cl8h3b0hb0030c8pvg30j87fw","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j3007gc8pva6rydff8"},{"post_id":"cl8h3b0hb0030c8pvg30j87fw","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j4007jc8pvabfq8w7x"},{"post_id":"cl8h3b0g90010c8pv8hzkhe1e","category_id":"cl8h3b0gy0029c8pv1yi4d6z9","_id":"cl8h3b0j4007lc8pv4s8fbx0w"},{"post_id":"cl8h3b0g90010c8pv8hzkhe1e","category_id":"cl8h3b0is005zc8pvegxvekyz","_id":"cl8h3b0j5007nc8pvasd10ppl"},{"post_id":"cl8h3b0hd0031c8pvgq0lenkv","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j5007qc8pv9gvb71sr"},{"post_id":"cl8h3b0hd0031c8pvgq0lenkv","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j6007tc8pv3anidnky"},{"post_id":"cl8h3b0he0034c8pve4o144u7","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j6007vc8pv2ou8062f"},{"post_id":"cl8h3b0he0034c8pve4o144u7","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j7007xc8pv4wzrgeid"},{"post_id":"cl8h3b0gb0013c8pv51y0dj5j","category_id":"cl8h3b0gy0029c8pv1yi4d6z9","_id":"cl8h3b0j70080c8pv8ev684jn"},{"post_id":"cl8h3b0gb0013c8pv51y0dj5j","category_id":"cl8h3b0is005zc8pvegxvekyz","_id":"cl8h3b0j80083c8pvafpo6ly9"},{"post_id":"cl8h3b0hf0035c8pvhauw80x2","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j80085c8pv56twhfqs"},{"post_id":"cl8h3b0hf0035c8pvhauw80x2","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j80087c8pv9s6gc04e"},{"post_id":"cl8h3b0hg0038c8pv1qwig7n5","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0j8008ac8pv3vyg0myo"},{"post_id":"cl8h3b0hg0038c8pv1qwig7n5","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0j9008dc8pvfvxc3q1r"},{"post_id":"cl8h3b0hh003ac8pv8k6c1jge","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0ja008fc8pvgnlw391a"},{"post_id":"cl8h3b0hh003ac8pv8k6c1jge","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0ja008hc8pv9w9643cg"},{"post_id":"cl8h3b0hi003ec8pv5mbz4jtr","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0ja008jc8pvevz4h84h"},{"post_id":"cl8h3b0hi003ec8pv5mbz4jtr","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0jb008nc8pvhadl8y00"},{"post_id":"cl8h3b0gg0019c8pv1io811z4","category_id":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0jb008qc8pvdaeo8zaj"},{"post_id":"cl8h3b0gg0019c8pv1io811z4","category_id":"cl8h3b0j9008ec8pv5aeyf73e","_id":"cl8h3b0jc008sc8pvcfw08pu7"},{"post_id":"cl8h3b0hi003gc8pv2qgp4767","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0jc008uc8pv1nc344k6"},{"post_id":"cl8h3b0hi003gc8pv2qgp4767","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0jd008wc8pv85m0hv6f"},{"post_id":"cl8h3b0hk003lc8pvgm348nls","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0jd008yc8pv82pgh3t8"},{"post_id":"cl8h3b0hk003lc8pvgm348nls","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0jf0092c8pv61t68qwt"},{"post_id":"cl8h3b0gj001cc8pv7paqdea3","category_id":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0jf0095c8pvcv7uasbh"},{"post_id":"cl8h3b0gj001cc8pv7paqdea3","category_id":"cl8h3b0jc008tc8pv8tw8be8y","_id":"cl8h3b0jg0098c8pv0mr2am0k"},{"post_id":"cl8h3b0hl003mc8pvhetpa6hp","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0jh009ac8pv2s6na5kr"},{"post_id":"cl8h3b0hl003mc8pvhetpa6hp","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0ji009dc8pvbmw9fj3u"},{"post_id":"cl8h3b0hm003pc8pv5w2m0k9n","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0ji009fc8pvhgnu3kug"},{"post_id":"cl8h3b0hm003pc8pv5w2m0k9n","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0jj009ic8pvam5hagoe"},{"post_id":"cl8h3b0hn003rc8pv9fho8l90","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0jj009kc8pvf9q4fy52"},{"post_id":"cl8h3b0hn003rc8pv9fho8l90","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0jk009nc8pv56jzgjd4"},{"post_id":"cl8h3b0hq003vc8pvcuxa3m3j","category_id":"cl8h3b0go001mc8pv8qhz8qdr","_id":"cl8h3b0jk009oc8pvcfppb7p4"},{"post_id":"cl8h3b0hq003vc8pvcuxa3m3j","category_id":"cl8h3b0iu0065c8pva65xht54","_id":"cl8h3b0jl009sc8pvaocugkdf"},{"post_id":"cl8h3b0hs003xc8pv4l584hgp","category_id":"cl8h3b0jj009jc8pv6pu86i9u","_id":"cl8h3b0jl009uc8pv5w6ba27p"},{"post_id":"cl8h3b0gl001hc8pv4llt11h0","category_id":"cl8h3b0hp003uc8pvgkv6aqcz","_id":"cl8h3b0jm009yc8pvgqnu7xll"},{"post_id":"cl8h3b0gl001hc8pv4llt11h0","category_id":"cl8h3b0jk009qc8pver5tglkv","_id":"cl8h3b0jm00a1c8pv27c36lav"},{"post_id":"cl8h3b0hw0043c8pv3wgp7o6g","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0jm00a3c8pvh4mk36so"},{"post_id":"cl8h3b0hw0043c8pv3wgp7o6g","category_id":"cl8h3b0jl009vc8pvhymj9qyf","_id":"cl8h3b0jn00a6c8pvapxs7n0o"},{"post_id":"cl8h3b0gm001kc8pv0y8bggra","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0jn00a9c8pv74emf7om"},{"post_id":"cl8h3b0gm001kc8pv0y8bggra","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0jo00abc8pv1lc33rfe"},{"post_id":"cl8h3b0hy0045c8pvckp5bxlk","category_id":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0jo00aec8pvdcr0cfuw"},{"post_id":"cl8h3b0hy0045c8pvckp5bxlk","category_id":"cl8h3b0jn00a5c8pvfqdl8ekj","_id":"cl8h3b0jp00ahc8pv289jbiv0"},{"post_id":"cl8h3b0hz0048c8pvhs84hfqg","category_id":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0jp00ajc8pv8bwq82p5"},{"post_id":"cl8h3b0hz0048c8pvhs84hfqg","category_id":"cl8h3b0jn00aac8pva76e9hv6","_id":"cl8h3b0jq00amc8pv6wdnfhj7"},{"post_id":"cl8h3b0i1004fc8pv481ehx8i","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0jr00asc8pv61kp8fpu"},{"post_id":"cl8h3b0i1004fc8pv481ehx8i","category_id":"cl8h3b0jp00akc8pv4l7kftk7","_id":"cl8h3b0jr00avc8pv5wly0pn2"},{"post_id":"cl8h3b0gp001oc8pvfc1v9bx8","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0js00axc8pvhufq3dcg"},{"post_id":"cl8h3b0gp001oc8pvfc1v9bx8","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0js00b0c8pv9yam1hqq"},{"post_id":"cl8h3b0i2004hc8pvb53fgaao","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0js00b2c8pv5h341gsp"},{"post_id":"cl8h3b0i2004hc8pvb53fgaao","category_id":"cl8h3b0jp00akc8pv4l7kftk7","_id":"cl8h3b0jt00b5c8pveeed8ozw"},{"post_id":"cl8h3b0i3004lc8pv56s77d28","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0jt00b7c8pvfe0c6n3k"},{"post_id":"cl8h3b0i3004lc8pv56s77d28","category_id":"cl8h3b0jp00akc8pv4l7kftk7","_id":"cl8h3b0ju00b9c8pvd7wldnmr"},{"post_id":"cl8h3b0i5004mc8pvb8z7bq60","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0jv00bcc8pv3nv4aprw"},{"post_id":"cl8h3b0i5004mc8pvb8z7bq60","category_id":"cl8h3b0jp00akc8pv4l7kftk7","_id":"cl8h3b0jw00bec8pvazj40ewv"},{"post_id":"cl8h3b0i7004pc8pv6hjf59h6","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0jw00bhc8pvbe2zfz7b"},{"post_id":"cl8h3b0i7004pc8pv6hjf59h6","category_id":"cl8h3b0jp00akc8pv4l7kftk7","_id":"cl8h3b0jx00bjc8pvdh5o1uat"},{"post_id":"cl8h3b0gq001pc8pvhec476w9","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0jy00bmc8pv2rt319g1"},{"post_id":"cl8h3b0gq001pc8pvhec476w9","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0jz00boc8pvgo0m3wba"},{"post_id":"cl8h3b0i8004rc8pven5o06es","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0k000bqc8pvgp1zegnm"},{"post_id":"cl8h3b0i8004rc8pven5o06es","category_id":"cl8h3b0jp00akc8pv4l7kftk7","_id":"cl8h3b0k000bsc8pv8g9b89u4"},{"post_id":"cl8h3b0ia004wc8pvfrew60kb","category_id":"cl8h3b0gr001rc8pv5eer0isz","_id":"cl8h3b0k100bvc8pv4q3o9g64"},{"post_id":"cl8h3b0ia004wc8pvfrew60kb","category_id":"cl8h3b0jp00akc8pv4l7kftk7","_id":"cl8h3b0k100byc8pvfm6p7x47"},{"post_id":"cl8h3b0gs001tc8pv5p04hp0l","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0k100bzc8pvfup1cenz"},{"post_id":"cl8h3b0gs001tc8pv5p04hp0l","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0k200c1c8pv7qroft0q"},{"post_id":"cl8h3b0ib004yc8pv8k628vpa","category_id":"cl8h3b0hh003cc8pvat13ej8a","_id":"cl8h3b0k300c4c8pvgb648kol"},{"post_id":"cl8h3b0ib004yc8pv8k628vpa","category_id":"cl8h3b0k000buc8pv5d3x7orq","_id":"cl8h3b0k300c7c8pva03j9syo"},{"post_id":"cl8h3b0gt001wc8pv312dfotm","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0k800cnc8pv94r9dnky"},{"post_id":"cl8h3b0gt001wc8pv312dfotm","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0k800cpc8pv6k188qec"},{"post_id":"cl8h3b0gu0020c8pv3cd3di9c","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0ka00cxc8pv6nji187q"},{"post_id":"cl8h3b0gu0020c8pv3cd3di9c","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0kb00d0c8pv8eelgtpe"},{"post_id":"cl8h3b0ik005ic8pvgydka2m0","category_id":"cl8h3b0k900cuc8pv89t170cp","_id":"cl8h3b0kb00d2c8pvhamncw37"},{"post_id":"cl8h3b0il005kc8pv8dvu3ika","category_id":"cl8h3b0ka00cyc8pveg4wazjo","_id":"cl8h3b0kd00d8c8pv85f0cl95"},{"post_id":"cl8h3b0gv0022c8pv9b948c3p","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0ke00dcc8pv4nkx2kv3"},{"post_id":"cl8h3b0gv0022c8pv9b948c3p","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0ke00dec8pv7n686ew8"},{"post_id":"cl8h3b0gw0025c8pv3gns1ak8","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0kf00dhc8pv8kyjdi79"},{"post_id":"cl8h3b0gw0025c8pv3gns1ak8","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0kg00dic8pv1joe9z26"},{"post_id":"cl8h3b0gx0026c8pve9ud18f1","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0kg00dmc8pv4tas7b5x"},{"post_id":"cl8h3b0gx0026c8pve9ud18f1","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0kh00dnc8pvfcmxet5f"},{"post_id":"cl8h3b0gy0028c8pvcm3r2c8w","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0ki00drc8pv0ex93qxw"},{"post_id":"cl8h3b0gy0028c8pvcm3r2c8w","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0ki00dsc8pvfyaf8v69"},{"post_id":"cl8h3b0gz002cc8pvfrozda52","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0ki00dwc8pv18a87v66"},{"post_id":"cl8h3b0gz002cc8pvfrozda52","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0kj00dxc8pv20r6cgw3"},{"post_id":"cl8h3b0h0002dc8pv6o2ob5jh","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0kk00e0c8pv5dr4hdtg"},{"post_id":"cl8h3b0h0002dc8pv6o2ob5jh","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0kk00e2c8pvdv5654fi"},{"post_id":"cl8h3b0h3002kc8pvg6pk4rtg","category_id":"cl8h3b0hw0041c8pv7ue8gjc4","_id":"cl8h3b0kk00e4c8pv8b7h02uk"},{"post_id":"cl8h3b0h3002kc8pvg6pk4rtg","category_id":"cl8h3b0jm009zc8pvgmta4343","_id":"cl8h3b0kl00e7c8pv0aog6n7z"},{"post_id":"cl8h3b0i0004cc8pva4qog0v4","category_id":"cl8h3b0jo00afc8pv97mqe9zt","_id":"cl8h3b0km00e9c8pvf2x4faw3"},{"post_id":"cl8h3b0i0004cc8pva4qog0v4","category_id":"cl8h3b0kj00dzc8pvel3n7c0v","_id":"cl8h3b0kn00ebc8pvctskdqzh"},{"post_id":"cl8h3b0ic0051c8pv86j91wff","category_id":"cl8h3b0k200c0c8pv6wm32td7","_id":"cl8h3b0kn00ecc8pvdt9g71b2"},{"post_id":"cl8h3b0ic0051c8pv86j91wff","category_id":"cl8h3b0kl00e5c8pv3hc9dnwe","_id":"cl8h3b0kn00efc8pv8uaj817r"},{"post_id":"cl8h3b0ic0053c8pv9tltglfb","category_id":"cl8h3b0k300c5c8pvantd8r8j","_id":"cl8h3b0ko00eic8pvcxiiecrh"},{"post_id":"cl8h3b0ic0053c8pv9tltglfb","category_id":"cl8h3b0km00eac8pvbyxr2333","_id":"cl8h3b0ko00ejc8pv5cvb3gsc"},{"post_id":"cl8h3b0id0057c8pv19ot58b0","category_id":"cl8h3b0k200c0c8pv6wm32td7","_id":"cl8h3b0ko00ekc8pv4vyta9kj"},{"post_id":"cl8h3b0id0057c8pv19ot58b0","category_id":"cl8h3b0kl00e5c8pv3hc9dnwe","_id":"cl8h3b0ko00emc8pvd4dyb9ai"},{"post_id":"cl8h3b0ie0058c8pvg1yx7cgg","category_id":"cl8h3b0k400cdc8pv41u007b9","_id":"cl8h3b0kp00eoc8pv4qx16jae"},{"post_id":"cl8h3b0ie0058c8pvg1yx7cgg","category_id":"cl8h3b0ko00ehc8pv1kziavx8","_id":"cl8h3b0kp00epc8pv0yv78o2k"},{"post_id":"cl8h3b0if005bc8pva7gx1fpq","category_id":"cl8h3b0k200c0c8pv6wm32td7","_id":"cl8h3b0kp00eqc8pvd6w76v5q"},{"post_id":"cl8h3b0if005bc8pva7gx1fpq","category_id":"cl8h3b0kl00e5c8pv3hc9dnwe","_id":"cl8h3b0kp00erc8pvdas4hp2l"},{"post_id":"cl8h3b0ih005fc8pvgq8oala5","category_id":"cl8h3b0k200c0c8pv6wm32td7","_id":"cl8h3b0kp00esc8pvbpojahob"},{"post_id":"cl8h3b0ih005fc8pvgq8oala5","category_id":"cl8h3b0kl00e5c8pv3hc9dnwe","_id":"cl8h3b0kp00etc8pvhotg1llk"}],"PostTag":[{"post_id":"cl8h3b0fe0001c8pv6ky0b3ff","tag_id":"cl8h3b0fo0005c8pvaeyo2yzg","_id":"cl8h3b0g1000mc8pv02vi4mur"},{"post_id":"cl8h3b0fe0001c8pv6ky0b3ff","tag_id":"cl8h3b0fv000dc8pvg60sbyu1","_id":"cl8h3b0g2000pc8pv8fzi7uw5"},{"post_id":"cl8h3b0fk0003c8pvecdn3bhx","tag_id":"cl8h3b0g0000jc8pv1ezpchpd","_id":"cl8h3b0g6000tc8pv67kzb25a"},{"post_id":"cl8h3b0g2000oc8pv0mnq27um","tag_id":"cl8h3b0g0000jc8pv1ezpchpd","_id":"cl8h3b0g7000vc8pv7ekx5zob"},{"post_id":"cl8h3b0fq0007c8pvbl44gxyg","tag_id":"cl8h3b0g3000rc8pv4w4udtwc","_id":"cl8h3b0g9000zc8pvdyb4ghz7"},{"post_id":"cl8h3b0fs0009c8pvf1p29d2e","tag_id":"cl8h3b0g3000rc8pv4w4udtwc","_id":"cl8h3b0gd0014c8pv2ss544l5"},{"post_id":"cl8h3b0fu000bc8pv4s7lco4c","tag_id":"cl8h3b0fo0005c8pvaeyo2yzg","_id":"cl8h3b0gi001ac8pvgobw4l6f"},{"post_id":"cl8h3b0fu000bc8pv4s7lco4c","tag_id":"cl8h3b0fv000dc8pvg60sbyu1","_id":"cl8h3b0gk001dc8pve9m3f6fv"},{"post_id":"cl8h3b0fw000fc8pv274t1xhn","tag_id":"cl8h3b0g3000rc8pv4w4udtwc","_id":"cl8h3b0gm001ic8pvfop43bpd"},{"post_id":"cl8h3b0fy000hc8pvcn5u42yb","tag_id":"cl8h3b0gl001gc8pv9p610mt8","_id":"cl8h3b0gt001vc8pvgtl41vbp"},{"post_id":"cl8h3b0fy000hc8pvcn5u42yb","tag_id":"cl8h3b0gp001nc8pvbwdhdrfk","_id":"cl8h3b0gt001xc8pvh9rs4cni"},{"post_id":"cl8h3b0g1000lc8pv6mbe81b0","tag_id":"cl8h3b0gr001sc8pv8dsydcf2","_id":"cl8h3b0gv0021c8pvcc7h86ek"},{"post_id":"cl8h3b0g4000sc8pva7hdf8lf","tag_id":"cl8h3b0gu001zc8pvczkq8gvh","_id":"cl8h3b0h3002jc8pv36pe0est"},{"post_id":"cl8h3b0g4000sc8pva7hdf8lf","tag_id":"cl8h3b0gw0024c8pvhqjzfos4","_id":"cl8h3b0h4002lc8pvdtvhfzsa"},{"post_id":"cl8h3b0g4000sc8pva7hdf8lf","tag_id":"cl8h3b0gz002ac8pvdlll58yw","_id":"cl8h3b0h6002pc8pvald39iya"},{"post_id":"cl8h3b0g6000uc8pvbk30eq82","tag_id":"cl8h3b0gr001sc8pv8dsydcf2","_id":"cl8h3b0h7002rc8pvcg4x9v57"},{"post_id":"cl8h3b0g8000yc8pvgy7n5q9x","tag_id":"cl8h3b0gu001zc8pvczkq8gvh","_id":"cl8h3b0hh0039c8pvhtpg09bl"},{"post_id":"cl8h3b0g8000yc8pvgy7n5q9x","tag_id":"cl8h3b0gw0024c8pvhqjzfos4","_id":"cl8h3b0hh003bc8pvcpm79yf1"},{"post_id":"cl8h3b0g8000yc8pvgy7n5q9x","tag_id":"cl8h3b0gz002ac8pvdlll58yw","_id":"cl8h3b0hi003fc8pveiry4cl7"},{"post_id":"cl8h3b0g8000yc8pvgy7n5q9x","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0hj003hc8pv7wkpetwz"},{"post_id":"cl8h3b0g90010c8pv8hzkhe1e","tag_id":"cl8h3b0gu001zc8pvczkq8gvh","_id":"cl8h3b0hn003qc8pv4u96glwr"},{"post_id":"cl8h3b0g90010c8pv8hzkhe1e","tag_id":"cl8h3b0gw0024c8pvhqjzfos4","_id":"cl8h3b0ho003sc8pva6eth8na"},{"post_id":"cl8h3b0g90010c8pv8hzkhe1e","tag_id":"cl8h3b0gz002ac8pvdlll58yw","_id":"cl8h3b0hs003wc8pvdrrg1uel"},{"post_id":"cl8h3b0gb0013c8pv51y0dj5j","tag_id":"cl8h3b0gu001zc8pvczkq8gvh","_id":"cl8h3b0hz0047c8pv02asfpse"},{"post_id":"cl8h3b0gb0013c8pv51y0dj5j","tag_id":"cl8h3b0gw0024c8pvhqjzfos4","_id":"cl8h3b0i0004ac8pv5grb2dqe"},{"post_id":"cl8h3b0gb0013c8pv51y0dj5j","tag_id":"cl8h3b0gz002ac8pvdlll58yw","_id":"cl8h3b0i1004ec8pvflqe50jl"},{"post_id":"cl8h3b0ge0015c8pv338q3pfq","tag_id":"cl8h3b0hx0044c8pv43jx5gck","_id":"cl8h3b0i2004gc8pvba9f5sus"},{"post_id":"cl8h3b0gg0019c8pv1io811z4","tag_id":"cl8h3b0i0004bc8pv0s7vaf70","_id":"cl8h3b0i8004qc8pvdzv9gr4w"},{"post_id":"cl8h3b0gg0019c8pv1io811z4","tag_id":"cl8h3b0i2004ic8pvagppcyle","_id":"cl8h3b0i9004sc8pv20i06s9j"},{"post_id":"cl8h3b0gj001cc8pv7paqdea3","tag_id":"cl8h3b0i0004bc8pv0s7vaf70","_id":"cl8h3b0ic0052c8pvalbv08z9"},{"post_id":"cl8h3b0gj001cc8pv7paqdea3","tag_id":"cl8h3b0i9004tc8pvd2wmhaye","_id":"cl8h3b0id0054c8pvfc5chhh0"},{"post_id":"cl8h3b0gl001hc8pv4llt11h0","tag_id":"cl8h3b0ic0050c8pvb94mbaee","_id":"cl8h3b0ih005ec8pvhwy5c2cg"},{"post_id":"cl8h3b0gl001hc8pv4llt11h0","tag_id":"cl8h3b0id0056c8pvcaikboa8","_id":"cl8h3b0ij005hc8pvbkbp6vzf"},{"post_id":"cl8h3b0gm001kc8pv0y8bggra","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0io005oc8pv7is227xy"},{"post_id":"cl8h3b0gm001kc8pv0y8bggra","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0ip005qc8pv4pr259ks"},{"post_id":"cl8h3b0gn001lc8pv3hhhdcy8","tag_id":"cl8h3b0io005nc8pva7ed002n","_id":"cl8h3b0ip005tc8pvg6fgeyth"},{"post_id":"cl8h3b0gp001oc8pvfc1v9bx8","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0ir005yc8pvbpws3idr"},{"post_id":"cl8h3b0gp001oc8pvfc1v9bx8","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0is0060c8pvap3d4hrm"},{"post_id":"cl8h3b0gq001pc8pvhec476w9","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0iu0064c8pv4blhb0jd"},{"post_id":"cl8h3b0gq001pc8pvhec476w9","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0iv0067c8pv7vxc6n6f"},{"post_id":"cl8h3b0gs001tc8pv5p04hp0l","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0ix006cc8pvfxtbfbv4"},{"post_id":"cl8h3b0gs001tc8pv5p04hp0l","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0ix006fc8pv24uf4wj3"},{"post_id":"cl8h3b0gt001wc8pv312dfotm","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0iy006kc8pv3qh12ps5"},{"post_id":"cl8h3b0gt001wc8pv312dfotm","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0iz006nc8pvcv53f1ms"},{"post_id":"cl8h3b0gu0020c8pv3cd3di9c","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0iz006uc8pvfmlnav32"},{"post_id":"cl8h3b0gu0020c8pv3cd3di9c","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0j0006xc8pvewse3oq0"},{"post_id":"cl8h3b0gv0022c8pv9b948c3p","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0j10074c8pvcflf8il9"},{"post_id":"cl8h3b0gv0022c8pv9b948c3p","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0j10077c8pvcsw9686z"},{"post_id":"cl8h3b0gw0025c8pv3gns1ak8","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0j2007ec8pv911z8ued"},{"post_id":"cl8h3b0gw0025c8pv3gns1ak8","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0j3007hc8pv80i13gtv"},{"post_id":"cl8h3b0gx0026c8pve9ud18f1","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0j5007oc8pvdcgr2pcp"},{"post_id":"cl8h3b0gx0026c8pve9ud18f1","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0j5007rc8pv2snw8rop"},{"post_id":"cl8h3b0gy0028c8pvcm3r2c8w","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0j7007yc8pvhr8mfdkd"},{"post_id":"cl8h3b0gy0028c8pvcm3r2c8w","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0j70081c8pv4w26bux7"},{"post_id":"cl8h3b0gz002cc8pvfrozda52","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0j80088c8pvf43s7vd1"},{"post_id":"cl8h3b0gz002cc8pvfrozda52","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0j8008bc8pvbriu330m"},{"post_id":"cl8h3b0h0002dc8pv6o2ob5jh","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0ja008ic8pv8ng467rx"},{"post_id":"cl8h3b0h0002dc8pv6o2ob5jh","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0ja008kc8pv1e8yd7yu"},{"post_id":"cl8h3b0h2002hc8pv2jqd5s0k","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jb008oc8pv3jp1h0px"},{"post_id":"cl8h3b0h3002kc8pvg6pk4rtg","tag_id":"cl8h3b0he0033c8pvgkwkfzg0","_id":"cl8h3b0jd008xc8pv0v2heemq"},{"post_id":"cl8h3b0h3002kc8pvg6pk4rtg","tag_id":"cl8h3b0il005jc8pvhvd6aato","_id":"cl8h3b0jd008zc8pvdboj9izp"},{"post_id":"cl8h3b0h5002oc8pvgw6k88x8","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jf0093c8pveqae8d2c"},{"post_id":"cl8h3b0h6002qc8pv2lus88l4","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jg0097c8pvhyiz1uqv"},{"post_id":"cl8h3b0h8002vc8pv3c7z85yx","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0ji009cc8pv4yvv1nau"},{"post_id":"cl8h3b0h9002xc8pvf4waapmi","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jj009hc8pv0ekh46rj"},{"post_id":"cl8h3b0hb0030c8pvg30j87fw","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jk009mc8pv2vul0qjn"},{"post_id":"cl8h3b0hd0031c8pvgq0lenkv","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jk009rc8pvdke0h1cu"},{"post_id":"cl8h3b0he0034c8pve4o144u7","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jl009wc8pv8vcm749t"},{"post_id":"cl8h3b0hf0035c8pvhauw80x2","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jm00a0c8pv4i34dvat"},{"post_id":"cl8h3b0hg0038c8pv1qwig7n5","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jm00a4c8pv6sy2693r"},{"post_id":"cl8h3b0hh003ac8pv8k6c1jge","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jn00a8c8pvcgkg1phg"},{"post_id":"cl8h3b0hi003ec8pv5mbz4jtr","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jo00adc8pv0ccoebzd"},{"post_id":"cl8h3b0hi003gc8pv2qgp4767","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jp00aic8pvfacjebbp"},{"post_id":"cl8h3b0hk003lc8pvgm348nls","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jq00anc8pv76r591hq"},{"post_id":"cl8h3b0hl003mc8pvhetpa6hp","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jr00aqc8pv3k615rz7"},{"post_id":"cl8h3b0hm003pc8pv5w2m0k9n","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jr00auc8pv3zuv7xgv"},{"post_id":"cl8h3b0hn003rc8pv9fho8l90","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0js00azc8pv5soa7yca"},{"post_id":"cl8h3b0hq003vc8pvcuxa3m3j","tag_id":"cl8h3b0ja008gc8pv5k9967s6","_id":"cl8h3b0jt00b4c8pv0gwwbqll"},{"post_id":"cl8h3b0hs003xc8pv4l584hgp","tag_id":"cl8h3b0js00b3c8pv61bm5g4d","_id":"cl8h3b0ju00bac8pv2m6tgow2"},{"post_id":"cl8h3b0hu0040c8pv909h7k7a","tag_id":"cl8h3b0hx0044c8pv43jx5gck","_id":"cl8h3b0jw00bfc8pv7j798zqb"},{"post_id":"cl8h3b0hw0043c8pv3wgp7o6g","tag_id":"cl8h3b0jv00bdc8pvhv4d56pv","_id":"cl8h3b0jx00bkc8pv7loo8hau"},{"post_id":"cl8h3b0hy0045c8pvckp5bxlk","tag_id":"cl8h3b0i0004bc8pv0s7vaf70","_id":"cl8h3b0k000btc8pvh0omfzwy"},{"post_id":"cl8h3b0hy0045c8pvckp5bxlk","tag_id":"cl8h3b0jy00bnc8pvhrio4yiy","_id":"cl8h3b0k100bwc8pva1hvbcdr"},{"post_id":"cl8h3b0hz0048c8pvhs84hfqg","tag_id":"cl8h3b0i0004bc8pv0s7vaf70","_id":"cl8h3b0k200c3c8pv7f3ka32b"},{"post_id":"cl8h3b0hz0048c8pvhs84hfqg","tag_id":"cl8h3b0k100bxc8pv44vi2215","_id":"cl8h3b0k300c6c8pv80backe8"},{"post_id":"cl8h3b0i0004cc8pva4qog0v4","tag_id":"cl8h3b0k200c2c8pv77m8f2lv","_id":"cl8h3b0k300c9c8pvg9ss95z5"},{"post_id":"cl8h3b0i1004fc8pv481ehx8i","tag_id":"cl8h3b0k300c8c8pv6bey15qw","_id":"cl8h3b0k400ccc8pvcmqh2he3"},{"post_id":"cl8h3b0i2004hc8pvb53fgaao","tag_id":"cl8h3b0k300c8c8pv6bey15qw","_id":"cl8h3b0k500cfc8pv9a829emu"},{"post_id":"cl8h3b0i3004lc8pv56s77d28","tag_id":"cl8h3b0k300c8c8pv6bey15qw","_id":"cl8h3b0k600cic8pvg8md0nbi"},{"post_id":"cl8h3b0i5004mc8pvb8z7bq60","tag_id":"cl8h3b0k300c8c8pv6bey15qw","_id":"cl8h3b0k700clc8pvfs3kat60"},{"post_id":"cl8h3b0i7004pc8pv6hjf59h6","tag_id":"cl8h3b0k300c8c8pv6bey15qw","_id":"cl8h3b0k800cqc8pv3sta2r74"},{"post_id":"cl8h3b0i8004rc8pven5o06es","tag_id":"cl8h3b0k300c8c8pv6bey15qw","_id":"cl8h3b0k900ctc8pvg5yb1mwb"},{"post_id":"cl8h3b0ia004wc8pvfrew60kb","tag_id":"cl8h3b0k300c8c8pv6bey15qw","_id":"cl8h3b0ka00cwc8pv96slbpd8"},{"post_id":"cl8h3b0ib004yc8pv8k628vpa","tag_id":"cl8h3b0i0004bc8pv0s7vaf70","_id":"cl8h3b0kb00d1c8pv7pbz6mia"},{"post_id":"cl8h3b0ib004yc8pv8k628vpa","tag_id":"cl8h3b0ka00cvc8pvch3bfmt5","_id":"cl8h3b0kc00d4c8pva68i5ase"},{"post_id":"cl8h3b0ic0051c8pv86j91wff","tag_id":"cl8h3b0kb00czc8pvhr8pgt5o","_id":"cl8h3b0kc00d6c8pvdvon2vg1"},{"post_id":"cl8h3b0ic0053c8pv9tltglfb","tag_id":"cl8h3b0kc00d5c8pv78gr2x0h","_id":"cl8h3b0kd00dac8pv311p79nk"},{"post_id":"cl8h3b0id0057c8pv19ot58b0","tag_id":"cl8h3b0kb00czc8pvhr8pgt5o","_id":"cl8h3b0kf00dfc8pvelkv4j2x"},{"post_id":"cl8h3b0ie0058c8pvg1yx7cgg","tag_id":"cl8h3b0ke00ddc8pvda1y52kp","_id":"cl8h3b0kg00dkc8pv3clxgfww"},{"post_id":"cl8h3b0if005bc8pva7gx1fpq","tag_id":"cl8h3b0kb00czc8pvhr8pgt5o","_id":"cl8h3b0kh00dpc8pv6ptp77ak"},{"post_id":"cl8h3b0ih005fc8pvgq8oala5","tag_id":"cl8h3b0kb00czc8pvhr8pgt5o","_id":"cl8h3b0ki00duc8pv4rak2ucq"},{"post_id":"cl8h3b0ik005ic8pvgydka2m0","tag_id":"cl8h3b0ki00dtc8pvh3qrfcmp","_id":"cl8h3b0kk00e1c8pvfck2br8x"},{"post_id":"cl8h3b0il005kc8pv8dvu3ika","tag_id":"cl8h3b0kj00dyc8pv8cw8h1p9","_id":"cl8h3b0kl00e6c8pvd18xdogi"},{"post_id":"cl8h3b0in005mc8pv9rdjdsth","tag_id":"cl8h3b0kk00e3c8pv2yu63lm7","_id":"cl8h3b0kn00eec8pv87rbhzp0"},{"post_id":"cl8h3b0in005mc8pv9rdjdsth","tag_id":"cl8h3b0kl00e8c8pvesvx7pp6","_id":"cl8h3b0ko00egc8pvcgi5a9lk"}],"Tag":[{"name":"51单片机","_id":"cl8h3b0fo0005c8pvaeyo2yzg"},{"name":"开源硬件","_id":"cl8h3b0fv000dc8pvg60sbyu1"},{"name":"TTS","_id":"cl8h3b0g0000jc8pv1ezpchpd"},{"name":"联邦学习","_id":"cl8h3b0g3000rc8pv4w4udtwc"},{"name":"Java","_id":"cl8h3b0gl001gc8pv9p610mt8"},{"name":"Socket","_id":"cl8h3b0gp001nc8pvbwdhdrfk"},{"name":"Vue","_id":"cl8h3b0gr001sc8pv8dsydcf2"},{"name":"云服务","_id":"cl8h3b0gu001zc8pvczkq8gvh"},{"name":"AWS","_id":"cl8h3b0gw0024c8pvhqjzfos4"},{"name":"亚马逊","_id":"cl8h3b0gz002ac8pvdlll58yw"},{"name":"深度学习","_id":"cl8h3b0he0033c8pvgkwkfzg0"},{"name":"Hexo","_id":"cl8h3b0hx0044c8pv43jx5gck"},{"name":"笔记","_id":"cl8h3b0i0004bc8pv0s7vaf70"},{"name":"操作系统","_id":"cl8h3b0i2004ic8pvagppcyle"},{"name":"编译原理","_id":"cl8h3b0i9004tc8pvd2wmhaye"},{"name":"XDU","_id":"cl8h3b0ic0050c8pvb94mbaee"},{"name":"自动工具","_id":"cl8h3b0id0056c8pvcaikboa8"},{"name":"毕设准备","_id":"cl8h3b0il005jc8pvhvd6aato"},{"name":"格言","_id":"cl8h3b0io005nc8pva7ed002n"},{"name":"go语言","_id":"cl8h3b0ja008gc8pv5k9967s6"},{"name":"贯口","_id":"cl8h3b0js00b3c8pv61bm5g4d"},{"name":"harmony","_id":"cl8h3b0jv00bdc8pvhv4d56pv"},{"name":"计算机组成","_id":"cl8h3b0jy00bnc8pvhrio4yiy"},{"name":"数据通信与网络","_id":"cl8h3b0k100bxc8pv44vi2215"},{"name":"网络货运","_id":"cl8h3b0k200c2c8pv77m8f2lv"},{"name":"php","_id":"cl8h3b0k300c8c8pv6bey15qw"},{"name":"软件体系结构","_id":"cl8h3b0ka00cvc8pvch3bfmt5"},{"name":"spring","_id":"cl8h3b0kb00czc8pvhr8pgt5o"},{"name":"Spark","_id":"cl8h3b0kc00d5c8pv78gr2x0h"},{"name":"语音合成","_id":"cl8h3b0ke00ddc8pvda1y52kp"},{"name":"随笔","_id":"cl8h3b0ki00dtc8pvh3qrfcmp"},{"name":"test","_id":"cl8h3b0kj00dyc8pv8cw8h1p9"},{"name":"daily","_id":"cl8h3b0kk00e3c8pv2yu63lm7"},{"name":"hexo","_id":"cl8h3b0kl00e8c8pvesvx7pp6"}]}}